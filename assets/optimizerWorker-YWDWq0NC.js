(function(){"use strict";const t={ATK_P:"ATK%",ATK:"ATK",BE:"Break Effect",CD:"CRIT DMG",CR:"CRIT Rate",DEF_P:"DEF%",DEF:"DEF",EHR:"Effect Hit Rate",ERR:"Energy Regeneration Rate",Fire_DMG:"Fire DMG Boost",HP_P:"HP%",HP:"HP",Ice_DMG:"Ice DMG Boost",Imaginary_DMG:"Imaginary DMG Boost",Lightning_DMG:"Lightning DMG Boost",OHB:"Outgoing Healing Boost",Physical_DMG:"Physical DMG Boost",Quantum_DMG:"Quantum DMG Boost",RES:"Effect RES",SPD_P:"SPD%",SPD:"SPD",Wind_DMG:"Wind DMG Boost"},Qe=[t.HP_P,t.ATK_P,t.DEF_P,t.HP,t.ATK,t.SPD,t.CR,t.CD,t.EHR,t.BE,t.ERR,t.OHB,t.Physical_DMG,t.Fire_DMG,t.Ice_DMG,t.Lightning_DMG,t.Wind_DMG,t.Quantum_DMG,t.Imaginary_DMG],Je={[t.HP_P]:{5:{base:6.912,increment:2.4192},4:{base:5.5296,increment:1.9354},3:{base:4.1472,increment:1.4515},2:{base:2.7648,increment:.9677}},[t.ATK_P]:{5:{base:6.912,increment:2.4192},4:{base:5.5296,increment:1.9354},3:{base:4.1472,increment:1.4515},2:{base:2.7648,increment:.9677}},[t.DEF_P]:{5:{base:8.64,increment:3.024},4:{base:6.912,increment:2.4192},3:{base:5.184,increment:1.8144},2:{base:3.456,increment:1.2096}},[t.HP]:{5:{base:112.896,increment:39.5136},4:{base:90.3168,increment:31.61088},3:{base:67.7376,increment:23.70816},2:{base:45.1584,increment:15.80544}},[t.ATK]:{5:{base:56.448,increment:19.7568},4:{base:45.1584,increment:15.80544},3:{base:33.8688,increment:11.85408},2:{base:22.5792,increment:7.90272}},[t.SPD]:{5:{base:4.032,increment:1.4},4:{base:3.226,increment:1.1},3:{base:2.419,increment:1},2:{base:1.613,increment:1}},[t.CR]:{5:{base:5.184,increment:1.8144},4:{base:4.1472,increment:1.4515},3:{base:3.1104,increment:1.0886},2:{base:2.0736,increment:.7258}},[t.CD]:{5:{base:10.368,increment:3.6288},4:{base:8.2944,increment:2.903},3:{base:6.2208,increment:2.1773},2:{base:4.1472,increment:1.4515}},[t.EHR]:{5:{base:6.912,increment:2.4192},4:{base:5.5296,increment:1.9354},3:{base:4.1472,increment:1.4515},2:{base:2.7648,increment:.9677}},[t.BE]:{5:{base:10.368,increment:3.6288},4:{base:8.2944,increment:2.903},3:{base:6.2208,increment:2.1773},2:{base:4.1472,increment:1.4515}},[t.ERR]:{5:{base:3.1104,increment:1.0886},4:{base:2.4883,increment:.8709},3:{base:1.8662,increment:.6532},2:{base:1.2442,increment:.4355}},[t.OHB]:{5:{base:5.5296,increment:1.9354},4:{base:4.4237,increment:1.5483},3:{base:3.3178,increment:1.1612},2:{base:2.2118,increment:.7741}},[t.Physical_DMG]:{5:{base:6.2208,increment:2.1773},4:{base:4.9766,increment:1.7418},3:{base:3.7325,increment:1.3064},2:{base:2.4883,increment:.8709}},[t.Fire_DMG]:{5:{base:6.2208,increment:2.1773},4:{base:4.9766,increment:1.7418},3:{base:3.7325,increment:1.3064},2:{base:2.4883,increment:.8709}},[t.Ice_DMG]:{5:{base:6.2208,increment:2.1773},4:{base:4.9766,increment:1.7418},3:{base:3.7325,increment:1.3064},2:{base:2.4883,increment:.8709}},[t.Lightning_DMG]:{5:{base:6.2208,increment:2.1773},4:{base:4.9766,increment:1.7418},3:{base:3.7325,increment:1.3064},2:{base:2.4883,increment:.8709}},[t.Wind_DMG]:{5:{base:6.2208,increment:2.1773},4:{base:4.9766,increment:1.7418},3:{base:3.7325,increment:1.3064},2:{base:2.4883,increment:.8709}},[t.Quantum_DMG]:{5:{base:6.2208,increment:2.1773},4:{base:4.9766,increment:1.7418},3:{base:3.7325,increment:1.3064},2:{base:2.4883,increment:.8709}},[t.Imaginary_DMG]:{5:{base:6.2208,increment:2.1773},4:{base:4.9766,increment:1.7418},3:{base:3.7325,increment:1.3064},2:{base:2.4883,increment:.8709}}},Xe=[t.ATK_P,t.ATK,t.BE,t.CD,t.CR,t.DEF_P,t.DEF,t.EHR,t.HP_P,t.HP,t.RES,t.SPD],Ze={[t.HP_P]:"HP %",[t.ATK_P]:"ATK %",[t.DEF_P]:"DEF %",[t.SPD_P]:"SPD %",[t.HP]:"HP",[t.ATK]:"ATK",[t.DEF]:"DEF",[t.SPD]:"SPD",[t.CR]:"CRIT Rate",[t.CD]:"CRIT DMG",[t.EHR]:"Effect Hit Rate",[t.RES]:"Effect RES",[t.BE]:"Break Effect",[t.ERR]:"Energy Regen",[t.OHB]:"Healing Boost",[t.Physical_DMG]:"Physical DMG",[t.Fire_DMG]:"Fire DMG",[t.Ice_DMG]:"Ice DMG",[t.Lightning_DMG]:"Lightning DMG",[t.Wind_DMG]:"Wind DMG",[t.Quantum_DMG]:"Quantum DMG",[t.Imaginary_DMG]:"Imaginary DMG"},_e={};let et=0;Object.values(t).map(e=>_e[e]=et++);const q={Head:"Head",Hands:"Hands",Body:"Body",Feet:"Feet",PlanarSphere:"PlanarSphere",LinkRope:"LinkRope"},tt={[q.Head]:"Head",[q.Hands]:"Hands",[q.Body]:"Body",[q.Feet]:"Feet",[q.PlanarSphere]:"Sphere",[q.LinkRope]:"Rope"},at={[q.Head]:[t.HP],[q.Hands]:[t.ATK],[q.Body]:[t.HP_P,t.ATK_P,t.DEF_P,t.CR,t.CD,t.OHB,t.EHR],[q.Feet]:[t.HP_P,t.ATK_P,t.DEF_P,t.SPD],[q.PlanarSphere]:[t.HP_P,t.ATK_P,t.DEF_P,t.Physical_DMG,t.Fire_DMG,t.Ice_DMG,t.Lightning_DMG,t.Wind_DMG,t.Quantum_DMG,t.Imaginary_DMG],[q.LinkRope]:[t.HP_P,t.ATK_P,t.DEF_P,t.BE,t.ERR]},pe={PasserbyOfWanderingCloud:"Passerby of Wandering Cloud",MusketeerOfWildWheat:"Musketeer of Wild Wheat",KnightOfPurityPalace:"Knight of Purity Palace",HunterOfGlacialForest:"Hunter of Glacial Forest",ChampionOfStreetwiseBoxing:"Champion of Streetwise Boxing",GuardOfWutheringSnow:"Guard of Wuthering Snow",FiresmithOfLavaForging:"Firesmith of Lava-Forging",GeniusOfBrilliantStars:"Genius of Brilliant Stars",BandOfSizzlingThunder:"Band of Sizzling Thunder",EagleOfTwilightLine:"Eagle of Twilight Line",ThiefOfShootingMeteor:"Thief of Shooting Meteor",WastelanderOfBanditryDesert:"Wastelander of Banditry Desert",LongevousDisciple:"Longevous Disciple",MessengerTraversingHackerspace:"Messenger Traversing Hackerspace",TheAshblazingGrandDuke:"The Ashblazing Grand Duke",PrisonerInDeepConfinement:"Prisoner in Deep Confinement",PioneerDiverOfDeadWaters:"Pioneer Diver of Dead Waters",WatchmakerMasterOfDreamMachinations:"Watchmaker, Master of Dream Machinations"},Ce={SpaceSealingStation:"Space Sealing Station",FleetOfTheAgeless:"Fleet of the Ageless",PanCosmicCommercialEnterprise:"Pan-Cosmic Commercial Enterprise",BelobogOfTheArchitects:"Belobog of the Architects",CelestialDifferentiator:"Celestial Differentiator",InertSalsotto:"Inert Salsotto",TaliaKingdomOfBanditry:"Talia: Kingdom of Banditry",SprightlyVonwacq:"Sprightly Vonwacq",RutilantArena:"Rutilant Arena",BrokenKeel:"Broken Keel",FirmamentFrontlineGlamoth:"Firmament Frontline: Glamoth",PenaconyLandOfTheDreams:"Penacony, Land of the Dreams"},nt={...pe,...Ce},Ie=Object.values(pe),Ee=Object.values(Ce),Me={};for(let e=0;e<Ee.length;e++)Me[Ee[e]]=e;const Ge={};for(let e=0;e<Ie.length;e++)Ge[Ie[e]]=e;const G={Sets:nt,Parts:q,Stats:t,MainStats:Qe,MainStatsValues:Je,SubStats:Xe,StatsToIndex:_e,SetsOrnaments:Ce,SetsRelics:pe,SetsRelicsNames:Ie,SetsOrnamentsNames:Ee,StatsToReadable:Ze,PartsToReadable:tt,PartsMainStats:at,RelicSetToIndex:Ge,OrnamentSetToIndex:Me,MAX_INT:2147483647,THREAD_BUFFER_LENGTH:1e5},me=35,Re={extractCharacter:(e,n)=>(n=n*me,{id:e[n],[G.Stats.HP]:e[n+1],[G.Stats.ATK]:e[n+2],[G.Stats.DEF]:e[n+3],[G.Stats.SPD]:e[n+4],[G.Stats.CD]:e[n+5],[G.Stats.CR]:e[n+6],[G.Stats.EHR]:e[n+7],[G.Stats.RES]:e[n+8],[G.Stats.BE]:e[n+9],[G.Stats.ERR]:e[n+10],[G.Stats.OHB]:e[n+11],ED:e[n+12],CV:e[n+13],WEIGHT:e[n+14],EHP:e[n+15],BASIC:e[n+16],SKILL:e[n+17],ULT:e[n+18],FUA:e[n+19],DOT:e[n+20],xHP:e[n+21],xATK:e[n+22],xDEF:e[n+23],xSPD:e[n+24],xCR:e[n+25],xCD:e[n+26],xEHR:e[n+27],xRES:e[n+28],xBE:e[n+29],xERR:e[n+30],xOHB:e[n+31],xELEMENTAL_DMG:e[n+32],relicSetIndex:e[n+33],ornamentSetIndex:e[n+34]}),extractArrayToResults:(e,n,s)=>{for(let c=0;c<n;c++)e[c*me+1]&&s.push(Re.extractCharacter(e,c))},packCharacter:(e,n,s)=>{n=n*me,e[n]=s.id,e[n+1]=s[t.HP],e[n+2]=s[t.ATK],e[n+3]=s[t.DEF],e[n+4]=s[t.SPD],e[n+5]=s[t.CD],e[n+6]=s[t.CR],e[n+7]=s[t.EHR],e[n+8]=s[t.RES],e[n+9]=s[t.BE],e[n+10]=s[t.ERR],e[n+11]=s[t.OHB],e[n+12]=s.ELEMENTAL_DMG,e[n+13]=s.CV,e[n+14]=s.WEIGHT,e[n+15]=s.EHP,e[n+16]=s.x.BASIC_DMG,e[n+17]=s.x.SKILL_DMG,e[n+18]=s.x.ULT_DMG,e[n+19]=s.x.FUA_DMG,e[n+20]=s.x.DOT_DMG,e[n+21]=s.x[t.HP],e[n+22]=s.x[t.ATK],e[n+23]=s.x[t.DEF],e[n+24]=s.x[t.SPD],e[n+25]=s.x[t.CR],e[n+26]=s.x[t.CD],e[n+27]=s.x[t.EHR],e[n+28]=s.x[t.RES],e[n+29]=s.x[t.BE],e[n+30]=s.x[t.ERR],e[n+31]=s.x[t.OHB],e[n+32]=s.x.ELEMENTAL_DMG,e[n+33]=s.relicSetIndex,e[n+34]=s.ornamentSetIndex},cleanFloatBuffer:e=>{new Float64Array(e).fill(0)},createFloatBuffer:e=>new Float64Array(e*me).buffer},z=G.Stats,M=.06,E={[z.HP_P]:0,[z.ATK_P]:0,[z.DEF_P]:0,[z.SPD_P]:0,[z.HP]:0,[z.ATK]:0,[z.DEF]:0,[z.SPD]:0,[z.CD]:0,[z.CR]:0,[z.EHR]:0,[z.RES]:0,[z.BE]:0,[z.ERR]:0,[z.OHB]:0,ELEMENTAL_DMG:0,DEF_SHRED:0,DMG_TAKEN_MULTI:0,ALL_DMG_MULTI:0,RES_PEN:0,DMG_RED_MULTI:1,BASIC_CR_BOOST:0,SKILL_CR_BOOST:0,ULT_CR_BOOST:0,FUA_CR_BOOST:0,BASIC_CD_BOOST:0,SKILL_CD_BOOST:0,ULT_CD_BOOST:0,FUA_CD_BOOST:0,BASIC_SCALING:0,SKILL_SCALING:0,ULT_SCALING:0,FUA_SCALING:0,DOT_SCALING:0,BASIC_BOOST:0,SKILL_BOOST:0,ULT_BOOST:0,FUA_BOOST:0,DOT_BOOST:0,BASIC_VULNERABILITY:0,SKILL_VULNERABILITY:0,ULT_VULNERABILITY:0,FUA_VULNERABILITY:0,DOT_VULNERABILITY:0,BASIC_DMG:0,SKILL_DMG:0,ULT_DMG:0,FUA_DMG:0,DOT_DMG:0,BASIC_DEF_PEN:0,SKILL_DEF_PEN:0,ULT_DEF_PEN:0,FUA_DEF_PEN:0,DOT_DEF_PEN:0,BASIC_RES_PEN:0,SKILL_RES_PEN:0,ULT_RES_PEN:0,FUA_RES_PEN:0,DOT_RES_PEN:0},A=(e,n=8)=>{const s=Math.pow(10,n);return Math.round(e*s)/s},V=(e,n,s)=>{const c=st(e.sets.TheAshblazingGrandDuke),o=.06*n.setConditionals[G.Sets.TheAshblazingGrandDuke][1]*c*e.baseAtk*c;return{ashblazingMulti:s*c*e.baseAtk,ashblazingAtk:o}},st=e=>e>>2,_=(e,n,s)=>e>=3?s:n,O=_,y=_,R=_,T=(e,n,s)=>e>=5?s:n,v=T,b=T,$=T;var it=e=>{const n=e>=4?12:10,s=v(e,1,1.1),c=_(e,1.2,1.32),a=T(e,1.6,1.728),o=T(e,2.8,3.024),l=T(e,.95,1.026),f=O(e,.025,.028),u=[{formItem:"switch",id:"ultEnhanced",name:"ultEnhanced",text:"Enhanced ult",title:"Enhanced ult",content:"Consumes 180 Energy and deals Physical DMG equal to ".concat(A(o*100),"% of Argenti's ATK to all enemies,\n      and further deals DMG for 6 extra time(s), with each time dealing Physical DMG equal to ").concat(A(l*100),"% of Argenti's ATK to a random enemy.")},{formItem:"slider",id:"talentStacks",name:"talentStacks",text:"Apotheosis stacks",title:"Apotheosis stacks",content:"Increases CR by ".concat(A(f*100),"% per stack, max of ").concat(A(n)," stacks."),min:0,max:n},{formItem:"slider",id:"ultEnhancedExtraHits",name:"ultEnhancedExtraHits",text:"Enhanced ult extra hits on target",title:"Enhanced ult extra hits on target",content:"Enhanced Ult hits a random enemy for ".concat(A(l*100),"% ATK per hit."),min:0,max:6},{formItem:"switch",id:"e2UltAtkBuff",name:"e2UltAtkBuff",text:"E2 ult ATK buff",title:"E2 ult ATK buff",content:"E2: If the number of enemies on the field equals to 3 or more, increases ATK by ".concat(A(.4*100),"% for 1 turn."),disabled:e<2}];return{content:()=>u,defaults:()=>({ultEnhanced:!0,talentStacks:n,ultEnhancedExtraHits:6,e2UltAtkBuff:!0}),precomputeEffects:r=>{const i=r.characterConditionals,d=Object.assign({},E);return d[t.CR]+=i.talentStacks*f,d[t.CD]+=e>=1?i.talentStacks*.04:0,d[t.ATK_P]+=e>=2&&i.e2UltAtkBuff?.4:0,d.BASIC_SCALING+=s,d.SKILL_SCALING+=c,d.ULT_SCALING+=i.ultEnhanced?o:a,d.ULT_SCALING+=i.ultEnhancedExtraHits*l,d.ULT_BOOST+=r.enemyHpPercent<=.5?.15:0,d.ULT_DEF_PEN+=e>=6?.3:0,d},calculateBaseMultis:r=>{const i=r.x;i.BASIC_DMG+=i.BASIC_SCALING*i[t.ATK],i.SKILL_DMG+=i.SKILL_SCALING*i[t.ATK],i.ULT_DMG+=i.ULT_SCALING*i[t.ATK],i.FUA_DMG+=0}}},lt=e=>{const n=v(e,1,1.1),s=_(e,2.4,2.64),c=T(e,3.2,3.456),a=O(e,.72,.792),o=[{formItem:"slider",id:"selfCurrentHpPercent",name:"selfCurrentHpPercent",text:"Self current HP%",title:"Self current HP%",content:"Increases Arlan's DMG for every percent of HP below his Max HP, up to a max of ".concat(A(a*100),"% more DMG."),min:.01,max:1,percent:!0}];return{content:()=>o,defaults:()=>({selfCurrentHpPercent:1}),precomputeEffects:l=>{const f=l.characterConditionals,u=Object.assign({},E);return u.ELEMENTAL_DMG+=Math.min(a,1-f.selfCurrentHpPercent),u.BASIC_SCALING+=n,u.SKILL_SCALING+=s,u.ULT_SCALING+=c,u.SKILL_BOOST+=e>=1&&f.selfCurrentHpPercent<=.5?.1:0,u.ULT_BOOST+=e>=6&&f.selfCurrentHpPercent<=.5?.2:0,u},calculateBaseMultis:l=>{const f=l.x;f.BASIC_DMG+=f.BASIC_SCALING*f[t.ATK],f.SKILL_DMG+=f.SKILL_SCALING*f[t.ATK],f.ULT_DMG+=f.ULT_SCALING*f[t.ATK],f.FUA_DMG+=0}}},ct=e=>{const n=T(e,50,52.8),s=O(e,.14,.154),c=.06,a=e>=1?5:4,o=v(e,1,1.1),l=_(e,.5,.55),f=T(e,0,0),u=v(e,.5,.55),r=[{formItem:"slider",id:"skillExtraDmgHits",name:"skillExtraDmgHits",text:"Skill extra hits",title:"Skill extra hits",content:"Deals 50% ATK DMG equal to a single enemy. Deals DMG for ".concat(A(a)," extra times to a random enemy."),min:0,max:a},{formItem:"slider",id:"talentBuffStacks",name:"talentBuffStacks",text:"Talent ATK buff stacks",title:"Charging ATK buff stacks",content:"Increases allies' ATK by ".concat(A(s*100),"% for every stack."),min:0,max:5},{formItem:"switch",id:"ultSpdBuff",name:"ultSpdBuff",text:"Ult SPD buff active",title:"Ult SPD buff active",content:"Increases SPD of all allies by ".concat(A(n)," for 2 turn(s).")}];return{content:()=>r,defaults:()=>({talentBuffStacks:5,skillExtraDmgHits:a,ultSpdBuff:!0}),precomputeEffects:i=>{const d=i.characterConditionals,m=Object.assign({},E);return m[t.ATK_P]+=d.talentBuffStacks*s,m[t.DEF_P]+=d.talentBuffStacks*c,m[t.ERR]+=e>=4&&d.talentBuffStacks>=2?.15:0,m[t.SPD]+=d.ultSpdBuff?n:0,m.BASIC_SCALING+=o,m.SKILL_SCALING+=l,m.ULT_SCALING+=f,m.DOT_SCALING+=u,m.ELEMENTAL_DMG+=.18,m},calculateBaseMultis:i=>{const d=i.x;d.BASIC_DMG+=d.BASIC_SCALING*d[t.ATK],d.SKILL_DMG+=d.SKILL_SCALING*d[t.ATK],d.ULT_DMG+=0,d.DOT_DMG+=d.DOT_SCALING*d[t.ATK]}}},rt=e=>{const n=v(e,1,1.1),s=_(e,0,0),c=T(e,0,0),a=[{formItem:"switch",id:"healingMaxHpBuff",name:"healingMaxHpBuff",text:"Healing max HP buff",title:"Healing max HP buff",content:"When Bailu heals a target ally above their normal Max HP, the target's Max HP increases by ".concat(A(.1*100),"% for 2 turns.")},{formItem:"switch",id:"talentDmgReductionBuff",name:"talentDmgReductionBuff",text:"Talent DMG reduction buff",title:"Talent DMG reduction buff",content:"Characters with Invigoration take ".concat(A(.1*100),"% less DMG.")},{formItem:"switch",id:"e2UltHealingBuff",name:"e2UltHealingBuff",text:"E2 ult healing buff",title:"E2 ult healing buff",content:"E2: Increases healing by ".concat(A(.15*100),"% after Ultimate."),disabled:e<2},{formItem:"slider",id:"e4SkillHealingDmgBuffStacks",name:"e4SkillHealingDmgBuffStacks",text:"E4 skill healing DMG buff stacks",title:"E4 skill healing DMG buff stacks",content:"E4: Every healing provided by Bailu's Skill makes the recipient deal ".concat(A(.1*100),"% more DMG for 2 turns. This effect can stack up to 3 times."),min:0,max:3,disabled:e<4}];return{content:()=>a,defaults:()=>({healingMaxHpBuff:!0,talentDmgReductionBuff:!0,e2UltHealingBuff:!0,e4SkillHealingDmgBuffStacks:0}),precomputeEffects:o=>{const l=o.characterConditionals,f=Object.assign({},E);return f[t.HP_P]+=l.healingMaxHpBuff?.1:0,f[t.OHB]+=e>=2&&l.e2UltHealingBuff?.15:0,f.BASIC_SCALING+=n,f.SKILL_SCALING+=s,f.ULT_SCALING+=c,f.DMG_RED_MULTI*=l.talentDmgReductionBuff?1-.1:1,f.ALL_DMG_MULTI+=e>=4?l.e4SkillHealingDmgBuffStacks*.1:0,f},calculateBaseMultis:o=>{const l=o.x;l.BASIC_DMG+=l.BASIC_SCALING*l[t.ATK],l.SKILL_DMG+=0,l.ULT_DMG+=0,l.FUA_DMG+=0}}},ot=e=>{const n=O(e,.12,.132),s=T(e,.25,.27),c=_(e,.208,.22),a=v(e,.6,.66),o=_(e,.9,.99),l=T(e,1.2,1.3),f=O(e,2.4,2.64),u=[{formItem:"switch",id:"epiphanyDebuff",name:"epiphanyDebuff",text:"Epiphany debuff",title:"Epiphany debuff",content:"Enemies affected by Epiphany take ".concat(A(s*100),"% more DMG in their turn.")},{formItem:"switch",id:"defDecreaseDebuff",name:"defDecreaseDebuff",text:"Def decrease debuff",title:"Skill def decrease debuff",content:"Enemies DEF is decreased by ".concat(A(c*100),"%.")},{formItem:"slider",id:"arcanaStacks",name:"arcanaStacks",text:"Arcana stacks",title:"Arcana stacks",content:"While afflicted with Arcana, enemy targets receive Wind DoT equal to ".concat(A(f*100),"% of Black Swan's ATK at the start of each turn. Each stack of Arcana increases this DoT DMG multiplier by ").concat(A(n*100),"%. Arcana can stack up to 50 times. \n    ::BR::\nWhen there are 3 or more Arcana stacks, deals Wind DoT to adjacent targets. When there are 7 or more Arcana stacks, enables the current DoT dealt this time to ignore 20% of the target's and adjacent targets' DEF."),min:0,max:50},{formItem:"switch",id:"e1ResReduction",name:"e1ResReduction",text:"E1 RES reduction",title:"E1 RES reduction",content:"E1: While Black Swan is active in battle, enemies afflicted with Wind Shear, Bleed, Burn, or Shock will have their corresponding Wind, Physical, Fire, or Lightning RES respectively reduced by 25%.",disabled:e<1}];return{content:()=>u,defaults:()=>({epiphanyDebuff:!0,defDecreaseDebuff:!0,arcanaStacks:7,e1ResReduction:!0}),precomputeEffects:r=>{const i=r.characterConditionals,d=Object.assign({},E);return d.BASIC_SCALING+=a,d.SKILL_SCALING+=o,d.ULT_SCALING+=l,d.DOT_SCALING+=f+n*i.arcanaStacks,d.DOT_DEF_PEN+=i.arcanaStacks>=7?.2:0,d.DEF_SHRED+=i.defDecreaseDebuff?c:0,d.DOT_VULNERABILITY+=i.epiphanyDebuff?s:0,d.RES_PEN+=e>=1&&i.e1ResReduction?.25:0,d},calculateBaseMultis:r=>{const i=r.x;i.ELEMENTAL_DMG+=Math.min(.72,.6*i[t.EHR]),i.BASIC_DMG+=i.BASIC_SCALING*i[t.ATK],i.SKILL_DMG+=i.SKILL_SCALING*i[t.ATK],i.ULT_DMG+=i.ULT_SCALING*i[t.ATK],i.DOT_DMG+=i.DOT_SCALING*i[t.ATK]}}},ut=e=>{const n=b(e,.4,.456),s=.9,c=R(e,1,1.1),a=b(e,.4,.44),o=b(e,1,1.1),l=y(e,.4,.432),f=y(e,1,1.08),u=y(e,1,1.08),r=$(e,.44,.484),i=$(e,1.1,1.21),d={1:M*(1*.33+2*.33+3*.34),3:M*(2*.33+5*.33+8*.34),5:M*(3*.33+8*.33+8*.34)},m=[{formItem:"switch",id:"enhancedStateActive",name:"enhancedStateActive",text:"Hellscape state",title:"Hellscape state",content:"\n      Increases DMG by ".concat(A(n*100),"% and his Basic ATK Shard Sword is enhanced to Forest of Swords for 3 turn(s).\n      ::BR::\n      E2: Increases CRIT Rate by ").concat(A(.15*100),"%.\n    ")},{formItem:"slider",id:"hpPercentLostTotal",name:"hpPercentLostTotal",text:"HP% lost total",title:"HP% lost total",content:"Ultimate DMG scales off of the tally of Blade's HP loss in the current battle. \n    The tally of Blade's HP loss in the current battle is capped at ".concat(A(s*100),"% of his Max HP."),min:0,max:s,percent:!0},{formItem:"slider",id:"e4MaxHpIncreaseStacks",name:"e4MaxHpIncreaseStacks",text:"E4 max HP stacks",title:"E4 max HP stacks",content:"E4: Increases HP by ".concat(A(.2*100),"%, stacks up to 2 times."),min:0,max:2,disabled:e<4}];return{content:()=>m,defaults:()=>({enhancedStateActive:!0,hpPercentLostTotal:s,e4MaxHpIncreaseStacks:2}),precomputeEffects:h=>{const B=h.characterConditionals,I=Object.assign({},E);return I[t.CR]+=e>=2&&B.enhancedStateActive?.15:0,I[t.HP_P]+=e>=4?B.e4MaxHpIncreaseStacks*.2:0,I.BASIC_SCALING+=c,I.ELEMENTAL_DMG+=B.enhancedStateActive?n:0,I.FUA_BOOST+=.2,I},calculateBaseMultis:(h,B)=>{const I=B.characterConditionals,C=h.x;I.enhancedStateActive?(C.BASIC_DMG+=a*C[t.ATK],C.BASIC_DMG+=o*C[t.HP]):C.BASIC_DMG+=C.BASIC_SCALING*C[t.ATK],C.ULT_DMG+=l*C[t.ATK],C.ULT_DMG+=f*C[t.HP],C.ULT_DMG+=u*I.hpPercentLostTotal*C[t.HP],C.ULT_DMG+=e>=1&&B.enemyCount==1?1.5*I.hpPercentLostTotal*C[t.HP]:0;const P=d[B.enemyCount],{ashblazingMulti:X,ashblazingAtk:ae}=V(h,B,P);C.FUA_DMG+=r*(C[t.ATK]-ae+X),C.FUA_DMG+=i*C[t.HP],C.FUA_DMG+=e>=6?.5*C[t.HP]:0}}},ft=e=>{const n=b(e,.66,.726),s=y(e,.55,.594),c=y(e,.16,.168),a=y(e,.2,.216),o=R(e,1,1.1),l=o*.8,f=M*(1*1/1),u=[{formItem:"switch",id:"techniqueBuff",name:"techniqueBuff",text:"Technique buff",title:"Technique buff",content:"Increases all allies' ATK by ".concat(A(.15*100),"% for 2 turns at the start of the battle.")},{formItem:"switch",id:"battleStartDefBuff",name:"battleStartDefBuff",text:"Battle start DEF buff",title:"Battle start DEF buff",content:"Increases all allies' DEF by ".concat(A(.2*100),"% for 2 turns at the start of the battle.")},{formItem:"switch",id:"skillBuff",name:"skillBuff",text:"Skill buff",title:"Skill buff",content:"Increases DMG by ".concat(A(n*100),"%.")},{formItem:"switch",id:"ultBuff",name:"ultBuff",text:"Ult buff",title:"Ult buff",content:"Increases the ATK of all allies by ".concat(A(s*100),"% and CRIT DMG by ").concat(A(c*100),"% of Bronya's CRIT DMG plus ").concat(A(a*100),"% for 2 turns.")},{formItem:"switch",id:"e2SkillSpdBuff",name:"e2SkillSpdBuff",text:"E2 skill SPD buff",title:"E2 skill SPD buff",content:"E2: When using Skill, the target ally's SPD increases by ".concat(A(.3*100),"% after taking action, lasting for 1 turn."),disabled:e<2}];return{content:()=>u,defaults:()=>({techniqueBuff:!0,battleStartDefBuff:!0,skillBuff:!0,ultBuff:!0,e2SkillSpdBuff:!1}),precomputeEffects:r=>{const i=r.characterConditionals,d=Object.assign({},E);return d[t.DEF_P]+=i.battleStartDefBuff?.2:0,d[t.SPD_P]+=i.e2SkillSpdBuff?.3:0,d[t.ATK_P]+=i.techniqueBuff?.15:0,d[t.ATK_P]+=i.ultBuff?s:0,d.BASIC_CR_BOOST+=1,d.BASIC_SCALING+=o,d.FUA_SCALING+=e>=4?l:0,d.ELEMENTAL_DMG+=.1,d.ELEMENTAL_DMG+=i.skillBuff?n:0,d},calculateBaseMultis:(r,i)=>{const d=i.characterConditionals,m=r.x;m[t.CD]+=d.ultBuff?c*m[t.CD]:0,m[t.CD]+=d.ultBuff?a:0;const{ashblazingMulti:h,ashblazingAtk:B}=V(r,i,f);m.BASIC_DMG+=m.BASIC_SCALING*m[t.ATK],m.FUA_DMG+=m.FUA_SCALING*(m[t.ATK]-B+h)}}},dt=e=>{const n=T(e,.25,.27),s=T(e,1.6,1.728),c=v(e,1,1.1),a=_(e,1.2,1.32),o=O(e,1.6,1.76),l={1:M*(1*1/1),3:M*(2*1/1),5:M*(2*1/1)},f=M*(1*1/1),u=[{formItem:"switch",id:"ultBuff",name:"ultBuff",text:"Ult buff",title:"Ult buff",content:"Increases Svarog Counter DMG by ".concat(A(s*100),"% during Ultimate. DMG dealt to Clara is reduced by an extra ").concat(A(n*100),"% for 2 turns")},{formItem:"switch",id:"talentEnemyMarked",name:"talentEnemyMarked",text:"Enemy marked",title:"Enemy marked",content:"Additionally deals Physical DMG equal to ".concat(A(a*100),"% of Clara's ATK to enemies marked by Svarog with a Mark of Counter.")},{formItem:"switch",id:"e2UltAtkBuff",name:"e2UltAtkBuff",text:"E2 ult ATK buff",title:"E2 ult ATK buff",content:"E2: After using Ultimate, increases ATK by ".concat(A(.3*100),"% for 2 turns."),disabled:e<2},{formItem:"switch",id:"e4DmgReductionBuff",name:"e4DmgReductionBuff",text:"E4 DMG reduction buff",title:"E4 DMG reduction buff",content:"E4: Decreases DMG taken by ".concat(A(.3*100),"%."),disabled:e<4}];return{content:()=>u,defaults:()=>({ultBuff:!0,talentEnemyMarked:!0,e2UltAtkBuff:!0,e4DmgReductionBuff:!0}),precomputeEffects:r=>{const i=r.characterConditionals,d=Object.assign({},E);return d[t.ATK_P]+=e>=2&&i.e2UltAtkBuff?.3:0,d.BASIC_SCALING+=c,d.SKILL_SCALING+=a,d.SKILL_SCALING+=i.talentEnemyMarked?a:0,d.FUA_SCALING+=o,d.FUA_SCALING+=i.ultBuff?s:0,d.DMG_RED_MULTI*=1-.1,d.DMG_RED_MULTI*=i.ultBuff?1-n:1,d.DMG_RED_MULTI*=e>=4&&i.e4DmgReductionBuff?1-.3:1,d.FUA_BOOST+=.3,d},calculateBaseMultis:(r,i)=>{const d=i.characterConditionals,m=r.x;if(m.BASIC_DMG+=m.BASIC_SCALING*m[t.ATK],m.SKILL_DMG+=m.SKILL_SCALING*m[t.ATK],d.ultBuff){const{ashblazingMulti:h,ashblazingAtk:B}=V(r,i,l[i.enemyCount]);m.FUA_DMG+=m.FUA_SCALING*(m[t.ATK]-B+h)}else{const{ashblazingMulti:h,ashblazingAtk:B}=V(r,i,f);m.FUA_DMG+=m.FUA_SCALING*(m[t.ATK]-B+h)}}}},mt=e=>{const n=O(e,.36,.396),s=v(e,1,1.1),c=_(e,2.6,2.86),a=T(e,4,4.32),o=T(e,1.2,1.296),l=[{formItem:"switch",id:"talentPenBuff",name:"talentPenBuff",text:"Talent RES PEN buff",title:"Talent RES PEN buff",content:"When Dan Heng is the target of an ally's Ability, his next attack's Wind RES PEN increases by ".concat(A(n*100),"%.")},{formItem:"switch",id:"enemySlowed",name:"enemySlowed",text:"Enemy slowed",title:"Enemy slowed",content:"Basic ATK deals 40% more damage to Slowed enemies."}];return{content:()=>l,defaults:()=>({talentPenBuff:!0,enemySlowed:!0}),precomputeEffects:f=>{const u=f.characterConditionals,r=Object.assign({},E);return r[t.CR]+=e>=1&&f.enemyHpPercent>=.5?.12:0,r.BASIC_SCALING+=s,r.SKILL_SCALING+=c,r.ULT_SCALING+=a,r.ULT_SCALING+=u.enemySlowed?o:0,r.BASIC_BOOST+=u.enemySlowed?.4:0,r.RES_PEN+=u.talentPenBuff?n:0,r},calculateBaseMultis:f=>{const u=f.x;u.BASIC_DMG+=u.BASIC_SCALING*u[t.ATK],u.SKILL_DMG+=u.SKILL_SCALING*u[t.ATK],u.ULT_DMG+=u.ULT_SCALING*u[t.ATK]}}};const St=e=>{const s=e>=1?10:6,c=v(e,1,1.1),a=_(e,1.5,1.65),o=T(e,2.4,2.592),l=O(e,2.7,2.97);function f(m,h=!0){return h?l/(l+.2*m):.2/(l+.2*m)}const u=M*(1*1/1),r={0:M*(1*1/1),1:M*(1*f(1,!0)+2*f(1,!1)),2:M*(1*f(2,!0)+5*f(2,!1)),3:M*(1*f(3,!0)+9*f(3,!1)),4:M*(1*f(4,!0)+14*f(4,!1))},i=()=>["When using his Skill, Dr. Ratio has a 40% fixed chance of launching a follow-up attack against his target for 1 time,","dealing Imaginary DMG equal to {0}% of Dr. Ratio's ATK.","For each debuff the target enemy has, the fixed chance of launching follow-up attack increases by 20%.","If the target enemy is defeated before the follow-up attack triggers, the follow-up attack will be directed at a single random enemy instead.","::BR::When dealing DMG to a target that has 3 or more debuff(s), for each debuff the target has, the DMG dealt by Dr. Ratio to this target increases by 10%, up to a maximum increase of 50%.","::BR::E2: When his Talent's follow-up attack hits a target, for every debuff the target has, additionally deals Imaginary Additional DMG equal to 20% of Dr. Ratio's ATK. This effect can be triggered for a maximum of 4 times during each follow-up attack."].join(" ").replace("{0}",e>=5?"297":"270"),d=[{id:"summationStacks",name:"summationStacks",formItem:"slider",text:"Summation stacks",title:"Summation stacks",content:"When Dr. Ratio uses his Skill, for every debuff on the target, his CRIT Rate increases by 2.5% and CRIT DMG by 5%. This effect can stack up to ".concat(A(s)," time(s)."),min:0,max:s},{id:"enemyDebuffStacks",name:"enemyDebuffStacks",formItem:"slider",text:"Enemy debuff stacks",title:"Talent: Cogito, Ergo Sum",content:i(),min:0,max:5}];return{content:()=>d,defaults:()=>({enemyDebuffStacks:5,summationStacks:s}),precomputeEffects:m=>{const h=m.characterConditionals,B=Object.assign({},E);return B[t.CR]+=h.summationStacks*.025,B[t.CD]+=h.summationStacks*.05,B.BASIC_SCALING+=c,B.SKILL_SCALING+=a,B.ULT_SCALING+=o,B.FUA_SCALING+=l,B.ELEMENTAL_DMG+=h.enemyDebuffStacks>=3?Math.min(.5,h.enemyDebuffStacks*.1):0,B.FUA_BOOST+=e>=6?.5:0,B},calculateBaseMultis:(m,h)=>{const B=h.characterConditionals,I=m.x;if(I.BASIC_DMG+=I.BASIC_SCALING*I[t.ATK],I.SKILL_DMG+=I.SKILL_SCALING*I[t.ATK],I.ULT_DMG+=I.ULT_SCALING*I[t.ATK],e>=2){const C=r[Math.min(4,B.enemyDebuffStacks)],{ashblazingMulti:P,ashblazingAtk:X}=V(m,h,C);I.FUA_DMG+=I.FUA_SCALING*(I[t.ATK]-X+P)}else{const{ashblazingMulti:C,ashblazingAtk:P}=V(m,h,u);I.FUA_DMG+=I.FUA_SCALING*(I[t.ATK]-P+C)}}}};var ve=e=>{const n=b(e,.5,.52),s=R(e,1,1.1),c=e>=1?.25:0,a=R(e,1.35,1.463),o=e>=1?.5:0,l=b(e,0,0),f=y(e,1,1.1),u=y(e,1.5,1.65),r=[{formItem:"switch",id:"enhancedBasic",name:"enhancedBasic",text:"Enhanced basic",title:"Enhanced basic",content:"Enhanced basic ATK deals Fire DMG equal to ".concat(A(a*100),"% of the Trailblazer's ATK to a single enemy, and reduced damage to adjacent enemies.")},{formItem:"switch",id:"skillActive",name:"skillActive",text:"Skill active",title:"Skill active",content:"When the Skill is used, reduces DMG taken by ".concat(A(n*100),"%. Also reduces DMG taken by all allies by 15% for 1 turn.")},{formItem:"switch",id:"shieldActive",name:"shieldActive",text:"Shield active",title:"Shield active",content:"When the shield is active, increases ATK by 15%."},{formItem:"slider",id:"e6DefStacks",name:"e6DefStacks",text:"E6 def stacks",title:"E6 def stacks: Increases DEF by 10%",content:"E6: Increases DEF by 10% per stack.",min:0,max:3,disabled:e<6}];return{content:()=>r,defaults:()=>({enhancedBasic:!0,skillActive:!0,shieldActive:!0,e6DefStacks:3}),precomputeEffects:i=>{const d=i.characterConditionals,m=Object.assign({},E);return m[t.DEF_P]+=e>=6?d.e6DefStacks*.1:0,m[t.ATK_P]+=d.shieldActive?.15:0,m.SKILL_SCALING+=l,m.DMG_RED_MULTI*=d.skillActive?1-n:1,m.DMG_RED_MULTI*=d.skillActive?1-.15:1,m},calculateBaseMultis:(i,d)=>{const m=d.characterConditionals,h=i.x;m.enhancedBasic?(h.BASIC_DMG+=a*h[t.ATK],h.BASIC_DMG+=o*h[t.DEF]):(h.BASIC_DMG+=s*h[t.ATK],h.BASIC_DMG+=c*h[t.DEF]),h.SKILL_DMG+=h.SKILL_SCALING*h[t.ATK],h.ULT_DMG+=f*h[t.ATK],h.ULT_DMG+=u*h[t.DEF]}}},ht=e=>{const n=b(e,.12,.132),s=b(e,.06,.066),c=$(e,.18,.196),a=R(e,.5,.55),o=b(e,0,0),l=y(e,1,1.08),f=[{formItem:"switch",id:"skillActive",name:"skillActive",text:"Skill active",title:"Skill active",content:"While affected by Matrix of Prescience, all team members gain the Knowledge effect, which increases their respective Max HP by ".concat(A(s*100),"% of Fu Xuan's Max HP, and increases CRIT Rate by ").concat(A(n*100),"%.")},{formItem:"slider",id:"e6TeamHpLostPercent",name:"e6TeamHpLostPercent",text:"E6 team HP lost",title:"E6 team HP lost",content:"E6: Once Matrix of Prescience is activated, it will keep a tally of the total HP lost by all team members in the current battle. Fu Xuan's Ultimate DMG will increase by 200% of this tally of HP loss. This tally is also capped at 120% of Fu Xuan's Max HP.",min:0,max:1.2,percent:!0,disabled:e<6}];return{content:()=>f,defaults:()=>({skillActive:!0,e6TeamHpLostPercent:1.2}),precomputeEffects:u=>{const r=u.characterConditionals,i=Object.assign({},E);return i[t.CD]+=e>=1?.3:0,i[t.CR]+=r.skillActive?n:0,i.BASIC_SCALING+=a,i.SKILL_SCALING+=o,i.ULT_SCALING+=l,i.DMG_RED_MULTI*=1-c,i},calculateBaseMultis:(u,r)=>{const i=r.characterConditionals,d=u.x;d[t.HP]+=i.skillActive?s*d[t.HP]:0,d.BASIC_DMG+=d.BASIC_SCALING*d[t.HP],d.ULT_DMG+=d.ULT_SCALING*d[t.HP],d.ULT_DMG+=e>=6?2*i.e6TeamHpLostPercent*d[t.HP]:0}}},At=e=>{const n=v(e,1,1.1),s=_(e,2,2.2),c=T(e,0,0);return{content:()=>[],defaults:()=>({}),precomputeEffects:()=>{const a=Object.assign({},E);return a[t.RES]+=.2,a.BASIC_SCALING+=n,a.SKILL_SCALING+=s,a.ULT_SCALING+=c,a},calculateBaseMultis:a=>{const o=a.x;o[t.ATK]+=.35*o[t.DEF],o.BASIC_DMG+=o.BASIC_SCALING*o[t.ATK],o.SKILL_DMG+=o.SKILL_SCALING*o[t.ATK]}}},Dt=e=>{const n=$(e,.07,.076),s=e>=6?4:3,c=R(e,1,1.1),a=b(e,1.2,1.32),o=y(e,1.2,1.296),l=b(e,2.182,2.4),f=[{formItem:"slider",id:"talentDebuffStacks",name:"talentDebuffStacks",text:"Enemy Firekiss stacks",title:"Enemy Firekiss stacks",content:"While inflicted with Firekiss, the enemy receives ".concat(A(n*100),"% increased DMG, which lasts for 3 turns and can stack up to ").concat(A(s)," times."),min:0,max:s},{formItem:"switch",id:"enemyBurned",name:"enemyBurned",text:"Enemy burned",title:"Enemy burned",content:"Increases DMG by ".concat(A(.2*100),"% against enemies affected by Burn.")},{formItem:"switch",id:"e2BurnMultiBoost",name:"e2BurnMultiBoost",text:"E2 burn multi boost",title:"E2 burn multi boost",content:"E2: When an enemy target is Burned, Guinaifen's Basic ATK and Skill can increase the DMG multiplier of their Burn status by 40%.",disabled:e<2}];return{content:()=>f,defaults:()=>({talentDebuffStacks:s,enemyBurned:!0,e2BurnMultiBoost:!0}),precomputeEffects:u=>{const r=u.characterConditionals,i=Object.assign({},E);return i.BASIC_SCALING+=c,i.SKILL_SCALING+=a,i.ULT_SCALING+=o,i.DOT_SCALING+=l,i.DOT_SCALING+=e>=2&&r.e2BurnMultiBoost?.4:0,i.ELEMENTAL_DMG+=r.enemyBurned?.2:0,i.DMG_TAKEN_MULTI+=r.talentDebuffStacks*n,i},calculateBaseMultis:u=>{const r=u.x;r.BASIC_DMG+=r.BASIC_SCALING*r[t.ATK],r.SKILL_DMG+=r.SKILL_SCALING*r[t.ATK],r.ULT_DMG+=r.ULT_SCALING*r[t.ATK],r.DOT_DMG+=r.DOT_SCALING*r[t.ATK]}}},gt=e=>{const n=y(e,.2,.21),s=y(e,.6,.648);let c=$(e,.3,.33);c+=e>=6?.1:0;const a=R(e,1,1.1),o=b(e,2.4,2.64),l=y(e,0,0),f=[{formItem:"switch",id:"ultBuff",name:"ultBuff",text:"Ult buff active",title:"Ult buff active",content:"Increases the SPD of a target ally by ".concat(A(n*100),"% of Hanya's SPD and increases the same target ally's ATK by ").concat(A(s*100),"%.")},{formItem:"switch",id:"targetBurdenActive",name:"targetBurdenActive",text:"Target Burden debuff",title:"Target Burden debuff",content:"When an ally uses a Basic ATK, Skill, or Ultimate on an enemy inflicted with Burden, the DMG dealt increases by ".concat(A(c*100),"% for 2 turn(s).")},{formItem:"switch",id:"burdenAtkBuff",name:"burdenAtkBuff",text:"Burden ATK buff",title:"Burden ATK buff",content:"Allies triggering Burden's Skill Point recovery effect have their ATK increased by ".concat(A(.1*100),"% for 1 turn.")},{formItem:"switch",id:"e2SkillSpdBuff",name:"e2SkillSpdBuff",text:"E2 skill SPD buff",title:"E2 skill SPD buff",content:"E2: After Skill, increases SPD by ".concat(A(.2*100),"% for 1 turn."),disabled:e<2}];return{content:()=>f,defaults:()=>({ultBuff:!0,targetBurdenActive:!0,burdenAtkBuff:!0,skillSpdBuff:!0}),precomputeEffects:u=>{const r=u.characterConditionals,i=Object.assign({},E);return i.BASIC_SCALING+=a,i.SKILL_SCALING+=o,i.ULT_SCALING+=l,i[t.ATK_P]+=r.ultBuff?s:0,i[t.ATK_P]+=r.burdenAtkBuff?.1:0,i[t.SPD_P]+=e>=2&&r.e2SkillSpdBuff?.2:0,i.ALL_DMG_MULTI=r.targetBurdenActive?c:0,i},calculateBaseMultis:(u,r)=>{const i=r.characterConditionals,d=u.x;d[t.SPD]+=i.ultBuff?n*d[t.SPD]:0,d.BASIC_DMG+=d.BASIC_SCALING*d[t.ATK],d.SKILL_DMG+=d.SKILL_SCALING*d[t.ATK],d.ULT_DMG+=d.ULT_SCALING*d[t.ATK]}}},Bt=e=>{const n=R(e,1,1.1),s=b(e,1,1.1),c=y(e,2,2.16),a=$(e,.4,.43),o={1:M*(1*1/1),3:M*(2*1/1),5:M*(3*1/1)},l=[{formItem:"switch",id:"techniqueBuff",name:"techniqueBuff",text:"Technique buff",title:"Technique buff",content:"Increases ATK by ".concat(A(.4*100),"% for 3 turns.")},{formItem:"switch",id:"targetFrozen",name:"targetFrozen",text:"Target frozen",title:"Target frozen",content:"When Ultimate is used, deals ".concat(A(.2*100),"% more DMG to Frozen enemies.")},{formItem:"slider",id:"e2TalentCritStacks",name:"e2TalentCritStacks",text:"E2 talent CR stacks",title:"E2 talent CR stacks",content:"E2: Increases CRIT Rate by 3% per stack. Stacks up to 5 times.",min:0,max:5,disabled:e<2},{formItem:"switch",id:"e6UltAtkBuff",name:"e6UltAtkBuff",text:"E6 ult ATK buff",title:"E6 ult ATK buff",content:"E6: After Ult, increases ATK by ".concat(A(.25*100),"% for 1 turn."),disabled:e<6}];return{content:()=>l,defaults:()=>({techniqueBuff:!0,targetFrozen:!0,e2TalentCritStacks:5,e6UltAtkBuff:!0}),precomputeEffects:f=>{const u=f.characterConditionals,r=Object.assign({},E);return r[t.ATK_P]+=u.techniqueBuff?.4:0,r[t.CR]+=e>=2?u.e2TalentCritStacks*.03:0,r[t.ATK_P]+=e>=6&&u.e6UltAtkBuff?.25:0,r.BASIC_SCALING+=n,r.BASIC_SCALING+=e>=1&&f.enemyHpPercent<=.5?.4:0,r.SKILL_SCALING+=s,r.ULT_SCALING+=c,r.FUA_SCALING+=a,r.SKILL_BOOST+=f.enemyHpPercent>=.5?.45:0,r.ULT_BOOST+=u.targetFrozen?.2:0,r.FUA_BOOST+=e>=4?.1:0,r},calculateBaseMultis:(f,u)=>{const r=f.x;r.BASIC_DMG+=r.BASIC_SCALING*r[t.ATK],r.SKILL_DMG+=r.SKILL_SCALING*r[t.ATK],r.ULT_DMG+=r.ULT_SCALING*r[t.ATK];const i=o[u.enemyCount],{ashblazingMulti:d,ashblazingAtk:m}=V(f,u,i);r.FUA_DMG+=r.FUA_SCALING*(r[t.ATK]-m+d)}}},kt=e=>{const n=R(e,1,1.1),s=b(e,2,2.2),c=y(e,2.3,2.484),a=$(e,1.4,1.54),o=.3,l={1:M*(1*.2+2*.2+3*.2+4*.4),3:M*(2*.2+5*.2+8*.2+8*.4),5:M*(3*.2+8*.2+8*.2+8*.4)},f=[{formItem:"switch",id:"targetBurned",name:"targetBurned",text:"Target burned",title:"Target burned",content:"Skill deals 20% more DMG to enemies currently afflicted with Burn."},{formItem:"switch",id:"selfCurrentHp80Percent",name:"selfCurrentHp80Percent",text:"Self HP ≥ 80%",title:"Self HP ≥ 80%",content:"When current HP percentage is 80% or higher, CRIT Rate increases by 15%."},{formItem:"switch",id:"e1TalentSpdBuff",name:"e1TalentSpdBuff",text:"E1 SPD buff",title:"E1 SPD buff",content:"E1: After Victory Rush is triggered, Himeko's SPD increases by 20% for 2 turns.",disabled:e<1},{formItem:"slider",id:"e6UltExtraHits",name:"e6UltExtraHits",text:"E6 ult extra hits",title:"E6 ult extra hits",content:"Ultimate deals DMG 2 extra times. Extra hits deals ".concat(A(.4*100),"% of the original DMG per hit."),min:0,max:2,disabled:e<6}];return{content:()=>f,defaults:()=>({targetBurned:!0,selfCurrentHp80Percent:!0,e1TalentSpdBuff:!0,e6UltExtraHits:2}),precomputeEffects:u=>{const r=u.characterConditionals,i=Object.assign({},E);return i[t.CR]+=r.selfCurrentHp80Percent?.15:0,i[t.SPD_P]+=e>=1&&r.e1TalentSpdBuff?.2:0,i.BASIC_SCALING+=n,i.SKILL_SCALING+=s,i.ULT_SCALING+=c,i.ULT_SCALING+=e>=6?r.e6UltExtraHits*c*.4:0,i.FUA_SCALING+=a,i.DOT_SCALING+=o,i.SKILL_BOOST+=r.targetBurned?.2:0,i.ELEMENTAL_DMG+=e>=2&&u.enemyHpPercent<=.5?.15:0,i},calculateBaseMultis:(u,r)=>{const i=u.x;i.BASIC_DMG+=i.BASIC_SCALING*i[t.ATK],i.SKILL_DMG+=i.SKILL_SCALING*i[t.ATK],i.ULT_DMG+=i.ULT_SCALING*i[t.ATK],i.DOT_DMG+=i.DOT_SCALING*i[t.ATK];const d=l[r.enemyCount],{ashblazingMulti:m,ashblazingAtk:h}=V(u,r,d);i.FUA_DMG+=i.FUA_SCALING*(i[t.ATK]-h+m)}}},pt=e=>{const n=$(e,1,1.1),s=R(e,1,1.1),c=b(e,2.4,2.64),a=b(e,2.8,3.08),o=y(e,4,4.32),l=b(e,.65,.715),f=[{formItem:"switch",id:"enhancedSkill",name:"enhancedSkill",text:"Enhanced skill",title:"Enhanced skill",content:"After using Ultimate, the next Skill to be used is Enhanced. Enhanced Skill deals Fire DMG equal to ".concat(A(a*100),"% of Hook's ATK to a single enemy and reduced DMG to adjacent enemies.")},{formItem:"switch",id:"targetBurned",name:"targetBurned",text:"Target burned",title:"Target burned",content:"When attacking a target afflicted with Burn, deals Additional Fire DMG equal to ".concat(A(n*100),"% of Hook's ATK.")}];return{content:()=>f,defaults:()=>({enhancedSkill:!0,targetBurned:!0}),precomputeEffects:u=>{const r=u.characterConditionals,i=Object.assign({},E);return i.BASIC_SCALING+=s,i.SKILL_SCALING+=r.enhancedSkill?a:c,i.ULT_SCALING+=o,i.BASIC_SCALING+=r.targetBurned?n:0,i.SKILL_SCALING+=r.targetBurned?n:0,i.ULT_SCALING+=r.targetBurned?n:0,i.DOT_SCALING+=l,i.SKILL_BOOST+=e>=1&&r.enhancedSkill?.2:0,i.ELEMENTAL_DMG+=e>=6&&r.targetBurned?.2:0,i},calculateBaseMultis:u=>{const r=u.x;r.BASIC_DMG+=r.BASIC_SCALING*r[t.ATK],r.SKILL_DMG+=r.SKILL_SCALING*r[t.ATK],r.ULT_DMG+=r.ULT_SCALING*r[t.ATK],r.DOT_DMG+=r.DOT_SCALING*r[t.ATK]}}},Ct=e=>{const n=T(e,.4,.432),s=v(e,.5,.55),c=[{formItem:"switch",id:"ultBuff",name:"ultBuff",text:"Ult buff",title:"Ult buff",content:"Increases all allies' ATK by ".concat(A(n*100),"% for 2 turns after using Ultimate.")},{formItem:"switch",id:"skillBuff",name:"skillBuff",text:"E1 skill buff",title:"E1 skill buff",content:"E1: Increases all allies' SPD by 12% for 2 turns after using Skill.",disabled:e<1},{formItem:"switch",id:"e6DmgBuff",name:"e6DmgBuff",text:"E6 DMG buff",title:"E6 DMG buff",content:"E6: When healing a target ally, increases the target ally's DMG dealt by 50% for 2 turns.",disabled:e<6}];return{content:()=>c,defaults:()=>({ultBuff:!0,skillBuff:!0,e6DmgBuff:!0}),precomputeEffects:a=>{const o=a.characterConditionals,l=Object.assign({},E);return l[t.SPD_P]+=e>=1&&o.skillBuff?.12:0,l[t.ATK_P]+=o.ultBuff?n:0,l.BASIC_SCALING+=s,l.ELEMENTAL_DMG+=e>=6&&o.skillBuff?.5:0,l},calculateBaseMultis:a=>{const o=a.x;o.BASIC_DMG+=o.BASIC_SCALING*o[t.HP]}}},It=e=>{const n=e>=1?10:6,s=b(e,.12,.132),c=$(e,.1,.11),a=R(e,1,1.1),o=R(e,2.6,2.86),l=R(e,3.8,4.18),f=R(e,5,5.5),u=b(e,0,0),r=y(e,3,3.24),i=[{formItem:"slider",id:"basicEnhanced",name:"basicEnhanced",text:"Basic enhancements",title:"Basic enhancements",content:"0 stack(s): Uses a 2-hit attack and deals Imaginary DMG equal to ".concat(A(a*100),"% ATK to a single enemy target.\n    ::BR::1 stack(s): Uses a 3-hit attack and deals Imaginary DMG equal to ").concat(A(o*100),"% ATK to a single enemy target.\n    ::BR::2 stack(s): Uses a 5-hit attack and deals Imaginary DMG equal to ").concat(A(l*100),"% ATK to a single enemy target and reduced DMG to adjacent targets.\n    ::BR::3 stack(s): Uses a 7-hit attack and deals Imaginary DMG equal to ").concat(A(f*100),"% ATK to a single enemy target and reduced DMG to adjacent targets."),min:0,max:3},{formItem:"slider",id:"skillOutroarStacks",name:"skillOutroarStacks",text:"Outroar stacks",title:"Outroar stacks",content:"Divine Spear or Fulgurant Leap, starting from the fourth hit, 1 stack of Outroar is gained before every hit. \n    Each stack of Outroar increases Dan Heng • Imbibitor Lunae's CRIT DMG by ".concat(A(s*100),"%, for a max of 4 stacks. (applied to all hits)"),min:0,max:4},{formItem:"slider",id:"talentRighteousHeartStacks",name:"talentRighteousHeartStacks",text:"Righteous Heart stacks",title:"Righteous Heart stacks",content:"After each hit dealt during an attack, Dan Heng • Imbibitor Lunae gains 1 stack of Righteous Heart, increasing his DMG by ".concat(A(c*100),"%. (applied to all hits)"),min:0,max:n},{formItem:"slider",id:"e6ResPenStacks",name:"e6ResPenStacks",text:"E6 RES PEN stacks",title:"E6 RES PEN stacks",content:"E6: After any other ally uses their Ultimate, the Imaginary RES PEN of Dan Heng • Imbibitor Lunae's next Fulgurant Leap attack increases by 20%, up to 3 stacks.",min:0,max:3,disabled:e<6}];return{content:()=>i,defaults:()=>({basicEnhanced:3,skillOutroarStacks:4,talentRighteousHeartStacks:n,e6ResPenStacks:3}),precomputeEffects:d=>{const m=d.characterConditionals,h=Object.assign({},E);return h[t.CD]+=d.enemyElementalWeak?.24:0,h[t.CD]+=m.skillOutroarStacks*s,h.BASIC_SCALING+={0:a,1:o,2:l,3:f}[m.basicEnhanced],h.SKILL_SCALING+=u,h.ULT_SCALING+=r,h.ELEMENTAL_DMG+=m.talentRighteousHeartStacks*c,h.BASIC_RES_PEN+=e>=6&&m.basicEnhanced==3?.2*m.e6ResPenStacks:0,h},calculateBaseMultis:d=>{const m=d.x;m.BASIC_DMG+=m.BASIC_SCALING*m[t.ATK],m.ULT_DMG+=m.ULT_SCALING*m[t.ATK]}}};const Pe=e=>{const n=O(e,.5,.52);let s=O(e,1.8,1.98);s+=e>=4?.3:0;const c=v(e,1,1.1),a=_(e,2,2.2),o=_(e,2.5,2.75),l=T(e,3,3.24),f=[{id:"talentEnhancedState",formItem:"switch",text:"Enhanced state",title:"Crescent Transmigration",content:"When Jingliu has 2 stacks of Syzygy, she enters the Spectral Transmigration state with her Action Advanced by 100% and her CRIT Rate increases by ".concat(A(n),'%. \n      Then, Jingliu\'s Skill "Transcendent Flash" becomes enhanced and turns into "Moon On Glacial River," and becomes the only ability she can use in battle.')},{id:"talentHpDrainAtkBuff",formItem:"slider",text:"HP drain ATK buff",title:"Crescent Transmigration - ATK Bonus",content:"When Jingliu uses an attack in the Spectral Transmigration state, she consumes HP from all other allies and Jingliu's ATK increases based on the total HP consumed from all allies in this attack, \n      capped at ".concat(A(s*100),"% of her base ATK, lasting until the current attack ends."),min:0,max:s,percent:!0},{id:"e1CdBuff",formItem:"switch",text:"E1 ult active",title:"E1 Moon Crashes Tianguan Gate",content:"E1: When using her Ultimate or Enhanced Skill, Jingliu's CRIT DMG increases by 24% for 1 turn. If only one enemy target is attacked, the target will additionally be dealt Ice DMG equal to 100% of Jingliu's ATK.",disabled:e<1},{id:"e2SkillDmgBuff",formItem:"switch",text:"E2 skill buff",title:"E2 Crescent Shadows Qixing Dipper",content:"E2: After using Ultimate, increases the DMG of the next Enhanced Skill by 80%.",disabled:e<2}];return{content:()=>f,defaults:()=>({talentEnhancedState:!0,talentHpDrainAtkBuff:s,e1CdBuff:!0,e2SkillDmgBuff:!0}),precomputeEffects:u=>{const r=u.characterConditionals,i=Object.assign({},E);return i[t.CR]+=r.talentEnhancedState?n:0,i[t.ATK_P]+=r.talentEnhancedState?r.talentHpDrainAtkBuff:0,i[t.RES]+=r.talentEnhancedState?.35:0,i.ULT_BOOST+=r.talentEnhancedState?.2:0,i[t.CD]+=e>=1&&r.e1CdBuff?.24:0,i[t.CD]+=e>=6&&r.talentEnhancedState?.5:0,i.BASIC_SCALING+=c,i.SKILL_SCALING+=r.talentEnhancedState?o:a,i.SKILL_SCALING+=e>=1&&r.talentEnhancedState&&u.enemyCount==1?1:0,i.ULT_SCALING+=l,i.ULT_SCALING+=e>=1&&u.enemyCount==1?1:0,i.FUA_SCALING+=0,i.SKILL_BOOST+=e>=2&&r.talentEnhancedState&&r.e2SkillDmgBuff?.8:0,i},calculateBaseMultis:u=>{const r=u.x;r.BASIC_DMG+=r.BASIC_SCALING*r[t.ATK],r.SKILL_DMG+=r.SKILL_SCALING*r[t.ATK],r.ULT_DMG+=r.ULT_SCALING*r[t.ATK],r.FUA_DMG+=0}}};Pe.label="Jingliu";var Et=e=>{const n=v(e,1,1.1),s=_(e,1,1.1),c=T(e,2,2.16),a=O(e,.66,.726);let o=0;const l=[{formItem:"switch",id:"skillCritBuff",name:"skillCritBuff",text:"Skill CR buff",title:"Skill CR buff",content:"After using Skill, CRIT Rate increases by 10% for 2 turns."},{formItem:"slider",id:"talentHitsPerAction",name:"talentHitsPerAction",text:"Lightning Lord stacks",title:"Lightning Lord stacks",content:"Lightning Lord hits-per-action stack up to 10 times.",min:3,max:10},{formItem:"slider",id:"talentAttacks",name:"talentAttacks",text:"Lightning Lord hits on target",title:"Lightning Lord hits on target",content:"Count of hits on target. Should usually be set to the same value as Lightning Lord Stacks.",min:0,max:10},{formItem:"switch",id:"e2DmgBuff",name:"e2DmgBuff",text:"E2 dmg buff",title:"E2 dmg buff",content:"E2: After Lightning-Lord takes action, DMG caused by Jing Yuan's Basic ATK, Skill, and Ultimate increases by 20% for 2 turns.",disabled:e<2},{formItem:"slider",id:"e6FuaVulnerabilityStacks",name:"e6FuaVulnerabilityStacks",text:"E6 vulnerable stacks",title:"E6 vulnerable stacks",content:"E6: Each hit performed by the Lightning-Lord when it takes action will make the target enemy Vulnerable. While Vulnerable, enemies receive 12% more DMG until the end of the Lightning-Lord's current turn, stacking up to 3 time(s). (applies to all hits)",min:0,max:3,disabled:e<6}];return{content:()=>l,defaults:()=>({skillCritBuff:!0,talentHitsPerAction:10,talentAttacks:10,e2DmgBuff:!0,e6FuaVulnerabilityStacks:3}),precomputeEffects:f=>{const u=f.characterConditionals,r=Object.assign({},E);u.talentHitsPerAction=Math.max(u.talentHitsPerAction,u.talentAttacks),r[t.CR]+=u.skillCritBuff?.1:0,r.BASIC_SCALING+=n,r.SKILL_SCALING+=s,r.ULT_SCALING+=c,r.FUA_SCALING+=a,r.FUA_CD_BOOST+=u.talentHitsPerAction>=6?.25:0,r.BASIC_BOOST+=e>=2&&u.e2DmgBuff?.2:0,r.SKILL_BOOST+=e>=2&&u.e2DmgBuff?.2:0,r.ULT_BOOST+=e>=2&&u.e2DmgBuff?.2:0,r.FUA_VULNERABILITY+=e>=6?u.e6FuaVulnerabilityStacks*.12:0;const i=u.talentHitsPerAction,d=u.talentAttacks,m=f.enemyCount>=3?2:0,h=f.enemyCount>=3?3:1,B=f.enemyCount>=3?2:1;let I=m*(i-d);I+=B;let C=0;for(let P=0;P<d;P++)C+=Math.min(8,I)*(1/d),I+=h;return o=C*.06,r},calculateBaseMultis:(f,u)=>{const r=u.characterConditionals,i=f.x;i.BASIC_DMG+=i.BASIC_SCALING*i[t.ATK],i.SKILL_DMG+=i.SKILL_SCALING*i[t.ATK],i.ULT_DMG+=i.ULT_SCALING*i[t.ATK];const{ashblazingMulti:d,ashblazingAtk:m}=V(f,u,o);i.FUA_DMG+=i.FUA_SCALING*r.talentAttacks*(i[t.ATK]-m+d)}}},Tt=e=>{const n=v(e,1,1.1),s=_(e,1.6,1.76),c=T(e,.8,.864),a=O(e,1.4,1.596),o=T(e,2.9,3.183),l=M*(1*.15+2*.15+3*.15+4*.15+5*.15+6*.25),f=[{formItem:"switch",id:"e1DotDmgReceivedDebuff",name:"e1DotDmgReceivedDebuff",text:"E1 DoT DMG debuff",title:"E1 DoT DMG debuff",content:"E1: When the Talent triggers a follow-up attack, there is a 100% base chance to increase the DoT received by the target by 30% for 2 turn(s).",disabled:e<1}];return{content:()=>f,defaults:()=>({e1DotDmgReceivedDebuff:!0}),precomputeEffects:u=>{const r=u.characterConditionals,i=Object.assign({},E);return i.BASIC_SCALING+=n,i.SKILL_SCALING+=s,i.ULT_SCALING+=c,i.FUA_SCALING+=a,i.DOT_SCALING+=o,i.DOT_VULNERABILITY+=e>=1&&r.e1DotDmgReceivedDebuff?.3:0,i.DOT_BOOST+=e>=2?.25:0,i.DOT_SCALING+=e>=6?1.56:0,i},calculateBaseMultis:(u,r)=>{const i=u.x,{ashblazingMulti:d,ashblazingAtk:m}=V(u,r,l);i.BASIC_DMG+=i.BASIC_SCALING*i[t.ATK],i.SKILL_DMG+=i.SKILL_SCALING*i[t.ATK],i.ULT_DMG+=i.ULT_SCALING*i[t.ATK],i.FUA_DMG+=i.FUA_SCALING*(i[t.ATK]-m+d),i.DOT_DMG+=i.DOT_SCALING*i[t.ATK]}}},Lt=e=>{const n=R(e,.2,.22),s=y(e,.2,.216),c=R(e,1,1.1),a=R(e,.2*3+.8,.22*3+.88),o=b(e,1.2,1.32),l=y(e,3.3,3.564),f=b(e,3.38,3.718),u=[{formItem:"switch",id:"basicEnhanced",name:"basicEnhanced",text:"Basic enhanced",title:"Basic enhanced: Sky-Shatter Fist",content:"Enhances Basic ATK to deal additional damage, and has a chance to trigger extra hits."},{formItem:"switch",id:"targetUltDebuffed",name:"targetUltDebuffed",text:"Target ult debuffed",title:"Target ult debuffed",content:"Increase the target's DMG received by ".concat(A(s*100),"% for 3 turn(s)")},{formItem:"slider",id:"basicEnhancedExtraHits",name:"basicEnhancedExtraHits",text:"Enhanced basic extra hits",title:"Enhanced basic extra hits",content:"Increases the number of hits of Basic Enhanced.",min:0,max:3},{formItem:"switch",id:"e1TargetBleeding",name:"e1TargetBleeding",text:"E1 target bleeding",title:"E1 target bleeding",content:"E1: When Luka takes action, if the target enemy is Bleeding, increases DMG dealt by Luka by 15% for 2 turn(s).",disabled:e<1},{formItem:"slider",id:"e4TalentStacks",name:"e4TalentStacks",text:"E4 talent stacks",title:"E4 talent stacks",content:"E4: For every stack of Fighting Will obtained, increases ATK by 5%, stacking up to 4 time(s).",min:0,max:4,disabled:e<4}];return{content:()=>u,defaults:()=>({basicEnhanced:!0,targetUltDebuffed:!0,e1TargetBleeding:!0,basicEnhancedExtraHits:3,e4TalentStacks:4}),precomputeEffects:r=>{const i=r.characterConditionals,d=Object.assign({},E);return d[t.ATK_P]+=e>=4?i.e4TalentStacks*.05:0,d.BASIC_SCALING+=i.basicEnhanced?a:c,d.BASIC_SCALING+=(i.basicEnhanced&&i.basicEnhancedExtraHits)*n,d.SKILL_SCALING+=o,d.ULT_SCALING+=l,d.DOT_SCALING+=f,d.DMG_TAKEN_MULTI+=i.targetUltDebuffed?s:0,d.ELEMENTAL_DMG+=e>=1&&i.e1TargetBleeding?.15:0,d},calculateBaseMultis:r=>{const i=r.x;i.BASIC_DMG+=i.BASIC_SCALING*i[t.ATK],i.SKILL_DMG+=i.SKILL_SCALING*i[t.ATK],i.ULT_DMG+=i.ULT_SCALING*i[t.ATK],i.DOT_DMG+=i.DOT_SCALING*i[t.ATK]}}},bt=e=>{const n=R(e,1,1.1),s=b(e,0,0),c=y(e,2,2.16),a=[{formItem:"switch",id:"fieldActive",name:"fieldActive",text:"Field active",title:"Field active",content:"\n      E1: While the Field is active, ATK of all allies increases by 20%.\n    "},{formItem:"switch",id:"e6ResReduction",name:"e6ResReduction",text:"E6 RES reduction",title:"E6 RES reduction",content:"E6: When Ultimate is used, reduces all enemies' All-Type RES by 20% for 2 turn(s).",disabled:e<6}];return{content:()=>a,defaults:()=>({fieldActive:!0,e6ResReduction:!0}),precomputeEffects:o=>{const l=o.characterConditionals,f=Object.assign({},E);return f[t.ATK_P]+=l>=1&&l.fieldActive?.2:0,f.BASIC_SCALING+=n,f.SKILL_SCALING+=s,f.ULT_SCALING+=c,f.RES_PEN+=e>=6&&l.e6ResReduction?.2:0,f},calculateBaseMultis:o=>{const l=o.x;l.BASIC_DMG+=l.BASIC_SCALING*l[t.ATK],l.SKILL_DMG+=l.SKILL_SCALING*l[t.ATK],l.ULT_DMG+=l.ULT_SCALING*l[t.ATK]}}},yt=e=>{const n=b(e,.075,.08),s=b(e,200,223),c=R(e,.5,.55),a=b(e,0,0),o=y(e,0,0),l=[{formItem:"switch",id:"skillBuff",name:"skillBuff",text:"Skill max HP buff",title:"Skill max HP buff",content:'\n    Applies "Survival Response" to a single target ally and increases their Max HP by '.concat(A(n*100),"% of Lynx's Max HP plus ").concat(A(s),".\n    ::BR::E4: When \"Survival Response\" is gained, increases the target's ATK by an amount equal to 3% of Lynx's Max HP for 1 turn(s).")}];return{content:()=>l,defaults:()=>({skillBuff:!0,e4TalentAtkBuff:!0}),precomputeEffects:f=>{const u=f.characterConditionals,r=Object.assign({},E);return r[t.HP_P]+=u.skillBuff?n:0,r[t.HP]+=u.skillBuff?s:0,r.BASIC_SCALING+=c,r.SKILL_SCALING+=a,r.ULT_SCALING+=o,r},calculateBaseMultis:(f,u)=>{const r=u.characterConditionals,i=f.x;i[t.HP]+=e>=6&&r.skillBuff?.06*i[t.HP]:0,i[t.ATK]+=e>=4&&r.skillBuff?.03*i[t.HP]:0,i.BASIC_DMG+=i.BASIC_SCALING*i[t.HP],i.SKILL_DMG+=i.SKILL_SCALING*i[t.ATK],i.ULT_DMG+=i.ULT_SCALING*i[t.ATK]}}},_t=e=>{const n=v(e,1,1.1),s=_(e,0,0),c=T(e,1.5,1.62),a=O(e,1,1.1),o=M*(1*1/1);return{content:()=>[],defaults:()=>({}),precomputeEffects:()=>{const l=Object.assign({},E);return l.BASIC_SCALING+=n,l.SKILL_SCALING+=s,l.ULT_SCALING+=c,l.FUA_SCALING+=a,l},calculateBaseMultis:(l,f)=>{const u=l.x,{ashblazingMulti:r,ashblazingAtk:i}=V(l,f,o);u.BASIC_DMG+=u.BASIC_SCALING*u[t.ATK],u.SKILL_DMG+=u.SKILL_SCALING*u[t.ATK],u.ULT_DMG+=u.ULT_SCALING*u[t.ATK],u.FUA_DMG+=u.FUA_SCALING*(u[t.ATK]-i+r),u.FUA_DMG+=e>=4?.3*u[t.DEF]:0}}},Mt=e=>{const n=R(e,1,1.1),s=b(e,2,2.2);let c=y(e,.6,.65);c+=e>=4?.06:0;const a=[{formItem:"slider",id:"ultHitsOnTarget",name:"ultHitsOnTarget",text:"Ult hits on target",title:"Ult hits on target",content:"Number of Ultimate hits on the primary target, dealing DMG equal to ".concat(A(c*100),"% ATK per hit."),min:1,max:10},{formItem:"switch",id:"enemyFrozen",name:"enemyFrozen",text:"Enemy frozen",title:"Enemy frozen",content:"When dealing DMG to Frozen enemies, increases CRIT DMG by 30%."},{formItem:"switch",id:"e2DefReduction",name:"e2DefReduction",text:"E2 DEF reduction",title:"E2 DEF reduction",content:"E2: Reduces the target's DEF by 16% for 3 turn(s).",disabled:e<2},{formItem:"switch",id:"e6UltDmgBoost",name:"e6UltDmgBoost",text:"E6 ult DMG boost",title:"E6 ult DMG boost",content:"E6: When using the Ultimate, increases own DMG by 30%, lasting until the end of the turn.",disabled:e<6}];return{content:()=>a,defaults:()=>({ultHitsOnTarget:10,enemyFrozen:!0,e2DefReduction:!0,e6UltDmgBoost:!0}),precomputeEffects:o=>{const l=o.characterConditionals,f=Object.assign({},E);return f[t.CD]+=l.enemyFrozen?.3:0,f.DEF_SHRED+=e>=2&&l.e2DefReduction?.16:0,f.ELEMENTAL_DMG+=e>=6&&l.e6UltDmgBoost?.3:0,f.BASIC_SCALING+=n,f.SKILL_SCALING+=s,f.ULT_SCALING+=c*l.ultHitsOnTarget,f},calculateBaseMultis:o=>{const l=o.x;l.BASIC_DMG+=l.BASIC_SCALING*l[t.ATK],l.SKILL_DMG+=l.SKILL_SCALING*l[t.ATK],l.ULT_DMG+=l.ULT_SCALING*l[t.ATK]}}},Gt=e=>{const n=v(e,1,1.1),s=_(e,0,0),c=T(e,0,0);return{content:()=>[],defaults:()=>({}),precomputeEffects:()=>{const a=Object.assign({},E);return a.BASIC_SCALING+=n,a.SKILL_SCALING+=s,a.ULT_SCALING+=c,a},calculateBaseMultis:a=>{const o=a.x;o.BASIC_DMG+=o.BASIC_SCALING*o[t.ATK],o.BASIC_DMG+=e>=6?.4*o[t.HP]:0,o.SKILL_DMG+=o.SKILL_SCALING*o[t.ATK],o.ULT_DMG+=o.ULT_SCALING*o[t.ATK]}}},Rt=e=>{const n=T(e,.4,.42),s=v(e,1,1.1),c=_(e,2.1,2.31),a=T(e,1,1.08),o=[{formItem:"switch",id:"enemyDebuffed",name:"enemyDebuffed",text:"Enemy debuffed",title:"Enemy debuffed",content:"Deals 20% more DMG to debuffed enemies."},{formItem:"switch",id:"skillRemovedBuff",name:"skillRemovedBuff",text:"Enemy buff removed skill buff",title:"Enemy buff removed skill buff",content:"Using Skill to remove buff(s) increases the DMG of Pela's next attack by 20%.\n    ::BR::\n    E2: Using Skill to remove buff(s) increases SPD by 10% for 2 turn(s)."},{formItem:"switch",id:"ultDefPenDebuff",name:"ultDefPenDebuff",text:"Ult DEF shred debuff",title:"Ult DEF shred debuff",content:"When Exposed, enemies' DEF is reduced by ".concat(A(n*100),"% for 2 turn(s).")},{formItem:"switch",id:"e4SkillResShred",name:"e4SkillResShred",text:"E4 skill RES shred",title:"E4 skill RES shred",content:"E4: When using Skill, there is a 100% base chance to reduce the target enemy's Ice RES by 12% for 2 turn(s).",disabled:e<4}];return{content:()=>o,defaults:()=>({enemyDebuffed:!0,skillRemovedBuff:!0,ultDefPenDebuff:!0,e4SkillResShred:!0}),precomputeEffects:l=>{const f=l.characterConditionals,u=Object.assign({},E);return u[t.EHR]+=.1,u[t.SPD_P]+=e>=2&&f.skillRemovedBuff?.1:0,u[t.SPD_P]+=e>=2&&f.skillRemovedBuff?.1:0,u[t.SPD_P]+=e>=2&&f.skillRemovedBuff?.1:0,u.BASIC_SCALING+=s,u.SKILL_SCALING+=c,u.ULT_SCALING+=a,u.BASIC_BOOST+=f.skillRemovedBuff?.2:0,u.SKILL_BOOST+=f.skillRemovedBuff?.2:0,u.ULT_BOOST+=f.skillRemovedBuff?.2:0,u.RES_PEN+=e>=4&&f.e4SkillResShred?.12:0,u.DEF_SHRED+=f.ultDefPenDebuff?n:0,u.ELEMENTAL_DMG+=f.enemyDebuffed?.2:0,u},calculateBaseMultis:l=>{const f=l.x;f.BASIC_DMG+=f.BASIC_SCALING*f[t.ATK],f.SKILL_DMG+=f.SKILL_SCALING*f[t.ATK],f.ULT_DMG+=f.ULT_SCALING*f[t.ATK],f.BASIC_DMG+=e>=6?.4*f[t.ATK]:0,f.SKILL_DMG+=e>=6?.4*f[t.ATK]:0,f.ULT_DMG+=e>=6?.4*f[t.ATK]:0}}},xe=e=>{const n=$(e,.2,.22),s=R(e,1,1.1),c=b(e,1.25,1.375),a=y(e,4.5,4.8),o=y(e,2.7,2.88),l=y(e,1.62,1.728),f=[{formItem:"switch",id:"enhancedUlt",name:"Enhanced Ult",text:"AoE ult",title:"AoE ULT - Split DMG to adjacent enemies",content:"Choose between two attack modes to deliver a full strike. ::BR:: Blowout: (ST) Farewell Hit deals Physical DMG equal to ".concat(A(a*100),"% of the Trailblazer's ATK to a single enemy. \n    ::BR::Blowout: (Blast) RIP Home Run deals Physical DMG equal to ").concat(A(o*100),"% of the Trailblazer's ATK to a single enemy, and Physical DMG equal to ").concat(A(l*100),"% of the Trailblazer's ATK to enemies adjacent to it.")},{formItem:"slider",id:"talentStacks",name:"Talent stacks",text:"Talent stacks",title:"Talent stacks",content:"Each time after this character inflicts Weakness Break on an enemy, ATK increases by ".concat(A(n*100),"% and DEF increases by 10%. This effect stacks up to 2 times."),min:0,max:2}];return{content:()=>f,defaults:()=>({enhancedUlt:!0,talentStacks:2}),precomputeEffects:u=>{const r=u.characterConditionals,i=Object.assign({},E);return i[t.ATK_P]+=r.talentStacks*n,i[t.DEF_P]+=r.talentStacks*.1,i[t.CR]+=u.enemyWeaknessBroken?.25:0,i.BASIC_SCALING+=s,i.SKILL_SCALING+=c,i.ULT_SCALING+=r.enhancedUlt?o:a,i.SKILL_BOOST+=.25,i.ULT_BOOST+=r.enhancedUlt?.25:0,i},calculateBaseMultis:u=>{const r=u.x;r.BASIC_DMG+=r.BASIC_SCALING*r[t.ATK],r.SKILL_DMG+=r.SKILL_SCALING*r[t.ATK],r.ULT_DMG+=r.ULT_SCALING*r[t.ATK]}}},vt=e=>{const n=_(e,.38,.408),s=O(e,.72,.792),c=v(e,1,1.1),a=v(e,2.4,2.64),o=_(e,0,0),l=T(e,2,2.16),f={1:M*(1*1/1),3:M*(2*1/1),5:M*(2*1/1)},u=M*(1*1/1),r=[{formItem:"switch",id:"basicEnhanced",name:"basicEnhanced",text:"Basic enhanced",title:"Basic enhanced",content:"Qingque's ATK increases by ".concat(A(s*100),'%, and her Basic ATK "Flower Pick" is enhanced, becoming "Cherry on Top!"')},{formItem:"switch",id:"basicEnhancedSpdBuff",name:"basicEnhancedSpdBuff",text:"Basic enhanced SPD buff",title:"Basic enhanced SPD buff",content:"Qingque's SPD increases by 10% for 1 turn after using the Enhanced Basic ATK."},{formItem:"slider",id:"skillDmgIncreaseStacks",name:"skillDmgIncreaseStacks",text:"Skill DMG stacks",title:"Skill DMG stacks",content:"Immediately draws 2 jade tile(s) and increases DMG by ".concat(A(n*100),"% until the end of the current turn. This effect can stack up to 4 time(s)."),min:0,max:4}];return{content:()=>r,defaults:()=>({basicEnhanced:!0,basicEnhancedSpdBuff:!0,skillDmgIncreaseStacks:4}),precomputeEffects:i=>{const d=i.characterConditionals,m=Object.assign({},E);return m[t.ATK_P]+=d.basicEnhanced?s:0,m[t.SPD_P]+=d.basicEnhancedSpdBuff?.1:0,m.BASIC_SCALING+=d.basicEnhanced?a:c,m.SKILL_SCALING+=o,m.ULT_SCALING+=l,m.FUA_SCALING+=e>=4?m.BASIC_SCALING:0,m.ELEMENTAL_DMG+=d.skillDmgIncreaseStacks*n,m.ULT_BOOST+=e>=1?.1:0,m},calculateBaseMultis:(i,d)=>{const m=d.characterConditionals,h=i.x;if(h.BASIC_DMG+=h.BASIC_SCALING*h[t.ATK],h.SKILL_DMG+=h.SKILL_SCALING*h[t.ATK],h.ULT_DMG+=h.ULT_SCALING*h[t.ATK],m.basicEnhanced){const B=f[d.enemyCount],{ashblazingMulti:I,ashblazingAtk:C}=V(i,d,B);h.FUA_DMG+=h.FUA_SCALING*(h[t.ATK]-C+I)}else{const{ashblazingMulti:B,ashblazingAtk:I}=V(i,d,u);h.FUA_DMG+=h.FUA_SCALING*(h[t.ATK]-I+B)}}}},Pt=e=>{const n=T(e,.25,.27),s=v(e,1,1.1),c=_(e,0,0),a=T(e,0,0),o=[{formItem:"switch",id:"ultFieldActive",name:"ultFieldActive",text:"Ult field active",title:"Ult field active",content:"While inside the field, all allies' All-Type RES PEN increases by ".concat(A(n*100),"%.\n    ::BR::\n    E1: While the Ultimate's field is deployed, the DMG dealt by all allies ignores 20% of the target's DEF.")},{formItem:"switch",id:"e4BeBuff",name:"e4BeBuff",text:"E4 break effect buff",title:"E4 break effect buff",content:"E4: When an enemy target's Weakness is Broken, Ruan Mei's Break Effect increases by 100% for 3 turn(s).",disabled:e<4}];return{content:()=>o,defaults:()=>({ultFieldActive:!0,e4BeBuff:!0}),precomputeEffects:l=>{const f=l.characterConditionals,u=Object.assign({},E);return u[t.BE]+=.2,u[t.BE]+=e>=4&&f.e4BeBuff?1:0,u.BASIC_SCALING+=s,u.SKILL_SCALING+=c,u.ULT_SCALING+=a,u.RES_PEN+=f.ultFieldActive?n:0,u.DEF_SHRED+=e>=1&&f.ultFieldActive?.2:0,u[t.ATK_P]+=e>=2&&l.enemyWeaknessBroken?.4:0,u},calculateBaseMultis:l=>{const f=l.x,u=A((f[t.BE]*100-120)/10);f.ELEMENTAL_DMG+=Math.floor(Math.max(0,u))*.06,f.BASIC_DMG+=f.BASIC_SCALING*f[t.ATK],f.SKILL_DMG+=f.SKILL_SCALING*f[t.ATK],f.ULT_DMG+=f.ULT_SCALING*f[t.ATK]}}},xt=e=>{const n=y(e,.3,.32),s=R(e,1,1.1),c=b(e,.56,.616),a=y(e,1.6,1.728),o=$(e,.52,.572),l=e<1?4:5,f=[{formItem:"switch",id:"targetDotTakenDebuff",name:"targetDotTakenDebuff",text:"Ult DoT taken debuff",title:"Ult Dot taken debuff",content:"When debuffed by Sampo's Ultimate, increase the targets' DoT taken by ".concat(A(n*100),"% for 2 turn(s).")},{formItem:"slider",id:"skillExtraHits",name:"skillExtraHits",text:"Skill extra hits",title:"Skill extra hits",content:"\n      Number of extra hits from Skill.\n      ",min:1,max:l},{formItem:"switch",id:"targetWindShear",name:"targetWindShear",text:"Target has wind shear",title:"Target has wind shear",content:"Enemies with Wind Shear effect deal 15% less damage to Sampo."}];return{content:()=>f,defaults:()=>({targetDotTakenDebuff:!0,skillExtraHits:l,targetWindShear:!0}),precomputeEffects:u=>{const r=u.characterConditionals,i=Object.assign({},E);return i.BASIC_SCALING+=s,i.SKILL_SCALING+=c,i.SKILL_SCALING+=r.skillExtraHits*c,i.ULT_SCALING+=a,i.DOT_SCALING+=o,i.DOT_SCALING+=e>=6?.15:0,i.DOT_VULNERABILITY+=r.targetDotTakenDebuff?n:0,i.DMG_RED_MULTI*=r.targetWindShear?1-.15:1,i},calculateBaseMultis:u=>{const r=u.x;r.BASIC_DMG+=r.BASIC_SCALING*r[t.ATK],r.SKILL_DMG+=r.SKILL_SCALING*r[t.ATK],r.ULT_DMG+=r.ULT_SCALING*r[t.ATK],r.DOT_DMG+=r.DOT_SCALING*r[t.ATK]}}},Kt=e=>{const n=$(e,.8,.88),s=e>=2?2:1,c=R(e,1,1.1),a=b(e,2.2,2.42),o=y(e,4.25,4.59),l=[{formItem:"switch",id:"buffedState",name:"buffedState",text:"Buffed State",title:"Buffed State",content:"\n      Enters the buffed state upon defeating an enemy with Basic ATK, Skill, or Ultimate, and receives an extra turn. While in the buffed state, the DMG of Seele's attacks increases by ".concat(A(n*100),"% for 1 turn(s).\n      ::BR::\n      While Seele is in the buffed state, her Quantum RES PEN increases by 20%.\n    ")},{formItem:"slider",id:"speedBoostStacks",name:"speedBoostStacks",text:"Speed boost stacks",title:"Speed boost stacks",content:"Increases SPD by 25% per stack. Stacks up to ".concat(A(s)," time(s)."),min:0,max:s},{formItem:"switch",id:"e6UltTargetDebuff",name:"e6UltTargetDebuff",text:"E6 Ult Debuff",title:"E6 Shattering Shambles",content:"E6: After Seele uses her Ultimate, inflict the target enemy with Butterfly Flurry for 1 turn(s). \n    Enemies suffering from Butterfly Flurry will take Additional Quantum DMG equal to 15% of Seele's Ultimate DMG every time they are attacked.",disabled:e<6}];return{content:()=>l,defaults:()=>({buffedState:!0,speedBoostStacks:s,e6UltTargetDebuff:!0}),precomputeEffects:f=>{const u=f.characterConditionals,r=Object.assign({},E);return r[t.CR]+=e>=1&&f.enemyHpPercent<=.8?.15:0,r[t.SPD_P]+=.25*u.speedBoostStacks,r.BASIC_SCALING+=c,r.SKILL_SCALING+=a,r.ULT_SCALING+=o,r.ELEMENTAL_DMG+=u.buffedState?n:0,r.RES_PEN+=u.buffedState?.2:0,r},calculateBaseMultis:(f,u)=>{const r=u.characterConditionals,i=f.x;i.BASIC_DMG+=i.BASIC_SCALING*i[t.ATK],i.SKILL_DMG+=i.SKILL_SCALING*i[t.ATK],i.ULT_DMG+=i.ULT_SCALING*i[t.ATK],i.BASIC_DMG+=e>=6&&r.e6UltTargetDebuff?.15*i.ULT_DMG:0,i.SKILL_DMG+=e>=6&&r.e6UltTargetDebuff?.15*i.ULT_DMG:0,i.ULT_DMG+=e>=6&&r.e6UltTargetDebuff?.15*i.ULT_DMG:0}}},Nt=e=>{const n=$(e,.72,.792),s=R(e,1,1.1),c=b(e,1.4,1.54),a=y(e,1.8,1.944),o=b(e,1.04,1.144),l=[{formItem:"switch",id:"targetShocked",name:"targetShocked",text:"Target shocked",title:"Target shocked",content:"After Serval attacks, deals Additional Lightning DMG equal to ".concat(A(n*100),"% of Serval's ATK to all Shocked enemies.")},{formItem:"switch",id:"enemyDefeatedBuff",name:"enemyDefeatedBuff",text:"Enemy defeated buff",title:"Enemy defeated buff",content:"Upon defeating an enemy, ATK increases by 20% for 2 turn(s)."}];return{content:()=>l,defaults:()=>({targetShocked:!0,enemyDefeatedBuff:!0}),precomputeEffects:f=>{const u=f.characterConditionals,r=Object.assign({},E);return r[t.ATK_P]+=u.enemyDefeatedBuff?.2:0,r.BASIC_SCALING+=s,r.SKILL_SCALING+=c,r.ULT_SCALING+=a,r.DOT_SCALING+=o,r.BASIC_SCALING+=u.targetShocked?n:0,r.SKILL_SCALING+=u.targetShocked?n:0,r.ULT_SCALING+=u.targetShocked?n:0,r.ELEMENTAL_DMG+=e>=6&&u.targetShocked?.3:0,r},calculateBaseMultis:f=>{const u=f.x;u.BASIC_DMG+=u.BASIC_SCALING*u[t.ATK],u.SKILL_DMG+=u.SKILL_SCALING*u[t.ATK],u.ULT_DMG+=u.ULT_SCALING*u[t.ATK],u.DOT_DMG+=u.DOT_SCALING*u[t.ATK]}}};const wt=e=>{const n=b(e,.1,.105),s=b(e,.08,.088),c=y(e,.45,.468),a=R(e,1,1.1),o=b(e,1.96,2.156),l=y(e,3.8,4.104),f=[{formItem:"switch",id:"skillResShredDebuff",name:"skillResShredDebuff",text:"Skill RES shred",title:"Skill: Allow Changes? RES Shred",content:"Decreases the target's All-Type RES of the enemy by ".concat(A(n*100),"% for 2 turn(s).\n    ::BR::If there are 3 or more debuff(s) affecting the enemy when the Skill is used, then the Skill decreases the enemy's All-Type RES by an additional 3%.")},{formItem:"switch",id:"skillDefShredDebuff",name:"skillDefShredDebuff",text:"Bug DEF shred",title:"Talent: Awaiting System Response... DEF shred",content:"Silver Wolf's bug reduces the target's DEF by ".concat(A(s*100),"% for 3 turn(s).")},{formItem:"switch",id:"ultDefShredDebuff",name:"ultDefShredDebuff",text:"Ult DEF shred",title:"Ult: User Banned DEF shred",content:"Decreases the target's DEF by ".concat(A(c*100),"% for 3 turn(s).")},{formItem:"slider",id:"targetDebuffs",name:"targetDebuffs",text:"Target debuffs",title:"Target debuffs",content:"\n      If there are 3 or more debuff(s) affecting the enemy when the Skill is used, then the Skill decreases the enemy's All-Type RES by an additional 3%.\n      ::BR::\n      E4: After using her Ultimate to attack enemies, deals Additional Quantum DMG equal to 20% of Silver Wolf's ATK for every debuff currently on the enemy target. This effect can be triggered for a maximum of 5 time(s) during each use of her Ultimate.\n      ::BR::\n      E6: For every debuff the target enemy has, the DMG dealt by Silver Wolf increases by 20%, up to a limit of 100%.\n    ",min:0,max:5}];return{content:()=>f,defaults:()=>({skillResShredDebuff:!0,skillDefShredDebuff:!0,ultDefShredDebuff:!0,targetDebuffs:5}),precomputeEffects:u=>{const r=u.characterConditionals,i=Object.assign({},E);return i.BASIC_SCALING+=a,i.SKILL_SCALING+=o,i.ULT_SCALING+=l,i.ULT_SCALING+=e>=4?r.targetDebuffs*.2:0,i.RES_PEN+=r.skillResShredDebuff?n:0,i.RES_PEN+=r.skillResShredDebuff&&r.targetDebuffs>=3?.03:0,i.DEF_SHRED+=r.skillDefShredDebuff?s:0,i.DEF_SHRED+=r.ultDefShredDebuff?c:0,i.ELEMENTAL_DMG+=e>=6?r.targetDebuffs*.2:0,i},calculateBaseMultis:u=>{const r=u.x;r.BASIC_DMG+=r.BASIC_SCALING*r[t.ATK],r.SKILL_DMG+=r.SKILL_SCALING*r[t.ATK],r.ULT_DMG+=r.ULT_SCALING*r[t.ATK]}}};var Ut=e=>{const n=_(e,.24,.264),s=_(e,.45,.486),c=T(e,.1,.108),a=T(e,.06,.066),o=v(e,1,1.1),l=_(e,0,0),f=T(e,0,0),u={0:0,1:.05,2:.15,3:.3},r=[{formItem:"switch",id:"skillCdBuff",name:"skillCdBuff",text:"Skill CD buff",title:"Skill CD buff",content:"Increases the CRIT DMG of a single ally by ".concat(A(n*100),"% of Sparkle's CRIT DMG plus ").concat(A(s*100),"%, lasting for 1 turn(s).")},{formItem:"switch",id:"cipherBuff",name:"cipherBuff",text:"Cipher buff",title:"Cipher buff",content:"When allies with Cipher trigger the DMG Boost effect provided by Sparkle's Talent, each stack additionally increases its effect by ".concat(A(c*100),"%, lasting for 2 turns.")},{formItem:"slider",id:"talentStacks",name:"talentStacks",text:"Talent DMG stacks",title:"Talent DMG stacks",content:"Whenever an ally consumes 1 Skill Point, all allies' DMG increases by ".concat(A(a*100),"%. This effect lasts for 2 turn(s) and can stack up to 3 time(s)."),min:0,max:3},{formItem:"slider",id:"quantumAllies",name:"quantumAllies",text:"Quantum allies",title:"Quantum allies",content:"When there are 1/2/3 Quantum allies in your team, Quantum-Type allies' ATK are increased by 5%/15%/30%.",min:0,max:3}];return{content:()=>r,defaults:()=>({skillCdBuff:!0,cipherBuff:!0,talentStacks:3,quantumAllies:3}),precomputeEffects:i=>{const d=i.characterConditionals,m=Object.assign({},E);return m[t.ATK_P]+=.15+(u[d.quantumAllies]||0),m[t.ATK_P]+=e>=1&&d.cipherBuff?.4:0,m.ELEMENTAL_DMG+=d.cipherBuff?d.talentStacks*(a+c):d.talentStacks*a,m.DEF_SHRED+=e>=2?.08*d.talentStacks:0,m.BASIC_SCALING+=o,m.SKILL_SCALING+=l,m.ULT_SCALING+=f,m},calculateBaseMultis:(i,d)=>{const m=d.characterConditionals,h=i.x;h[t.CD]+=m.skillCdBuff?s+n*h[t.CD]:0,h[t.CD]+=e>=6&&m.skillCdBuff?.3*h[t.CD]:0,h.BASIC_DMG+=h.BASIC_SCALING*h[t.ATK],h.SKILL_DMG+=h.SKILL_SCALING*h[t.ATK],h.ULT_DMG+=h.ULT_SCALING*h[t.ATK]}}},Ot=e=>{const n=O(e,.2,.21),s=T(e,.3,.324),c=e>=6?2:1,a=v(e,1,1.1),o=_(e,2.1,2.31),l=_(e,1,1.1),f=T(e,3.2,3.456),u=[{formItem:"switch",id:"ultBuffedState",name:"ultBuffedState",text:"Ult buffed state",title:"Ult buffed state",content:"Sushang's ATK increases by ".concat(A(s*100),"% and using her Skill has 2 extra chances to trigger Sword Stance for 2 turn(s).\n    Sword Stance triggered from the extra chances deals 50% of the original DMG.")},{formItem:"slider",id:"skillExtraHits",name:"skillExtraHits",text:"Skill extra hits",title:"Skill extra hits",content:"Increases the number of Sword Stance extra hits of the Skill.",min:0,max:3},{formItem:"slider",id:"skillTriggerStacks",name:"skillTriggerStacks",text:"Skill trigger stacks",title:"Skill trigger stacks",content:"For every Sword Stance triggered, the DMG dealt by Sword Stance increases by 2.5%. Stacks up to 10 time(s).",min:0,max:10},{formItem:"slider",id:"talentSpdBuffStacks",name:"talentSpdBuffStacks",text:"Talent SPD buff stacks",title:"Talent SPD buff stacks",content:"When an enemy has their Weakness Broken on the field, Sushang's SPD increases by ".concat(A(n*100),"% per stack for 2 turn(s).\n    ::BR::\n    E6: Talent's SPD Boost is stackable and can stack up to 2 times."),min:0,max:c},{formItem:"switch",id:"e2DmgReductionBuff",name:"e2DmgReductionBuff",text:"E2 DMG reduction buff",title:"E2 DMG reduction buff",content:"E2: After triggering Sword Stance, the DMG taken by Sushang is reduced by 20% for 1 turn.",disabled:e<2}];return{content:()=>u,defaults:()=>({ultBuffedState:!0,e2DmgReductionBuff:!0,skillExtraHits:3,skillTriggerStacks:10,talentSpdBuffStacks:c}),precomputeEffects:r=>{const i=r.characterConditionals,d=Object.assign({},E);d[t.BE]+=e>=4?.4:0,d[t.ATK_P]+=i.ultBuffedState?s:0,d[t.SPD_P]+=i.talentSpdBuffStacks*n;const m=o;let h=0;h+=i.skillExtraHits>=1?l:0,h+=i.ultBuffedState&&i.skillExtraHits>=2?l*.5:0,h+=i.ultBuffedState&&i.skillExtraHits>=3?l*.5:0;const B=h/(h+m);return d.BASIC_SCALING+=a,d.SKILL_SCALING+=m,d.SKILL_SCALING+=h,d.ULT_SCALING+=f,d.SKILL_BOOST+=i.skillTriggerStacks*.025*B,d.DMG_RED_MULTI*=e>=2&&i.e2DmgReductionBuff?1-.2:1,d},calculateBaseMultis:r=>{const i=r.x;i.BASIC_DMG+=i.BASIC_SCALING*i[t.ATK],i.SKILL_DMG+=i.SKILL_SCALING*i[t.ATK],i.ULT_DMG+=i.ULT_SCALING*i[t.ATK]}}},Ht=e=>{const n=_(e,.25,.27),s=T(e,.5,.56),c=_(e,.5,.55),a=_(e,.4,.44)+(e>=4?.2:0),o=O(e,.6,.66)+(e>=4?.2:0),l=v(e,1,1.1),f=_(e,0,0),u=T(e,0,0),r=[{formItem:"switch",id:"benedictionBuff",name:"benedictionBuff",text:"Benediction buff",title:"Benediction buff",content:"Grants a single ally with Benediction to increase their ATK by ".concat(A(c*100),"%, up to ").concat(A(n*100),"% of Tingyun's current ATK. When the ally with Benediction attacks, it deals lightning damage equal to ").concat(A(a*100),"% of that ally's ATK. This effect lasts for 3 turns.")},{formItem:"switch",id:"skillSpdBuff",name:"skillSpdBuff",text:"Skill SPD buff",title:"Skill SPD buff",content:"Tingyun's SPD increases by 20% for 1 turn after using Skill."},{formItem:"switch",id:"ultDmgBuff",name:"ultDmgBuff",text:"Ult DMG buff",title:"Ult DMG buff",content:"Regenerates 50 Energy for a single ally and increases the target's DMG by ".concat(A(s),"% for 2 turn(s).")},{formItem:"switch",id:"ultSpdBuff",name:"ultSpdBuff",text:"E1 ult SPD buff",title:"E1 ult SPD buff",content:"E1: After using their Ultimate, the ally with Benediction gains a 20% increase in SPD for 1 turn.",disabled:e<1}];return{content:()=>r,defaults:()=>({benedictionBuff:!1,skillSpdBuff:!1,ultSpdBuff:!1,ultDmgBuff:!1}),precomputeEffects:i=>{const d=i.characterConditionals,m=Object.assign({},E);return m[t.SPD_P]+=e>=1&&d.ultSpdBuff?.2:0,m[t.SPD_P]+=d.skillSpdBuff?.2:0,m[t.ATK_P]+=d.benedictionBuff?n:0,m.BASIC_SCALING+=l,m.SKILL_SCALING+=f,m.ULT_SCALING+=u,m.BASIC_BOOST+=.4,m.ELEMENTAL_DMG+=d.ultDmgBuff?s:0,m.BENEDICTION_LIGHTNING_DMG=d.benedictionBuff?a+o:0,m},calculateBaseMultis:i=>{const d=i.x;d.BASIC_DMG+=d.BASIC_SCALING*d[t.ATK]+d.BENEDICTION_LIGHTNING_DMG*d[t.ATK],d.SKILL_DMG+=d.SKILL_SCALING*d[t.ATK],d.ULT_DMG+=d.ULT_SCALING*d[t.ATK]}}},Ft=e=>{const n=_(e,.5,.55),s=T(e,1.5,1.65),c=T(e,.25,.275),a=v(e,1,1.1),o=_(e,1.5,1.65),l=O(e,1.5,1.65),f=M*(1*1/1),u=M*(1*1/7+2*1/7+3*1/7+4*1/7+5*1/7+6*1/7+7*1/7),r=M*(1*1/10+2*1/10+3*1/10+4*1/10+5*1/10+6*1/10+7*1/10+8*3/10),i=[{formItem:"switch",id:"enemyProofOfDebtDebuff",name:"enemyProofOfDebtDebuff",text:"Enemy proof of debt debuff",title:"Proof of Debt",content:"Inflicts a single target enemy with a Proof of Debt status, increasing the DMG it takes from follow-up attacks by ".concat(A(n*100),"%.")},{formItem:"switch",id:"numbyEnhancedState",name:"numbyEnhancedState",text:"Numby enhanced state",title:"Turn a Profit!: Ult Enhanced State",content:"Numby enters the Windfall Bonanza! state and its DMG multiplier increases by ".concat(A(s*100),"% and CRIT DMG increases by ").concat(A(c*100),"%.")},{formItem:"slider",id:"e1DebtorStacks",name:"e1DebtorStacks",text:"E1 Debtor stacks",title:"E1 Increases Crit DMG",content:"E1: When enemies afflicted with Proof of Debt receive follow-up attacks, they will enter the Debtor state. This can take effect only once within a single action. The Debtor state increases the CRIT DMG of follow-up attacks inflicted on the target enemies by 25%, stacking up to 2 time(s). When Proof of Debt is removed, the Debtor state is also removed.",min:0,max:2,disabled:e<1}];return{content:()=>i,defaults:()=>({enemyProofOfDebtDebuff:!0,numbyEnhancedState:!0,e1DebtorStacks:2}),precomputeEffects:d=>{const m=d.characterConditionals,h=Object.assign({},E);return h.BASIC_SCALING+=a,h.SKILL_SCALING+=o,h.SKILL_SCALING+=m.numbyEnhancedState?s:0,h.FUA_SCALING+=l,h.FUA_SCALING+=m.numbyEnhancedState?s:0,h.FUA_VULNERABILITY+=m.enemyProofOfDebtDebuff?n:0,h.ELEMENTAL_DMG+=d.enemyElementalWeak?.15:0,h.FUA_CD_BOOST+=e>=1?.25*m.e1DebtorStacks:0,h},calculateBaseMultis:(d,m)=>{const h=m.characterConditionals,B=d.x,I=h.numbyEnhancedState?r:u,C=V(d,m,I),P=V(d,m,f);B.BASIC_DMG+=B.BASIC_SCALING*(B[t.ATK]-P.ashblazingAtk+P.ashblazingMulti),B.FUA_DMG+=B.FUA_SCALING*(B[t.ATK]-C.ashblazingAtk+C.ashblazingMulti),B.SKILL_DMG=B.FUA_DMG,B.SKILL_BOOST+=B.FUA_BOOST,B.SKILL_CD_BOOST+=B.FUA_CD_BOOST,B.SKILL_CR_BOOST+=B.FUA_CR_BOOST,B.SKILL_VULNERABILITY=B.FUA_VULNERABILITY,B.SKILL_DEF_PEN=B.FUA_DEF_PEN,B.SKILL_RES_PEN=B.FUA_RES_PEN,B.BASIC_BOOST+=B.FUA_BOOST,B.BASIC_CD_BOOST+=B.FUA_CD_BOOST,B.BASIC_CR_BOOST+=B.FUA_CR_BOOST,B.BASIC_VULNERABILITY=B.FUA_VULNERABILITY,B.BASIC_DEF_PEN=B.FUA_DEF_PEN,B.BASIC_RES_PEN=B.FUA_RES_PEN,B.FUA_CD_BOOST+=h.numbyEnhancedState?c:0,B.SKILL_CD_BOOST+=h.numbyEnhancedState?c:0,B.SKILL_RES_PEN+=e>=6?.1:0,B.FUA_RES_PEN+=e>=6?.1:0}}},Wt=e=>{const n=e>=6?3:2,s=R(e,1,1.1),c=b(e,.72,.792),a=y(e,1.5,1.62),o=$(e,.6,.66),l=[{formItem:"switch",id:"enemyDmgTakenDebuff",name:"enemyDmgTakenDebuff",text:"Enemy dmg taken debuff",title:"Retribution",content:"When using Ultimate, there is a 100% base chance to increase the DMG received by the targets by 12% for 2 turn(s)."},{formItem:"switch",id:"enemySlowed",name:"enemySlowed",text:"Enemy slowed",title:"Time Distortion",content:"When hitting an enemy that is already Slowed, Welt deals Additional Imaginary DMG equal to ".concat(A(o*100),"% of his ATK to the enemy.")},{formItem:"slider",id:"skillExtraHits",name:"skillExtraHits",text:"Skill extra hits on target",title:"Edge of the Void",content:"Deals Imaginary DMG equal to ".concat(A(c*100),"% of Welt's ATK to a single enemy and further deals DMG 2 extra times, with each time dealing Imaginary DMG equal to ").concat(A(c*100),"% of Welt's ATK to a random enemy."),min:0,max:n},{formItem:"switch",id:"e1EnhancedState",name:"e1EnhancedState",text:"E1 enhanced state",title:"E1 Legacy of Honor",content:"E1: After Welt uses his Ultimate, his abilities are enhanced. The next 2 time(s) he uses his Basic ATK or Skill, deals Additional DMG to the target equal to 50% of his Basic ATK's DMG multiplier or 80% of his Skill's DMG multiplier respectively.",disabled:e<1}];return{content:()=>l,defaults:()=>({enemySlowed:!0,enemyDmgTakenDebuff:!0,skillExtraHits:n,e1EnhancedState:!0}),precomputeEffects:f=>{const u=f.characterConditionals,r=Object.assign({},E);return r.BASIC_SCALING+=s,r.SKILL_SCALING+=c,r.ULT_SCALING+=a,r.BASIC_SCALING+=u.enemySlowed?o:0,r.SKILL_SCALING+=u.enemySlowed?o:0,r.ULT_SCALING+=u.enemySlowed?o:0,r.BASIC_SCALING+=e>=1&&u.e1EnhancedState?.5*s:0,r.SKILL_SCALING+=e>=1&&u.e1EnhancedState?.8*c:0,r.SKILL_SCALING+=u.skillExtraHits*c,r.ELEMENTAL_DMG+=f.enemyWeaknessBroken?.2:0,r.DMG_TAKEN_MULTI+=u.enemyDmgTakenDebuff?.12:0,r},calculateBaseMultis:f=>{const u=f.x;u.BASIC_DMG+=u.BASIC_SCALING*u[t.ATK],u.SKILL_DMG+=u.SKILL_SCALING*u[t.ATK],u.ULT_DMG+=u.ULT_SCALING*u[t.ATK]}}},Vt=e=>{const n=T(e,.6,.648),s=v(e,1,1.1),c=_(e,1.4,1.54),a=T(e,2.5,2.7),o=O(e,.9,.99),l={0:0,1:M*(1*1/1),2:M*(1*1/2+2*1/2),3:M*(1*1/3+2*1/3+3*1/3)},f=[{id:"enemyToughness50",text:"Intrepid Rollerbearings",formItem:"switch",title:"Intrepid Rollerbearings",content:"If the enemy target's Toughness is equal to or higher than 50% of their Max Toughness, deals 10% more DMG when using Ultimate."},{id:"toughnessReductionDmgBoost",text:"Ultimate DMG boost",formItem:"slider",title:"Ultimate: Divine Castigation",content:"When using Ultimate, the more Toughness is reduced, the higher the DMG will be dealt, up to a max of ".concat(A(n*100),"% increase."),min:0,max:n,percent:!0},{id:"fuaHits",text:"FUA hits",formItem:"slider",title:"Talent: Karmic Perpetuation",content:"When Karma reaches the max number of stacks, consumes all current Karma stacks and immediately launches a follow-up attack against an enemy target, \n      dealing DMG for 3 times, with each time dealing Quantum DMG equal to ".concat(A(o*100),"% of Xueyi's ATK to a single random enemy."),min:0,max:3},{id:"e4BeBuff",text:"E4: Karma, Severed",formItem:"switch",title:"E4 break effect buff",content:"E4: When using Ultimate, increases Break Effect by 40% for 2 turn(s).",disabled:e<4}];return{content:()=>f,defaults:()=>({enemyToughness50:!0,toughnessReductionDmgBoost:n,fuaHits:3,e4BeBuff:!0}),precomputeEffects:u=>{const r=u.characterConditionals,i=Object.assign({},E);return i[t.BE]+=e>=4&&r.e4BeBuff?.4:0,i.BASIC_SCALING+=s,i.SKILL_SCALING+=c,i.ULT_SCALING+=a,i.FUA_SCALING+=o*r.fuaHits,i.ULT_BOOST+=r.enemyToughness50?.1:0,i.ULT_BOOST+=r.toughnessReductionDmgBoost,i.FUA_BOOST+=e>=1?.4:0,i},calculateBaseMultis:(u,r)=>{const i=r.characterConditionals,d=u.x;d.ELEMENTAL_DMG+=Math.min(2.4,d[t.BE]),d.BASIC_DMG+=d.BASIC_SCALING*d[t.ATK],d.SKILL_DMG+=d.SKILL_SCALING*d[t.ATK],d.ULT_DMG+=d.ULT_SCALING*d[t.ATK];const m=l[i.fuaHits],{ashblazingMulti:h,ashblazingAtk:B}=V(u,r,m);d.FUA_DMG+=d.FUA_SCALING*(d[t.ATK]-B+h)}}},$t=e=>{const n=y(e,.5,.54),s=y(e,.3,.33),c=y(e,.2,.21),a=R(e,1,1.1),o=b(e,2.2,2.42),l=y(e,3.5,3.78),f=$(e,.5,.55),u=M*(1*1/1),r=[{formItem:"switch",id:"ultBuffActive",name:"ultBuffActive",text:"Ult buff active",title:"Ult buff active",content:"Increases Yanqing's CRIT Rate by 60%. When Soulsteel Sync is active, increases Yanqing's CRIT DMG by an extra ".concat(A(n*100),"%.")},{formItem:"switch",id:"soulsteelBuffActive",name:"soulsteelBuffActive",text:"Soulsteel buff active",title:"Soulsteel buff active",content:"When Soulsteel Sync is active, Yanqing's CRIT Rate increases by ".concat(A(c*100),"% and his CRIT DMG increases by ").concat(A(s*100),"%. \n    ::BR::\n    Before using Ultimate, when Soulsteel Sync is active, increases Yanqing's CRIT DMG by an extra ").concat(A(n*100),"%.\n    ::BR::\n    When Soulsteel Sync is active, Effect RES increases by 20%.\n    ::BR::\n    E2: When Soulsteel Sync is active, Energy Regeneration Rate increases by an extra 10%.\n    ")},{formItem:"switch",id:"critSpdBuff",name:"critSpdBuff",text:"Crit spd buff",title:"Crit spd buff",content:"When a CRIT Hit is triggered, increases SPD by 10% for 2 turn(s)."},{formItem:"switch",id:"e1TargetFrozen",name:"e1TargetFrozen",text:"E1 target frozen",title:"E1 target frozen",content:"When Yanqing attacks a Frozen enemy, he deals Additional Ice DMG equal to 60% of his ATK.",disabled:e<1},{formItem:"switch",id:"e4CurrentHp80",name:"e4CurrentHp80",text:"E4 self HP ≥ 80% RES PEN buff",title:"E4 self HP ≥ 80% RES PEN buff",content:"When the current HP percentage is 80% or higher, Ice RES PEN increases by 12%.",disabled:e<4}];return{content:()=>r,defaults:()=>({ultBuffActive:!0,soulsteelBuffActive:!0,critSpdBuff:!0,e1TargetFrozen:!0,e4CurrentHp80:!0}),precomputeEffects:i=>{const d=i.characterConditionals,m=Object.assign({},E);return m[t.CR]+=d.ultBuffActive?.6:0,m[t.CD]+=d.ultBuffActive&&d.soulsteelBuffActive?n:0,m[t.CR]+=d.soulsteelBuffActive?c:0,m[t.CD]+=d.soulsteelBuffActive?s:0,m[t.RES]+=d.soulsteelBuffActive?.2:0,m[t.SPD_P]+=d.critSpdBuff?.1:0,m[t.ERR]+=e>=2&&d.soulsteelBuffActive?.1:0,m.BASIC_SCALING+=a,m.SKILL_SCALING+=o,m.ULT_SCALING+=l,m.FUA_SCALING+=f,m.BASIC_SCALING+=i.enemyElementalWeak?.3:0,m.SKILL_SCALING+=i.enemyElementalWeak?.3:0,m.ULT_SCALING+=i.enemyElementalWeak?.3:0,m.FUA_SCALING+=i.enemyElementalWeak?.3:0,m.BASIC_SCALING+=e>=1&&d.e1TargetFrozen?.6:0,m.SKILL_SCALING+=e>=1&&d.e1TargetFrozen?.6:0,m.ULT_SCALING+=e>=1&&d.e1TargetFrozen?.6:0,m.FUA_SCALING+=e>=1&&d.e1TargetFrozen?.6:0,m.RES_PEN+=e>=4&&d.e4CurrentHp80?.12:0,m},calculateBaseMultis:(i,d)=>{const m=i.x;m.BASIC_DMG+=m.BASIC_SCALING*m[t.ATK],m.SKILL_DMG+=m.SKILL_SCALING*m[t.ATK],m.ULT_DMG+=m.ULT_SCALING*m[t.ATK];const{ashblazingMulti:h,ashblazingAtk:B}=V(i,d,u);m.FUA_DMG+=m.FUA_SCALING*(m[t.ATK]-B+h)}}},zt=e=>{const n=b(e,.8,.88),s=b(e,.65,.702),c=b(e,.28,.294),a=$(e,.8,.88),o=R(e,1,1.1),l=b(e,0,0),f=y(e,3.8,4.104),u=[{formItem:"switch",id:"roaringBowstrings",name:"roaringBowstrings",text:"Roaring Bowstrings",title:"Roaring Bowstrings",content:'When "Roaring Bowstrings" is active, the ATK of all allies increases by '.concat(A(n*100),'%.\n    ::BR::\n    When "Roaring Bowstrings" is active, Yukong deals 30% more DMG to enemies.')},{formItem:"switch",id:"ultBuff",name:"ultBuff",text:"Ult buff",title:"Ult: Diving Kestrel",content:'If "Roaring Bowstrings" is active on Yukong when her Ultimate is used, additionally increases all allies\' CRIT Rate by '.concat(A(c*100),"% and CRIT DMG by ").concat(A(s*100),"%. At the same time, deals Imaginary DMG equal to ").concat(A(f*100),"% of Yukong's ATK to a single enemy.")},{formItem:"switch",id:"initialSpeedBuff",name:"initialSpeedBuff",text:"E1 Initial speed buff",title:"E1 Initial speed buff",content:"E1: At the start of battle, increases the SPD of all allies by 10% for 2 turn(s).",disabled:e<1}];return{content:()=>u,defaults:()=>({roaringBowstringsActive:!0,ultBuff:!0,initialSpeedBuff:!0}),precomputeEffects:r=>{const i=r.characterConditionals,d=Object.assign({},E);return d[t.ATK_P]+=i.roaringBowstrings?n:0,d[t.CR]+=i.ultBuff&&i.roaringBowstrings?c:0,d[t.CD]+=i.ultBuff&&i.roaringBowstrings?s:0,d[t.SPD_P]+=e>=1&&i.initialSpeedBuff?.1:0,d.BASIC_SCALING+=o,d.BASIC_SCALING+=a,d.SKILL_SCALING+=l,d.ULT_SCALING+=f,d.ELEMENTAL_DMG+=.12,d.ELEMENTAL_DMG+=e>=4&&i.roaringBowstrings?.3:0,d},calculateBaseMultis:r=>{const i=r.x;i.BASIC_DMG+=i.BASIC_SCALING*i[t.ATK],i.SKILL_DMG+=i.SKILL_SCALING*i[t.ATK],i.ULT_DMG+=i.ULT_SCALING*i[t.ATK]}}};const jt={1001:_t,1002:mt,1003:kt,1004:Wt,1005:Tt,1006:wt,1008:lt,1009:ct,1013:Bt,1101:ft,1102:Kt,1103:Nt,1104:At,1105:Gt,1106:Rt,1107:dt,1108:xt,1109:pt,1110:yt,1111:Lt,1112:Ft,1201:vt,1202:Ht,1203:bt,1204:Et,1205:ut,1206:Ot,1207:zt,1208:ht,1209:$t,1210:Dt,1211:rt,1212:Pe,1213:It,1214:Vt,1215:gt,1217:Ct,1302:it,1303:Pt,1305:St,1306:Ut,1307:ot,1312:Mt,8001:xe,8002:xe,8003:ve,8004:ve},qt={get:e=>{const n=jt[e.characterId];return n(e.characterEidolon)}},g=(e,n)=>{const s=n.params[e];let c=n.desc;return s&&n.desc.match(/#(\d+)\[\w+\]/g).forEach(a=>{a.match(/#(\d+)/).forEach((o,l)=>{if(l>0){let f=s[parseInt(o)-1];f<1&&(f=Yt(f*100)),c=c.replace(a,f.toString())}})}),c};function Yt(e,n=5){const s=Math.pow(10,n);return Math.round(e*s)/s}var Qt=e=>{const n=[.1,.12,.14,.16,.18],s={id:"20014",skill:"Alliance",desc:"When the wearer defeats an enemy, increases SPD by #1[i]% for #2[i] turn(s).",params:[[.1,2],[.12,2],[.14,2],[.16,2],[.18,2]],properties:[[],[],[],[],[]]},c=[{lc:!0,id:"defeatedEnemySpdBuff",name:"defeatedEnemySpdBuff",formItem:"switch",text:"Defeated enemy SPD buff",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({defeatedEnemySpdBuff:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a[t.SPD_P]+=l.defeatedEnemySpdBuff?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},Jt=e=>{const n=[.16,.2,.24,.28,.32],s={id:"20003",skill:"Stasis",desc:"If the wearer's current HP is lower than #2[i]%, increases their DEF by a further #3[i]%.",params:[[.16,.5,.16],[.2,.5,.2],[.24,.5,.24],[.28,.5,.28],[.32,.5,.32]],properties:[[{type:"DefenceAddedRatio",value:.16}],[{type:"DefenceAddedRatio",value:.2}],[{type:"DefenceAddedRatio",value:.24}],[{type:"DefenceAddedRatio",value:.28}],[{type:"DefenceAddedRatio",value:.32}]]},c=[{lc:!0,id:"hp50DefBuff",name:"hp50DefBuff",formItem:"switch",text:"HP < 50% DEF buff",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({hp50DefBuff:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a[t.DEF_P]+=l.hp50DefBuff?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},Xt=e=>{const n=[.0036,.0042,.0048,.0054,.006],s={id:"23018",skill:"A Knight's Pilgrimage",desc:"When the wearer uses Ultimate, increases the wearer's Ultimate DMG based on their Max Energy. Each point of Energy increases the Ultimate DMG by #2[f2]%, up to #3[i] points of Energy.",params:[[.36,.0036,180],[.42,.0042,180],[.48,.0048,180],[.54,.0054,180],[.6,.006,180]],properties:[[{type:"CriticalDamageBase",value:.36}],[{type:"CriticalDamageBase",value:.42}],[{type:"CriticalDamageBase",value:.48}],[{type:"CriticalDamageBase",value:.54}],[{type:"CriticalDamageBase",value:.6}]]},c=[{lc:!0,id:"maxEnergyUltDmgStacks",name:"maxEnergyUltDmgStacks",formItem:"slider",text:"Max Energy",title:s.skill,content:g(e,s),min:0,max:180}];return{content:()=>c,defaults:()=>({maxEnergyUltDmgStacks:180}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a.ULT_BOOST+=l.maxEnergyUltDmgStacks*n[e]},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},Zt=e=>{const n=[.12,.15,.18,.21,.24],s={id:"20000",skill:"Crisis",desc:"At the start of the battle, the wearer's CRIT Rate increases by #1[i]% for #2[i] turn(s).",params:[[.12,3],[.15,3],[.18,3],[.21,3],[.24,3]],properties:[[],[],[],[],[]]},c=[{lc:!0,id:"critBuff",name:"critBuff",formItem:"switch",text:"Initial CR buff",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({critBuff:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a[t.CR]+=l.critBuff?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},ea=e=>{const n=[.2,.25,.3,.35,.4],s={id:"21012",skill:"Spare No Effort",desc:"The wearer also deals an extra #2[i]% of DMG to enemies whose current HP percentage is equal to or higher than the wearer's current HP percentage.",params:[[.2,.2],[.25,.25],[.3,.3],[.35,.35],[.4,.4]],properties:[[{type:"AllDamageTypeAddedRatio",value:.2}],[{type:"AllDamageTypeAddedRatio",value:.25}],[{type:"AllDamageTypeAddedRatio",value:.3}],[{type:"AllDamageTypeAddedRatio",value:.35}],[{type:"AllDamageTypeAddedRatio",value:.4}]]},c=[{lc:!0,id:"enemyHpHigherDmgBoost",name:"enemyHpHigherDmgBoost",formItem:"switch",text:"Enemy HP % higher DMG boost",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({enemyHpHigherDmgBoost:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a.ELEMENTAL_DMG+=n[e],a.ELEMENTAL_DMG+=l.enemyHpHigherDmgBoost?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}};const Te={id:"23020",skill:"Mental Training",desc:"For every debuff on the enemy target, the wearer's CRIT DMG dealt against this target increases by #2[i]%, stacking up to #3[i] times.",params:[[.2,.08,3,.36,.24,2],[.23,.09,3,.42,.28,2],[.26,.1,3,.48,.32,2],[.29,.11,3,.54,.36,2],[.32,.12,3,.6,.4,2]],properties:[[{type:"CriticalDamageBase",value:.2}],[{type:"CriticalDamageBase",value:.23}],[{type:"CriticalDamageBase",value:.26}],[{type:"CriticalDamageBase",value:.29}],[{type:"CriticalDamageBase",value:.32}]]},Ke={...Te,desc:"When using Ultimate to attack the enemy target, the wearer receives the Disputation effect, which increases DMG dealt by #4[i]% and enables their follow-up attacks to ignore #5[i]% of the target's DEF. This effect lasts for #6[i] turns."},ta=e=>{const n=[.08,.09,.1,.11,.12],s=[.36,.42,.48,.54,.6],c=[.24,.28,.32,.36,.4],a=[{lc:!0,formItem:"slider",id:"debuffCdStacks",name:"debuffCdStacks",text:"Debuff cd stacks",title:Te.skill,content:g(e,Te),min:0,max:3},{lc:!0,formItem:"switch",id:"postUltBuff",name:"postUltBuff",text:"Disputation ult cd / fua def pen buff",title:Ke.skill,content:g(e,Ke)}];return{content:()=>a,defaults:()=>({debuffCdStacks:3,postUltBuff:!0}),precomputeEffects:(o,l)=>{const f=l.lightConeConditionals;o[t.CD]+=f.debuffCdStacks*n[e],o.ELEMENTAL_DMG+=f.postUltBuff?s[e]:0,o.FUA_DEF_PEN+=f.postUltBuff?c[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}};var aa=e=>{const n=[.18,.21,.24,.27,.3],s=[.48,.56,.64,.72,.8],c={id:"23010",skill:"Long Night",desc:"Increases the wearer's CRIT DMG by #1[i]%. Increases the wearer's Skill and Ultimate DMG by #2[i]%.",params:[[.36,.18,.48],[.42,.21,.56],[.48,.24,.64],[.54,.27,.72],[.6,.3,.8]],properties:[[{type:"CriticalDamageBase",value:.36}],[{type:"CriticalDamageBase",value:.42}],[{type:"CriticalDamageBase",value:.48}],[{type:"CriticalDamageBase",value:.54}],[{type:"CriticalDamageBase",value:.6}]]},a={...c,desc:"After the wearer uses their Skill or Ultimate, they gain Somnus Corpus. Upon triggering a follow-up attack, Somnus Corpus will be consumed and the follow-up attack DMG increases by #3[i]%."},o=[{lc:!0,id:"fuaDmgBoost",name:"fuaDmgBoost",formItem:"slider",text:"FUA DMG Boost",title:c.skill,content:g(e,a),min:0,max:.8}];return{content:()=>o,defaults:()=>({fuaDmgBoost:!0}),precomputeEffects:(l,f)=>{const u=f.lightConeConditionals;l.SKILL_BOOST+=n[e],l.ULT_BOOST+=n[e],l.FUA_BOOST+=u.fuaDmgBoost?s[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},na=()=>({content:()=>[],defaults:()=>({}),precomputeEffects:()=>{},calculatePassives:()=>{},calculateBaseMultis:()=>{}}),sa=e=>{const n=[.18,.21,.24,.27,.3],s=[.06,.07,.08,.09,.1],c={id:"23015",skill:"Defiant Till Death",desc:"When the wearer uses their Basic ATK, they will gain 1 stack of Dragon's Call, lasting for #2[i] turns. Each stack of Dragon's Call increases the wearer's ATK by #4[i]% and Energy Regeneration Rate by #5[f1]%. Dragon's Call can be stacked up to #3[i] times.",params:[[.18,2,2,.18,.06],[.21,2,2,.21,.07],[.24,2,2,.24,.08],[.27,2,2,.27,.09],[.3,2,2,.3,.1]],properties:[[{type:"CriticalChanceBase",value:.18}],[{type:"CriticalChanceBase",value:.21}],[{type:"CriticalChanceBase",value:.24}],[{type:"CriticalChanceBase",value:.27}],[{type:"CriticalChanceBase",value:.3}]]},a=[{lc:!0,id:"dragonsCallStacks",name:"dragonsCallStacks",formItem:"slider",text:"Dragon's Call stacks",title:c.skill,content:g(e,c),min:0,max:2}];return{content:()=>a,defaults:()=>({dragonsCallStacks:2}),precomputeEffects:(o,l)=>{const f=l.lightConeConditionals;o[t.ATK_P]+=f.dragonsCallStacks*n[e],o[t.ERR]+=f.dragonsCallStacks*s[e]},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},ia=e=>{const n=[.1,.12,.14,.16,.18],s=[.3,.35,.4,.45,.5],c={id:"23003",skill:"Heir",desc:"When the wearer uses their Skill, the next ally taking action (except the wearer) deals #2[i]% more DMG for #3[i] turn(s).",params:[[.1,.3,1],[.12,.35,1],[.14,.4,1],[.16,.45,1],[.18,.5,1]],properties:[[{type:"SPRatioBase",value:.1}],[{type:"SPRatioBase",value:.12}],[{type:"SPRatioBase",value:.14}],[{type:"SPRatioBase",value:.16}],[{type:"SPRatioBase",value:.18}]]},a=[{lc:!0,id:"postSkillDmgBuff",name:"postSkillDmgBuff",formItem:"switch",text:"Post skill DMG buff",title:c.skill,content:g(e,c)}];return{content:()=>a,defaults:()=>({postSkillDmgBuff:!0}),precomputeEffects:(o,l)=>{const f=l.lightConeConditionals;o[t.ERR]+=n[e],o.ELEMENTAL_DMG+=f.postSkillDmgBuff?s[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},la=e=>{const n=[.1,.125,.15,.175,.2],s=[.12,.15,.18,.21,.24],c={id:"21032",skill:"Secret",desc:"\n      At the start of the battle and whenever the wearer's turn begins, one of the following effects is applied randomly:\n      ::BR::\n      All allies' ATK increases by #1[i]%\n      ::BR::\n      All allies' CRIT DMG increases by #2[i]%\n      ::BR::\n      All allies' Energy Regeneration Rate increases by #3[i]%.\n      ::BR::\n      The applied effect cannot be identical to the last effect applied, and will replace the previous effect. The applied effect will be removed when the wearer has been knocked down. Effects of the similar type cannot be stacked.",params:[[.1,.12,.06],[.125,.15,.075],[.15,.18,.09],[.175,.21,.105],[.2,.24,.12]],properties:[[],[],[],[],[]]},a=[{lc:!0,id:"atkBuffActive",name:"atkBuffActive",formItem:"switch",text:"Atk buff active",title:c.skill,content:g(e,c)},{lc:!0,id:"cdBuffActive",name:"cdBuffActive",formItem:"switch",text:"CD buff active",title:c.skill,content:g(e,c)}];return{content:()=>a,defaults:()=>({atkBuffActive:!0,cdBuffActive:!1}),precomputeEffects:(o,l)=>{const f=l.lightConeConditionals;o[t.ATK_P]+=f.atkBuffActive?n[e]:0,o[t.CD]+=f.cdBuffActive?s[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},ca=e=>{const n=[.08,.09,.1,.11,.12],s={id:"20005",skill:"Concerted",desc:"After entering battle, increases the ATK of all allies by #1[i]%. Effects of the same type cannot stack.",params:[[.08],[.09],[.1],[.11],[.12]],properties:[[],[],[],[],[]]},c=[{lc:!0,id:"inBattleAtkBuff",name:"inBattleAtkBuff",formItem:"switch",text:"Initial ATK buff",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({inBattleAtkBuff:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a[t.ATK_P]+=l.inBattleAtkBuff?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},ra=e=>{const n=[.2,.25,.3,.35,.4],s={id:"20002",skill:"Havoc",desc:"Increases the wearer's Basic ATK and Skill DMG by #1[i]%.",params:[[.2],[.25],[.3],[.35],[.4]],properties:[[],[],[],[],[]]},c=[{lc:!0,id:"basicSkillDmgBuff",name:"basicSkillDmgBuff",formItem:"switch",text:"Basic/Skill DMG buff",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({basicSkillDmgBuff:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a.BASIC_BOOST+=l.basicSkillDmgBuff?n[e]:0,a.SKILL_BOOST+=l.basicSkillDmgBuff?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},oa=e=>{const n=[.12,.15,.18,.21,.24],s={id:"20001",skill:"Prosperity",desc:"When the wearer uses their Skill or Ultimate, their Outgoing Healing increases by #1[i]%.",params:[[.12],[.15],[.18],[.21],[.24]],properties:[[],[],[],[],[]]},c=[{lc:!0,id:"healingBuff",name:"healingBuff",formItem:"switch",text:"Healing buff",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({healingBuff:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a[t.OHB]+=l.healingBuff?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},ua=e=>{const n=[.08,.1,.12,.14,.16],s=[.2,.25,.3,.35,.4],c={id:"24001",skill:"Chase",desc:"Increases the wearer's CRIT rate against enemies with HP less than or equal to #2[i]% by an extra #3[i]%.",params:[[.08,.5,.08,.2,2],[.1,.5,.1,.25,2],[.12,.5,.12,.3,2],[.14,.5,.14,.35,2],[.16,.5,.16,.4,2]],properties:[[{type:"CriticalChanceBase",value:.08}],[{type:"CriticalChanceBase",value:.1}],[{type:"CriticalChanceBase",value:.12}],[{type:"CriticalChanceBase",value:.14}],[{type:"CriticalChanceBase",value:.16}]]},a={...c,desc:"When the wearer defeats an enemy, their ATK is increased by #4[i]% for #5[i] turn(s)."},o=[{lc:!0,id:"enemyHp50CrBoost",name:"enemyHp50CrBoost",formItem:"switch",text:"Enemy HP ≤ 50% CR buff",title:c.skill,content:g(e,c)},{lc:!0,id:"enemyDefeatedAtkBuff",name:"enemyDefeatedAtkBuff",formItem:"switch",text:"Enemy defeated ATK buff",title:c.skill,content:g(e,a)}];return{content:()=>o,defaults:()=>({enemyHp50CrBoost:!0,enemyDefeatedAtkBuff:!0}),precomputeEffects:(l,f)=>{const u=f.lightConeConditionals;l[t.CR]+=u.enemyHp50CrBoost&&f.enemyHpPercent<=.5?n[e]:0,l[t.ATK_P]+=u.enemyDefeatedAtkBuff?s[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},fa=()=>({content:()=>[],defaults:()=>({}),precomputeEffects:()=>{},calculatePassives:()=>{},calculateBaseMultis:()=>{}}),da=e=>{const n=[.24,.3,.36,.42,.48],s={id:"20007",skill:"War Cry",desc:"When the wearer defeats an enemy, increases ATK by #1[i]% for #2[i] turn(s).",params:[[.24,3],[.3,3],[.36,3],[.42,3],[.48,3]],properties:[[],[],[],[],[]]},c=[{lc:!0,id:"defeatedEnemyAtkBuff",name:"defeatedEnemyAtkBuff",formItem:"switch",text:"Defeated enemy ATK buff",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({defeatedEnemyAtkBuff:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a[t.ATK_P]+=l.defeatedEnemyAtkBuff?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},ma=e=>{const n=[.28,.35,.42,.49,.56],s={id:"20006",skill:"Learned",desc:"Increases the wearer's Ultimate DMG by #1[i]%.",params:[[.28],[.35],[.42],[.49],[.56]],properties:[[],[],[],[],[]]},c=[{lc:!0,id:"ultDmgBuff",name:"ultDmgBuff",formItem:"switch",text:"Ult DMG buff",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({ultDmgBuff:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a.ULT_BOOST+=l.ultDmgBuff?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},Sa=e=>{const n=[.08,.09,.1,.11,.12],s={id:"21002",skill:"At This Very Moment",desc:"After entering battle, increases All-Type RES of all allies by #2[i]%. Effects of the same type cannot stack.",params:[[.16,.08],[.18,.09],[.2,.1],[.22,.11],[.24,.12]],properties:[[{type:"DefenceAddedRatio",value:.16}],[{type:"DefenceAddedRatio",value:.18}],[{type:"DefenceAddedRatio",value:.2}],[{type:"DefenceAddedRatio",value:.22}],[{type:"DefenceAddedRatio",value:.24}]]},c=[{lc:!0,id:"dmgResBuff",name:"dmgResBuff",formItem:"switch",text:"Dmg RES buff",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({dmgResBuff:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a.DMG_RED_MULTI*=l.dmgResBuff?1-n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},ha=()=>({content:()=>[],defaults:()=>({}),precomputeEffects:()=>{},calculatePassives:()=>{},calculateBaseMultis:()=>{}}),Aa=e=>{const n=[.1,.11,.12,.13,.14],s=[.28,.35,.42,.49,.56],c={id:"23021",skill:"Capriciousness",desc:"At the start of the battle, the wearer gains Mask, lasting for #6[i] turn(s). While the wearer has Mask, the wearer's allies have their CRIT Rate increased by #5[i]% and their CRIT DMG increased by #2[i]%. For every 1 Skill Point the wearer recovers (including Skill Points that exceed the limit), they gain 1 stack of Radiant Flame. And when the wearer has #4[i] stacks of Radiant Flame, all the stacks are removed, and they gain Mask for #3[i] turn(s).",params:[[.32,.28,4,4,.1,3],[.39,.35,4,4,.11,3],[.46,.42,4,4,.12,3],[.53,.49,4,4,.13,3],[.6,.56,4,4,.14,3]],properties:[[{type:"CriticalDamageBase",value:.32}],[{type:"CriticalDamageBase",value:.39}],[{type:"CriticalDamageBase",value:.46}],[{type:"CriticalDamageBase",value:.53}],[{type:"CriticalDamageBase",value:.6}]]},a=[{lc:!0,id:"maskActive",name:"maskActive",formItem:"switch",text:"Mask active",title:c.skill,content:g(e,c)}];return{content:()=>a,defaults:()=>({maskActive:!0}),precomputeEffects:(o,l)=>{const f=l.lightConeConditionals;o[t.CR]+=f.maskActive?n[e]:0,o[t.CD]+=f.maskActive?s[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},Da=e=>{const n=[12,14,16,18,20],s={id:"23008",skill:"Thorns",desc:"After the wearer uses an attack, for each different enemy target the wearer hits, regenerates #3[f1] Energy. Each attack can regenerate Energy up to #4[i] time(s) this way. After the wearer uses their Ultimate, all allies gain #2[i] SPD for 1 turn.",params:[[.24,12,3,3],[.28,14,3.5,3],[.32,16,4,3],[.36,18,4.5,3],[.4,20,5,3]],properties:[[{type:"AttackAddedRatio",value:.24}],[{type:"AttackAddedRatio",value:.28}],[{type:"AttackAddedRatio",value:.32}],[{type:"AttackAddedRatio",value:.36}],[{type:"AttackAddedRatio",value:.4}]]},c=[{lc:!0,id:"postUltSpdBuff",name:"postUltSpdBuff",formItem:"switch",text:"Post ult SPD buff",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({postUltSpdBuff:!1}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a[t.SPD]+=l.postUltSpdBuff?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},ga=e=>{const n=[.24,.3,.36,.42,.48];return{content:()=>[],defaults:()=>({}),precomputeEffects:s=>{s.DOT_BOOST+=n[e]},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},Ba=e=>{const n=[.16,.2,.24,.28,.32],s={id:"21022",skill:"Semibreve Rest",desc:"Increases the wearer's DMG to enemies afflicted with Shock or Wind Shear by #2[i]%. This also applies to DoT.",params:[[.16,.16],[.2,.2],[.24,.24],[.28,.28],[.32,.32]],properties:[[{type:"BreakDamageAddedRatioBase",value:.16}],[{type:"BreakDamageAddedRatioBase",value:.2}],[{type:"BreakDamageAddedRatioBase",value:.24}],[{type:"BreakDamageAddedRatioBase",value:.28}],[{type:"BreakDamageAddedRatioBase",value:.32}]]},c=[{lc:!0,id:"enemyShockWindShear",name:"enemyShockWindShear",formItem:"switch",text:"Enemy shocked / wind sheared",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({enemyShockWindShear:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a.ELEMENTAL_DMG+=l.enemyShockWindShear?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},ka=()=>({content:()=>[],defaults:()=>({name:!0}),precomputeEffects:()=>{},calculatePassives:()=>{},calculateBaseMultis:()=>{}}),pa=e=>{const n=[.24,.3,.36,.42,.48],s={id:"21020",skill:"Each Now Has a Role to Play",desc:"When the wearer defeats an enemy, the wearer's CRIT DMG increases by #2[i]% for #3[i] turn(s).",params:[[.16,.24,3],[.2,.3,3],[.24,.36,3],[.28,.42,3],[.32,.48,3]],properties:[[{type:"AttackAddedRatio",value:.16}],[{type:"AttackAddedRatio",value:.2}],[{type:"AttackAddedRatio",value:.24}],[{type:"AttackAddedRatio",value:.28}],[{type:"AttackAddedRatio",value:.32}]]},c=[{lc:!0,id:"defeatedEnemyCdBuff",name:"defeatedEnemyCdBuff",formItem:"switch",text:"Defeated enemy CD buff",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({defeatedEnemyCdBuff:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a[t.CD]+=l.defeatedEnemyCdBuff?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},Ca=e=>{const n=[.12,.15,.18,.21,.24],s={id:"21001",skill:"Toiler",desc:"For every debuff the target enemy has, the DMG dealt by the wearer increases by #1[i]%, stacking up to #2[i] time(s). This effect also applies to DoT.",params:[[.12,3],[.15,3],[.18,3],[.21,3],[.24,3]],properties:[[],[],[],[],[]]},c=[{lc:!0,id:"debuffStacksDmgIncrease",name:"debuffStacksDmgIncrease",formItem:"slider",text:"Debuff stacks DMG increase",title:s.skill,content:g(e,s),min:0,max:3}];return{content:()=>c,defaults:()=>({debuffStacksDmgIncrease:3}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a.ELEMENTAL_DMG+=l.debuffStacksDmgIncrease*n[e]},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},Ia=e=>{const n=[.16,.19,.22,.25,.28],s={id:"22001",skill:"I'm Not Afraid!",desc:"When the wearer uses their Skill, increases Outgoing Healing by #2[i]%, lasting for #3[i] turn(s).",params:[[.08,.16,2],[.09,.19,2],[.1,.22,2],[.11,.25,2],[.12,.28,2]],properties:[[{type:"HPAddedRatio",value:.08}],[{type:"HPAddedRatio",value:.09}],[{type:"HPAddedRatio",value:.1}],[{type:"HPAddedRatio",value:.11}],[{type:"HPAddedRatio",value:.12}]]},c=[{lc:!0,id:"postSkillHealBuff",name:"postSkillHealBuff",formItem:"switch",text:"Post skill heal buff",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({postSkillHealBuff:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a[t.OHB]+=l.postSkillHealBuff?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},Ea=e=>{const n=[.6,.75,.9,1.05,1.2],s={id:"20018",skill:"Mechanism",desc:"After using Skill, the wearer's next Basic ATK deals Additional DMG equal to #1[i]% of ATK to the target enemy.",params:[[.6],[.75],[.9],[1.05],[1.2]],properties:[[],[],[],[],[]]},c=[{lc:!0,id:"basicAtkBuff",name:"basicAtkBuff",formItem:"switch",text:"Basic ATK extra DMG",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({basicAtkBuff:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a.BASIC_SCALING+=l.basicAtkBuff?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},Ta=e=>{const n=[.12,.14,.16,.18,.2],s=[.12,.14,.16,.18,.2],c={id:"23007",skill:"Mirage of Reality",desc:"When the wearer deals DMG to an enemy that currently has #4[i] or more debuffs, increases the wearer's CRIT Rate by #5[i]%.",params:[[.24,1,.12,3,.12],[.28,1,.14,3,.14],[.32,1,.16,3,.16],[.36,1,.18,3,.18],[.4,1,.2,3,.2]],properties:[[{type:"StatusProbabilityBase",value:.24}],[{type:"StatusProbabilityBase",value:.28}],[{type:"StatusProbabilityBase",value:.32}],[{type:"StatusProbabilityBase",value:.36}],[{type:"StatusProbabilityBase",value:.4}]]},a={...c,desc:"After the wearer uses their Basic ATK, Skill, or Ultimate, there is a chance to implant Aether Code on a random hit target that does not yet have it. Targets with Aether Code receive #3[i]% increased DMG for 1 turn."},o=[{lc:!0,id:"enemy3DebuffsCrBoost",name:"enemy3DebuffsCrBoost",formItem:"switch",text:"Enemy ≤ 3 debuffs CR buff",title:c.skill,content:g(e,c)},{lc:!0,id:"targetCodeDebuff",name:"targetCodeDebuff",formItem:"switch",text:"Target Aether Code debuff",title:c.skill,content:g(e,a)}];return{content:()=>o,defaults:()=>({enemy3DebuffsCrBoost:!0,targetCodeDebuff:!0}),precomputeEffects:(l,f)=>{const u=f.lightConeConditionals;l[t.CR]+=u.enemy3DebuffsCrBoost?n[e]:0,l.ELEMENTAL_DMG+=u.targetCodeDebuff?s[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},La=e=>{const n=[.24,.28,.32,.36,.4],s={id:"23004",skill:"Inheritor",desc:"Increases the wearer's DMG to debuffed enemies by #1[i]%.",params:[[.24,.18,.24],[.28,.21,.28],[.32,.24,.32],[.36,.27,.36],[.4,.3,.4]],properties:[[],[],[],[],[]]},c={...s,desc:"When the wearer uses their Skill, the Effect Hit Rate for this attack increases by #2[i]%, and ATK increases by #3[i]%."},a=[{lc:!0,id:"enemyDebuffedDmgBoost",name:"enemyDebuffedDmgBoost",formItem:"switch",text:"Enemy debuffed DMG boost",title:s.skill,content:g(e,s)},{lc:!0,id:"skillAtkBoost",name:"skillAtkBoost",formItem:"switch",text:"Skill ATK boost (not implemented)",title:s.skill,content:g(e,c)}];return{content:()=>a,defaults:()=>({enemyDebuffedDmgBoost:!0,skillAtkBoost:!1}),precomputeEffects:(o,l)=>{const f=l.lightConeConditionals;o.ELEMENTAL_DMG+=f.enemyDebuffedDmgBoost?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},ba=e=>{const n=[.06,.07,.08,.09,.1],s=[.12,.14,.16,.18,.2],c={id:"23001",skill:"Flowers and Butterflies",desc:"While the wearer is in battle, for every #2[i] SPD that exceeds 100, the DMG of the wearer's Basic ATK and Skill is increased by #3[i]% and the CRIT DMG of their Ultimate is increased by #4[i]%. This effect can stack up to #5[i] time(s).",params:[[.18,10,.06,.12,6],[.21,10,.07,.14,6],[.24,10,.08,.16,6],[.27,10,.09,.18,6],[.3,10,.1,.2,6]],properties:[[{type:"CriticalChanceBase",value:.18}],[{type:"CriticalChanceBase",value:.21}],[{type:"CriticalChanceBase",value:.24}],[{type:"CriticalChanceBase",value:.27}],[{type:"CriticalChanceBase",value:.3}]]},a=[{lc:!0,id:"spdScalingBuffs",name:"spdScalingBuffs",formItem:"switch",text:"Speed scaling buffs enabled",title:c.skill,content:g(e,c)}];return{content:()=>a,defaults:()=>({spdScalingBuffs:!0}),precomputeEffects:()=>{},calculatePassives:()=>{},calculateBaseMultis:(o,l)=>{const f=l.lightConeConditionals,u=o.x,r=Math.max(0,Math.min(6,Math.floor((u[t.SPD]-100)/10)));u.BASIC_BOOST+=f.spdScalingBuffs?r*n[e]:0,u.SKILL_BOOST+=f.spdScalingBuffs?r*n[e]:0,u.ULT_CD_BOOST+=f.spdScalingBuffs?r*s[e]:0}}},ya=e=>{const n=[.14,.165,.19,.215,.24],s=[.12,.14,.16,.18,.2],c={id:"23014",skill:"With This Evening Jade",desc:"When an ally (excluding the wearer) gets attacked or loses HP, the wearer gains 1 stack of Eclipse, up to a max of #2[i] stack(s). Each stack of Eclipse increases the DMG of the wearer's next attack by #3[f1]%.",params:[[.2,3,.14,.12],[.23,3,.165,.14],[.26,3,.19,.16],[.29,3,.215,.18],[.32,3,.24,.2]],properties:[[{type:"CriticalDamageBase",value:.2}],[{type:"CriticalDamageBase",value:.23}],[{type:"CriticalDamageBase",value:.26}],[{type:"CriticalDamageBase",value:.29}],[{type:"CriticalDamageBase",value:.32}]]},a={...c,desc:"When #2[i] stack(s) are reached, additionally enables that attack to ignore #4[i]% of the enemy's DEF. This effect will be removed after the wearer uses an attack."},o=[{lc:!0,id:"eclipseStacks",name:"eclipseStacks",formItem:"slider",text:"Eclipse stacks",title:c.skill,content:g(e,c),min:0,max:3},{lc:!0,id:"maxStackDefPen",name:"maxStackDefPen",formItem:"switch",text:"Max stack DEF pen",title:c.skill,content:g(e,a)}];return{content:()=>o,defaults:()=>({eclipseStacks:3,maxStackDefPen:!0}),precomputeEffects:(l,f)=>{const u=f.lightConeConditionals;l.ELEMENTAL_DMG+=u.eclipseStacks*n[e],l.DEF_SHRED+=u.maxStackDefPen&&u.eclipseStacks==3?s[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},_a=e=>{const n=[.16,.18,.2,.22,.24];return{content:()=>[],defaults:()=>({}),precomputeEffects:s=>{s.DMG_RED_MULTI*=1-n[e]},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},Ma=e=>{const n=[.24,.3,.36,.42,.48],s={id:"20011",skill:"Pursuit",desc:"Increases DMG dealt from its wearer to Slowed enemies by #1[i]%.",params:[[.24],[.3],[.36],[.42],[.48]],properties:[[],[],[],[],[]]},c=[{lc:!0,id:"enemySlowedDmgBuff",name:"enemySlowedDmgBuff",formItem:"switch",text:"Enemy slowed DMG buff",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({enemySlowedDmgBuff:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a.ELEMENTAL_DMG+=l.enemySlowedDmgBuff?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},Ga=e=>{const n=[.32,.4,.48,.56,.64],s={id:"21013",skill:"The Power of Sound",desc:"The wearer regenerates #2[i] Energy immediately upon entering battle, and increases Ultimate DMG by #1[i]%.",params:[[.32,20],[.4,23],[.48,26],[.56,29],[.64,32]],properties:[[],[],[],[],[]]},c=[{lc:!0,id:"ultDmgBuff",name:"ultDmgBuff",formItem:"switch",text:"Ult DMG buff",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({ultDmgBuff:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a.ULT_BOOST+=l.ultDmgBuff?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},Ra=e=>{const n=[12,14,16,18,20],s={id:"20019",skill:"Family",desc:"Upon entering battle, increases SPD of all allies by #1[i] points for #2[i] turn(s).",params:[[12,1],[14,1],[16,1],[18,1],[20,1]],properties:[[],[],[],[],[]]},c=[{lc:!0,id:"initialSpdBuff",name:"initialSpdBuff",formItem:"switch",text:"Initial SPD buff",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({initialSpdBuff:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a[t.SPD]+=l.initialSpdBuff?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},va=()=>({content:()=>[],defaults:()=>({}),precomputeEffects:()=>{},calculatePassives:()=>{},calculateBaseMultis:()=>{}}),Pa=()=>({content:()=>[],defaults:()=>({}),precomputeEffects:()=>{},calculatePassives:()=>{},calculateBaseMultis:()=>{}}),xa=e=>{const n=[.24,.28,.32,.36,.4],s={id:"23005",skill:"Verdict",desc:"Increases the chance for the wearer to be attacked by enemies. When the wearer is attacked, increase their DEF by an extra #3[i]% until the end of the wearer's turn.",params:[[2,.24,.24,.24],[2,.28,.28,.28],[2,.32,.32,.32],[2,.36,.36,.36],[2,.4,.4,.4]],properties:[[{type:"DefenceAddedRatio",value:.24},{type:"StatusProbabilityBase",value:.24}],[{type:"DefenceAddedRatio",value:.28},{type:"StatusProbabilityBase",value:.28}],[{type:"DefenceAddedRatio",value:.32},{type:"StatusProbabilityBase",value:.32}],[{type:"DefenceAddedRatio",value:.36},{type:"StatusProbabilityBase",value:.36}],[{type:"DefenceAddedRatio",value:.4},{type:"StatusProbabilityBase",value:.4}]]},c=[{lc:!0,id:"selfAttackedDefBuff",name:"selfAttackedDefBuff",formItem:"switch",text:"Self attacked DEF buff",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({selfAttackedDefBuff:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a[t.DEF_P]+=l.selfAttackedDefBuff?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},Ka=()=>({content:()=>[],defaults:()=>({}),precomputeEffects:()=>{},calculatePassives:()=>{},calculateBaseMultis:()=>{}}),Na=e=>{const n=[.12,.15,.18,.21,.24],s={id:"20016",skill:"Legion",desc:"If the wearer's current HP is lower than #1[i]%, CRIT Rate increases by #2[i]%.",params:[[.8,.12],[.8,.15],[.8,.18],[.8,.21],[.8,.24]],properties:[[],[],[],[],[]]},c=[{lc:!0,id:"selfHp80CrBuff",name:"selfHp80CrBuff",formItem:"switch",text:"Self HP < 80% CR buff",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({selfHp80CrBuff:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a[t.CR]+=l.selfHp80CrBuff?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},wa=e=>{const n=[.024,.028,.032,.036,.04],s={id:"23017",skill:"Deep, Deep Breaths",desc:"When the wearer provides healing for an ally, increases the healed ally's ATK by #3[f1]%. This effect can stack up to #4[i] times and lasts for #5[i] turn(s).",params:[[.12,.1,.024,5,2],[.14,.11,.028,5,2],[.16,.12,.032,5,2],[.18,.13,.036,5,2],[.2,.14,.04,5,2]],properties:[[{type:"SPRatioBase",value:.12}],[{type:"SPRatioBase",value:.14}],[{type:"SPRatioBase",value:.16}],[{type:"SPRatioBase",value:.18}],[{type:"SPRatioBase",value:.2}]]},c=[{lc:!0,id:"atkBuffStacks",name:"atkBuffStacks",formItem:"slider",text:"ATK buff stacks",title:s.skill,content:g(e,s),min:0,max:5}];return{content:()=>c,defaults:()=>({atkBuffStacks:5}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a[t.ATK_P]+=l.atkBuffStacks*n[e]},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},Ua=e=>{const n=[.09,.105,.12,.135,.15],s=[.3,.35,.4,.45,.5],c={id:"23000",skill:"Meteor Swarm",desc:"For every enemy on the field, increases the wearer's ATK by #2[f1]%, up to 5 stacks.",params:[[.3,.09],[.35,.105],[.4,.12],[.45,.135],[.5,.15]],properties:[[],[],[],[],[]]},a={...c,desc:"When an enemy is inflicted with Weakness Break, the DMG dealt by the wearer increases by #1[i]% for 1 turn."},o=[{lc:!0,id:"enemyCountAtkBuff",name:"enemyCountAtkBuff",formItem:"switch",text:"Enemy count atk buff",title:c.skill,content:g(e,c)},{lc:!0,id:"enemyWeaknessBreakDmgBuff",name:"enemyWeaknessBreakDmgBuff",formItem:"switch",text:"Enemy weakness break dmg buff",title:c.skill,content:g(e,a)}];return{content:()=>o,defaults:()=>({enemyCountAtkBuff:!0,enemyWeaknessBreakDmgBuff:!0}),precomputeEffects:(l,f)=>{const u=f.lightConeConditionals;l[t.ATK_P]+=u.enemyCountAtkBuff?f.enemyCount*n[e]:0,l.ELEMENTAL_DMG+=u.enemyWeaknessBreakDmgBuff?s[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},Oa=()=>({content:()=>[],defaults:()=>({}),precomputeEffects:()=>{},calculatePassives:()=>{},calculateBaseMultis:()=>{}}),Ha=e=>{const n=[.12,.15,.18,.21,.24],s={id:"21003",skill:"Record",desc:"If there are 2 or fewer enemies on the field, increases wearer's CRIT Rate by #2[i]%.",params:[[.16,.12],[.2,.15],[.24,.18],[.28,.21],[.32,.24]],properties:[[{type:"AttackAddedRatio",value:.16}],[{type:"AttackAddedRatio",value:.2}],[{type:"AttackAddedRatio",value:.24}],[{type:"AttackAddedRatio",value:.28}],[{type:"AttackAddedRatio",value:.32}]]},c=[{lc:!0,id:"enemies2CrBuff",name:"enemies2CrBuff",formItem:"switch",text:"≤ 2 enemies CR buff",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({enemies2CrBuff:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a[t.CR]+=l.enemies2CrBuff&&o.enemyCount<=2?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},Fa=e=>{const n=[.08,.1,.12,.14,.16],s=[.12,.15,.18,.21,.24],c={id:"24000",skill:"Moth to Flames",desc:"Whenever the wearer attacks, their ATK is increased by #1[i]% in this battle. This effect can stack up to #2[i] time(s).",params:[[.08,4,.12,2],[.1,4,.15,2],[.12,4,.18,2],[.14,4,.21,2],[.16,4,.24,2]],properties:[[],[],[],[],[]]},a={...c,desc:"After a character inflicts Weakness Break on an enemy, the wearer's DMG increases by #3[i]% for #4[i] turn(s)."},o=[{lc:!0,id:"atkBoostStacks",name:"atkBoostStacks",formItem:"slider",text:"ATK boost stacks",title:c.skill,content:g(e,c),min:0,max:4},{lc:!0,id:"weaknessBreakDmgBuff",name:"weaknessBreakDmgBuff",formItem:"switch",text:"Weakness break DMG buff",title:c.skill,content:g(e,a)}];return{content:()=>o,defaults:()=>({atkBoostStacks:4,weaknessBreakDmgBuff:!0}),precomputeEffects:(l,f)=>{const u=f.lightConeConditionals;l[t.ATK_P]+=u.atkBoostStacks*n[e],l.ELEMENTAL_DMG+=u.weaknessBreakDmgBuff?s[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},Wa=()=>({content:()=>[],defaults:()=>({}),precomputeEffects:()=>{},calculatePassives:()=>{},calculateBaseMultis:()=>{}}),Va=()=>({content:()=>[],defaults:()=>({}),precomputeEffects:()=>{},calculatePassives:()=>{},calculateBaseMultis:()=>{}}),$a=e=>{const n=[.24,.28,.32,.36,.4],s={id:"23019",skill:"The Plum Fragrance In My Bones",desc:"When the wearer uses their Ultimate, increases all allies' DMG by #2[i]%, lasting for #3[i] turn(s).",params:[[.6,.24,3,1.5,10],[.7,.28,3,1.5,12.5],[.8,.32,3,1.5,15],[.9,.36,3,1.5,17.5],[1,.4,3,1.5,20]],properties:[[{type:"BreakDamageAddedRatioBase",value:.6}],[{type:"BreakDamageAddedRatioBase",value:.7}],[{type:"BreakDamageAddedRatioBase",value:.8}],[{type:"BreakDamageAddedRatioBase",value:.9}],[{type:"BreakDamageAddedRatioBase",value:1}]]},c=[{lc:!0,id:"postUltDmgBuff",name:"postUltDmgBuff",formItem:"switch",text:"Post ult DMG duff",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({postUltDmgBuff:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a.ELEMENTAL_DMG+=l.postUltDmgBuff?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},za=e=>{const n=[.24,.28,.32,.36,.4],s=[.048,.056,.064,.072,.08],c={id:"23006",skill:"Spider Web",desc:"Increases DMG dealt by the wearer by #2[i]%.",params:[[.6,.24,.048,3,1],[.7,.28,.056,3,1],[.8,.32,.064,3,1],[.9,.36,.072,3,1],[1,.4,.08,3,1]],properties:[[{type:"AllDamageTypeAddedRatio",value:.24}],[{type:"AllDamageTypeAddedRatio",value:.28}],[{type:"AllDamageTypeAddedRatio",value:.32}],[{type:"AllDamageTypeAddedRatio",value:.36}],[{type:"AllDamageTypeAddedRatio",value:.4}]]},a={...c,desc:"After every attack launched by wearer, their SPD increases by #3[f1]%, stacking up to #4[i] times."},o={...c,desc:"If the wearer hits an enemy target that is not afflicted by Erode, there is a 100% base chance to inflict Erode to the target. Enemies afflicted with Erode are also considered to be Shocked and will receive Lightning DoT at the start of each turn equal to #1[i]% of the wearer's ATK, lasting for #5[i] turn(s)."},l=[{lc:!0,id:"spdStacks",name:"spdStacks",formItem:"slider",text:"SPD Stacks",title:c.skill,content:g(e,a),min:0,max:3},{lc:!0,id:"dotEffect",name:"dotEffect",formItem:"switch",text:"DoT Effect (not implemented)",title:c.skill,content:g(e,o)}];return{content:()=>l,defaults:()=>({spdStacks:3,dotEffect:!1}),precomputeEffects:(f,u)=>{const r=u.lightConeConditionals;f[t.SPD_P]+=r.spdStacks*s[e],f.ELEMENTAL_DMG+=n[e]},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},ja=e=>{const n=[.33,.36,.39,.42,.45],s=[.15,.18,.21,.24,.27],c={id:"21014",skill:"Refraction of Sightline",desc:"Increases the wearer's Outgoing Healing by an amount that is equal to #2[i]% of Effect RES. Outgoing Healing can be increased this way by up to #3[i]%.",params:[[.16,.33,.15],[.2,.36,.18],[.24,.39,.21],[.28,.42,.24],[.32,.45,.27]],properties:[[{type:"StatusResistanceBase",value:.16}],[{type:"StatusResistanceBase",value:.2}],[{type:"StatusResistanceBase",value:.24}],[{type:"StatusResistanceBase",value:.28}],[{type:"StatusResistanceBase",value:.32}]]},a=[{lc:!0,id:"resToHealingBoost",name:"resToHealingBoost",formItem:"switch",text:"RES to healing boost",title:c.skill,content:g(e,c)}];return{content:()=>a,defaults:()=>({resToHealingBoost:!0}),precomputeEffects:()=>{},calculatePassives:()=>{},calculateBaseMultis:(o,l)=>{const f=l.lightConeConditionals,u=o.x,r=Math.min(s[e],n[e]*u[t.RES]);u[t.OHB]+=f.resToHealingBoost?r:0}}},qa=()=>({content:()=>[],defaults:()=>({}),precomputeEffects:()=>{},calculatePassives:()=>{},calculateBaseMultis:()=>{}}),Ya=e=>{const n=[.12,.15,.18,.21,.24],s={id:"21011",skill:"Departure",desc:"After entering battle, if an ally deals the same DMG Type as the wearer, DMG dealt increases by #1[i]%.",params:[[.12],[.15],[.18],[.21],[.24]],properties:[[],[],[],[],[]]},c=[{lc:!0,id:"alliesSameElement",name:"alliesSameElement",formItem:"switch",text:"Same element ally DMG boost",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({alliesSameElement:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a.ELEMENTAL_DMG+=l.alliesSameElement?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},Qa=e=>{const n=[.12,.15,.18,.21,.24],s={id:"21000",skill:"Mutual Healing",desc:"Increases the wearer's Outgoing Healing when they use their Ultimate by #2[i]%.",params:[[.08,.12],[.1,.15],[.12,.18],[.14,.21],[.16,.24]],properties:[[{type:"SPRatioBase",value:.08}],[{type:"SPRatioBase",value:.1}],[{type:"SPRatioBase",value:.12}],[{type:"SPRatioBase",value:.14}],[{type:"SPRatioBase",value:.16}]]},c=[{lc:!0,id:"postUltHealingBoost",name:"postUltHealingBoost",formItem:"switch",text:"Ult healing boost",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({postUltHealingBoost:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a[t.OHB]+=l.postUltHealingBoost?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},Ja=()=>({content:()=>[],defaults:()=>({}),precomputeEffects:()=>{},calculatePassives:()=>{},calculateBaseMultis:()=>{}}),Xa=e=>{const n=[.05,.06,.07,.08,.09],s=[.072,.079,.086,.093,.1],c={id:"23022",skill:"Crystallize",desc:"When the wearer deals DMG to an enemy inflicted with Wind Shear, Burn, Shock, or Bleed, each respectively grants 1 stack of Prophet, stacking up to #4[i] time(s). In a single battle, only 1 stack of Prophet can be granted for each type of DoT. Every stack of Prophet increases wearer's ATK by #2[i]% and enables the DoT dealt to ignore #3[f1]% of the target's DEF.",params:[[.4,.05,.072,4],[.45,.06,.079,4],[.5,.07,.086,4],[.55,.08,.093,4],[.6,.09,.1,4]],properties:[[{type:"StatusProbabilityBase",value:.4}],[{type:"StatusProbabilityBase",value:.45}],[{type:"StatusProbabilityBase",value:.5}],[{type:"StatusProbabilityBase",value:.55}],[{type:"StatusProbabilityBase",value:.6}]]},a=[{lc:!0,id:"prophetStacks",name:"prophetStacks",formItem:"slider",text:"Prophet stacks",title:c.skill,content:g(e,c),min:0,max:4}];return{content:()=>a,defaults:()=>({prophetStacks:4}),precomputeEffects:(o,l)=>{const f=l.lightConeConditionals;o[t.ATK_P]+=f.prophetStacks*n[e],o.DOT_DEF_PEN+=f.prophetStacks*s[e]},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},Za=e=>{const n=[.12,.13,.14,.15,.16],s={id:"21015",skill:"Glance Back",desc:"When the wearer hits an enemy and if the hit enemy is not already Ensnared, then there is a chance to Ensnare the hit enemy. Ensnared enemies' DEF decreases by #2[i]% for #3[i] turn(s).",params:[[.6,.12,1],[.7,.13,1],[.8,.14,1],[.9,.15,1],[1,.16,1]],properties:[[],[],[],[],[]]},c=[{lc:!0,id:"targetEnsnared",name:"targetEnsnared",formItem:"switch",text:"Target ensnared",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({targetEnsnared:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a.DEF_SHRED+=l.targetEnsnared?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},en=()=>({content:()=>[],defaults:()=>({}),precomputeEffects:()=>{},calculatePassives:()=>{},calculateBaseMultis:()=>{}}),tn=e=>{const n=[.08,.09,.1,.11,.12],s=[.12,.15,.18,.21,.24],c={id:"21024",skill:"Stave Off the Lingering Cold",desc:"After entering battle, increases the wearer's SPD by #1[i]% and DMG by #2[i]%. When the wearer takes DMG, this effect will disappear. This effect will resume after the end of the wearer's next turn.",params:[[.08,.12],[.09,.15],[.1,.18],[.11,.21],[.12,.24]],properties:[[],[],[],[],[]]},a=[{lc:!0,id:"spdDmgBuff",name:"spdDmgBuff",formItem:"switch",text:"SPD / DMG buff active",title:c.skill,content:g(e,c)}];return{content:()=>a,defaults:()=>({spdDmgBuff:!0}),precomputeEffects:(o,l)=>{const f=l.lightConeConditionals;o[t.SPD_P]+=f.spdDmgBuff?n[e]:0,o.ELEMENTAL_DMG+=f.spdDmgBuff?s[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},an=e=>{const n=[.24,.3,.36,.42,.48],s={id:"20020",skill:"Genius",desc:"When the wearer uses their Ultimate, increases ATK by #1[i]% for #2[i] turn(s).",params:[[.24,2],[.3,2],[.36,2],[.42,2],[.48,2]],properties:[[],[],[],[],[]]},c=[{lc:!0,id:"postUltAtkBuff",name:"postUltAtkBuff",formItem:"switch",text:"Post ult ATK buff",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({postUltAtkBuff:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a[t.ATK_P]+=l.postUltAtkBuff?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},nn=()=>({content:()=>[],defaults:()=>({}),precomputeEffects:()=>{},calculatePassives:()=>{},calculateBaseMultis:()=>{}}),sn=e=>{const n=[.2,.25,.3,.35,.4],s={id:"20009",skill:"Eradication",desc:"The wearer deals #2[i]% more DMG to enemy targets whose HP percentage is greater than #1[i]%.",params:[[.5,.2],[.5,.25],[.5,.3],[.5,.35],[.5,.4]],properties:[[],[],[],[],[]]},c=[{lc:!0,id:"enemyHp50Buff",name:"enemyHp50Buff",formItem:"switch",text:"Enemy HP > 50% DMG buff",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({enemyHp50Buff:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a.ELEMENTAL_DMG+=l.enemyHp50Buff?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},ln=e=>{const n=[.09,.105,.12,.135,.15],s={id:"23011",skill:"Visioscape",desc:"When the wearer's HP is reduced, all allies' DMG dealt increases by #2[f1]%, lasting for #5[i] turn(s).",params:[[.24,.09,.8,.12,2],[.28,.105,.85,.14,2],[.32,.12,.9,.16,2],[.36,.135,.95,.18,2],[.4,.15,1,.2,2]],properties:[[{type:"HPAddedRatio",value:.24},{type:"SPRatioBase",value:.12}],[{type:"HPAddedRatio",value:.28},{type:"SPRatioBase",value:.14}],[{type:"HPAddedRatio",value:.32},{type:"SPRatioBase",value:.16}],[{type:"HPAddedRatio",value:.36},{type:"SPRatioBase",value:.18}],[{type:"HPAddedRatio",value:.4},{type:"SPRatioBase",value:.2}]]},c=[{lc:!0,id:"hpLostDmgBuff",name:"hpLostDmgBuff",formItem:"switch",text:"HP lost DMG buff",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({hpLostDmgBuff:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a.ELEMENTAL_DMG+=l.hpLostDmgBuff?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},cn=e=>{const n=[.36,.42,.48,.54,.6],s={id:"23012",skill:"Sweet Dreams",desc:"When the wearer's Basic ATK or Skill does not result in a CRIT Hit, increases their CRIT Rate by #2[i]% for #3[i] turn(s). This effect can only trigger once every #4[i] turn(s).",params:[[.3,.36,1,3],[.35,.42,1,3],[.4,.48,1,3],[.45,.54,1,3],[.5,.6,1,3]],properties:[[{type:"CriticalDamageBase",value:.3}],[{type:"CriticalDamageBase",value:.35}],[{type:"CriticalDamageBase",value:.4}],[{type:"CriticalDamageBase",value:.45}],[{type:"CriticalDamageBase",value:.5}]]},c=[{lc:!0,id:"missedCritCrBuff",name:"missedCritCrBuff",formItem:"switch",text:"Missed crit CR buff",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({missedCritCrBuff:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a[t.CR]+=l.missedCritCrBuff?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},rn=e=>{const n=[.24,.3,.36,.42,.48],s={id:"24003",skill:"Chaos Elixir",desc:"When the wearer uses their Ultimate, increases DoT dealt by the wearer by #2[i]%, lasting for #3[i] turn(s).",params:[[.2,.24,2,4],[.25,.3,2,4.5],[.3,.36,2,5],[.35,.42,2,5.5],[.4,.48,2,6]],properties:[[{type:"BreakDamageAddedRatioBase",value:.2}],[{type:"BreakDamageAddedRatioBase",value:.25}],[{type:"BreakDamageAddedRatioBase",value:.3}],[{type:"BreakDamageAddedRatioBase",value:.35}],[{type:"BreakDamageAddedRatioBase",value:.4}]]},c=[{lc:!0,id:"postUltDotDmgBuff",name:"postUltDotDmgBuff",formItem:"switch",text:"Post ult DoT DMG buff",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({postUltDotDmgBuff:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a.DOT_BOOST+=l.postUltDotDmgBuff?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},on=e=>{const n=[.24,.28,.32,.36,.4],s={id:"23002",skill:"Kinship",desc:"When the wearer defeats an enemy or is hit, immediately restores HP equal to #2[i]% of the wearer's ATK. At the same time, the wearer's DMG is increased by #3[i]% until the end of their next turn. This effect cannot stack and can only trigger 1 time per turn.",params:[[.24,.08,.24],[.28,.09,.28],[.32,.1,.32],[.36,.11,.36],[.4,.12,.4]],properties:[[{type:"AttackAddedRatio",value:.24}],[{type:"AttackAddedRatio",value:.28}],[{type:"AttackAddedRatio",value:.32}],[{type:"AttackAddedRatio",value:.36}],[{type:"AttackAddedRatio",value:.4}]]},c=[{lc:!0,id:"dmgBuff",name:"dmgBuff",formItem:"switch",text:"Enemy defeated or self hit DMG buff",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({dmgBuff:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a.ELEMENTAL_DMG+=l.dmgBuff?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},un=e=>{const n=[.24,.3,.36,.42,.48],s={id:"21017",skill:"Like Before You Leave!",desc:"Increases the DMG of the wearer's Basic ATK and Skill by #1[i]%. This effect increases by an extra #2[i]% when the wearer's current Energy reaches its max level.",params:[[.24,.24],[.3,.3],[.36,.36],[.42,.42],[.48,.48]],properties:[[],[],[],[],[]]},c=[{lc:!0,id:"maxEnergyDmgBoost",name:"maxEnergyDmgBoost",formItem:"switch",text:"Max energy DMG boost",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({maxEnergyDmgBoost:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a.BASIC_BOOST+=n[e],a.SKILL_BOOST+=n[e],a.BASIC_BOOST+=l.maxEnergyDmgBoost?n[e]:0,a.SKILL_BOOST+=l.maxEnergyDmgBoost?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},fn=e=>{const n=[.08,.1,.12,.14,.16],s={id:"21010",skill:"Answers of Their Own",desc:"For each time the wearer hits the same target, DMG dealt increases by #1[i]%, stacking up to #2[i] time(s). This effect will be dispelled when the wearer changes targets.",params:[[.08,5],[.1,5],[.12,5],[.14,5],[.16,5]],properties:[[],[],[],[],[]]},c=[{lc:!0,id:"sameTargetHitStacks",name:"sameTargetHitStacks",formItem:"slider",text:"Same target hit stacks",title:s.skill,content:g(e,s),min:0,max:5}];return{content:()=>c,defaults:()=>({sameTargetHitStacks:5}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a.ELEMENTAL_DMG+=l.sameTargetHitStacks*n[e]},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},dn=e=>{const n=[.12,.15,.18,.21,.24],s={id:"24002",skill:"Treasure",desc:"If the wearer is attacked and has no Shield, they gain a Shield equal to #2[i]% of their Max HP for #3[i] turn(s). This effect can only be triggered once every #4[i] turn(s). If the wearer has a Shield when attacked, the DMG they receive decreases by #5[i]%.",params:[[.08,.16,2,3,.12],[.1,.2,2,3,.15],[.12,.24,2,3,.18],[.14,.28,2,3,.21],[.16,.32,2,3,.24]],properties:[[{type:"StatusResistanceBase",value:.08}],[{type:"StatusResistanceBase",value:.1}],[{type:"StatusResistanceBase",value:.12}],[{type:"StatusResistanceBase",value:.14}],[{type:"StatusResistanceBase",value:.16}]]},c=[{lc:!0,id:"activeShieldDmgDecrease",name:"activeShieldDmgDecrease",formItem:"switch",text:"Active shield DMG taken decrease",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({activeShieldDmgDecrease:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a.DMG_RED_MULTI*=l.activeShieldDmgDecrease?1-n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},mn=e=>{const n=[.24,.3,.36,.42,.48],s={id:"21006",skill:"The Maiden in the Painting",desc:"If the current HP of the target enemy is below or equal to #2[i]%, increases DMG dealt by follow-up attacks by an extra #3[i]%.",params:[[.24,.5,.24],[.3,.5,.3],[.36,.5,.36],[.42,.5,.42],[.48,.5,.48]],properties:[[],[],[],[],[]]},c=[{lc:!0,id:"enemyHp50FuaBuff",name:"enemyHp50FuaBuff",formItem:"switch",text:"Enemy HP < 50% fua buff",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({enemyHp50FuaBuff:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a.FUA_BOOST+=n[e],a.FUA_BOOST+=l.enemyHp50FuaBuff&&o.enemyHpPercent<.5?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},Sn=e=>{const n=[.12,.15,.18,.21,.24],s={id:"21005",skill:"Fantastic Adventure",desc:"When the wearer uses Basic ATK, Skill, or Ultimate to attack enemies, the wearer gains one stack of Mischievous. Each stack increases the wearer's ATK by #1[i]%.",params:[[.12],[.15],[.18],[.21],[.24]],properties:[[],[],[],[],[]]},c=[{lc:!0,id:"atkBuffStacks",name:"atkBuffStacks",formItem:"slider",text:"ATK buff stacks",title:s.skill,content:g(e,s),min:0,max:3}];return{content:()=>c,defaults:()=>({atkBuffStacks:3}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a[t.ATK_P]+=l.atkBuffStacks*n[e]},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},hn=e=>{const n=[.12,.15,.18,.21,.24],s=[.04,.05,.06,.07,.08],c={id:"21027",skill:"Get Ready",desc:"Increases the wearer's DMG by #1[i]%.",params:[[.12,.04,3],[.15,.05,3],[.18,.06,3],[.21,.07,3],[.24,.08,3]],properties:[[{type:"AllDamageTypeAddedRatio",value:.12}],[{type:"AllDamageTypeAddedRatio",value:.15}],[{type:"AllDamageTypeAddedRatio",value:.18}],[{type:"AllDamageTypeAddedRatio",value:.21}],[{type:"AllDamageTypeAddedRatio",value:.24}]]},a={...c,desc:"For every enemy defeated by the wearer, the wearer's ATK increases by #2[i]%, stacking up to #3[i] time(s)."},o=[{lc:!0,id:"dmgBoost",name:"dmgBoost",formItem:"switch",text:"DMG boost",title:c.skill,content:g(e,c)},{lc:!0,id:"defeatedEnemyAtkStacks",name:"defeatedEnemyAtkStacks",formItem:"slider",text:"Defeated enemy ATK stacks",title:c.skill,content:g(e,a),min:0,max:3}];return{content:()=>o,defaults:()=>({dmgBoost:!0,defeatedEnemyAtkStacks:3}),precomputeEffects:(l,f)=>{const u=f.lightConeConditionals;l[t.ATK_P]+=u.defeatedEnemyAtkStacks*s[e],l.ELEMENTAL_DMG+=u.dmgBoost?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},An=e=>{const n=[.24,.28,.32,.36,.4],s={id:"23009",skill:"Unfulfilled Yearning",desc:"When the wearer is attacked or consumes their own HP, their DMG increases by #3[i]%. This effect is removed after the wearer uses an attack.",params:[[.18,.18,.24],[.21,.21,.28],[.24,.24,.32],[.27,.27,.36],[.3,.3,.4]],properties:[[{type:"CriticalChanceBase",value:.18},{type:"HPAddedRatio",value:.18}],[{type:"CriticalChanceBase",value:.21},{type:"HPAddedRatio",value:.21}],[{type:"CriticalChanceBase",value:.24},{type:"HPAddedRatio",value:.24}],[{type:"CriticalChanceBase",value:.27},{type:"HPAddedRatio",value:.27}],[{type:"CriticalChanceBase",value:.3},{type:"HPAddedRatio",value:.3}]]},c=[{lc:!0,id:"dmgBuff",name:"dmgBuff",formItem:"switch",text:"HP consumed or attacked DMG buff",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({dmgBuff:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a.ELEMENTAL_DMG+=l.dmgBuff?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},Dn=e=>{const n={id:"21030",skill:"New Chapter",desc:"Increases the DMG of the wearer when they use their Ultimate by #2[i]% of the wearer's DEF. This effect only applies 1 time per enemy target during each use of the wearer's Ultimate.",params:[[.16,.6],[.2,.75],[.24,.9],[.28,1.05],[.32,1.2]],properties:[[{type:"DefenceAddedRatio",value:.16}],[{type:"DefenceAddedRatio",value:.2}],[{type:"DefenceAddedRatio",value:.24}],[{type:"DefenceAddedRatio",value:.28}],[{type:"DefenceAddedRatio",value:.32}]]},s=[{lc:!0,id:"defScalingUltDmg",name:"defScalingUltDmg",formItem:"switch",text:"DEF scaling ult DMG (Not implemented)",title:n.skill,content:g(e,n)}];return{content:()=>s,defaults:()=>({defScalingUltDmg:!1}),precomputeEffects:()=>{},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},gn=e=>{const n={id:"23013",skill:"Morn, Noon, Dusk, and Night",desc:"When the wearer heals allies, record the amount of Outgoing Healing. When any ally launches an attack, a random attacked enemy takes Additional DMG equal to #3[i]% of the recorded Outgoing Healing value. The type of this Additional DMG is of the same Type as the wearer's. This Additional DMG is not affected by other buffs, and can only occur 1 time per turn.",params:[[.18,.12,.36],[.21,.14,.42],[.24,.16,.48],[.27,.18,.54],[.3,.2,.6]],properties:[[{type:"HPAddedRatio",value:.18},{type:"HealRatioBase",value:.12}],[{type:"HPAddedRatio",value:.21},{type:"HealRatioBase",value:.14}],[{type:"HPAddedRatio",value:.24},{type:"HealRatioBase",value:.16}],[{type:"HPAddedRatio",value:.27},{type:"HealRatioBase",value:.18}],[{type:"HPAddedRatio",value:.3},{type:"HealRatioBase",value:.2}]]},s=[{lc:!0,id:"healingBasedDmgProc",name:"healingBasedDmgProc",formItem:"switch",text:"Healing based dmg proc (Not implemented)",title:n.skill,content:g(e,n)}];return{content:()=>s,defaults:()=>({healingBasedDmgProc:!1}),precomputeEffects:()=>{},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},Bn=e=>{const n=[.002,.0025,.003,.0035,.004],s={id:"21034",skill:"A Storm Is Coming",desc:"After entering battle, increases the wearer's DMG based on their Max Energy. DMG increases by #1[i]% per point of Energy, up to #2[i] Energy.",params:[[.002,160],[.0025,160],[.003,160],[.0035,160],[.004,160]],properties:[[],[],[],[],[]]},c=[{lc:!0,id:"maxEnergyStacks",name:"maxEnergyStacks",formItem:"slider",text:"Max energy",title:s.skill,content:g(e,s),min:0,max:160}];return{content:()=>c,defaults:()=>({maxEnergyStacks:160}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a.ELEMENTAL_DMG+=l.maxEnergyStacks*n[e]},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},kn=()=>({content:()=>[],defaults:()=>({}),precomputeEffects:()=>{},calculatePassives:()=>{},calculateBaseMultis:()=>{}}),pn=e=>{const n=[.12,.15,.18,.21,.24],s={id:"21019",skill:"Rye Under the Sun",desc:"When the wearer defeats an enemy, the wearer's CRIT Rate increases by #2[i]% for #3[i] turn(s).",params:[[.16,.12,3],[.2,.15,3],[.24,.18,3],[.28,.21,3],[.32,.24,3]],properties:[[{type:"AttackAddedRatio",value:.16}],[{type:"AttackAddedRatio",value:.2}],[{type:"AttackAddedRatio",value:.24}],[{type:"AttackAddedRatio",value:.28}],[{type:"AttackAddedRatio",value:.32}]]},c=[{lc:!0,id:"defeatedEnemyCrBuff",name:"defeatedEnemyCrBuff",formItem:"switch",text:"Defeated enemy CR buff",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({defeatedEnemyCrBuff:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a[t.CR]+=l.defeatedEnemyCrBuff?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},Cn=e=>{const n=[.2,.25,0,30,.35,.4],s={id:"20004",skill:"Fallen",desc:"At the start of the battle, the wearer's Effect Hit Rate increases by #1[i]% for #2[i] turn(s).",params:[[.2,3],[.25,3],[.3,3],[.35,3],[.4,3]],properties:[[],[],[],[],[]]},c=[{lc:!0,id:"initialEhrBuff",name:"initialEhrBuff",formItem:"switch",text:"Initial EHR buff",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({initialEhrBuff:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a[t.EHR]+=l.initialEhrBuff?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},In=()=>({content:()=>[],defaults:()=>({}),precomputeEffects:()=>{},calculatePassives:()=>{},calculateBaseMultis:()=>{}}),En=e=>{const n=[.08,.1,.12,.14,.16],s={id:"21023",skill:"Teary-Eyed",desc:"At the start of the battle, the DMG dealt to all allies decreases by #2[i]% for #3[i] turn(s). At the same time, immediately restores HP to all allies equal to #1[i]% of the respective HP difference between the characters' Max HP and current HP.",params:[[.3,.08,5],[.35,.1,5],[.4,.12,5],[.45,.14,5],[.5,.16,5]],properties:[[],[],[],[],[]]},c=[{lc:!0,id:"initialDmgReductionBuff",name:"initialDmgReductionBuff",formItem:"switch",text:"Initial DMG reduction buff",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({initialDmgReductionBuff:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a.DMG_RED_MULTI*=l.initialDmgReductionBuff?1-n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},Tn=e=>{const n=[.48,.6,.72,.84,.96],s={id:"21029",skill:"A Discourse in Arms",desc:"After the wearer uses Basic ATK or Skill, deals Additional DMG equal to #1[i]% of the wearer's ATK to a random enemy that has been attacked.",params:[[.48],[.6],[.72],[.84],[.96]],properties:[[],[],[],[],[]]},c=[{lc:!0,id:"extraDmgProc",name:"extraDmgProc",formItem:"switch",text:"Additional DMG proc",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({extraDmgProc:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a.BASIC_SCALING+=l.extraDmgProc?n[e]:0,a.SKILL_SCALING+=l.extraDmgProc?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},Ln=e=>{const n=[.16,.2,.24,.28,.32],s={id:"21026",skill:"Run!",desc:"Increases the wearer's DMG to enemies afflicted with Burn or Bleed by #2[i]%. This also applies to DoT.",params:[[.1,.16],[.125,.2],[.15,.24],[.175,.28],[.2,.32]],properties:[[{type:"AttackAddedRatio",value:.1}],[{type:"AttackAddedRatio",value:.125}],[{type:"AttackAddedRatio",value:.15}],[{type:"AttackAddedRatio",value:.175}],[{type:"AttackAddedRatio",value:.2}]]},c=[{lc:!0,id:"atkBoost",name:"atkBoost",formItem:"switch",text:"Enemy Burn/Bleed ATK boost",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({enemyBurnedBleeding:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a.ELEMENTAL_DMG+=l.enemyBurnedBleeding?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},bn=e=>{const n=[.3,.35,.4,.45,.5],s=[.12,.14,.16,.18,.2],c={id:"23016",skill:"One At A Time",desc:"Increase the wearer's CRIT Rate by #1[i]% and their follow-up attacks' DMG by #2[i]%.",params:[[.18,.3,.12,2],[.21,.35,.14,2],[.24,.4,.16,2],[.27,.45,.18,2],[.3,.5,.2,2]],properties:[[{type:"CriticalChanceBase",value:.18}],[{type:"CriticalChanceBase",value:.21}],[{type:"CriticalChanceBase",value:.24}],[{type:"CriticalChanceBase",value:.27}],[{type:"CriticalChanceBase",value:.3}]]},a={...c,desc:"After the wearer uses a follow-up attack, apply the Tame state to the target, stacking up to #4[i] stacks. When allies hit enemy targets under the Tame state, every Tame stack increases the CRIT DMG dealt by #3[i]%."},o=[{lc:!0,id:"targetTameStacks",name:"targetTameStacks",formItem:"slider",text:"Target Tame stacks",title:c.skill,content:g(e,a),min:0,max:2}];return{content:()=>o,defaults:()=>({targetTameStacks:2}),precomputeEffects:(l,f)=>{const u=f.lightConeConditionals;l[t.CD]+=u.targetTameStacks*s[e],l.FUA_BOOST+=n[e]},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},yn=()=>({content:()=>[],defaults:()=>({}),precomputeEffects:()=>{},calculatePassives:()=>{},calculateBaseMultis:()=>{}}),_n=e=>{const n=[.12,.14,.16,.18,.2],s={id:"21036",skill:"Solidarity",desc:"After the wearer uses a certain type of ability such as Basic ATK, Skill, or Ultimate, all allies gain Childishness, which increases allies' DMG for the same type of ability as used by the wearer by #1[i]%. Childishness only takes effect for the most recent type of ability the wearer used and cannot be stacked.",params:[[.12],[.14],[.16],[.18],[.2]],properties:[[],[],[],[],[]]},c=[{lc:!0,id:"basicDmgBuff",name:"basicDmgBuff",formItem:"switch",text:"Basic DMG buff",title:s.skill,content:g(e,s)},{lc:!0,id:"skillDmgBuff",name:"skillDmgBuff",formItem:"switch",text:"Skill DMG buff",title:s.skill,content:g(e,s)},{lc:!0,id:"ultDmgBuff",name:"ultDmgBuff",formItem:"switch",text:"Ult DMG buff",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({basicDmgBuff:!0,skillDmgBuff:!0,ultDmgBuff:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a.BASIC_BOOST+=l.basicDmgBuff?n[e]:0,a.SKILL_BOOST+=l.skillDmgBuff?n[e]:0,a.ULT_BOOST+=l.ultDmgBuff?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},Mn=e=>{const n=[.08,.09,.1,.11,.12],s={id:"21037",skill:"All In",desc:"When the wearer lands a CRIT hit on enemies, gains a stack of Good Fortune, stacking up to #3[i] time(s). Every stack of Good Fortune the wearer has will increase their CRIT DMG by #2[i]%. Good Fortune will be removed at the end of the wearer's turn.",params:[[.12,.08,4],[.14,.09,4],[.16,.1,4],[.18,.11,4],[.2,.12,4]],properties:[[{type:"AttackAddedRatio",value:.12}],[{type:"AttackAddedRatio",value:.14}],[{type:"AttackAddedRatio",value:.16}],[{type:"AttackAddedRatio",value:.18}],[{type:"AttackAddedRatio",value:.2}]]},c=[{lc:!0,id:"goodFortuneStacks",name:"goodFortuneStacks",formItem:"slider",text:"Good Fortune stacks",title:s.skill,content:g(e,s),min:0,max:4}];return{content:()=>c,defaults:()=>({goodFortuneStacks:4}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a[t.CD]+=l.goodFortuneStacks*n[e]},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},Gn=e=>{const n=[.25,.3125,.375,.4375,.5],s={id:"21038",skill:"Deflagration",desc:"When the cumulative HP loss of the wearer during a single attack exceeds #1[i]% of their Max HP, or if the amount of their own HP they consume at one time is greater than #1[i]% of their Max HP, immediately heals the wearer for #3[i]% of their Max HP, and at the same time, increases the DMG they deal by #2[i]% for #4[i] turn(s). This effect can only be triggered once every #5[i] turn(s).",params:[[.25,.25,.15,2,3],[.25,.3125,.15,2,3],[.25,.375,.15,2,3],[.25,.4375,.15,2,3],[.25,.5,.15,2,3]],properties:[[],[],[],[],[]]},c=[{lc:!0,id:"dmgBuff",name:"dmgBuff",formItem:"switch",text:"DMG increased buff",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({dmgBuff:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a.ELEMENTAL_DMG+=l.dmgBuff?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},Rn=e=>{const n=[.008,.009,.01,.011,.012],s=[.32,.36,.4,.44,.48];return{content:()=>[],defaults:()=>({}),precomputeEffects:()=>{},calculatePassives:()=>{},calculateBaseMultis:c=>{const a=c.x;a.ELEMENTAL_DMG+=Math.min(s[e],Math.floor(a[t.DEF]/100)*n[e])}}},vn=e=>{const n=[.2,.25,.3,.35,.4],s={id:"21040",skill:"Stratagem",desc:"When the wearer uses an attack and at least 2 attacked enemies have the corresponding Weakness, the wearer's CRIT DMG increases by #2[i]% for #3[i] turn(s).",params:[[.16,.2,2],[.18,.25,2],[.2,.3,2],[.22,.35,2],[.24,.4,2]],properties:[[{type:"AttackAddedRatio",value:.16}],[{type:"AttackAddedRatio",value:.18}],[{type:"AttackAddedRatio",value:.2}],[{type:"AttackAddedRatio",value:.22}],[{type:"AttackAddedRatio",value:.24}]]},c=[{lc:!0,id:"cdBuffActive",name:"cdBuffActive",formItem:"switch",text:"≥ 2 weakness targets CD buff",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({cdBuffActive:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a[t.CD]+=l.cdBuffActive?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}},Pn=e=>{const n=[.06,.07,.08,.09,.1],s=[.2,.24,.28,.32,.36],c={id:"21041",skill:"Self-Amusement",desc:"When the wearer inflicts a debuff on an enemy, gains a stack of Trick. Every stack of Trick increases the wearer's DMG dealt by #1[i]%, stacking up to #2[i] time(s). This effect lasts for #3[i] turn(s). When the wearer's Effect Hit Rate is #4[i]% or higher, increases ATK by #5[i]%.",params:[[.06,3,1,.8,.2],[.07,3,1,.8,.24],[.08,3,1,.8,.28],[.09,3,1,.8,.32],[.1,3,1,.8,.36]],properties:[[],[],[],[],[]]},a=[{lc:!0,id:"trickStacks",name:"trickStacks",formItem:"slider",text:"Trick stacks",title:c.skill,content:g(e,c),min:0,max:3}];return{content:()=>a,defaults:()=>({trickStacks:3}),precomputeEffects:(o,l)=>{const f=l.lightConeConditionals;o.ELEMENTAL_DMG+=f.trickStacks*n[e]},calculatePassives:()=>{},calculateBaseMultis:o=>{const l=o.x;l[t.ATK]+=l[t.EHR]>=.8?o.baseAtk*s[e]:0}}},xn=e=>{const n=[.15,.1875,.225,.2625,.3],s={id:"21042",skill:"Inheritance",desc:"Increases the wearer's Break Effect by #1[i]%. When the wearer uses their Ultimate, increases CRIT Rate by #2[i]%, lasting for #3[i] turn(s).",params:[[.28,.15,2],[.35,.1875,2],[.42,.225,2],[.49,.2625,2],[.56,.3,2]],properties:[[{type:"BreakDamageAddedRatioBase",value:.28}],[{type:"BreakDamageAddedRatioBase",value:.35}],[{type:"BreakDamageAddedRatioBase",value:.42}],[{type:"BreakDamageAddedRatioBase",value:.49}],[{type:"BreakDamageAddedRatioBase",value:.56}]]},c=[{lc:!0,id:"crBuff",name:"crBuff",formItem:"switch",text:"Ult CR buff",title:s.skill,content:g(e,s)}];return{content:()=>c,defaults:()=>({crBuff:!0}),precomputeEffects:(a,o)=>{const l=o.lightConeConditionals;a[t.CR]+=l.crBuff?n[e]:0},calculatePassives:()=>{},calculateBaseMultis:()=>{}}};const Kn={...{23e3:Ua,23001:ba,23002:on,23003:ia,23004:La,23005:xa,23006:za,23007:Ta,23008:Da,23009:An,23010:aa,23011:ln,23012:cn,23013:gn,23014:ya,23015:sa,23016:bn,23017:wa,23018:Xt,23019:$a,23020:ta,23021:Aa,23022:Xa,24e3:Fa,24001:ua,24002:dn,24003:rn},...{21e3:Qa,21001:Ca,21002:Sa,21003:Ha,21004:va,21005:Sn,21006:mn,21007:nn,21008:ga,21009:_a,21010:fn,21011:Ya,21012:ea,21013:Ga,21014:ja,21015:Za,21016:kn,21017:un,21018:fa,21019:pn,21020:pa,21021:Ja,21022:Ba,21023:En,21024:tn,21025:Va,21026:Ln,21027:hn,21028:In,21029:Tn,21030:Dn,21031:en,21032:la,21033:Oa,21034:Bn,21035:yn,21036:_n,21037:Mn,21038:Gn,21039:Rn,21040:vn,21041:Pn,21042:xn,22e3:na,22001:Ia},...{2e4:Zt,20001:oa,20002:ra,20003:Jt,20004:Cn,20005:ca,20006:ma,20007:da,20008:ka,20009:sn,20010:ha,20011:Ma,20012:Pa,20013:Wa,20014:Qt,20015:Ka,20016:Na,20017:qa,20018:Ea,20019:Ra,20020:an}},Nn={get:e=>{let n=Kn[e.lightCone];return n?n(e.lightConeSuperimposition-1):{content:()=>[],defaults:()=>({})}}};function wn(e,n,s,c,a,o,l,f,u,r,i,d,m){let h={};for(let B of m)h[B]=e[l].augmentedStats[B]+n[f].augmentedStats[B]+s[u].augmentedStats[B]+c[r].augmentedStats[B]+a[i].augmentedStats[B]+o[d].augmentedStats[B];return h.WEIGHT=e[l].weightScore+n[f].weightScore+s[u].weightScore+c[r].weightScore+a[i].weightScore+o[d].weightScore,h}function Se(e,n,s,c,a,o,l){return s*(1+l+o[n]+a[n]+c[n])+o[e]+a[e]}function he(e,n,s){return n[e]+s[e]}function j(e,n,s,c,a,o){return n[e]+s[e]+a[e]+c[e]+o}const Un={0:0,1:.08,2:.12,3:.16,4:.24};self.onmessage=function(e){let n=e.data,s=n.relics,c=n.character,a=G.Stats,o=Object.values(a),l=new Float64Array(n.buffer),f=s.Head,u=s.Hands,r=s.Body,i=s.Feet,d=s.PlanarSphere,m=s.LinkRope,h=Object.values(G.SetsRelics).length,B=Object.values(G.SetsOrnaments).length,I=n.topRow,C=I?1:s.LinkRope.length,P=I?1:s.PlanarSphere.length,X=I?1:s.Feet.length,ae=I?1:s.Body.length,Ne=I?1:s.Hands.length,On=I?1:s.Head.length,Hn=n.relicSetSolutions,Fn=n.ornamentSetSolutions,Ae=n.relicSetToIndex,we=n.ornamentSetToIndex,ee=n.elementalMultipliers,F=c.traces,x=c.lightCone,W=c.base,p=n.request,Y=p.setConditionals,Ue=qt.get(p),Oe=Nn.get(p),Wn=Y[G.Sets.HunterOfGlacialForest][1]==!0?1:0,Vn=Y[G.Sets.FiresmithOfLavaForging][1]==!0?1:0,$n=Y[G.Sets.GeniusOfBrilliantStars][1]==!0?1:0,zn=Y[G.Sets.BandOfSizzlingThunder][1]==!0?1:0,jn=Y[G.Sets.MessengerTraversingHackerspace][1]==!0?1:0,qn=Y[G.Sets.CelestialDifferentiator][1]==!0?1:0,Yn=Y[G.Sets.WatchmakerMasterOfDreamMachinations][1]==!0?1:0,Qn=Y[G.Sets.ChampionOfStreetwiseBoxing][1],He=Y[G.Sets.WastelanderOfBanditryDesert][1],Jn=Y[G.Sets.LongevousDisciple][1],Xn=Y[G.Sets.TheAshblazingGrandDuke][1],Zn=Y[G.Sets.PrisonerInDeepConfinement][1],Fe=Y[G.Sets.PioneerDiverOfDeadWaters][1],es=p.enemyWeaknessBroken?1:.9,ie=p.enemyElementalWeak?0:p.enemyResistance,We=Ue.precomputeEffects(p);Oe.precomputeEffects(We,p);let Ve=p.statDisplay=="combat",ts=!Ve;for(let De=0;De<n.WIDTH;De++){let Z=n.skip+De;if(Z>=n.permutations)break;let te=Z%C,ne=(Z-te)/C%P,le=(Z-ne*C-te)/(C*P)%X,ge=(Z-le*P*C-ne*C-te)/(C*P*X)%ae,Le=(Z-ge*X*P*C-le*P*C-ne*C-te)/(C*P*X*ae)%Ne,$e=(Z-Le*ae*X*P*C-ge*X*P*C-le*P*C-ne*C-te)/(C*P*X*ae*Ne)%On,K=Ae[s.Head[$e].set],N=Ae[s.Hands[Le].set],w=Ae[s.Body[ge].set],U=Ae[s.Feet[le].set],Q=we[s.PlanarSphere[ne].set],J=we[s.LinkRope[te].set],ze=K+w*h+N*h*h+U*h*h*h,je=Q+J*B;if((Hn[ze]!=1||Fn[je]!=1)&&!I)continue;let D=wn(f,u,r,i,d,m,$e,Le,ge,le,ne,te,o);D.relicSetIndex=ze,D.ornamentSetIndex=je,D.sets={};let k=D.sets;k.PasserbyOfWanderingCloud=(1>>(K^0))+(1>>(N^0))+(1>>(w^0))+(1>>(U^0)),k.MusketeerOfWildWheat=(1>>(K^1))+(1>>(N^1))+(1>>(w^1))+(1>>(U^1)),k.KnightOfPurityPalace=(1>>(K^2))+(1>>(N^2))+(1>>(w^2))+(1>>(U^2)),k.HunterOfGlacialForest=(1>>(K^3))+(1>>(N^3))+(1>>(w^3))+(1>>(U^3)),k.ChampionOfStreetwiseBoxing=(1>>(K^4))+(1>>(N^4))+(1>>(w^4))+(1>>(U^4)),k.GuardOfWutheringSnow=(1>>(K^5))+(1>>(N^5))+(1>>(w^5))+(1>>(U^5)),k.FiresmithOfLavaForging=(1>>(K^6))+(1>>(N^6))+(1>>(w^6))+(1>>(U^6)),k.GeniusOfBrilliantStars=(1>>(K^7))+(1>>(N^7))+(1>>(w^7))+(1>>(U^7)),k.BandOfSizzlingThunder=(1>>(K^8))+(1>>(N^8))+(1>>(w^8))+(1>>(U^8)),k.EagleOfTwilightLine=(1>>(K^9))+(1>>(N^9))+(1>>(w^9))+(1>>(U^9)),k.ThiefOfShootingMeteor=(1>>(K^10))+(1>>(N^10))+(1>>(w^10))+(1>>(U^10)),k.WastelanderOfBanditryDesert=(1>>(K^11))+(1>>(N^11))+(1>>(w^11))+(1>>(U^11)),k.LongevousDisciple=(1>>(K^12))+(1>>(N^12))+(1>>(w^12))+(1>>(U^12)),k.MessengerTraversingHackerspace=(1>>(K^13))+(1>>(N^13))+(1>>(w^13))+(1>>(U^13)),k.TheAshblazingGrandDuke=(1>>(K^14))+(1>>(N^14))+(1>>(w^14))+(1>>(U^14)),k.PrisonerInDeepConfinement=(1>>(K^15))+(1>>(N^15))+(1>>(w^15))+(1>>(U^15)),k.PioneerDiverOfDeadWaters=(1>>(K^16))+(1>>(N^16))+(1>>(w^16))+(1>>(U^16)),k.WatchmakerMasterOfDreamMachinations=(1>>(K^17))+(1>>(N^17))+(1>>(w^17))+(1>>(U^17)),k.SpaceSealingStation=(1>>(Q^0))+(1>>(J^0)),k.FleetOfTheAgeless=(1>>(Q^1))+(1>>(J^1)),k.PanCosmicCommercialEnterprise=(1>>(Q^2))+(1>>(J^2)),k.BelobogOfTheArchitects=(1>>(Q^3))+(1>>(J^3)),k.CelestialDifferentiator=(1>>(Q^4))+(1>>(J^4)),k.InertSalsotto=(1>>(Q^5))+(1>>(J^5)),k.TaliaKingdomOfBanditry=(1>>(Q^6))+(1>>(J^6)),k.SprightlyVonwacq=(1>>(Q^7))+(1>>(J^7)),k.RutilantArena=(1>>(Q^8))+(1>>(J^8)),k.BrokenKeel=(1>>(Q^9))+(1>>(J^9)),k.FirmamentFrontlineGlamoth=(1>>(Q^10))+(1>>(J^10)),k.PenaconyLandOfTheDreams=(1>>(Q^11))+(1>>(J^11)),D.ELEMENTAL_DMG=0,ee[0]&&(D.ELEMENTAL_DMG=j(a.Physical_DMG,W,x,F,D,.1*L(k.ChampionOfStreetwiseBoxing))),ee[1]&&(D.ELEMENTAL_DMG=j(a.Fire_DMG,W,x,F,D,.1*L(k.FiresmithOfLavaForging)+.1*Vn*H(k.FiresmithOfLavaForging))),ee[2]&&(D.ELEMENTAL_DMG=j(a.Ice_DMG,W,x,F,D,.1*L(k.HunterOfGlacialForest))),ee[3]&&(D.ELEMENTAL_DMG=j(a.Lightning_DMG,W,x,F,D,.1*L(k.BandOfSizzlingThunder))),ee[4]&&(D.ELEMENTAL_DMG=j(a.Wind_DMG,W,x,F,D,.1*L(k.EagleOfTwilightLine))),ee[5]&&(D.ELEMENTAL_DMG=j(a.Quantum_DMG,W,x,F,D,.1*L(k.GeniusOfBrilliantStars))),ee[6]&&(D.ELEMENTAL_DMG=j(a.Imaginary_DMG,W,x,F,D,.1*L(k.WastelanderOfBanditryDesert)));let as=D[a.CR],ns=D[a.CD],qe=he(a.HP,W,x),Be=he(a.ATK,W,x),Ye=he(a.DEF,W,x),be=he(a.SPD,W,x);if(D.baseAtk=Be,D[a.HP]=Se(a.HP,a.HP_P,qe,x,F,D,.12*L(k.FleetOfTheAgeless)+.12*L(k.LongevousDisciple)),D[a.ATK]=Se(a.ATK,a.ATK_P,Be,x,F,D,.12*L(k.SpaceSealingStation)+.12*L(k.FirmamentFrontlineGlamoth)+.12*L(k.MusketeerOfWildWheat)+.12*L(k.PrisonerInDeepConfinement)),D[a.DEF]=Se(a.DEF,a.DEF_P,Ye,x,F,D,.15*L(k.BelobogOfTheArchitects)+.15*L(k.KnightOfPurityPalace)),D[a.SPD]=Se(a.SPD,a.SPD_P,be,x,F,D,.06*L(k.MessengerTraversingHackerspace)+.06*H(k.MusketeerOfWildWheat)),D[a.CR]=j(a.CR,W,x,F,D,.08*L(k.InertSalsotto)+.08*L(k.RutilantArena)),D[a.CD]=j(a.CD,W,x,F,D,.16*L(k.CelestialDifferentiator)),D[a.EHR]=j(a.EHR,W,x,F,D,.1*L(k.PanCosmicCommercialEnterprise)),D[a.RES]=j(a.RES,W,x,F,D,.1*L(k.BrokenKeel)),D[a.BE]=j(a.BE,W,x,F,D,.16*L(k.TaliaKingdomOfBanditry)+.16*L(k.ThiefOfShootingMeteor)+.16*H(k.ThiefOfShootingMeteor)),D[a.ERR]=j(a.ERR,W,x,F,D,.05*L(k.SprightlyVonwacq)+.05*L(k.PenaconyLandOfTheDreams)),D[a.OHB]=j(a.OHB,W,x,F,D,.1*L(k.PasserbyOfWanderingCloud)),ts&&!I&&!(D[a.HP]>=p.minHp&&D[a.HP]<=p.maxHp&&D[a.ATK]>=p.minAtk&&D[a.ATK]<=p.maxAtk&&D[a.DEF]>=p.minDef&&D[a.DEF]<=p.maxDef&&D[a.SPD]>=p.minSpd&&D[a.SPD]<=p.maxSpd&&D[a.CR]>=p.minCr&&D[a.CR]<=p.maxCr&&D[a.CD]>=p.minCd&&D[a.CD]<=p.maxCd&&D[a.EHR]>=p.minEhr&&D[a.EHR]<=p.maxEhr&&D[a.RES]>=p.minRes&&D[a.RES]<=p.maxRes&&D[a.BE]>=p.minBe&&D[a.BE]<=p.maxBe&&D.WEIGHT>=p.minWeight&&D.WEIGHT<=p.maxWeight))continue;D.id=Z;let S=Object.assign({},We);D.x=S,S[a.ATK]+=D[a.ATK],S[a.DEF]+=D[a.DEF],S[a.HP]+=D[a.HP],S[a.SPD]+=D[a.SPD],S[a.CD]+=D[a.CD],S[a.CR]+=D[a.CR],S[a.EHR]+=D[a.EHR],S[a.RES]+=D[a.RES],S[a.BE]+=D[a.BE],S[a.ERR]+=D[a.ERR],S[a.OHB]+=D[a.OHB],S.ELEMENTAL_DMG+=D.ELEMENTAL_DMG,S[a.ATK]+=p.buffAtk,S[a.ATK]+=p.buffAtkP*Be,S[a.CD]+=p.buffCd,S[a.CR]+=p.buffCr,S[a.SPD]+=p.buffSpdP*be+p.buffSpd,S[a.BE]+=p.buffBe,S.ELEMENTAL_DMG+=p.buffDmgBoost,S[a.SPD_P]+=.12*jn*H(k.MessengerTraversingHackerspace),S[a.SPD]+=S[a.SPD_P]*be,S[a.ATK_P]+=.05*Qn*H(k.ChampionOfStreetwiseBoxing)+.2*zn*H(k.BandOfSizzlingThunder)+.06*Xn*H(k.TheAshblazingGrandDuke)+.12*(S[a.SPD]>=120?1:0)*L(k.SpaceSealingStation)+.08*(S[a.SPD]>=120?1:0)*L(k.FleetOfTheAgeless)+Math.min(.25,.25*D[a.EHR])*L(k.PanCosmicCommercialEnterprise),S[a.ATK]+=S[a.ATK_P]*Be,S[a.DEF_P]+=.15*(D[a.EHR]>=.5?1:0)*L(k.BelobogOfTheArchitects),S[a.DEF]+=S[a.DEF_P]*Ye,S[a.HP]+=S[a.HP_P]*qe,S[a.CR]+=.1*(He>0?1:0)*H(k.WastelanderOfBanditryDesert)+.08*Jn*H(k.LongevousDisciple)+.6*qn*(D[a.CD]>=1.2?1:0)*L(k.CelestialDifferentiator)+.04*(Fe>2?1:0)*H(k.PioneerDiverOfDeadWaters),S[a.CD]+=.25*Wn*H(k.HunterOfGlacialForest)+.1*(He==2?1:0)*H(k.WastelanderOfBanditryDesert)+.1*(D[a.RES]>=.3?1:0)*L(k.BrokenKeel)+Un[Fe]*H(k.PioneerDiverOfDeadWaters),S[a.BE]+=.2*(D[a.SPD]>=145?1:0)*L(k.TaliaKingdomOfBanditry)+.3*Yn*H(k.WatchmakerMasterOfDreamMachinations),S.BASIC_BOOST+=.1*H(k.MusketeerOfWildWheat)+.2*(S[a.CR]>=.7?1:0)*L(k.RutilantArena),S.SKILL_BOOST+=.12*H(k.FiresmithOfLavaForging)+.2*(S[a.CR]>=.7?1:0)*L(k.RutilantArena),S.ULT_BOOST+=.15*(S[a.CR]>=.5?1:0)*L(D.sets.InertSalsotto),S.FUA_BOOST+=.15*(S[a.CR]>=.5?1:0)*L(D.sets.InertSalsotto),S.FUA_BOOST+=.2*L(D.sets.TheAshblazingGrandDuke),S.DEF_SHRED+=H(D.sets.GeniusOfBrilliantStars)?$n?.2:.1:0,S.DEF_SHRED+=.06*Zn*H(D.sets.PrisonerInDeepConfinement),S.ELEMENTAL_DMG+=.12*(S[a.SPD]>=135?1:0)*L(k.FirmamentFrontlineGlamoth)+.06*(S[a.SPD]>=160?1:0)*L(k.FirmamentFrontlineGlamoth),Ue.calculateBaseMultis(D,p),Oe.calculateBaseMultis(D,p);let ce=p.characterLevel,re=p.enemyLevel,oe=S.DEF_SHRED+p.buffDefShred,ue=0,fe=1+S.ALL_DMG_MULTI+S.ELEMENTAL_DMG,ss=1,ke=S[a.HP]/(1-S[a.DEF]/(S[a.DEF]+200+10*p.enemyLevel));ke*=1/((1-.08*L(k.GuardOfWutheringSnow))*S.DMG_RED_MULTI),D.EHP=ke;let ye=100*(as*2+ns);D.CV=ye;let de=ss*es;if(S.BASIC_DMG*=de*(fe+S.BASIC_BOOST)*se(ce,re,oe,ue,S.BASIC_DEF_PEN)*(Math.min(1,S[a.CR]+S.BASIC_CR_BOOST)*(1+S[a.CD]+S.BASIC_CD_BOOST)+(1-Math.min(1,S[a.CR]+S.BASIC_CR_BOOST)))*(1+S.DMG_TAKEN_MULTI+S.BASIC_VULNERABILITY)*(1-(ie-S.RES_PEN-p.buffResPen-S.BASIC_RES_PEN)),S.SKILL_DMG*=de*(fe+S.SKILL_BOOST)*se(ce,re,oe,ue,S.SKILL_DEF_PEN)*(Math.min(1,S[a.CR]+S.SKILL_CR_BOOST)*(1+S[a.CD]+S.SKILL_CD_BOOST)+(1-Math.min(1,S[a.CR]+S.SKILL_CR_BOOST)))*(1+S.DMG_TAKEN_MULTI+S.SKILL_VULNERABILITY)*(1-(ie-S.RES_PEN-p.buffResPen-S.SKILL_RES_PEN)),S.ULT_DMG*=de*(fe+S.ULT_BOOST)*se(ce,re,oe,ue,S.ULT_DEF_PEN)*(Math.min(1,S[a.CR]+S.ULT_CR_BOOST)*(1+S[a.CD]+S.ULT_CD_BOOST)+(1-Math.min(1,S[a.CR]+S.ULT_CR_BOOST)))*(1+S.DMG_TAKEN_MULTI+S.ULT_VULNERABILITY)*(1-(ie-S.RES_PEN-p.buffResPen-S.ULT_RES_PEN)),S.FUA_DMG*=de*(fe+S.FUA_BOOST)*se(ce,re,oe,ue,S.FUA_DEF_PEN)*(Math.min(1,S[a.CR]+S.FUA_CR_BOOST)*(1+S[a.CD]+S.FUA_CD_BOOST)+(1-Math.min(1,S[a.CR]+S.FUA_CR_BOOST)))*(1+S.DMG_TAKEN_MULTI+S.FUA_VULNERABILITY)*(1-(ie-S.RES_PEN-p.buffResPen-S.FUA_RES_PEN)),S.DOT_DMG*=de*(fe+S.DOT_BOOST)*se(ce,re,oe,ue,S.DOT_DEF_PEN)*(1+S.DMG_TAKEN_MULTI+S.DOT_VULNERABILITY)*(1-(ie-S.RES_PEN-p.buffResPen-S.DOT_RES_PEN)),Ve&&!I&&!(S[a.HP]>=p.minHp&&S[a.HP]<=p.maxHp&&S[a.ATK]>=p.minAtk&&S[a.ATK]<=p.maxAtk&&S[a.DEF]>=p.minDef&&S[a.DEF]<=p.maxDef&&S[a.SPD]>=p.minSpd&&S[a.SPD]<=p.maxSpd&&S[a.CR]>=p.minCr&&S[a.CR]<=p.maxCr&&S[a.CD]>=p.minCd&&S[a.CD]<=p.maxCd&&S[a.EHR]>=p.minEhr&&S[a.EHR]<=p.maxEhr&&S[a.RES]>=p.minRes&&S[a.RES]<=p.maxRes&&S[a.BE]>=p.minBe&&S[a.BE]<=p.maxBe))continue;let is=ye>=p.minCv&&ye<=p.maxCv&&ke>=p.minEhp&&ke<=p.maxEhp&&S.BASIC_DMG>=p.minBasic&&S.BASIC_DMG<=p.maxBasic&&S.SKILL_DMG>=p.minSkill&&S.SKILL_DMG<=p.maxSkill&&S.ULT_DMG>=p.minUlt&&S.ULT_DMG<=p.maxUlt&&S.FUA_DMG>=p.minFua&&S.FUA_DMG<=p.maxFua&&S.DOT_DMG>=p.minDot&&S.DOT_DMG<=p.maxDot;(I||is)&&Re.packCharacter(l,De,D)}self.postMessage({rows:[],buffer:n.buffer},[n.buffer])};function se(e,n,s,c,a){return(e+20)/((n+20)*Math.max(0,1-s-c-a)+e+20)}function H(e){return e>>2}function L(e){return Math.min(1,e>>1)}})();
