{"version":3,"file":"static/js/986.39815f0f.chunk.js","mappings":"yCAAO,MAAMA,EAAQ,CACnBC,MAAO,OACPC,IAAK,MACLC,GAAI,eACJC,GAAI,WACJC,GAAI,YACJC,MAAO,OACPC,IAAK,MACLC,IAAK,kBACLC,IAAK,2BACLC,SAAU,iBACVC,KAAM,MACNC,GAAI,KACJC,QAAS,gBACTC,cAAe,sBACfC,cAAe,sBACfC,IAAK,yBACLC,aAAc,qBACdC,YAAa,oBACbC,IAAK,aACLC,MAAO,OACPC,IAAK,MACLC,SAAU,kBA4FCC,EAAe,CAE5B,EACA,IAAIC,EAAI,EACRC,OAAOC,OAAO1B,GAAO2B,KAAIC,GAAKL,EAAaK,GAAKJ,MAEzC,MA6BMK,EAAa,CACxB,yBAA4B,8BAC5B,qBAAwB,0BACxB,qBAAwB,0BACxB,sBAAyB,2BACzB,2BAA8B,gCAC9B,qBAAwB,0BACxB,uBAA0B,4BAC1B,uBAA0B,4BAC1B,sBAAyB,2BACzB,oBAAuB,yBACvB,sBAAyB,2BACzB,4BAA+B,iCAC/B,kBAAqB,qBACrB,+BAAkC,mCAClC,uBAA0B,4BAC1B,0BAA6B,+BAC7B,yBAA4B,+BAC5B,oCAAuC,4CAI5BC,EAAgB,CAC3B,oBAAuB,wBACvB,kBAAqB,uBACrB,8BAAiC,mCACjC,uBAA0B,4BAC1B,wBAA2B,2BAC3B,cAAiB,iBACjB,uBAA0B,6BAC1B,iBAAoB,oBACpB,cAAiB,iBACjB,WAAc,cACd,0BAA6B,+BAC7B,wBAA2B,gCAIhBC,EAAO,IACfF,KACAC,GAIQE,EAAkBP,OAAOC,OAAOG,GAChCI,EAAqBR,OAAOC,OAAOI,GAE1CI,EAAqB,CAAC,EAC5B,IAAK,IAAIV,GAAI,EAAGA,GAAIS,EAAmBE,OAAQX,KAC7CU,EAAmBD,EAAmBT,KAAMA,GAG9C,MAAMY,EAAkB,CAAC,EACzB,IAAK,IAAIZ,GAAI,EAAGA,GAAIQ,EAAgBG,OAAQX,KAC1CY,EAAgBJ,EAAgBR,KAAMA,GAGjC,MAAMa,EACXN,EADWM,EAGXrC,EAHWqC,EAQXP,EARWO,EASXR,EC/MWS,GD8Ne,MAC1B,MAAMC,EAAa,GACnB,IAAK,IAAIf,EAAI,GAAIA,GAAK,EAAGA,IACvBe,EAAWC,KAAK,CACdC,MAAOjB,EACPkB,MAAM,OAADC,OAASnB,IAKnB,EAV2B,GAYK,MAC/B,MAAMe,EAAa,GACnB,IAAK,IAAIf,EAAI,GAAIA,GAAK,EAAGA,IACvBe,EAAWC,KAAK,CACdC,MAAOjB,EACPkB,MAAM,OAADC,OAASnB,IAKnB,EAVgC,GAYA,MAC/B,MAAMe,EAAa,GACnB,IAAK,IAAIf,EAAI,EAAGA,GAAK,EAAGA,GAAK,EAC3Be,EAAWC,KAAK,CACdC,MAAOjB,EACPkB,MAAM,GAADC,OAAKnB,EAAC,WAAAmB,OAAUnB,EAAI,EAAI,IAAM,KAKxC,EAVgC,GAYK,MACpC,MAAMe,EAAa,GACnB,IAAK,IAAIf,EAAI,GAAIA,GAAK,GAAIA,GAAK,GAC7Be,EAAWC,KAAK,CACdC,MAAOjB,EAAI,IACXkB,MAAM,GAADC,OAAKnB,EAAC,UAKhB,EAVqC,GAYD,MACnC,MAAMe,EAAa,GACnB,IAAK,IAAIf,EAAI,IAAKA,GAAK,EAAGA,IACxBe,EAAWC,KAAK,CACdC,MAAOjB,EAAI,IACXkB,MAAM,GAADC,OAAKnB,EAAC,SAKhB,EAVoC,GC9QT,CAC1BoB,iBAAkBA,CAACC,EAAKC,KAEf,CACLC,GAAIF,EAFNC,GARS,IAWP,CAACT,EAAgBzB,IAAKiC,EAAIC,EAAS,GACnC,CAACT,EAAgBnC,KAAM2C,EAAIC,EAAS,GACpC,CAACT,EAAgB9B,KAAMsC,EAAIC,EAAS,GACpC,CAACT,EAAgBhB,KAAMwB,EAAIC,EAAS,GACpC,CAACT,EAAgBjC,IAAKyC,EAAIC,EAAS,GACnC,CAACT,EAAgBhC,IAAKwC,EAAIC,EAAS,GACnC,CAACT,EAAgB7B,KAAMqC,EAAIC,EAAS,GACpC,CAACT,EAAgBlB,KAAM0B,EAAIC,EAAS,GACpC,CAACT,EAAgBlC,IAAK0C,EAAIC,EAAS,GACnC,CAACT,EAAgB5B,KAAMoC,EAAIC,EAAS,IACpC,CAACT,EAAgBrB,KAAM6B,EAAIC,EAAS,IACpCE,GAAIH,EAAIC,EAAS,IACjBG,GAAIJ,EAAIC,EAAS,IACjBI,OAAQL,EAAIC,EAAS,IACrBK,IAAKN,EAAIC,EAAS,IAClBM,MAAOP,EAAIC,EAAS,IACpBO,MAAOR,EAAIC,EAAS,IACpBQ,IAAKT,EAAIC,EAAS,IAClBS,IAAKV,EAAIC,EAAS,IAClBU,IAAKX,EAAIC,EAAS,IAClBW,IAAKZ,EAAIC,EAAS,IAClBY,KAAMb,EAAIC,EAAS,IACnBa,KAAMd,EAAIC,EAAS,IACnBc,KAAMf,EAAIC,EAAS,IACnBe,IAAKhB,EAAIC,EAAS,IAClBgB,IAAKjB,EAAIC,EAAS,IAClBiB,KAAMlB,EAAIC,EAAS,IACnBkB,KAAMnB,EAAIC,EAAS,IACnBmB,IAAKpB,EAAIC,EAAS,IAClBoB,KAAMrB,EAAIC,EAAS,IACnBqB,KAAMtB,EAAIC,EAAS,IACnBsB,eAAgBvB,EAAIC,EAAS,IAC7BuB,cAAexB,EAAIC,EAAS,IAC5BwB,iBAAkBzB,EAAIC,EAAS,MAInCyB,sBAAuBA,CAAC1B,EAAKV,EAAQqC,KACnC,IAAK,IAAIhD,EAAI,EAAGA,EAAIW,EAAQX,IACtBqB,EAlDG,GAkDCrB,EAAW,IACjBgD,EAAQhC,KAAKF,EAAaM,iBAAiBC,EAAKrB,GAEpD,EAGFiD,cAAeA,CAAC5B,EAAKC,EAAQ4B,KAI3B7B,EAHAC,GAzDS,IA4DK4B,EAAU3B,GACxBF,EAAIC,EAAS,GAAK4B,EAAU1E,EAAMY,IAClCiC,EAAIC,EAAS,GAAK4B,EAAU1E,EAAME,KAClC2C,EAAIC,EAAS,GAAK4B,EAAU1E,EAAMO,KAClCsC,EAAIC,EAAS,GAAK4B,EAAU1E,EAAMqB,KAClCwB,EAAIC,EAAS,GAAK4B,EAAU1E,EAAMI,IAClCyC,EAAIC,EAAS,GAAK4B,EAAU1E,EAAMK,IAClCwC,EAAIC,EAAS,GAAK4B,EAAU1E,EAAMQ,KAClCqC,EAAIC,EAAS,GAAK4B,EAAU1E,EAAMmB,KAClC0B,EAAIC,EAAS,GAAK4B,EAAU1E,EAAMG,IAClC0C,EAAIC,EAAS,IAAM4B,EAAU1E,EAAMS,KACnCoC,EAAIC,EAAS,IAAM4B,EAAU1E,EAAMgB,KACnC6B,EAAIC,EAAS,IAAM4B,EAAUC,cAC7B9B,EAAIC,EAAS,IAAM4B,EAAUzB,GAC7BJ,EAAIC,EAAS,IAAM4B,EAAUxB,OAC7BL,EAAIC,EAAS,IAAM4B,EAAUvB,IAC7BN,EAAIC,EAAS,IAAM4B,EAAU9C,EAAEgD,UAC/B/B,EAAIC,EAAS,IAAM4B,EAAU9C,EAAEiD,UAC/BhC,EAAIC,EAAS,IAAM4B,EAAU9C,EAAEkD,QAC/BjC,EAAIC,EAAS,IAAM4B,EAAU9C,EAAEmD,QAC/BlC,EAAIC,EAAS,IAAM4B,EAAU9C,EAAEoD,QAC/BnC,EAAIC,EAAS,IAAM4B,EAAU9C,EAAE5B,EAAMY,IACrCiC,EAAIC,EAAS,IAAM4B,EAAU9C,EAAE5B,EAAME,KACrC2C,EAAIC,EAAS,IAAM4B,EAAU9C,EAAE5B,EAAMO,KACrCsC,EAAIC,EAAS,IAAM4B,EAAU9C,EAAE5B,EAAMqB,KACrCwB,EAAIC,EAAS,IAAM4B,EAAU9C,EAAE5B,EAAMK,IACrCwC,EAAIC,EAAS,IAAM4B,EAAU9C,EAAE5B,EAAMI,IACrCyC,EAAIC,EAAS,IAAM4B,EAAU9C,EAAE5B,EAAMQ,KACrCqC,EAAIC,EAAS,IAAM4B,EAAU9C,EAAE5B,EAAMmB,KACrC0B,EAAIC,EAAS,IAAM4B,EAAU9C,EAAE5B,EAAMG,IACrC0C,EAAIC,EAAS,IAAM4B,EAAU9C,EAAE5B,EAAMS,KACrCoC,EAAIC,EAAS,IAAM4B,EAAU9C,EAAE5B,EAAMgB,KACrC6B,EAAIC,EAAS,IAAM4B,EAAU9C,EAAE+C,cAC/B9B,EAAIC,EAAS,IAAM4B,EAAUL,cAC7BxB,EAAIC,EAAS,IAAM4B,EAAUJ,gBAAgB,EAG/CW,iBAAmBC,IACjB,IAAIC,aAAaD,GAAQE,KAAK,EAAE,EAGlCC,kBAAoBlD,GACX,IAAIgD,aAtGF,GAsGehD,GAAe+C,S,sDCrG3C,MAAM,KAAEI,GAASC,EAAAA,QAEJC,GAAaC,EAAAA,EAAAA,IAAOH,EAAPG,CAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4G,4BCA/B,MCJD3F,EAAQqC,EAEDuD,EAAuB,IAGvBC,EAA0B,CACrC,CAAC7F,EAAMW,MAAO,EACd,CAACX,EAAMC,OAAQ,EACf,CAACD,EAAMM,OAAQ,EACf,CAACN,EAAMoB,OAAQ,EACf,CAACpB,EAAMY,IAAK,EACZ,CAACZ,EAAME,KAAM,EACb,CAACF,EAAMO,KAAM,EACb,CAACP,EAAMqB,KAAM,EACb,CAACrB,EAAMI,IAAK,EACZ,CAACJ,EAAMK,IAAK,EACZ,CAACL,EAAMQ,KAAM,EACb,CAACR,EAAMmB,KAAM,EACb,CAACnB,EAAMG,IAAK,EACZ,CAACH,EAAMS,KAAM,EACb,CAACT,EAAMgB,KAAM,EAEb2D,cAAe,EACfmB,UAAW,EACXC,gBAAiB,EACjBC,cAAe,EACfC,QAAS,EACTC,cAAe,EAEfC,eAAgB,EAChBC,eAAgB,EAChBC,aAAc,EACdC,aAAc,EAEdC,eAAgB,EAChBC,eAAgB,EAChBC,aAAc,EACdC,aAAc,EAEdC,cAAe,EACfC,cAAe,EACfC,YAAa,EACbC,YAAa,EACbC,YAAa,EAEbC,YAAa,EACbC,YAAa,EACbC,UAAW,EACXC,UAAW,EACXC,UAAW,EAEXC,oBAAqB,EACrBC,oBAAqB,EACrBC,kBAAmB,EACnBC,kBAAmB,EACnBC,kBAAmB,EAEnB7C,UAAW,EACXC,UAAW,EACXC,QAAS,EACTC,QAAS,EACTC,QAAS,EAET0C,cAAe,EACfC,cAAe,EACfC,YAAa,EACbC,YAAa,EACbC,YAAa,EAEbC,cAAe,EACfC,cAAe,EACfC,YAAa,EACbC,YAAa,EACbC,YAAa,GCxEFC,EAAiB,SAACC,GAAmD,IAAnCC,EAAiBC,UAAApG,OAAA,QAAAqG,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACjE,MAAME,EAASC,KAAKC,IAAI,GAAIL,GAC5B,OAAOI,KAAKE,MAAMP,EAASI,GAAUA,CACvC,EAGaI,EAAyBA,CAACC,EAAGC,EAASC,KAIjD,MAAMC,EAAUC,EAAGJ,EAAEK,KAAKC,wBAEpBC,EAAgB,IADcN,EAAQO,gBAAgBjH,EAAe+G,wBAAwB,GACxCH,EAAUH,EAAES,QAAUN,EAGjF,MAAO,CACLO,gBAHsBR,EAAWC,EAAUH,EAAES,QAI7CF,gBACD,EAGUH,EAAMO,GACVA,GAAO,EAMHC,EAAQA,CAACC,EAAiBC,EAAgBC,IAC9CF,GAAW,EAAIE,EAASD,EAEpBE,EAASJ,EACTK,EAASL,EACTM,EAAWN,EAEXO,EAAMA,CAACN,EAAiBC,EAAgBC,IAC5CF,GAAW,EAAIE,EAASD,EAEpBM,EAAQD,EACRE,EAAWF,EACXG,EAAYH,ECGzB,EA1CwB,SAACI,GAA6C,IAA/BC,EAAa/B,UAAApG,OAAA,QAAAqG,IAAAD,UAAA,GAAAA,UAAA,GAAG,UACrD,MAAMgC,EAAM,GACZ,IAAIC,EAAM,GACNC,GAAQ,EACRC,EAAM,EAmCV,OAjCIL,GACFA,EAAKM,MAAM,UAAUC,SAASC,IACxBN,EAAIpI,OAAS,IACfoI,EAAI/H,MAAKsI,EAAAA,EAAAA,KAAA,QAASJ,MAClBH,EAAI/H,MAAKsI,EAAAA,EAAAA,KAAA,QAASJ,OAGpB,IAAK,IAAIlJ,EAAI,EAAGA,EAAIqJ,EAAK1I,OAAQX,IAE5BqJ,EAAKrJ,IAAM,KAAOqJ,EAAKrJ,IAAM,KACb,MAAZqJ,EAAKrJ,IACQ,MAAZqJ,EAAKrJ,IAAcqJ,EAAKrJ,EAAI,IAAM,UAAUuJ,KAAKF,EAAKrJ,EAAI,KAC9C,MAAZqJ,EAAKrJ,IAAcqJ,EAAKrJ,EAAI,IAAM,QAAQuJ,KAAKF,EAAKrJ,EAAI,KAE9DgJ,GAAOK,EAAKrJ,GACZiJ,GAAQ,IAEJA,IACFF,EAAI/H,MAAKsI,EAAAA,EAAAA,KAAA,QAAkBE,MAAO,CAAEV,MAAOA,GAAQW,SAAET,GAAjCE,MACpBF,EAAM,GACNC,GAAQ,GAEVF,EAAI/H,KAAKqI,EAAKrJ,KAIdiJ,GACFF,EAAI/H,MAAKsI,EAAAA,EAAAA,KAAA,QAAkBE,MAAO,CAAEV,MAAOA,GAAQW,SAAET,GAAjCE,KACtB,KAKGI,EAAAA,EAAAA,KAAAI,EAAAA,SAAA,CAAAD,SAAGV,GACZ,ECPA,EA/B2BY,IAA+B,IAA9B,QAAEC,GAASD,EACrC,MAAMZ,EAAM,GACZ,IAAI/I,EAAI,EAqBR,OAnBK4J,GAA8B,IAAnBA,EAAQjJ,OAGtBiJ,EAAQR,SAAQS,IACd,MAAMC,EAAOD,EAAQE,SACrBhB,EAAI/H,MACFgJ,EAAAA,EAAAA,eAACF,EAAI,IACCD,EACJI,KAAMJ,EAAQtI,GACd2I,MAAOL,EAAQK,MACfN,QAASO,EAAgBN,EAAQD,SACjCf,KAAMgB,EAAQhB,KACdK,IAAKlJ,OAGTA,GAAG,IAdL+I,EAAI/H,MAAKsI,EAAAA,EAAAA,KAAA,OAAAG,SAAe,2BAALzJ,OAkBbsJ,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CAACC,UAAQ,EAACC,IAAK,GAAGb,SAAEV,GAAW,E,4CCzB9C,MAAQjF,KAAK,GAAIC,EAAAA,QAEXwG,EAAeC,IACnB,MAAMC,EAAWC,IACf,MAAOC,EAAMC,GAAWC,EAAAA,UAAe,GAEjCjB,GACJkB,EAAAA,EAAAA,MAAChH,EAAI,CAAC0F,MAAO,CAAEuB,MAAO,IAAKC,QAAS,SAAUvB,SAAA,EAC5CH,EAAAA,EAAAA,KAAA,SACCoB,EAAMd,WAGX,OACEN,EAAAA,EAAAA,KAAC2B,EAAAA,EAAO,CACNC,QAAQ,QACRC,UAAU,OACVvB,QAASA,EACTM,MAAOQ,EAAMR,MACbS,KAAMA,EACNS,aAdsBC,IAAuBT,EAAQS,EAAQ,EAc9B5B,UAE/BH,EAAAA,EAAAA,KAAA,QAAME,MAAO,CAAE8B,OAAQ,WAAY7B,SAAEe,EAAiBE,MAC9C,EAKd,OAFAD,EAAQc,YAAc,qBAEfd,CAAO,EAGhBF,EAAYgB,YAAc,cAK1B,U,MC/BA,MAGMzH,GAAOG,EAAAA,EAAAA,IAAOF,EAAAA,QAAPE,CAAkBC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oCAI/B,SAASqH,EAAgBd,GACvB,OAAIA,EAAMe,GACD,wBAEF,uBACT,CAEO,SAASC,GAAWhB,GACzB,OAEEI,EAAAA,EAAAA,MAACV,EAAAA,EAAI,CAACuB,QAjBM,aAiBYC,MAhBd,SAgB2BnC,SAAA,EACnCH,EAAAA,EAAAA,KAACuC,EAAAA,EAAK/B,KAAI,CAACG,KAAM,CAACuB,EAAgBd,GAAQA,EAAMT,MAAO6B,cAAc,UAASrC,UAC5EH,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CACLC,iBAAiB1C,EAAAA,EAAAA,KAAC2C,EAAAA,EAAa,IAC/BC,mBAAmB5C,EAAAA,EAAAA,KAAC6C,EAAAA,EAAa,IACjCC,SAAU1B,EAAM0B,SAChBC,gBAAiB3B,EAAM0B,SACvB5C,MAAO,CAAEuB,MAAO,GAAIuB,YAAa,SAGrChD,EAAAA,EAAAA,KAACxF,EAAI,CAAA2F,SAAEiB,EAAM7B,SAInB,CAQO,MAAM0D,GAAwBhC,EAAYmB,IACjDa,GAAsBC,UAAY,IAC7Bd,GAAWc,aACXjC,EAAYiC,W,4BC3CjB,MAMM1I,IAAOG,EAAAA,EAAAA,IAAOF,EAAAA,QAAPE,CAAkBC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,oCAG/B,SAASyC,GAAeC,GAAwB,IAAhBC,EAASC,UAAApG,OAAA,QAAAqG,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC1C,MAAME,EAASC,KAAKC,IAAI,GAAIL,GAC5B,OAAOI,KAAKE,MAAMP,EAASI,GAAUA,CACvC,CAEA,SAASuE,GAAgBd,GACvB,OAAIA,EAAMe,GACD,wBAEF,uBACT,CAEO,SAASgB,GAAW/B,GACzB,MAAOgC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,GACvCC,EAAYC,IAChBH,EAAcG,EAAS,EAGnBC,EAAcrC,EAAMsC,QAAU,IAAM,EACpCC,EAAOvC,EAAMsC,QAAU,IAAO,EAC9BE,EAASxC,EAAMsC,QAAU,IAAM,GAErC,OACElC,EAAAA,EAAAA,MAACV,EAAAA,EAAI,CAACC,UAAQ,EAACC,IAAK,EAAGd,MAAO,CAAE2D,aAAc,GAAI1D,SAAA,EAChDqB,EAAAA,EAAAA,MAACV,EAAAA,EAAI,CAACuB,QAjCI,aAiCcC,MAhChB,SAgC6BnC,SAAA,EACnCH,EAAAA,EAAAA,KAAA,OAAKE,MAAO,CAAE4D,SAhCH,GAgCyBpC,QAAS,SAAUvB,UACrDH,EAAAA,EAAAA,KAACuC,EAAAA,EAAK/B,KAAI,CAACG,KAAM,CAACuB,GAAgBd,GAAQA,EAAMT,MAAMR,UACpDH,EAAAA,EAAAA,KAAC+D,GAAAA,EAAW,CACVC,IAAK5C,EAAM4C,IACXC,IAAK7C,EAAM6C,IACXC,UAAU,EACVC,KAAK,QACLjE,MAAO,CACLuB,MAvCI,IAyCN2C,OAASzM,GAAmB,MAATA,GAA0B,IAATA,EAAc,EAAI2F,GAAe+G,WAAW1M,GAAS8L,GACzFa,UAAY3M,GAAK,GAAAE,OAAQyF,GAAe3F,EAAQ8L,IAChDc,WAAYX,EACZL,SAAUA,EACVT,SAAU1B,EAAM0B,gBAItB9C,EAAAA,EAAAA,KAACxF,GAAI,CAAA2F,SAAEiB,EAAM7B,WAEfiC,EAAAA,EAAAA,MAACV,EAAAA,EAAI,CAACwB,MAAM,SAASD,QAAQ,aAAarB,IAAK,GAAId,MAAO,CAAEsE,OAAQ,IAAKrE,SAAA,EACvEH,EAAAA,EAAAA,KAACuC,EAAAA,EAAK/B,KAAI,CAACG,KAAM,CAACuB,GAAgBd,GAAQA,EAAMT,MAAMR,UACpDH,EAAAA,EAAAA,KAACyE,GAAAA,EAAM,CACLT,IAAK5C,EAAM4C,IACXC,IAAK7C,EAAM6C,IACXN,KAAMA,EACNhM,MAA6B,kBAAfyL,EAA0BA,EAAa,EACrDlD,MAAO,CACL4D,SA1DM,IA2DNY,UAAW,EACXb,aAAc,EACdc,WAAY,GAEdC,QAAS,CACPN,UAAY3M,GAAK,GAAAE,OAAQyF,GAAe3F,EAAQ8L,IAAW5L,OAAG+L,IAEhEL,SAAUA,EACVT,SAAU1B,EAAM0B,cAGpB9C,EAAAA,EAAAA,KAACxF,GAAI,CAAC0F,MAAO,CAAE4D,SAAU,GAAID,aAAc,EAAGgB,UAAW,UAAW1E,SAAA,GAAAtI,OAAKyF,GAAe8D,EAAM6C,IAAMR,IAAW5L,OAAG+L,UAI1H,CAWO,MAAMkB,GAAwB7D,EAAYkC,IACjD2B,GAAsB5B,UAAY,IAC7BC,GAAWD,aACXjC,EAAYiC,WCpFjB,MCmGA,GAxGiB6B,IACf,MACMC,EAAsBD,GAAK,EAAK,GAAK,EAErCE,EAAe7F,EAAM2F,EAAG,EAAM,KAC9BG,EAAetG,EAAMmG,EAAG,IAAM,MAC9BI,EAAahG,EAAI4F,EAAG,IAAM,OAC1BK,EAAapG,EAAO+F,EAAG,IAAM,MAEnC,SAASM,EAAWC,GAClB,QAD4B7H,UAAApG,OAAA,QAAAqG,IAAAD,UAAA,KAAAA,UAAA,GAExB2H,GAAcA,EAAa,GAAOE,GAClC,IAAQF,EAAa,GAAOE,EAClC,CAEA,MACMC,EAAoB,CACxB,EAAGzK,IACH,EAAGA,GAAwB,EAAIuK,EAAW,GAAG,GAAQ,EAAIA,EAAW,GAAG,IACvE,EAAGvK,GAAwB,EAAIuK,EAAW,GAAG,GAAQ,EAAIA,EAAW,GAAG,IACvE,EAAGvK,GAAwB,EAAIuK,EAAW,GAAG,GAAQ,EAAIA,EAAW,GAAG,IACvE,EAAGvK,GAAwB,EAAIuK,EAAW,GAAG,GAAQ,GAAKA,EAAW,GAAG,KAkBpE/E,EAAU,CAAC,CACfrI,GAAI,kBACJ0I,KAAM,kBACNF,SAAUqE,GACVvF,KAAM,mBACNqB,MAAO,mBACPN,QAAQ,kJAADzI,OAAoJyF,EAAe0H,GAAmB,aAC7LhB,IAAK,EACLC,IAAKe,GACJ,CACD/M,GAAI,oBACJ0I,KAAM,oBACNF,SAAUqE,GACVvF,KAAM,sBACNqB,MAAO,2BACPN,QA5Ba,CACX,wHACA,0DACA,yGACA,gJACA,gMACA,iQACAkF,KAAK,KAGKC,QAAQ,MAAQV,GAAK,EAAK,MAAQ,OAmB9Cf,IAAK,EACLC,IAvDsB,IA0DxB,MAAO,CACLvC,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRC,kBA7DoB,EA8DpBC,gBAAiBb,IAEnBc,kBAAoB7H,IAClB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAgB5B,OAbAjE,EAAE5B,EAAMK,KAA2B,KAApBwQ,EAAEF,gBACjB/O,EAAE5B,EAAMI,KAA2B,IAApByQ,EAAEF,gBAGjB/O,EAAE+E,eAAiBoJ,EACnBnO,EAAEgF,eAAiBoJ,EACnBpO,EAAEiF,aAAeoJ,EACjBrO,EAAEkF,aAAeoJ,EAGjBtO,EAAE+C,eAAkBkM,EAAEH,mBAAqB,EAAKhI,KAAKoG,IAAI,GAA4B,GAAtB+B,EAAEH,mBAA4B,EAC7F9O,EAAEuF,WAAc0I,GAAK,EAAK,GAAO,EAE1BjO,CAAC,EAEVoP,oBAAqBA,CAAClI,EAAGC,KACvB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIkH,EAAElH,EAKZ,GAHAA,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KACzC0B,EAAEiD,WAAajD,EAAEgF,cAAgBhF,EAAE5B,EAAME,KACzC0B,EAAEkD,SAAWlD,EAAEiF,YAAcjF,EAAE5B,EAAME,KACjC2P,GAAK,EAAG,CACV,MAAM7G,EAAWqH,EAAkB3H,KAAKoG,IAAI,EAAG+B,EAAEH,qBAC3C,gBAAElH,EAAe,cAAEH,GAAkBR,EAAuBC,EAAGC,EAASC,GAC9EpH,EAAEmD,SAAWnD,EAAEkF,aAAelF,EAAE5B,EAAME,KAAOmJ,EAAgBG,EAC/D,KAAO,CACL,MAAM,gBAAEA,EAAe,cAAEH,GAAkBR,EAAuBC,EAAGC,EAlFtDnD,KAmFfhE,EAAEmD,SAAWnD,EAAEkF,aAAelF,EAAE5B,EAAME,KAAOmJ,EAAgBG,EAC/D,GAEH,ECbH,GAxFiCqG,IAC/B,MAAMoB,EAA4B9G,EAAS0F,EAAG,GAAM,KAE9CqB,EAAkBlH,EAAS6F,EAAG,EAAM,KACpCsB,EAAmBtB,GAAK,EAAK,IAAO,EACpCuB,EAA0BpH,EAAS6F,EAAG,KAAM,OAC5CwB,EAA2BxB,GAAK,EAAK,GAAO,EAC5CG,EAAe7F,EAAS0F,EAAG,EAAG,GAC9ByB,EAAgBvH,EAAO8F,EAAG,EAAM,KAChC0B,EAAgBxH,EAAO8F,EAAG,IAAM,MAEhCzE,EAAU,CAAC,CACfG,SAAUwC,GACVhL,GAAI,gBACJ0I,KAAM,gBACNpB,KAAM,iBACNqB,MAAM,iBACNN,QAAQ,8CAADzI,OAAgDyF,EAAyC,IAA1BgJ,GAA8B,0FACnG,CACD7F,SAAUwC,GACVhL,GAAI,cACJ0I,KAAM,cACNpB,KAAM,eACNqB,MAAM,eACNN,QAAQ,gDAADzI,OAAkDyF,EAA2C,IAA5B6I,GAAgC,+DACvG,CACD1F,SAAUwC,GACVhL,GAAI,eACJ0I,KAAM,eACNpB,KAAM,gBACNqB,MAAO,gBACPN,QAAQ,oDACP,CACDG,SAAUqE,GACV7M,GAAI,cACJ0I,KAAM,cACNpB,KAAM,gBACNqB,MAAO,sCACPN,QAAQ,sCACR0D,IAAK,EACLC,IAAK,EACLnB,SAAUiC,EAAI,IAGhB,MAAO,CACLrD,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRe,eAAe,EACfC,aAAa,EACbC,cAAc,EACdC,YAAa,IAEff,kBAAoB7H,IAClB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAa5B,OAVAjE,EAAE5B,EAAMM,QAAWuP,GAAK,EAAqB,GAAhBgB,EAAEc,YAAqB,EACpD/P,EAAE5B,EAAMC,QAAW4Q,EAAEa,aAAgB,IAAO,EAG5C9P,EAAEgF,eAAiBoJ,EAGnBpO,EAAEsE,eAAkB2K,EAAEY,YAAgB,EAAIR,EAA6B,EACvErP,EAAEsE,eAAkB2K,EAAEY,YAAgB,IAAY,EAE3C7P,CAAC,EAEVoP,oBAAqBA,CAAClI,EAAGC,KACvB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIkH,EAAElH,EAERiP,EAAEW,eACJ5P,EAAEgD,WAAawM,EAA0BxP,EAAE5B,EAAME,KACjD0B,EAAEgD,WAAayM,EAA0BzP,EAAE5B,EAAMO,OAEjDqB,EAAEgD,WAAasM,EAAkBtP,EAAE5B,EAAME,KACzC0B,EAAEgD,WAAauM,EAAkBvP,EAAE5B,EAAMO,MAG3CqB,EAAEiD,WAAajD,EAAEgF,cAAgBhF,EAAE5B,EAAME,KACzC0B,EAAEkD,SAAWwM,EAAgB1P,EAAE5B,EAAME,KACrC0B,EAAEkD,SAAWyM,EAAgB3P,EAAE5B,EAAMO,IAAI,EAE5C,EC9EGqR,GAAW/B,IACf,MAAMgC,EAAe/H,EAAO+F,EAAG,GAAM,KACrC,IAAIiC,EAA0BhI,EAAO+F,EAAG,IAAM,MAC9CiC,GAA4BjC,GAAK,EAAK,GAAO,EAC7C,MAAME,EAAe7F,EAAM2F,EAAG,EAAM,KAC9BG,EAAetG,EAAMmG,EAAG,EAAM,KAC9BkC,EAAuBrI,EAAMmG,EAAG,IAAM,MACtCI,EAAahG,EAAI4F,EAAG,EAAM,MAE1BzE,EAAyB,CAC7B,CACErI,GAAI,sBACJwI,SAAUwC,GACV1D,KAAM,iBACNqB,MAAO,0BACPN,QAAQ,qJAADzI,OAAuJyF,EAAeyJ,GAAa,wKAG5L,CACE9O,GAAI,uBACJwI,SAAUqE,GACVvF,KAAM,oBACNqB,MAAO,sCACPN,QAAQ,wNAADzI,OACKyF,EAAyC,IAA1B0J,GAA8B,6DACzDhD,IAAK,EACLC,IAAK+C,EACLtD,SAAS,GAEX,CACEzL,GAAI,WACJwI,SAAUwC,GACV1D,KAAM,gBACNqB,MAAO,gCACPN,QAAQ,qNACRwC,SAAUiC,EAAI,GAEhB,CACE9M,GAAI,iBACJwI,SAAUwC,GACV1D,KAAM,gBACNqB,MAAO,oCACPN,QAAQ,iFACRwC,SAAUiC,EAAI,IAIlB,MAAO,CACLrD,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAAC7G,QAASkG,EAAGzE,QAASA,IACxDqF,SAAUA,KAAA,CACRuB,qBAAqB,EACrBC,qBAAsBH,EACtBI,UAAU,EACVC,gBAAgB,IAElBvB,kBAAoB7H,IAClB,MAAM8H,EAAoB9H,EAAQ+H,sBAC5BlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GA4B5B,OAzBAjE,EAAE5B,EAAMK,KAAQwQ,EAAEmB,oBAAuBH,EAAe,EACxDjQ,EAAE5B,EAAMC,QAAY4Q,EAAEmB,oBAAuBnB,EAAEoB,qBAAuB,EAGtErQ,EAAE5B,EAAMmB,MAAS0P,EAAEmB,oBAAuB,IAAO,EACjDpQ,EAAEsF,WAAc2J,EAAEmB,oBAAuB,GAAO,EAGhDpQ,EAAE5B,EAAMI,KAAQyP,GAAK,GAAKgB,EAAEqB,SAAY,IAAO,EAC/CtQ,EAAE5B,EAAMI,KAAQyP,GAAK,GAAKgB,EAAEmB,oBAAuB,GAAO,EAG1DpQ,EAAE+E,eAAiBoJ,EAEnBnO,EAAEgF,eAAkBiK,EAAEmB,oBAAuBD,EAAuB/B,EACpEpO,EAAEgF,eAAkBiJ,GAAK,GAAKgB,EAAEmB,qBAA6C,GAAtBjJ,EAAQqJ,WAAmB,EAAI,EAEtFxQ,EAAEiF,aAAeoJ,EACjBrO,EAAEiF,aAAgBgJ,GAAK,GAA2B,GAAtB9G,EAAQqJ,WAAmB,EAAI,EAE3DxQ,EAAEkF,aAAe,EAGjBlF,EAAEqF,aAAgB4I,GAAK,GAAKgB,EAAEmB,qBAAuBnB,EAAEsB,eAAkB,GAAO,EAEzEvQ,CAAC,EAEVoP,oBAAsBlI,IACpB,MAAMlH,EAAIkH,EAAK,EAEflH,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KACzC0B,EAAEiD,WAAajD,EAAEgF,cAAgBhF,EAAE5B,EAAME,KACzC0B,EAAEkD,SAAWlD,EAAEiF,YAAcjF,EAAE5B,EAAME,KACrC0B,EAAEmD,SAAW,CAAC,EAEjB,EAEH6M,GAAQlP,MAAQ,UCxGhB,MC+DA,GA/DgCmN,IAC9B,MAAMwC,EAAwBjI,EAAUyF,EAAG,GAAM,KAE3CE,EAAe/F,EAAS6F,EAAG,EAAM,KACjCG,EAAe7F,EAAS0F,EAAG,KAAM,OACjCI,EAAalG,EAAO8F,EAAG,IAAK,KAC5ByC,EAAqBvI,EAAO8F,EAAG,IAAM,MACrC0C,EAAsBxI,EAAO8F,EAAG,KAAM,OAEtCzE,EAAU,CAAC,CACfG,SAAUwC,GACVhL,GAAI,cACJ0I,KAAM,eACNpB,KAAM,UACNqB,MAAO,0CACPN,QAAQ,2HAADzI,OAA6HyF,EAA4B,IAAb6H,GAAiB,wHAAAtN,OAClGyF,EAAoC,IAArBkK,GAAyB,4EAAA3P,OAA2EyF,EAAqC,IAAtBmK,GAA0B,0DAC7N,CACDhH,SAAUqE,GACV7M,GAAI,eACJ0I,KAAM,gBACNpB,KAAM,gBACNqB,MAAM,gBACNN,QAAQ,wFAADzI,OAA0FyF,EAAuC,IAAxBiK,GAA4B,iEAC5IvD,IAAK,EACLC,IAAK,IAGP,MAAO,CACLvC,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR+B,aAAa,EACbC,aAAc,IAEhB7B,kBAAoB7H,IAClB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAgB5B,OAbAjE,EAAE5B,EAAMC,QAAU4Q,EAAE4B,aAAeJ,EACnCzQ,EAAE5B,EAAMM,QAA2B,GAAjBuQ,EAAE4B,aACpB7Q,EAAE5B,EAAMK,KAAQ0I,EAAQ2J,oBAAuB,IAAO,EAGtD9Q,EAAE+E,eAAiBoJ,EACnBnO,EAAEgF,eAAiBoJ,EACnBpO,EAAEiF,aAAgBgK,EAAE2B,YAAeF,EAAqBrC,EAGxDrO,EAAEqF,aAAe,IACjBrF,EAAEsF,WAAc2J,EAAE2B,YAAe,IAAO,EAEjC5Q,CAAC,EAEVoP,oBAAsBlI,IACpB,MAAMlH,EAAIkH,EAAElH,EAEZA,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KACzC0B,EAAEiD,WAAajD,EAAEgF,cAAgBhF,EAAE5B,EAAME,KACzC0B,EAAEkD,SAAWlD,EAAEiF,YAAcjF,EAAE5B,EAAME,IAAI,EAE5C,EClBUyS,GAAyB,CACpC,KC/Cc9C,IACd,MAAME,EAAe7F,EAAM2F,EAAG,EAAM,KAC9BG,EAAetG,EAAMmG,EAAG,EAAG,GAC3BI,EAAahG,EAAI4F,EAAG,IAAM,MAC1BK,EAAapG,EAAO+F,EAAG,EAAM,KAInC,MAAO,CACLrD,QAASA,KACP1B,EAAAA,EAAAA,KAAA,SAEF2F,SAAUA,KAAA,CACT,GACDG,kBAAmBA,KACjB,MAAMhP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAY5B,OAPAjE,EAAE+E,eAAiBoJ,EACnBnO,EAAEgF,eAAiBoJ,EACnBpO,EAAEiF,aAAeoJ,EACjBrO,EAAEkF,aAAeoJ,EAIVtO,CAAC,EAEVoP,oBAAqBA,CAAClI,EAAGC,KACvB,MAAMnH,EAAIkH,EAAElH,GAEN,gBAAE4H,EAAe,cAAEH,GAAkBR,EAAuBC,EAAGC,EA1BxDnD,KA4BbhE,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KACzC0B,EAAEiD,WAAajD,EAAEgF,cAAgBhF,EAAE5B,EAAME,KACzC0B,EAAEkD,SAAWlD,EAAEiF,YAAcjF,EAAE5B,EAAME,KACrC0B,EAAEmD,SAAWnD,EAAEkF,aAAelF,EAAE5B,EAAME,KAAOmJ,EAAgBG,GAC7D5H,EAAEmD,SAAY8K,GAAK,EAAK,GAAOjO,EAAE5B,EAAMO,KAAO,CAAC,EAGpD,EDOC,KEzCcsP,IACd,MAAM+C,EAAgB9I,EAAO+F,EAAG,IAAM,MAEhCE,EAAe7F,EAAM2F,EAAG,EAAM,KAC9BG,EAAetG,EAAMmG,EAAG,IAAM,MAC9BI,EAAahG,EAAI4F,EAAG,EAAM,MAC1BgD,EAAkB5I,EAAI4F,EAAG,IAAM,OAE/BzE,EAAU,CAAC,CACfG,SAAUwC,GACVhL,GAAI,gBACJ0I,KAAM,gBACNpB,KAAM,sBACNqB,MAAO,sBACPN,QAAQ,iGAADzI,OAAmGyF,EAA+B,IAAhBwK,GAAoB,OAC5I,CACDrH,SAAUwC,GACVhL,GAAI,cACJ0I,KAAM,cACNpB,KAAM,eACNqB,MAAO,eACPN,QAAQ,uDAGV,MAAO,CACLoB,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRqC,eAAe,EACfC,aAAa,IAEfnC,kBAAoB7H,IAClB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAe5B,OAZAjE,EAAE5B,EAAMK,KAAQwP,GAAK,GAAK9G,EAAQiK,gBAAkB,GAAQ,IAAO,EAGnEpR,EAAE+E,eAAiBoJ,EACnBnO,EAAEgF,eAAiBoJ,EACnBpO,EAAEiF,aAAeoJ,EACjBrO,EAAEiF,aAAgBgK,EAAEkC,YAAeF,EAAkB,EAGrDjR,EAAEoF,aAAgB6J,EAAEkC,YAAe,GAAO,EAC1CnR,EAAEqE,SAAY4K,EAAEiC,cAAiBF,EAAgB,EAE1ChR,CAAC,EAEVoP,oBAAsBlI,IACpB,MAAMlH,EAAIkH,EAAK,EAEflH,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KACzC0B,EAAEiD,WAAajD,EAAEgF,cAAgBhF,EAAE5B,EAAME,KACzC0B,EAAEkD,SAAWlD,EAAEiF,YAAcjF,EAAE5B,EAAME,IAAI,EAG9C,EFfC,KG1Ca2P,IACb,MAAME,EAAe/F,EAAS6F,EAAG,EAAM,KACjCG,EAAe7F,EAAS0F,EAAG,EAAM,KACjCI,EAAalG,EAAO8F,EAAG,IAAM,OAC7BK,EAAa9F,EAAUyF,EAAG,IAAM,MAGhCoD,EAAoB,CACxB,EAAGrN,KACH,EAAGA,KACH,EAAGA,KAGCwF,EAAU,CAAC,CACfG,SAAUwC,GACVhL,GAAI,eACJ0I,KAAM,eACNpB,KAAM,gBACNqB,MAAO,gBACPN,QAAQ,sEACP,CACDG,SAAUwC,GACVhL,GAAI,yBACJ0I,KAAM,yBACNpB,KAAM,qBACNqB,MAAO,qBACPN,QAAQ,4EACP,CACDG,SAAUwC,GACVhL,GAAI,kBACJ0I,KAAM,kBACNpB,KAAM,cACNqB,MAAO,cACPN,QAAQ,kFACRwC,SAAUiC,EAAI,GACb,CACDtE,SAAUqE,GACV7M,GAAI,iBACJ0I,KAAM,iBACNpB,KAAM,oBACNqB,MAAO,oBACPN,QAAQ,sDAADzI,OAAwDyF,EAAe,IAAW,kCACzF0G,IAAK,EACLC,IAAK,EACLnB,SAAUiC,EAAI,IAGhB,MAAO,CACLrD,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRyC,cAAc,EACdC,wBAAwB,EACxBC,iBAAiB,EACjBC,eAAgB,IAElBzC,kBAAoB7H,IAClB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAkB5B,OAfAjE,EAAE5B,EAAMK,KAAQwQ,EAAEsC,uBAA0B,IAAO,EACnDvR,EAAE5B,EAAMoB,QAAWyO,GAAK,GAAKgB,EAAEuC,gBAAmB,GAAO,EAGzDxR,EAAE+E,eAAiBoJ,EACnBnO,EAAEgF,eAAiBoJ,EACnBpO,EAAEiF,aAAeoJ,EACjBrO,EAAEiF,aAAgBgJ,GAAK,EAAKgB,EAAEwC,eAAiBpD,EAAa,GAAO,EACnErO,EAAEkF,aAAeoJ,EACjBtO,EAAEmF,aAhEa,GAmEfnF,EAAEqF,aAAgB4J,EAAEqC,aAAgB,GAAO,EAC3CtR,EAAE+C,eAAkBkL,GAAK,GAAK9G,EAAQiK,gBAAkB,GAAQ,IAAO,EAEhEpR,CAAC,EAEVoP,oBAAqBA,CAAClI,EAAmCC,KACvD,MAAMnH,EAAIkH,EAAK,EAEflH,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KACzC0B,EAAEiD,WAAajD,EAAEgF,cAAgBhF,EAAE5B,EAAME,KACzC0B,EAAEkD,SAAWlD,EAAEiF,YAAcjF,EAAE5B,EAAME,KACrC0B,EAAEoD,SAAWpD,EAAEmF,YAAcnF,EAAE5B,EAAME,KAErC,MAAM8I,EAAWiK,EAAkBlK,EAAQqJ,aACrC,gBAAE5I,EAAe,cAAEH,GAAkBR,EAAuBC,EAAGC,EAASC,GAC9EpH,EAAEmD,SAAWnD,EAAEkF,aAAelF,EAAE5B,EAAME,KAAOmJ,EAAgBG,EAAgB,EAGlF,EH/CC,KI5CYqG,IACZ,MAAMyD,EAAqBzD,GAAK,EAAK,EAAI,EAEnCE,EAAe/F,EAAS6F,EAAG,EAAM,KACjCG,EAAe7F,EAAS0F,EAAG,IAAM,MACjCI,EAAalG,EAAO8F,EAAG,IAAM,MAC7B0D,EAAgBnJ,EAAUyF,EAAG,GAAM,KAEnCzE,EAAU,CAAC,CACfG,SAAUwC,GACVhL,GAAI,sBACJ0I,KAAM,sBACNpB,KAAM,yBACNqB,MAAO,cACPN,QAAS,sHACR,CACDG,SAAUwC,GACVhL,GAAI,cACJ0I,KAAM,cACNpB,KAAM,eACNqB,MAAO,kBACPN,QAAQ,8FAADzI,OAAgGyF,EAA+B,IAAhBmL,GAAoB,+BACzI,CACDhI,SAAUqE,GACV7M,GAAI,iBACJ0I,KAAM,iBACNpB,KAAM,6BACNqB,MAAO,mBACPN,QAAQ,gCAADzI,OAAkCyF,EAA8B,IAAf4H,GAAmB,yHAAArN,OAAwHyF,EAA8B,IAAf4H,GAAmB,sCACrOlB,IAAK,EACLC,IAAKuE,GACJ,CACD/H,SAAUwC,GACVhL,GAAI,kBACJ0I,KAAM,kBACNpB,KAAM,oBACNqB,MAAO,qBACPN,QAAS,wPACTwC,SAAWiC,EAAI,IAGjB,MAAO,CACLrD,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRsC,aAAa,EACbS,qBAAqB,EACrBC,eAAgBH,EAChBI,iBAAiB,IAEnB9C,kBAAoB7H,IAClB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAsB5B,OAjBAjE,EAAE+E,eAAiBoJ,EACnBnO,EAAEgF,eAAiBoJ,EACnBpO,EAAEiF,aAAeoJ,EAEjBrO,EAAE+E,eAAkBkK,EAAEkC,YAAeQ,EAAgB,EACrD3R,EAAEgF,eAAkBiK,EAAEkC,YAAeQ,EAAgB,EACrD3R,EAAEiF,aAAgBgK,EAAEkC,YAAeQ,EAAgB,EAEnD3R,EAAE+E,eAAkBkJ,GAAK,GAAKgB,EAAE6C,gBAAmB,GAAO3D,EAAe,EACzEnO,EAAEgF,eAAkBiJ,GAAK,GAAKgB,EAAE6C,gBAAmB,GAAO1D,EAAe,EAEzEpO,EAAEgF,eAAiBiK,EAAE4C,eAAiBzD,EAGtCpO,EAAE+C,eAAkBoE,EAAQ2J,oBAAuB,GAAO,EAC1D9Q,EAAEmE,iBAAoB8K,EAAE2C,oBAAuB,IAAO,EAE/C5R,CAAC,EAEVoP,oBAAsBlI,IACpB,MAAMlH,EAAIkH,EAAElH,EAEZA,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KACzC0B,EAAEiD,WAAajD,EAAEgF,cAAgBhF,EAAE5B,EAAME,KACzC0B,EAAEkD,SAAWlD,EAAEiF,YAAcjF,EAAE5B,EAAME,IAAI,EAG5C,EJtCD,KKhDc2P,IACd,MAAME,EAAe7F,EAAM2F,EAAG,EAAM,KAC9BG,EAAetG,EAAMmG,EAAG,IAAM,MAC9BI,EAAahG,EAAI4F,EAAG,GAAM,MAC1BK,EAAapG,EAAO+F,EAAG,IAAM,OAC7B8D,EAAa1J,EAAI4F,EAAG,IAAM,OAK1BzE,EAAU,CAAC,CACfG,SAAUwC,GACVhL,GAAI,yBACJ0I,KAAM,yBACNpB,KAAM,oBACNqB,MAAO,oBACPN,QAAQ,gJACRwC,SAAUiC,EAAI,IAGhB,MAAO,CACLrD,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRmD,wBAAwB,IAE1BhD,kBAAoB7H,IAClB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAgB5B,OAXAjE,EAAE+E,eAAiBoJ,EACnBnO,EAAEgF,eAAiBoJ,EACnBpO,EAAEiF,aAAeoJ,EACjBrO,EAAEkF,aAAeoJ,EACjBtO,EAAEmF,aAAe4M,EAGjB/R,EAAE6F,mBAAsBoI,GAAK,GAAKgB,EAAE+C,uBAA0B,GAAO,EACrEhS,EAAEwF,WAAcyI,GAAK,EAAK,IAAO,EACjCjO,EAAEmF,aAAgB8I,GAAK,EAAK,KAAO,EAE5BjO,CAAC,EAEVoP,oBAAqBA,CAAClI,EAAGC,KACvB,MAAMnH,EAAIkH,EAAElH,GAEN,gBAAE4H,EAAe,cAAEH,GAAkBR,EAAuBC,EAAGC,EAzCxDnD,oBA2CbhE,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KACzC0B,EAAEiD,WAAajD,EAAEgF,cAAgBhF,EAAE5B,EAAME,KACzC0B,EAAEkD,SAAWlD,EAAEiF,YAAcjF,EAAE5B,EAAME,KACrC0B,EAAEmD,SAAWnD,EAAEkF,aAAelF,EAAE5B,EAAME,KAAOmJ,EAAgBG,GAC7D5H,EAAEoD,SAAWpD,EAAEmF,YAAcnF,EAAE5B,EAAME,IAAI,EAG9C,ELRC,KM9CkB2P,IAClB,MAAMgE,EAAqB1J,EAAS0F,EAAG,GAAM,MACvCiE,EAAwB3J,EAAS0F,EAAG,IAAM,MAC1CkE,EAAmBhK,EAAO8F,EAAG,IAAM,MAEnCE,EAAe/F,EAAS6F,EAAG,EAAM,KACjCG,EAAe7F,EAAS0F,EAAG,KAAM,OACjCI,EAAalG,EAAO8F,EAAG,IAAM,OAE7BzE,EAAU,CAAC,CACfG,SAAUwC,GACVhL,GAAI,sBACJ0I,KAAM,sBACNpB,KAAM,kBACNqB,MAAO,kCACPN,QAAQ,uDAADzI,OAAyDyF,EAAoC,IAArByL,GAAyB,oLAEvG,CAEDtI,SAAUwC,GACVhL,GAAI,sBACJ0I,KAAM,sBACNpB,KAAM,gBACNqB,MAAO,gDACPN,QAAQ,iDAADzI,OAAmDyF,EAAuC,IAAxB0L,GAA4B,qBACpG,CACDvI,SAAUwC,GACVhL,GAAI,oBACJ0I,KAAM,oBACNpB,KAAM,gBACNqB,MAAO,6BACPN,QAAQ,iCAADzI,OAAmCyF,EAAkC,IAAnB2L,GAAuB,qBAC/E,CACDxI,SAAUqE,GACV7M,GAAI,gBACJ0I,KAAM,gBACNpB,KAAM,iBACNqB,MAAO,iBACPN,QAAQ,ujBAOR0D,IAAK,EACLC,IAAK,IAGP,MAAO,CACLvC,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRuD,qBAAqB,EACrBC,qBAAqB,EACrBC,mBAAmB,EACnBC,cAAe,IAEjBvD,kBAAoB7H,IAClB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAiB5B,OAZAjE,EAAE+E,eAAiBoJ,EACnBnO,EAAEgF,eAAiBoJ,EACnBpO,EAAEiF,aAAeoJ,EACjBrO,EAAEiF,aAAgBgJ,GAAK,EAAuB,GAAlBgB,EAAEsD,cAAuB,EAGrDvS,EAAEqE,SAAY4K,EAAEmD,oBAAuBH,EAAqB,EAC5DjS,EAAEqE,SAAY4K,EAAEmD,qBAAuBnD,EAAEsD,eAAiB,EAAK,IAAO,EACtEvS,EAAEkE,WAAc+K,EAAEoD,oBAAuBH,EAAwB,EACjElS,EAAEkE,WAAc+K,EAAEqD,kBAAqBH,EAAmB,EAC1DnS,EAAE+C,eAAkBkL,GAAK,EAAuB,GAAlBgB,EAAEsD,cAAuB,EAEhDvS,CAAC,EAEVoP,oBAAsBlI,IACpB,MAAMlH,EAAIkH,EAAK,EAEflH,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KACzC0B,EAAEiD,WAAajD,EAAEgF,cAAgBhF,EAAE5B,EAAME,KACzC0B,EAAEkD,SAAWlD,EAAEiF,YAAcjF,EAAE5B,EAAME,IAAI,EAG5C,ENvCD,KO/Cc2P,IACd,MAAME,EAAe7F,EAAM2F,EAAG,EAAM,KAC9BG,EAAetG,EAAMmG,EAAG,IAAM,MAC9BI,EAAahG,EAAI4F,EAAG,IAAM,OAE1BuE,EAA6BtK,EAAO+F,EAAG,IAAM,MAE7CzE,EAAU,CAAC,CACfG,SAAUqE,GACV7M,GAAI,uBACJ0I,KAAM,uBACNpB,KAAM,mBACNqB,MAAO,mBACPN,QAAQ,kFAADzI,OAAoFyF,EAA4C,IAA7BgM,GAAiC,eAC3ItF,IAAK,IACLC,IAAK,EACLP,SAAS,IAGX,MAAO,CACLhC,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR4D,qBAAsB,IAExBzD,kBAAoB7H,IAClB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAc5B,OAXAjE,EAAE+C,eAAiB+D,KAAKoG,IAAIsF,EAA4B,EAAIvD,EAAEwD,sBAG9DzS,EAAE+E,eAAiBoJ,EACnBnO,EAAEgF,eAAiBoJ,EACnBpO,EAAEiF,aAAeoJ,EAGjBrO,EAAEqF,aAAgB4I,GAAK,GAAKgB,EAAEwD,sBAAwB,GAAQ,GAAO,EACrEzS,EAAEsF,WAAc2I,GAAK,GAAKgB,EAAEwD,sBAAwB,GAAQ,GAAO,EAE5DzS,CAAC,EAEVoP,oBAAsBlI,IACpB,MAAMlH,EAAIkH,EAAK,EAEflH,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KACzC0B,EAAEiD,WAAajD,EAAEgF,cAAgBhF,EAAE5B,EAAME,KACzC0B,EAAEkD,SAAWlD,EAAEiF,YAAcjF,EAAE5B,EAAME,KACrC0B,EAAEmD,SAAW,CAAC,EAGnB,EPHC,KQ9Cc8K,IACd,MAAMyE,EAAkBrK,EAAI4F,EAAG,GAAI,MAC7B0E,EAAsBzK,EAAO+F,EAAG,IAAM,MAEtC2E,EAAwB3E,GAAK,EAAK,EAAI,EAEtCE,EAAe7F,EAAM2F,EAAG,EAAK,KAC7BG,EAAetG,EAAMmG,EAAG,GAAM,KAC9BI,EAAahG,EAAI4F,EAAG,EAAG,GACvB8D,EAAazJ,EAAM2F,EAAG,GAAM,KAE5BzE,EAAU,CAAC,CACfG,SAAUqE,GACV7M,GAAI,oBACJ0I,KAAM,oBACNpB,KAAM,mBACNqB,MAAO,mBACPN,QAAQ,4DAADzI,OAA8DyF,EAAeoM,GAAqB,mCACzG1F,IAAK,EACLC,IAAKyF,GACJ,CACDjJ,SAAUqE,GACV7M,GAAI,mBACJ0I,KAAM,mBACNpB,KAAM,yBACNqB,MAAO,2BACPN,QAAQ,4BAADzI,OAA8ByF,EAAqC,IAAtBmM,GAA0B,sBAC9EzF,IAAK,EACLC,IAAK,GACJ,CACDxD,SAAUwC,GACVhL,GAAI,aACJ0I,KAAM,aACNpB,KAAM,sBACNqB,MAAO,sBACPN,QAAQ,kCAADzI,OAAoCyF,EAAekM,GAAgB,qBAG5E,MAAO,CACL9H,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRgE,iBAAkB,EAClBC,kBAAmBF,EACnBG,YAAY,IAEd/D,kBAAoB7H,IAClB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAiB5B,OAdAjE,EAAE5B,EAAMC,QAAW4Q,EAAE4D,iBAAoBF,EACzC3S,EAAE5B,EAAMM,QAhDgB,IAgDLuQ,EAAE4D,iBACrB7S,EAAE5B,EAAMS,MAASoP,GAAK,GAAKgB,EAAE4D,kBAAoB,EAAK,IAAO,EAC7D7S,EAAE5B,EAAMqB,MAASwP,EAAE8D,WAAcL,EAAkB,EAGnD1S,EAAE+E,eAAiBoJ,EACnBnO,EAAEgF,eAAiBoJ,EACnBpO,EAAEiF,aAAeoJ,EACjBrO,EAAEmF,aAAe4M,EAGjB/R,EAAE+C,eAAiB,IAEZ/C,CAAC,EAEVoP,oBAAsBlI,IACpB,MAAMlH,EAAIkH,EAAK,EAEflH,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KACzC0B,EAAEiD,WAAajD,EAAEgF,cAAgBhF,EAAE5B,EAAME,KACzC0B,EAAEkD,SAAW,EACblD,EAAEoD,SAAWpD,EAAEmF,YAAcnF,EAAE5B,EAAME,IAAI,EAG9C,ER5BC,KS/Cc2P,IACd,MAAME,EAAe/F,EAAS6F,EAAG,EAAM,KACjCG,EAAe7F,EAAS0F,EAAG,EAAM,KACjCI,EAAalG,EAAO8F,EAAG,EAAM,MAC7BK,EAAa9F,EAAUyF,EAAG,GAAM,KAEhCoD,EAAoB,CACxB,EAAGrN,IACH,EAAGA,IACH,EAAGA,KAGCwF,EAAU,CAAC,CACfG,SAAUwC,GACVhL,GAAI,gBACJ0I,KAAM,gBACNpB,KAAM,iBACNqB,MAAO,iBACPN,QAAQ,oBAADzI,OAAsByF,EAAe,IAAW,mBACtD,CACDmD,SAAUwC,GACVhL,GAAI,eACJ0I,KAAM,eACNpB,KAAM,gBACNqB,MAAO,gBACPN,QAAQ,gCAADzI,OAAkCyF,EAAe,IAAW,kCAClE,CACDmD,SAAUqE,GACV7M,GAAI,qBACJ0I,KAAM,qBACNpB,KAAM,sBACNqB,MAAO,sBACPN,QAAQ,iEACR0D,IAAK,EACLC,IAAK,EACLnB,SAAUiC,EAAI,GACb,CACDtE,SAAUwC,GACVhL,GAAI,eACJ0I,KAAM,eACNpB,KAAM,kBACNqB,MAAO,kBACPN,QAAQ,mCAADzI,OAAqCyF,EAAe,IAAW,iBACtEwF,SAAUiC,EAAI,IAGhB,MAAO,CACLrD,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRmE,eAAe,EACfC,cAAc,EACdC,mBAAoB,EACpBC,cAAc,IAEhBnE,kBAAoB7H,IAClB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAoB5B,OAjBAjE,EAAE5B,EAAMC,QAAW4Q,EAAE+D,cAAiB,GAAO,EAC7ChT,EAAE5B,EAAMK,KAAQwP,GAAK,EAA4B,IAAvBgB,EAAEiE,mBAA4B,EACxDlT,EAAE5B,EAAMC,QAAW4P,GAAK,GAAKgB,EAAEkE,aAAgB,IAAO,EAGtDnT,EAAE+E,eAAiBoJ,EACnBnO,EAAE+E,eAAkBkJ,GAAK,GAAK9G,EAAQiK,gBAAkB,GAAQ,GAAO,EACvEpR,EAAEgF,eAAiBoJ,EACnBpO,EAAEiF,aAAeoJ,EACjBrO,EAAEkF,aAAeoJ,EAEjBtO,EAAEqF,aAAgB8B,EAAQiK,gBAAkB,GAAQ,IAAO,EAG3DpR,EAAEsF,WAAc2J,EAAEgE,aAAgB,GAAO,EACzCjT,EAAEuF,WAAc0I,GAAK,EAAK,GAAO,EAE1BjO,CAAC,EAEVoP,oBAAqBA,CAAClI,EAAoCC,KACxD,MAAMnH,EAAIkH,EAAK,EAEflH,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KACzC0B,EAAEiD,WAAajD,EAAEgF,cAAgBhF,EAAE5B,EAAME,KACzC0B,EAAEkD,SAAWlD,EAAEiF,YAAcjF,EAAE5B,EAAME,KAErC,MAAM8I,EAAWiK,EAAkBlK,EAAQqJ,aACrC,gBAAE5I,EAAe,cAAEH,GAAkBR,EAAuBC,EAAGC,EAASC,GAC9EpH,EAAEmD,SAAWnD,EAAEkF,aAAelF,EAAE5B,EAAME,KAAOmJ,EAAgBG,EAAgB,EAGlF,ET1CC,KUjDcqG,IACd,MAAMmF,EAAqB7K,EAAS0F,EAAG,IAAM,MACvCoF,EAAmBlL,EAAO8F,EAAG,IAAM,MACnCqF,EAAkBnL,EAAO8F,EAAG,IAAM,MAClCsF,EAAsBpL,EAAO8F,EAAG,GAAM,MAEtCE,EAAe/F,EAAS6F,EAAG,EAAK,KAChCK,EAA4B,GAAfH,EAIb3E,EAAU,CAAC,CACfG,SAAUwC,GACVhL,GAAI,gBACJ0I,KAAM,gBACNpB,KAAM,iBACNqB,MAAO,iBACPN,QAAQ,gCAADzI,OAAkCyF,EAAe,IAAW,8CAClE,CACDmD,SAAUwC,GACVhL,GAAI,qBACJ0I,KAAM,qBACNpB,KAAM,wBACNqB,MAAO,wBACPN,QAAQ,gCAADzI,OAAkCyF,EAAe,IAAW,8CAClE,CACDmD,SAAUwC,GACVhL,GAAI,YACJ0I,KAAM,YACNpB,KAAM,aACNqB,MAAO,aACPN,QAAQ,oBAADzI,OAAsByF,EAAoC,IAArB4M,GAAyB,OACpE,CACDzJ,SAAUwC,GACVhL,GAAI,UACJ0I,KAAM,UACNpB,KAAM,WACNqB,MAAO,WACPN,QAAQ,sCAADzI,OAAwCyF,EAAkC,IAAnB6M,GAAuB,sBAAAtS,OAAqByF,EAAiC,IAAlB8M,GAAsB,gCAAAvS,OAA+ByF,EAAqC,IAAtB+M,GAA0B,mBACtN,CACD5J,SAAUwC,GACVhL,GAAI,iBACJ0I,KAAM,iBACNpB,KAAM,oBACNqB,MAAO,oBACPN,QAAQ,4DAADzI,OAA8DyF,EAAe,IAAW,8CAC/FwF,SAAUiC,EAAI,IAGhB,MAAO,CACLrD,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRmE,eAAe,EACfQ,oBAAoB,EACpBC,WAAW,EACXC,SAAS,EACTC,gBAAgB,IAElB3E,kBAAoB7H,IAClB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAiB5B,OAdAjE,EAAE5B,EAAMM,QAAWuQ,EAAEuE,mBAAsB,GAAO,EAClDxT,EAAE5B,EAAMoB,QAAWyP,EAAE0E,eAAkB,GAAO,EAC9C3T,EAAE5B,EAAMC,QAAW4Q,EAAE+D,cAAiB,IAAO,EAC7ChT,EAAE5B,EAAMC,QAAW4Q,EAAEyE,QAAWL,EAAmB,EACnDrT,EAAEuE,gBAAkB,EAGpBvE,EAAE+E,eAAiBoJ,EACnBnO,EAAEkF,aAAgB+I,GAAK,EAAKK,EAAa,EAGzCtO,EAAE+C,eAAiB,GACnB/C,EAAE+C,eAAkBkM,EAAEwE,UAAaL,EAAqB,EAEjDpT,CAAC,EAEVoP,oBAAqBA,CAAClI,EAAmCC,KACvD,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIkH,EAAK,EAGflH,EAAE5B,EAAMI,KAAQyQ,EAAEyE,QAAWJ,EAAkBtT,EAAE5B,EAAMI,IAAM,EAC7DwB,EAAE5B,EAAMI,KAAQyQ,EAAEyE,QAAWH,EAAsB,EAEnD,MAAM,gBAAE3L,EAAe,cAAEH,GAAkBR,EAAuBC,EAAGC,EA9ExDnD,KAgFbhE,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KACzC0B,EAAEmD,SAAWnD,EAAEkF,aAAelF,EAAE5B,EAAME,KAAOmJ,EAAgBG,EAAgB,EAGlF,EV3CC,KWnDaqG,IACb,MAAM2F,EAAqBpL,EAAUyF,EAAG,GAAM,KACxC4F,EAAuB5F,GAAK,EAAI,EAAI,EAEpCE,EAAe/F,EAAS6F,EAAG,EAAM,KACjCG,EAAe7F,EAAS0F,EAAG,IAAM,MACjCI,EAAalG,EAAO8F,EAAG,KAAM,MAE7BzE,EAAU,CAAC,CACfG,SAAUwC,GACVhL,GAAI,cACJ0I,KAAM,cACNpB,KAAM,eACNqB,MAAO,eACPN,QAAQ,8LAADzI,OACgLyF,EAAoC,IAArBoN,GAAyB,0HAI9N,CACDjK,SAAUqE,GACV7M,GAAI,mBACJ0I,KAAM,mBACNpB,KAAM,qBACNqB,MAAO,qBACPN,QAAQ,gDAADzI,OAAkDyF,EAAeqN,GAAoB,aAC5F3G,IAAK,EACLC,IAAK0G,GAEJ,CACDlK,SAAUwC,GACVhL,GAAI,oBACJ0I,KAAM,oBACNpB,KAAM,gBACNqB,MAAO,yBACPN,QAAQ,qPAERwC,SAAUiC,EAAI,IAGhB,MAAO,CACLrD,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRiF,aAAa,EACbC,iBAAkBF,EAClBG,mBAAmB,IAErBhF,kBAAoB7H,IAClB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAe5B,OAZAjE,EAAE5B,EAAMK,KAAQwP,GAAK,GAAK9G,EAAQiK,gBAAkB,GAAQ,IAAO,EACnEpR,EAAE5B,EAAMoB,QAAU,IAAOyP,EAAE8E,iBAG3B/T,EAAE+E,eAAiBoJ,EACnBnO,EAAEgF,eAAiBoJ,EACnBpO,EAAEiF,aAAeoJ,EAGjBrO,EAAE+C,eAAkBkM,EAAE6E,YAAeF,EAAqB,EAC1D5T,EAAEqE,SAAY4K,EAAE6E,YAAe,GAAO,EAE/B9T,CAAC,EAEVoP,oBAAqBA,CAAClI,EAAoCC,KACxD,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIkH,EAAK,EAEflH,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KACzC0B,EAAEiD,WAAajD,EAAEgF,cAAgBhF,EAAE5B,EAAME,KACzC0B,EAAEkD,SAAWlD,EAAEiF,YAAcjF,EAAE5B,EAAME,KAErC0B,EAAEgD,WAAciL,GAAK,GAAKgB,EAAE+E,kBAAqB,IAAOhU,EAAEkD,QAAU,EACpElD,EAAEiD,WAAcgL,GAAK,GAAKgB,EAAE+E,kBAAqB,IAAOhU,EAAEkD,QAAU,EACpElD,EAAEkD,SAAY+K,GAAK,GAAKgB,EAAE+E,kBAAqB,IAAOhU,EAAEkD,QAAU,CAAC,EAEtE,EX1BD,KYrDc+K,IACd,MAAMgG,EAAwBzL,EAAUyF,EAAG,IAAM,MAE3CE,EAAe/F,EAAS6F,EAAG,EAAM,KACjCG,EAAe7F,EAAS0F,EAAG,IAAM,MACjCI,EAAalG,EAAO8F,EAAG,IAAM,OAC7B8D,EAAaxJ,EAAS0F,EAAG,KAAM,OAE/BzE,EAAU,CAAC,CACfG,SAAUwC,GACVhL,GAAI,gBACJ0I,KAAM,gBACNpB,KAAM,iBACNqB,MAAO,iBACPN,QAAQ,iEAADzI,OAAmEyF,EAAuC,IAAxByN,GAA4B,8CACpH,CACDtK,SAAUwC,GACVhL,GAAI,oBACJ0I,KAAM,oBACNpB,KAAM,sBACNqB,MAAO,sBACPN,QAAQ,iEAGV,MAAO,CACLoB,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRqF,eAAe,EACfC,mBAAmB,IAErBnF,kBAAoB7H,IAClB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAkB5B,OAfAjE,EAAE5B,EAAMC,QAAW4Q,EAAEkF,kBAAqB,GAAO,EAGjDnU,EAAE+E,eAAiBoJ,EACnBnO,EAAEgF,eAAiBoJ,EACnBpO,EAAEiF,aAAeoJ,EACjBrO,EAAEmF,aAAe4M,EAEjB/R,EAAE+E,eAAkBkK,EAAEiF,cAAiBD,EAAwB,EAC/DjU,EAAEgF,eAAkBiK,EAAEiF,cAAiBD,EAAwB,EAC/DjU,EAAEiF,aAAgBgK,EAAEiF,cAAiBD,EAAwB,EAG7DjU,EAAE+C,eAAkBkL,GAAK,GAAKgB,EAAEiF,cAAiB,GAAO,EAEjDlU,CAAC,EAEVoP,oBAAsBlI,IACpB,MAAMlH,EAAIkH,EAAK,EAEflH,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KACzC0B,EAAEiD,WAAajD,EAAEgF,cAAgBhF,EAAE5B,EAAME,KACzC0B,EAAEkD,SAAWlD,EAAEiF,YAAcjF,EAAE5B,EAAME,KACrC0B,EAAEoD,SAAWpD,EAAEmF,YAAcnF,EAAE5B,EAAME,IAAI,EAE5C,EZND,Ka1Dc2P,IACd,MAAME,EAAe7F,EAAM2F,EAAG,EAAM,KAC9BG,EAAetG,EAAMmG,EAAG,EAAM,KAC9BI,EAAahG,EAAI4F,EAAG,EAAG,GAE7B,MAAO,CACLrD,QAASA,KAAM1B,EAAAA,EAAAA,KAAA,SACf2F,SAAUA,KAAA,CACT,GACDG,kBAAmBA,KACjB,MAAMhP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAY5B,OATAjE,EAAE5B,EAAMmB,MAAQ,GAGhBS,EAAE+E,eAAiBoJ,EACnBnO,EAAEgF,eAAiBoJ,EACnBpO,EAAEiF,aAAeoJ,EAIVrO,CAAC,EAEVoP,oBAAsBlI,IACpB,MAAMlH,EAAIkH,EAAK,EAEflH,EAAE5B,EAAME,MAAQ,IAAO0B,EAAE5B,EAAMO,KAE/BqB,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KACzC0B,EAAEiD,WAAajD,EAAEgF,cAAgBhF,EAAE5B,EAAME,IAAI,EAGlD,Eb0BC,Kc7Dc2P,IACd,MAAME,EAAe7F,EAAM2F,EAAG,EAAM,KAC9BG,EAAetG,EAAMmG,EAAG,EAAG,GAC3BI,EAAahG,EAAI4F,EAAG,EAAG,GAE7B,MAAO,CACLrD,QAASA,KACP1B,EAAAA,EAAAA,KAAA,SAEF2F,SAAUA,KAAA,CACT,GACDG,kBAAmBA,KACjB,MAAMhP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAW5B,OANAjE,EAAE+E,eAAiBoJ,EACnBnO,EAAEgF,eAAiBoJ,EACnBpO,EAAEiF,aAAeoJ,EAIVrO,CAAC,EAEVoP,oBAAsBlI,IACpB,MAAMlH,EAAIkH,EAAElH,EAEZA,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KACzC0B,EAAEgD,WAAciL,GAAK,EAAK,GAAOjO,EAAE5B,EAAMY,IAAM,EAC/CgB,EAAEiD,WAAajD,EAAEgF,cAAgBhF,EAAE5B,EAAME,KACzC0B,EAAEkD,SAAWlD,EAAEiF,YAAcjF,EAAE5B,EAAME,IAAI,EAG9C,Ed4BC,Ke1DY2P,IACZ,MAAMmG,EAAiB/L,EAAI4F,EAAG,GAAM,KAE9BE,EAAe7F,EAAM2F,EAAG,EAAM,KAC9BG,EAAetG,EAAMmG,EAAG,IAAM,MAC9BI,EAAahG,EAAI4F,EAAG,EAAM,MAE1BzE,EAAU,CAAC,CACfG,SAAUwC,GACVhL,GAAI,gBACJ0I,KAAM,gBACNpB,KAAM,iBACNqB,MAAO,iBACPN,QAAQ,2CACP,CACDG,SAAUwC,GACVhL,GAAI,mBACJ0I,KAAM,mBACNpB,KAAM,gCACNqB,MAAO,gCACPN,QAAQ,wKAGP,CACDG,SAAUwC,GACVhL,GAAI,kBACJ0I,KAAM,kBACNpB,KAAM,uBACNqB,MAAO,uBACPN,QAAQ,4CAADzI,OAA8CyF,EAAgC,IAAjB4N,GAAqB,qBACxF,CACDzK,SAAUwC,GACVhL,GAAI,kBACJ0I,KAAM,kBACNpB,KAAM,qBACNqB,MAAO,qBACPN,QAAQ,+GACRwC,SAAUiC,EAAI,IAGhB,MAAO,CACLrD,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRwF,eAAe,EACfC,kBAAkB,EAClBC,iBAAiB,EACjBC,iBAAiB,IAEnBxF,kBAAoB7H,IAClB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAuB5B,OApBAjE,EAAE5B,EAAMQ,MAAQ,GAChBoB,EAAE5B,EAAMoB,QAAWyO,GAAK,GAAKgB,EAAEqF,iBAAoB,GAAO,EAC1DtU,EAAE5B,EAAMoB,QAAWyO,GAAK,GAAKgB,EAAEqF,iBAAoB,GAAO,EAC1DtU,EAAE5B,EAAMoB,QAAWyO,GAAK,GAAKgB,EAAEqF,iBAAoB,GAAO,EAG1DtU,EAAE+E,eAAiBoJ,EACnBnO,EAAEgF,eAAiBoJ,EACnBpO,EAAEiF,aAAeoJ,EAGjBrO,EAAEoF,aAAgB6J,EAAEqF,iBAAoB,GAAO,EAC/CtU,EAAEqF,aAAgB4J,EAAEqF,iBAAoB,GAAO,EAC/CtU,EAAEsF,WAAc2J,EAAEqF,iBAAoB,GAAO,EAE7CtU,EAAEqE,SAAY4J,GAAK,GAAKgB,EAAEuF,gBAAmB,IAAO,EACpDxU,EAAEkE,WAAc+K,EAAEsF,gBAAmBH,EAAiB,EAEtDpU,EAAE+C,eAAkBkM,EAAEoF,cAAiB,GAAO,EAEvCrU,CAAC,EAEVoP,oBAAsBlI,IACpB,MAAMlH,EAAIkH,EAAElH,EAEZA,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KACzC0B,EAAEiD,WAAajD,EAAEgF,cAAgBhF,EAAE5B,EAAME,KACzC0B,EAAEkD,SAAWlD,EAAEiF,YAAcjF,EAAE5B,EAAME,KAErC0B,EAAEgD,WAAciL,GAAK,EAAK,GAAOjO,EAAE5B,EAAME,KAAO,EAChD0B,EAAEiD,WAAcgL,GAAK,EAAK,GAAOjO,EAAE5B,EAAME,KAAO,EAChD0B,EAAEkD,SAAY+K,GAAK,EAAK,GAAOjO,EAAE5B,EAAME,KAAO,CAAC,EAElD,Ef3BD,KgBxDc2P,IACd,MAAMwG,EAAuBpM,EAAI4F,EAAG,IAAM,KACpCyG,EAAqBrM,EAAI4F,EAAG,IAAM,OAElCE,EAAe7F,EAAM2F,EAAG,EAAM,KAC9BG,EAAetG,EAAMmG,EAAG,IAAM,MAC9BK,EAAapG,EAAO+F,EAAG,IAAM,MAE7B0G,EAAyB,CAC7B,EAAG3Q,IACH,EAAGA,IACH,EAAGA,KAKCwF,EAAU,CAAC,CACfG,SAAUwC,GACVhL,GAAI,UACJ0I,KAAM,UACNpB,KAAM,WACNqB,MAAO,WACPN,QAAQ,mCAADzI,OAAqCyF,EAAoC,IAArBkO,GAAyB,iEAAA3T,OAAgEyF,EAAsC,IAAvBiO,GAA2B,kBAC7L,CACD9K,SAAUwC,GACVhL,GAAI,oBACJ0I,KAAM,oBACNpB,KAAM,eACNqB,MAAO,eACPN,QAAQ,4CAADzI,OAA8CyF,EAA8B,IAAf4H,GAAmB,yEACtF,CACDzE,SAAUwC,GACVhL,GAAI,eACJ0I,KAAM,eACNpB,KAAM,kBACNqB,MAAO,kBACPN,QAAQ,8CAADzI,OAAgDyF,EAAe,IAAW,kBACjFwF,SAAUiC,EAAI,GACb,CACDtE,SAAUwC,GACVhL,GAAI,qBACJ0I,KAAM,qBACNpB,KAAM,wBACNqB,MAAO,wBACPN,QAAQ,8BAADzI,OAAgCyF,EAAe,IAAW,MACjEwF,SAAUiC,EAAI,IAGhB,MAAO,CACLrD,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR6E,SAAS,EACTkB,mBAAmB,EACnBC,cAAc,EACdC,oBAAoB,IAEtB9F,kBAAoB7H,IAClB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAmB5B,OAhBAjE,EAAE5B,EAAMC,QAAW4P,GAAK,GAAKgB,EAAE4F,aAAgB,GAAO,EAGtD7U,EAAE+E,eAAiBoJ,EACnBnO,EAAEgF,eAAiBoJ,EACnBpO,EAAEgF,eAAiBiK,EAAE2F,kBAAoBxG,EAAe,EAExDpO,EAAEkF,aAAeoJ,EACjBtO,EAAEkF,aAAe+J,EAAEyE,QAAUgB,EAAqB,EAGlD1U,EAAEsE,eAAkB,GACpBtE,EAAEsE,eAAiB2K,EAAEyE,QAAW,EAAIe,EAAwB,EAC5DzU,EAAEsE,eAAkB2J,GAAK,GAAKgB,EAAE6F,mBAAuB,GAAY,EACnE9U,EAAEuF,WAAa,GAERvF,CAAC,EAEVoP,oBAAqBA,CAAClI,EAAoCC,KACxD,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIkH,EAAK,EAMf,GAJAlH,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KACzC0B,EAAEiD,WAAajD,EAAEgF,cAAgBhF,EAAE5B,EAAME,KAGrC2Q,EAAEyE,QAAS,CACb,MAAM,gBAAE9L,EAAe,cAAEH,GAAkBR,EAAuBC,EAAGC,EAASwN,EAAuBxN,EAAQqJ,aAC7GxQ,EAAEmD,SAAWnD,EAAEkF,aAAelF,EAAE5B,EAAME,KAAOmJ,EAAgBG,EAC/D,KAAO,CACL,MAAM,gBAAEA,EAAe,cAAEH,GAAkBR,EAAuBC,EAAGC,EA7EpDnD,KA8EjBhE,EAAEmD,SAAWnD,EAAEkF,aAAelF,EAAE5B,EAAME,KAAOmJ,EAAgBG,EAC/D,GAGL,EhBvCC,KiBzDaqG,IACb,MAAM8G,EAAwB5M,EAAO8F,EAAG,GAAM,KAExCE,EAAe/F,EAAS6F,EAAG,EAAM,KACjCG,EAAe7F,EAAS0F,EAAG,IAAM,MACjCI,EAAalG,EAAO8F,EAAG,IAAM,OAC7B8D,EAAavJ,EAAUyF,EAAG,IAAM,MAEhC+G,EAAe/G,EAAI,EAAI,EAAI,EAE3BzE,EAAU,CAAC,CACfG,SAAUwC,GACVhL,GAAI,uBACJ0I,KAAM,uBACNpB,KAAM,uBACNqB,MAAO,uBACPN,QAAQ,yEAADzI,OAA2EyF,EAAuC,IAAxBuO,GAA4B,qBAC5H,CACDpL,SAAUqE,GACV7M,GAAI,iBACJ0I,KAAM,iBACNpB,KAAM,mBACNqB,MAAO,mBACPN,QAAQ,mDAGR0D,IAAK,EACLC,IAAK6H,GACJ,CACDrL,SAAUwC,GACVhL,GAAI,kBACJ0I,KAAM,kBACNpB,KAAM,wBACNqB,MAAO,wBACPN,QAAQ,kEAGV,MAAO,CACLoB,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRoG,sBAAsB,EACtBpD,eAAgBmD,EAChBE,iBAAiB,IAEnBlG,kBAAoB7H,IAClB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAgB5B,OAXAjE,EAAE+E,eAAiBoJ,EACnBnO,EAAEgF,eAAiBoJ,EACnBpO,EAAEgF,eAAkBiK,EAAE4C,eAAkBzD,EACxCpO,EAAEiF,aAAeoJ,EACjBrO,EAAEmF,aAAe4M,EACjB/R,EAAEmF,aAAgB8I,GAAK,EAAK,IAAO,EAGnCjO,EAAE6F,mBAAsBoJ,EAAEgG,qBAAwBF,EAAwB,EAC1E/U,EAAEsE,eAAkB2K,EAAEiG,gBAAoB,IAAY,EAE/ClV,CAAC,EAEVoP,oBAAsBlI,IACpB,MAAMlH,EAAIkH,EAAK,EAEflH,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KACzC0B,EAAEiD,WAAajD,EAAEgF,cAAgBhF,EAAE5B,EAAME,KACzC0B,EAAEkD,SAAWlD,EAAEiF,YAAcjF,EAAE5B,EAAME,KACrC0B,EAAEoD,SAAWpD,EAAEmF,YAAcnF,EAAE5B,EAAME,IAAI,EAE5C,EjBdD,KkB3Dc2P,IACd,MAAMkH,EAA2B3M,EAAUyF,EAAG,EAAM,KAE9CE,EAAe/F,EAAS6F,EAAG,EAAM,KACjCG,EAAe7F,EAAS0F,EAAG,IAAM,MACjCkC,EAAuB5H,EAAS0F,EAAG,IAAM,MACzCI,EAAalG,EAAO8F,EAAG,EAAM,MAC7B8D,EAAaxJ,EAAS0F,EAAG,IAAM,MAE/BzE,EAAU,CAAC,CACfG,SAAUwC,GACVhL,GAAI,gBACJ0I,KAAM,gBACNpB,KAAM,iBACNqB,MAAO,iBACPN,QAAQ,uGAADzI,OAAyGyF,EAAsC,IAAvB2J,GAA2B,2EACzJ,CACDxG,SAAUwC,GACVhL,GAAI,eACJ0I,KAAM,eACNpB,KAAM,gBACNqB,MAAO,gBACPN,QAAQ,mFAADzI,OAAqFyF,EAA0C,IAA3B2O,GAA+B,sBAI5I,MAAO,CACLvK,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRuG,eAAe,EACf9D,cAAc,IAEhBtC,kBAAoB7H,IAClB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAiB5B,OAZAjE,EAAE+E,eAAiBoJ,EACnBnO,EAAEgF,eAAkBiK,EAAEmG,cAAiBjF,EAAuB/B,EAC9DpO,EAAEiF,aAAeoJ,EACjBrO,EAAE+E,eAAkBkK,EAAEqC,aAAgB6D,EAA2B,EACjEnV,EAAEgF,eAAkBiK,EAAEqC,aAAgB6D,EAA2B,EACjEnV,EAAEiF,aAAgBgK,EAAEqC,aAAgB6D,EAA2B,EAC/DnV,EAAEmF,aAAe4M,EAGjB/R,EAAEqF,aAAgB4I,GAAK,GAAKgB,EAAEmG,cAAiB,GAAO,EACtDpV,EAAE+C,eAAkBkL,GAAK,GAAKgB,EAAEqC,aAAgB,GAAO,EAEhDtR,CAAC,EAEVoP,oBAAsBlI,IACpB,MAAMlH,EAAIkH,EAAK,EAEflH,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KACzC0B,EAAEiD,WAAajD,EAAEgF,cAAgBhF,EAAE5B,EAAME,KACzC0B,EAAEkD,SAAWlD,EAAEiF,YAAcjF,EAAE5B,EAAME,KACrC0B,EAAEoD,SAAWpD,EAAEmF,YAAcnF,EAAE5B,EAAME,IAAI,EAG9C,ElBFC,KmB9Dc2P,IACd,MAAMoH,EAAqB9M,EAAS0F,EAAG,KAAO,KACxCqH,EAAkB/M,EAAS0F,EAAG,IAAK,KAEnCE,EAAe/F,EAAS6F,EAAG,GAAM,KACjCG,EAAe7F,EAAS0F,EAAG,EAAG,GAC9BI,EAAalG,EAAO8F,EAAG,EAAG,GAE1BzE,EAAU,CAAC,CACfG,SAAUwC,GACVhL,GAAI,YACJ0I,KAAM,YACNpB,KAAM,oBACNqB,MAAO,oBACPN,QAAQ,2FAADzI,OAC6EyF,EAAoC,IAArB6O,GAAyB,4BAAAtU,OAA2ByF,EAAe8O,GAAgB,gJAIxL,MAAO,CACL1K,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR4E,WAAW,EACX8B,iBAAiB,IAEnBvG,kBAAoB7H,IAClB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAa5B,OAVAjE,EAAE5B,EAAMW,OAAUkQ,EAAEwE,UAAa4B,EAAqB,EACtDrV,EAAE5B,EAAMY,KAAQiQ,EAAEwE,UAAa6B,EAAkB,EAGjDtV,EAAE+E,eAAiBoJ,EACnBnO,EAAEgF,eAAiBoJ,EACnBpO,EAAEiF,aAAeoJ,EAIVrO,CAAC,EAEVoP,oBAAqBA,CAAClI,EAAGC,KACvB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIkH,EAAElH,EAEZA,EAAE5B,EAAMY,KAAQiP,GAAK,GAAKgB,EAAEwE,UAAa,IAAOzT,EAAE5B,EAAMY,IAAM,EAC9DgB,EAAE5B,EAAME,MAAS2P,GAAK,GAAKgB,EAAEwE,UAAa,IAAOzT,EAAE5B,EAAMY,IAAM,EAE/DgB,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAMY,IACzCgB,EAAEiD,WAAajD,EAAEgF,cAAgBhF,EAAE5B,EAAME,KACzC0B,EAAEkD,SAAWlD,EAAEiF,YAAcjF,EAAE5B,EAAME,IAAI,EAI9C,EnBQC,KoB9Da,SAAc2P,GAC3B,MAAMuH,EAAwBpN,EAAS6F,EAAG,GAAM,KAC1CwH,EAA+BtN,EAAO8F,EAAG,GAAM,MAE/CE,EAAe/F,EAAS6F,EAAG,EAAM,KACjCyH,EAAuBtN,EAAS6F,EAAG,GAAO,EAAI,GAAM,MACpDG,EAAe7F,EAAS0F,EAAG,IAAM,MACjCI,EAAalG,EAAO8F,EAAG,IAAM,OAC7B8D,EAAaxJ,EAAS0F,EAAG,KAAM,OAE/BzE,EAAU,CAAC,CACfG,SAAUwC,GACVhL,GAAI,gBACJ0I,KAAM,gBACNpB,KAAM,iBACNqB,MAAO,mCACPN,QAAQ,yFACP,CACDG,SAAUwC,GACVhL,GAAI,oBACJ0I,KAAM,oBACNpB,KAAM,sBACNqB,MAAO,sBACPN,QAAQ,yCAADzI,OAA2CyF,EAA8C,IAA/BiP,GAAmC,oBACnG,CACD9L,SAAUqE,GACV7M,GAAI,yBACJ0I,KAAM,yBACNpB,KAAM,4BACNqB,MAAO,4BACPN,QAAQ,kDACR0D,IAAK,EACLC,IAAK,GACJ,CACDxD,SAAUwC,GACVhL,GAAI,mBACJ0I,KAAM,mBACNpB,KAAM,qBACNqB,MAAO,qBACPN,QAAQ,iHACRwC,SAAUiC,EAAI,GACb,CACDtE,SAAUqE,GACV7M,GAAI,iBACJ0I,KAAM,iBACNpB,KAAM,mBACNqB,MAAO,mBACPN,QAAQ,gGACR0D,IAAK,EACLC,IAAK,EACLnB,SAAUiC,EAAI,IAGhB,MAAO,CACLrD,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR8G,eAAe,EACfC,mBAAmB,EACnBC,kBAAkB,EAClBC,uBAAwB,EACxBC,eAAgB,IAElB/G,kBAAoB7H,IAClB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAgB5B,OAbAjE,EAAE5B,EAAMC,QAAW4P,GAAK,EAAwB,IAAnBgB,EAAE8G,eAAwB,EAGvD/V,EAAE+E,eAAkBkK,EAAE0G,cAAiBD,EAAuBvH,EAC9DnO,EAAE+E,gBAAkBkK,EAAE0G,eAAiB1G,EAAE6G,wBAA0BN,EACnExV,EAAEgF,eAAiBoJ,EACnBpO,EAAEiF,aAAeoJ,EACjBrO,EAAEmF,aAAe4M,EAGjB/R,EAAEmE,iBAAoB8K,EAAE2G,kBAAqBH,EAA+B,EAC5EzV,EAAE+C,eAAkBkL,GAAK,GAAKgB,EAAE4G,iBAAoB,IAAO,EAEpD7V,CAAC,EAEVoP,oBAAsBlI,IACpB,MAAMlH,EAAIkH,EAAElH,EAEZA,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KACzC0B,EAAEiD,WAAajD,EAAEgF,cAAgBhF,EAAE5B,EAAME,KACzC0B,EAAEkD,SAAWlD,EAAEiF,YAAcjF,EAAE5B,EAAME,KACrC0B,EAAEoD,SAAWpD,EAAEmF,YAAcnF,EAAE5B,EAAME,IAAI,EAI/C,EpB7BE,KqB5Da2P,IACb,MAAM+H,EAA8BlO,EAAMmG,EAAG,GAAM,KAC7CgI,EAA+B5N,EAAI4F,EAAG,IAAM,MAC5CiI,EAA0B7N,EAAI4F,EAAG,IAAM,MAEvCE,EAAe7F,EAAM2F,EAAG,EAAM,KAC9BG,EAAetG,EAAMmG,EAAG,IAAM,MAC9BK,EAAapG,EAAO+F,EAAG,IAAM,MAc7BzE,EAAU,CAAC,CACfG,SAAUwC,GACVhL,GAAI,yBACJ0I,KAAM,yBACNpB,KAAM,6BACNqB,MAAO,gBACPN,QAAQ,qHAADzI,OAAuHyF,EAA6C,IAA9BwP,GAAkC,OAC9K,CACDrM,SAAUwC,GACVhL,GAAI,qBACJ0I,KAAM,qBACNpB,KAAM,uBACNqB,MAAO,qCACPN,QAAQ,gFAADzI,OAAkFyF,EAA8C,IAA/ByP,GAAmC,gCAAAlV,OAA+ByF,EAAyC,IAA1B0P,GAA8B,OACtN,CACDvM,SAAUqE,GACV7M,GAAI,iBACJ0I,KAAM,iBACNpB,KAAM,mBACNqB,MAAM,wBACNN,QAAQ,oWACR0D,IAAK,EACLC,IAAK,EACLnB,SAAUiC,EAAI,IAGhB,MAAO,CACLrD,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRsH,wBAAwB,EACxBC,oBAAoB,EACpBC,eAAgB,IAElBrH,kBAAoB7H,IAClB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAgB5B,OAXAjE,EAAE+E,eAAiBoJ,EACnBnO,EAAEgF,eAAiBoJ,EACnBpO,EAAEgF,eAAkBiK,EAAEmH,mBAAsBH,EAA+B,EAC3EjW,EAAEkF,aAAeoJ,EACjBtO,EAAEkF,aAAgB+J,EAAEmH,mBAAsBH,EAA+B,EAGzEjW,EAAE4F,mBAAsBqJ,EAAEkH,uBAA0BH,EAA8B,EAClFhW,EAAE+C,eAAkBoE,EAAQmP,mBAAsB,IAAO,EACzDtW,EAAE8E,cAAiBmJ,GAAK,EAAK,IAAOgB,EAAEoH,eAAiB,EAEhDrW,CAAC,EAEVoP,oBAAqBA,CAAClI,EAAoCC,KACxD,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIkH,EAAK,EAETE,EAAY6H,EAAEmH,mBA5DSpS,mBAJRA,IAiEfuS,EAAoBtP,EAAuBC,EAAGC,EAASC,GACvDoP,EAAsBvP,EAAuBC,EAAGC,EAtE/BnD,KAyEvBhE,EAAEgD,WAAahD,EAAE+E,eAAiB/E,EAAE5B,EAAME,KAAOkY,EAAoB/O,cAAgB+O,EAAoB5O,iBACzG5H,EAAEmD,SAAWnD,EAAEkF,aAAelF,EAAE5B,EAAME,KAAOiY,EAAkB9O,cAAgB8O,EAAkB3O,iBACjG5H,EAAEiD,UAAYjD,EAAEmD,QAIhBnD,EAAEqF,aAAerF,EAAEuF,UACnBvF,EAAE4E,gBAAkB5E,EAAE8E,aACtB9E,EAAEwE,gBAAkBxE,EAAE0E,aACtB1E,EAAE0F,oBAAsB1F,EAAE4F,kBAC1B5F,EAAE+F,cAAgB/F,EAAEiG,YACpBjG,EAAEoG,cAAgBpG,EAAEsG,YAEpBtG,EAAEoF,aAAepF,EAAEuF,UACnBvF,EAAE2E,gBAAkB3E,EAAE8E,aACtB9E,EAAEuE,gBAAkBvE,EAAE0E,aACtB1E,EAAEyF,oBAAsBzF,EAAE4F,kBAC1B5F,EAAE8F,cAAgB9F,EAAEiG,YACpBjG,EAAEmG,cAAgBnG,EAAEsG,YAGpBtG,EAAE8E,cAAiBmK,EAAEmH,mBAAsBF,EAA0B,EACrElW,EAAE4E,gBAAmBqK,EAAEmH,mBAAsBF,EAA0B,EAGvElW,EAAEoG,eAAkB6H,GAAK,EAAK,GAAO,EACrCjO,EAAEsG,aAAgB2H,GAAK,EAAK,GAAO,CAAC,EAEvC,ErBlDD,KsB9DeA,IACf,MAAMwI,EAAgB3O,EAAMmG,EAAG,IAAM,MAC/ByI,EAAgBxO,EAAO+F,EAAG,IAAM,MAEhCE,EAAe7F,EAAM2F,EAAG,EAAM,KAC9ByH,EAAuBpN,EAAM2F,EAAG,IAAM,MACtCG,EAAetG,EAAMmG,EAAG,EAAG,GAC3BI,EAAahG,EAAI4F,EAAG,EAAM,MAE1B0G,EAAyB,CAC7B,EAAG3Q,IACH,EAAGA,IACH,EAAGA,KAKCwF,EAAU,CAAC,CACfG,SAAUwC,GACVhL,GAAI,gBACJ0I,KAAM,gBACNpB,KAAM,iBACNqB,MAAO,iBACPN,QAAQ,8BAADzI,OAAgCyF,EAA+B,IAAhBkQ,GAAoB,8EACzE,CACD/M,SAAUwC,GACVhL,GAAI,uBACJ0I,KAAM,uBACNpB,KAAM,0BACNqB,MAAO,0BACPN,QAAQ,iFACP,CACDG,SAAUqE,GACV7M,GAAI,yBACJ0I,KAAM,yBACNpB,KAAM,mBACNqB,MAAO,mBACPN,QAAQ,yDAADzI,OAA2DyF,EAA+B,IAAhBiQ,GAAoB,+EACrGvJ,IAAK,EACLC,IAAK,IAGP,MAAO,CACLvC,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR8G,eAAe,EACfgB,sBAAsB,EACtBC,uBAAwB,IAE1B5H,kBAAoB7H,IAClB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAgB5B,OAbAjE,EAAE5B,EAAMC,QAAW4Q,EAAE0G,cAAiBe,EAAgB,EACtD1W,EAAE5B,EAAMoB,QAAWyP,EAAE0H,qBAAwB,GAAO,EAGpD3W,EAAE+E,eAAkBkK,EAAE0G,cAAiBD,EAAuBvH,EAC9DnO,EAAEgF,eAAiBoJ,EACnBpO,EAAEiF,aAAeoJ,EACjBrO,EAAEkF,aAAgB+I,GAAK,EAAKjO,EAAE+E,cAAgB,EAG9C/E,EAAE+C,eAAiBkM,EAAE2H,uBAAyBH,EAC9CzW,EAAEsF,WAAc2I,GAAK,EAAK,GAAO,EAE1BjO,CAAC,EAEVoP,oBAAqBA,CAAClI,EAAoCC,KACxD,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIkH,EAAK,EAMf,GAJAlH,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KACzC0B,EAAEiD,WAAajD,EAAEgF,cAAgBhF,EAAE5B,EAAME,KACzC0B,EAAEkD,SAAWlD,EAAEiF,YAAcjF,EAAE5B,EAAME,KAEjC2Q,EAAE0G,cAAe,CACnB,MAAMvO,EAAWuN,EAAuBxN,EAAQqJ,aAC1C,gBAAE5I,EAAe,cAAEH,GAAkBR,EAAuBC,EAAGC,EAASC,GAC9EpH,EAAEmD,SAAWnD,EAAEkF,aAAelF,EAAE5B,EAAME,KAAOmJ,EAAgBG,EAC/D,KAAO,CACL,MAAM,gBAAEA,EAAe,cAAEH,GAAkBR,EAAuBC,EAAGC,EAnEpDnD,KAoEjBhE,EAAEmD,SAAWnD,EAAEkF,aAAelF,EAAE5B,EAAME,KAAOmJ,EAAgBG,EAC/D,GAEH,EtBvBD,KuBhEeqG,IACf,MAAM4I,EAAmB/O,EAAMmG,EAAG,IAAM,KAClC6I,EAAczO,EAAI4F,EAAG,GAAM,KAC3B8I,EAAuBjP,EAAMmG,EAAG,GAAM,KACtC+I,EAAgClP,EAAMmG,EAAG,GAAM,MAAUA,GAAK,EAAK,GAAO,GAC1E0D,EAAgBzJ,EAAO+F,EAAG,GAAM,MAAUA,GAAK,EAAK,GAAO,GAE3DE,EAAe7F,EAAM2F,EAAG,EAAM,KAC9BG,EAAetG,EAAMmG,EAAG,EAAG,GAC3BI,EAAahG,EAAI4F,EAAG,EAAG,GAEvBzE,EAAU,CAAC,CACfG,SAAUwC,GACVhL,GAAI,kBACJ0I,KAAM,kBACNpB,KAAM,mBACNqB,MAAO,mBACPN,QAAQ,kEAADzI,OAAoEyF,EAAsC,IAAvBuQ,GAA2B,aAAAhW,OAAYyF,EAAkC,IAAnBqQ,GAAuB,2GAAA9V,OAA0GyF,EAA+C,IAAhCwQ,GAAoC,yDACnU,CACDrN,SAAUwC,GACVhL,GAAI,eACJ0I,KAAM,eACNpB,KAAM,iBACNqB,MAAO,iBACPN,QAAQ,gEACP,CACDG,SAAUwC,GACVhL,GAAI,aACJ0I,KAAM,aACNpB,KAAM,eACNqB,MAAO,eACPN,QAAQ,6EAADzI,OAA+EyF,EAAesQ,GAAY,qBAChH,CACDnN,SAAUwC,GACVhL,GAAI,aACJ0I,KAAM,aACNpB,KAAM,kBACNqB,MAAO,kBACPN,QAAQ,oGACRwC,SAAUiC,EAAI,IAGhB,MAAO,CACLrD,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRoI,iBAAiB,EACjBC,cAAc,EACdnE,YAAY,EACZoE,YAAY,IAEdnI,kBAAoB7H,IAClB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAiB5B,OAdAjE,EAAE5B,EAAMoB,QAAWyO,GAAK,GAAKgB,EAAE8D,WAAc,GAAO,EACpD/S,EAAE5B,EAAMoB,QAAWyP,EAAEiI,aAAgB,GAAO,EAC5ClX,EAAE5B,EAAMC,QAAW4Q,EAAEgI,gBAAmBJ,EAAmB,EAG3D7W,EAAE+E,eAAiBoJ,EACnBnO,EAAEgF,eAAiBoJ,EACnBpO,EAAEiF,aAAeoJ,EAGjBrO,EAAEoF,aAAe,GACjBpF,EAAE+C,eAAkBkM,EAAEkI,WAAcL,EAAc,EAClD9W,EAAEoX,0BAA6BnI,EAAEgI,gBAAmBD,EAAgCrF,EAAgB,EAE7F3R,CAAC,EAEVoP,oBAAsBlI,IACpB,MAAMlH,EAAIkH,EAAElH,EAEZA,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KAAO0B,EAAEoX,0BAA4BpX,EAAE5B,EAAME,KACtF0B,EAAEiD,WAAajD,EAAEgF,cAAgBhF,EAAE5B,EAAME,KACzC0B,EAAEkD,SAAWlD,EAAEiF,YAAcjF,EAAE5B,EAAME,IAAI,EAE5C,EvBbD,KFnEc2P,IACd,MAAME,EAAe/F,EAAS6F,EAAG,EAAM,KACjCG,EAAe7F,EAAS0F,EAAG,EAAG,GAC9BI,EAAalG,EAAO8F,EAAG,EAAM,MAE7BzE,EAAU,CAAC,CACfG,SAAUwC,GACVhL,GAAI,cACJ0I,KAAM,cACNpB,KAAM,eACNqB,MAAO,eACPN,QAAQ,oFAIP,CACDG,SAAUwC,GACVhL,GAAI,iBACJ0I,KAAM,iBACNpB,KAAM,mBACNqB,MAAO,mBACPN,QAAQ,qFACRwC,SAAUiC,EAAI,IAGhB,MAAO,CACLrD,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRwI,aAAa,EACbC,gBAAgB,IAElBtI,kBAAoB7H,IAClB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAa5B,OAVAjE,EAAE5B,EAAMC,QAAW4Q,GAAK,GAAKA,EAAEoI,YAAe,GAAO,EAGrDrX,EAAE+E,eAAiBoJ,EACnBnO,EAAEgF,eAAiBoJ,EACnBpO,EAAEiF,aAAeoJ,EAGjBrO,EAAEqE,SAAY4J,GAAK,GAAKgB,EAAEqI,eAAkB,GAAO,EAE5CtX,CAAC,EAEVoP,oBAAsBlI,IACpB,MAAMlH,EAAIkH,EAAElH,EAEZA,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KACzC0B,EAAEiD,WAAajD,EAAEgF,cAAgBhF,EAAE5B,EAAME,KACzC0B,EAAEkD,SAAWlD,EAAEiF,YAAcjF,EAAE5B,EAAME,IAAI,EAI9C,EEWC,KwBnEc2P,IACd,MAAME,EAAe7F,EAAM2F,EAAG,EAAM,KAC9BG,EAAetG,EAAMmG,EAAG,EAAM,KAC9BI,EAAahG,EAAI4F,EAAG,EAAM,MAC1BK,EAAapG,EAAO+F,EAAG,IAAM,MAEnC,IAAI7G,EAAW,EAEf,MAAMoC,EAAU,CAAC,CACfG,SAAUwC,GACVhL,GAAI,gBACJ0I,KAAM,gBACNpB,KAAM,gBACNqB,MAAO,gBACPN,QAAQ,8DACP,CACDG,SAAUqE,GACV7M,GAAI,sBACJ0I,KAAM,sBACNpB,KAAM,wBACNqB,MAAO,wBACPN,QAAQ,uDACR0D,IAAK,EACLC,IAAK,IACJ,CACDxD,SAAUqE,GACV7M,GAAI,gBACJ0I,KAAM,gBACNpB,KAAM,gCACNqB,MAAO,gCACPN,QAAQ,6FACR0D,IAAK,EACLC,IAAK,IACJ,CACDxD,SAAUwC,GACVhL,GAAI,YACJ0I,KAAM,YACNpB,KAAM,cACNqB,MAAO,cACPN,QAAQ,gIACRwC,SAAUiC,EAAI,GACb,CACDtE,SAAUqE,GACV7M,GAAI,2BACJ0I,KAAM,2BACNpB,KAAM,uBACNqB,MAAO,uBACPN,QAAQ,8PACR0D,IAAK,EACLC,IAAK,EACLnB,SAAUiC,EAAI,IAIhB,MAAO,CACLrD,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR0I,eAAe,EACfC,oBAAqB,GACrBC,cAAe,GACfC,WAAW,EACXC,yBAA0B,IAE5B3I,kBAAoB7H,IAClB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAE5BgL,EAAEuI,oBAAsB1Q,KAAKqG,IAAI8B,EAAEuI,oBAAqBvI,EAAEwI,eAG1DzX,EAAE5B,EAAMK,KAAQwQ,EAAEsI,cAAiB,GAAO,EAG1CvX,EAAE+E,eAAiBoJ,EACnBnO,EAAEgF,eAAiBoJ,EACnBpO,EAAEiF,aAAeoJ,EACjBrO,EAAEkF,aAAeoJ,EAGjBtO,EAAE8E,cAAiBmK,EAAEuI,qBAAuB,EAAK,IAAO,EACxDxX,EAAEoF,aAAgB6I,GAAK,GAAKgB,EAAEyI,UAAa,GAAO,EAClD1X,EAAEqF,aAAgB4I,GAAK,GAAKgB,EAAEyI,UAAa,GAAO,EAClD1X,EAAEsF,WAAc2I,GAAK,GAAKgB,EAAEyI,UAAa,GAAO,EAEhD1X,EAAE4F,mBAAsBqI,GAAK,EAAkC,IAA7BgB,EAAE0I,yBAAkC,EAGtE,MAAMC,EAAS3I,EAAEuI,oBACXK,EAAO5I,EAAEwI,cACTK,EAAiB3Q,EAAQqJ,YAAc,EAAK,EAAI,EAChDuH,EAAgB5Q,EAAQqJ,YAAc,EAAK,EAAI,EAIrD,IAAIwH,EAAmBF,GAAiBF,EAASC,GAGjDG,GANsB7Q,EAAQqJ,YAAc,EAAK,EAAI,EAOrD,IAAIyH,EAAc,EAClB,IAAK,IAAIrY,EAAI,EAAGA,EAAIiY,EAAMjY,IACxBqY,GAAenR,KAAKoG,IAAI,EAAG8K,IAAqB,EAAIH,GACpDG,GAAoBD,EAKtB,OAFA3Q,EAAyB,IAAd6Q,EAEJjY,CAAC,EAEVoP,oBAAqBA,CAAClI,EAAGC,KACvB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIkH,EAAElH,EAEZA,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KACzC0B,EAAEiD,WAAajD,EAAEgF,cAAgBhF,EAAE5B,EAAME,KACzC0B,EAAEkD,SAAWlD,EAAEiF,YAAcjF,EAAE5B,EAAME,KAErC,MAAM,gBAAEsJ,EAAe,cAAEH,GAAkBR,EAAuBC,EAAGC,EAASC,GAC9EpH,EAAEmD,SAAWnD,EAAEkF,YAAc+J,EAAEwI,eAAiBzX,EAAE5B,EAAME,KAAOmJ,EAAgBG,EAAgB,EAGpG,ExBpDC,KyBhEcqG,IACd,MAAMiK,EAAwB3P,EAAS0F,EAAG,GAAM,MAG1CE,EAAe/F,EAAS6F,EAAG,EAAK,KAChCuB,EAA0BjH,EAAS0F,EAAG,GAAM,KAC5CkK,EAAyB5P,EAAS0F,EAAG,EAAM,KAC3CyB,EAAgBvH,EAAO8F,EAAG,GAAM,MAChCmK,EAAejQ,EAAO8F,EAAG,EAAM,MAC/BoK,EAAmBlQ,EAAO8F,EAAG,EAAM,MACnCqK,EAAgB9P,EAAUyF,EAAG,IAAM,MACnCsK,EAAe/P,EAAUyF,EAAG,IAAM,MAElCoD,EAAoB,CACxB,EAAGrN,mBACH,EAAGA,MACH,EAAGA,oBAGCwF,EAAU,CAAC,CACfG,SAAUwC,GACVhL,GAAI,sBACJ0I,KAAM,sBACNpB,KAAM,kBACNqB,MAAO,kBACPN,QAAQ,4BAADzI,OACcyF,EAAuC,IAAxB0R,GAA4B,mIAAAnX,OAEjCyF,EAAe,IAAW,aAExD,CACDmD,SAAUqE,GACV7M,GAAI,qBACJ0I,KAAM,qBACNpB,KAAM,iBACNqB,MAAO,iBACPN,QAAQ,wJAADzI,OAC2DyF,EAAegS,IAA4B,oBAC7GtL,IAAK,EACLC,IArC4B,GAsC5BP,SAAS,GACR,CACDjD,SAAUqE,GACV7M,GAAI,wBACJ0I,KAAM,wBACNpB,KAAM,mBACNqB,MAAO,mBACPN,QAAQ,uBAADzI,OAAyByF,EAAe,IAAW,4BAC1D0G,IAAK,EACLC,IAAK,EACLnB,SAAUiC,EAAI,IAGhB,MAAO,CACLrD,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR4J,qBAAqB,EACrBC,mBAvD0B,GAwD1BC,sBAAuB,IAEzB3J,kBAAoB7H,IAClB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAc5B,OAXAjE,EAAE5B,EAAMK,KAAQwP,GAAK,GAAKgB,EAAEwJ,oBAAuB,IAAO,EAC1DzY,EAAE5B,EAAMW,OAAUkP,GAAK,EAA+B,GAA1BgB,EAAE0J,sBAA+B,EAG7D3Y,EAAE+E,eAAiBoJ,EAInBnO,EAAE+C,eAAiBkM,EAAEwJ,oBAAsBP,EAAwB,EACnElY,EAAEuF,WAAa,GAERvF,CAAC,EAEVoP,oBAAqBA,CAAClI,EAAoCC,KACxD,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIkH,EAAK,EAEX+H,EAAEwJ,qBACJzY,EAAEgD,WAAawM,EAA0BxP,EAAE5B,EAAME,KACjD0B,EAAEgD,WAAamV,EAAyBnY,EAAE5B,EAAMY,KAEhDgB,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KAG3C0B,EAAEkD,SAAWwM,EAAgB1P,EAAE5B,EAAME,KACrC0B,EAAEkD,SAAWkV,EAAepY,EAAE5B,EAAMY,IACpCgB,EAAEkD,SAAWmV,EAAmBpJ,EAAEyJ,mBAAqB1Y,EAAE5B,EAAMY,IAC/DgB,EAAEkD,SAAY+K,GAAK,GAA2B,GAAtB9G,EAAQqJ,WAAmB,IAAOvB,EAAEyJ,mBAAqB1Y,EAAE5B,EAAMY,IAAM,EAE/F,MAAMoI,EAAWiK,EAAkBlK,EAAQqJ,aACrC,gBAAE5I,EAAe,cAAEH,GAAkBR,EAAuBC,EAAGC,EAASC,GAC9EpH,EAAEmD,SAAWmV,GAAiBtY,EAAE5B,EAAME,KAAOmJ,EAAgBG,GAE7D5H,EAAEmD,SAAWoV,EAAevY,EAAE5B,EAAMY,IACpCgB,EAAEmD,SAAY8K,GAAK,EAAK,GAAOjO,EAAE5B,EAAMY,IAAM,CAAC,EAGnD,EzBrCC,K0BrEeiP,IACf,MAAM2K,EAAqB1Q,EAAO+F,EAAG,GAAM,KACrC4K,EAAexQ,EAAI4F,EAAG,GAAM,MAC5B6K,EAA0B7K,GAAK,EAAK,EAAI,EAExCE,EAAe7F,EAAM2F,EAAG,EAAM,KAC9BG,EAAetG,EAAMmG,EAAG,IAAM,MAC9B8K,EAAuBjR,EAAMmG,EAAG,EAAM,KACtCI,EAAahG,EAAI4F,EAAG,IAAM,OAE1BzE,EAAU,CAAC,CACfG,SAAUwC,GACVhL,GAAI,iBACJ0I,KAAM,iBACNpB,KAAM,mBACNqB,MAAO,mBACPN,QAAQ,8BAADzI,OAAgCyF,EAA8B,IAAfqS,GAAmB,uKAExE,CACDlP,SAAUqE,GACV7M,GAAI,iBACJ0I,KAAM,iBACNpB,KAAM,mBACNqB,MAAO,mBACPN,QAAQ,gEACR0D,IAAK,EACLC,IAAK,GACJ,CACDxD,SAAUqE,GACV7M,GAAI,qBACJ0I,KAAM,qBACNpB,KAAM,uBACNqB,MAAO,uBACPN,QAAQ,8GACR0D,IAAK,EACLC,IAAK,IACJ,CACDxD,SAAUqE,GACV7M,GAAI,sBACJ0I,KAAM,sBACNpB,KAAM,yBACNqB,MAAO,yBACPN,QAAQ,oFAADzI,OAAsFyF,EAAoC,IAArBoS,GAAyB,gHAGrI1L,IAAK,EACLC,IAAK2L,GAEP,CACEnP,SAAUwC,GACVhL,GAAI,qBACJ0I,KAAM,qBACNpB,KAAM,wBACNqB,MAAO,wBACPN,QAAQ,4FACRwC,SAAUiC,EAAI,IAGhB,MAAO,CACLrD,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRmK,gBAAgB,EAChBC,oBAAoB,EACpBpH,eAAgB,EAChBqH,mBAAoB,GACpBC,oBAAqBL,IAEvB9J,kBAAoB7H,IAClB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAG5BjE,EAAE5B,EAAMG,KAAQ0P,GAAK,EAAK,GAAO,EACjCjO,EAAE5B,EAAMC,QAAW4Q,EAAE+J,eAAkBH,EAAe,EACtD7Y,EAAE5B,EAAMoB,QAAWyP,EAAEkK,oBAAuBP,EAI5C,MAAMQ,EAAuBhL,EAC7B,IAAIiL,EAAqB,EACzBA,GAAuBpK,EAAE4C,gBAAkB,EAAKkH,EAAuB,EACvEM,GAAuBpK,EAAE+J,gBAAkB/J,EAAE4C,gBAAkB,EAA4B,GAAvBkH,EAA6B,EACjGM,GAAuBpK,EAAE+J,gBAAkB/J,EAAE4C,gBAAkB,EAA4B,GAAvBkH,EAA6B,EACjG,MAAMO,EAA0BD,GAAsBA,EAAqBD,GAW3E,OATApZ,EAAE+E,eAAiBoJ,EACnBnO,EAAEgF,eAAiBoU,EACnBpZ,EAAEgF,eAAiBqU,EACnBrZ,EAAEiF,aAAeoJ,EAGjBrO,EAAEqF,aAAsC,KAAvB4J,EAAEiK,mBAA6BI,EAChDtZ,EAAEsE,eAAkB2J,GAAK,GAAKgB,EAAEgK,mBAAuB,GAAY,EAE5DjZ,CAAC,EAEVoP,oBAAsBlI,IACpB,MAAMlH,EAAIkH,EAAElH,EAEZA,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KACzC0B,EAAEiD,WAAajD,EAAEgF,cAAgBhF,EAAE5B,EAAME,KACzC0B,EAAEkD,SAAWlD,EAAEiF,YAAcjF,EAAE5B,EAAME,IAAI,EAG5C,E1BlCD,K2BxEc2P,IACd,MAAMsL,EAAoBhR,EAAS0F,EAAG,GAAM,KACtCuL,EAAiBjR,EAAS0F,EAAG,IAAM,MACnCwL,EAAiBlR,EAAS0F,EAAG,IAAM,MACnCyL,EAAmBlR,EAAUyF,EAAG,GAAM,KAEtCE,EAAe/F,EAAS6F,EAAG,EAAM,KACjCG,EAAe7F,EAAS0F,EAAG,EAAG,GAC9BI,EAAalG,EAAO8F,EAAG,IAAM,OAI7BzE,EAAU,CAAC,CACfG,SAAUwC,GACVhL,GAAI,oBACJ0I,KAAM,oBACNpB,KAAM,qBACNqB,MAAM,qBACNN,QAAQ,2EAADzI,OAA6EyF,EAAmC,IAApB+S,GAAwB,mGAG1H,CACD5P,SAAUwC,GACVhL,GAAI,UACJ0I,KAAM,UACNpB,KAAM,WACNqB,MAAM,sBACNN,QAAQ,2HAADzI,OAA4HyF,EAAgC,IAAjBiT,GAAqB,sBAAA1Y,OAAqByF,EAAgC,IAAjBgT,GAAqB,sDAAAzY,OAAqDyF,EAA4B,IAAb6H,GAAiB,yCACpT,CACD1E,SAAUwC,GACVhL,GAAI,mBACJ0I,KAAM,mBACNpB,KAAM,wBACNqB,MAAO,wBACPN,QAAQ,oFACRwC,SAAUiC,EAAI,IAGhB,MAAO,CAELrD,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR8K,yBAAyB,EACzBjG,SAAS,EACTkG,kBAAkB,IAEpB5K,kBAAoB7H,IAClB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAkB5B,OAfAjE,EAAE5B,EAAMC,QAAW4Q,EAAE4K,kBAAqBN,EAAoB,EAC9DvZ,EAAE5B,EAAMK,KAAQwQ,EAAEyE,SAAWzE,EAAE4K,kBAAqBJ,EAAiB,EACrEzZ,EAAE5B,EAAMI,KAAQyQ,EAAEyE,SAAWzE,EAAE4K,kBAAqBL,EAAiB,EACrExZ,EAAE5B,EAAMoB,QAAWyO,GAAK,GAAKgB,EAAE2K,iBAAoB,GAAO,EAG1D5Z,EAAE+E,eAAiBoJ,EACnBnO,EAAE+E,eAAiB2U,EACnB1Z,EAAEgF,eAAiBoJ,EACnBpO,EAAEiF,aAAeoJ,EAGjBrO,EAAE+C,eAAiB,IACnB/C,EAAE+C,eAAkBkL,GAAK,GAAKgB,EAAE4K,kBAAqB,GAAO,EAErD7Z,CAAC,EAEVoP,oBAAsBlI,IACpB,MAAMlH,EAAIkH,EAAElH,EAEZA,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KACzC0B,EAAEiD,WAAajD,EAAEgF,cAAgBhF,EAAE5B,EAAME,KACzC0B,EAAEkD,SAAWlD,EAAEiF,YAAcjF,EAAE5B,EAAME,IAAI,EAE5C,E3BFD,K4BpEc2P,IACd,MAAM6L,EAAmBvR,EAAS0F,EAAG,IAAM,MACrC8L,EAAmBxR,EAAS0F,EAAG,IAAM,MACrC+L,EAA0BxR,EAAUyF,EAAG,IAAM,MAE7CE,EAAe/F,EAAS6F,EAAG,GAAM,KACjCG,EAAe7F,EAAS0F,EAAG,EAAG,GAC9BI,EAAalG,EAAO8F,EAAG,EAAM,MAE7BzE,EAAU,CAAC,CACfG,SAAUwC,GACVhL,GAAI,cACJ0I,KAAM,cACNpB,KAAM,eACNqB,MAAO,eACPN,QAAQ,kIAADzI,OAAoIyF,EAAkC,IAAnBuT,GAAuB,sDAAAhZ,OAAqDyF,EAAkC,IAAnBsT,GAAuB,OAC3Q,CACDnQ,SAAUqE,GACV7M,GAAI,sBACJ0I,KAAM,sBACNpB,KAAM,kBACNqB,MAAO,kBACPN,QAAQ,iQACR0D,IAAK,EACLC,IAAK,IACLP,SAAS,EACTZ,SAAUiC,EAAI,IAGhB,MAAO,CACLrD,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRgB,aAAa,EACboK,oBAAqB,MAEvBjL,kBAAoB7H,IAClB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAc5B,OAXAjE,EAAE5B,EAAMI,KAAQyP,GAAK,EAAK,GAAO,EACjCjO,EAAE5B,EAAMK,KAAQwQ,EAAEY,YAAeiK,EAAmB,EAGpD9Z,EAAE+E,eAAiBoJ,EACnBnO,EAAEgF,eAAiBoJ,EACnBpO,EAAEiF,aAAeoJ,EAGjBrO,EAAEsE,eAAkB,EAAI0V,EAEjBha,CAAC,EAEVoP,oBAAqBA,CAAClI,EAAoCC,KACxD,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIkH,EAAK,EAEflH,EAAE5B,EAAMY,KAAQiQ,EAAEY,YAAekK,EAAmB/Z,EAAE5B,EAAMY,IAAM,EAElEgB,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAMY,IACzCgB,EAAEkD,SAAWlD,EAAEiF,YAAcjF,EAAE5B,EAAMY,IACrCgB,EAAEkD,SAAY+K,GAAK,EAAK,EAAOgB,EAAEgL,oBAAsBja,EAAE5B,EAAMY,IAAM,CAAC,EAG3E,E5BKC,K6B1EeiP,IACf,MAAMuL,EAAiBrR,EAAO8F,EAAG,GAAM,KACjCiM,EAAoB/R,EAAO8F,EAAG,GAAM,KACpCkM,EAAoBhS,EAAO8F,EAAG,GAAM,KAEpCE,EAAe/F,EAAS6F,EAAG,EAAM,KACjCG,EAAe7F,EAAS0F,EAAG,IAAM,MACjCI,EAAalG,EAAO8F,EAAG,IAAM,MAC7BK,EAAa9F,EAAUyF,EAAG,GAAM,KAIhCzE,EAAU,CAAC,CACfG,SAAUwC,GACVhL,GAAI,gBACJ0I,KAAM,gBACNpB,KAAM,kBACNqB,MAAO,kBACPN,QAAQ,iHAADzI,OAAmHyF,EAAgC,IAAjBgT,GAAqB,OAC7J,CACD7P,SAAUwC,GACVhL,GAAI,sBACJ0I,KAAM,sBACNpB,KAAM,wBACNqB,MAAO,wBACPN,QAAQ,mEAADzI,OAAqEyF,EAAmC,IAApB2T,GAAwB,oCAAApZ,OAAmCyF,EAAmC,IAApB0T,GAAwB,wHAAAnZ,OAE5FyF,EAAgC,IAAjBgT,GAAqB,kMAMpI,CACD7P,SAAUwC,GACVhL,GAAI,cACJ0I,KAAM,cACNpB,KAAM,gBACNqB,MAAO,gBACPN,QAAS,qEACR,CACDG,SAAUwC,GACVhL,GAAI,iBACJ0I,KAAM,iBACNpB,KAAM,mBACNqB,MAAO,mBACPN,QAAS,4FACTwC,SAAWiC,EAAI,GACd,CACDtE,SAAUwC,GACVhL,GAAI,gBACJ0I,KAAM,gBACNpB,KAAM,qCACNqB,MAAO,qCACPN,QAAS,iFACTwC,SAAWiC,EAAI,IAGjB,MAAO,CACLrD,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRuL,eAAe,EACfC,qBAAqB,EACrBC,aAAa,EACbC,gBAAgB,EAChBC,eAAe,IAEjBxL,kBAAoB7H,IAClB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GA8B5B,OA3BAjE,EAAE5B,EAAMK,KAAQwQ,EAAEmL,cAAiB,GAAO,EAC1Cpa,EAAE5B,EAAMI,KAAQyQ,EAAEmL,eAAiBnL,EAAEoL,oBAAuBb,EAAiB,EAC7ExZ,EAAE5B,EAAMK,KAAQwQ,EAAEoL,oBAAuBF,EAAoB,EAC7Dna,EAAE5B,EAAMI,KAAQyQ,EAAEoL,oBAAuBH,EAAoB,EAC7Dla,EAAE5B,EAAMmB,MAAS0P,EAAEoL,oBAAuB,GAAO,EACjDra,EAAE5B,EAAMoB,QAAWyP,EAAEqL,YAAe,GAAO,EAC3Cta,EAAE5B,EAAMS,MAASoP,GAAK,GAAKgB,EAAEoL,oBAAuB,GAAO,EAG3Dra,EAAE+E,eAAiBoJ,EACnBnO,EAAEgF,eAAiBoJ,EACnBpO,EAAEiF,aAAeoJ,EACjBrO,EAAEkF,aAAeoJ,EAEjBtO,EAAE+E,eAAkBoC,EAAQmP,mBAAsB,GAAO,EACzDtW,EAAEgF,eAAkBmC,EAAQmP,mBAAsB,GAAO,EACzDtW,EAAEiF,aAAgBkC,EAAQmP,mBAAsB,GAAO,EACvDtW,EAAEkF,aAAgBiC,EAAQmP,mBAAsB,GAAO,EAEvDtW,EAAE+E,eAAkBkJ,GAAK,GAAKgB,EAAEsL,eAAkB,GAAO,EACzDva,EAAEgF,eAAkBiJ,GAAK,GAAKgB,EAAEsL,eAAkB,GAAO,EACzDva,EAAEiF,aAAgBgJ,GAAK,GAAKgB,EAAEsL,eAAkB,GAAO,EACvDva,EAAEkF,aAAgB+I,GAAK,GAAKgB,EAAEsL,eAAkB,GAAO,EAGvDva,EAAEqE,SAAY4J,GAAK,GAAKgB,EAAEuL,cAAiB,IAAO,EAE3Cxa,CAAC,EAEVoP,oBAAqBA,CAAClI,EAAGC,KACvB,MAAMnH,EAAIkH,EAAElH,EAEZA,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KACzC0B,EAAEiD,WAAajD,EAAEgF,cAAgBhF,EAAE5B,EAAME,KACzC0B,EAAEkD,SAAWlD,EAAEiF,YAAcjF,EAAE5B,EAAME,KAErC,MAAM,gBAAEsJ,EAAe,cAAEH,GAAkBR,EAAuBC,EAAGC,EAlGxDnD,KAmGbhE,EAAEmD,SAAWnD,EAAEkF,aAAelF,EAAE5B,EAAME,KAAOmJ,EAAgBG,EAAgB,EAEhF,E7BpCD,K8BtEcqG,IACd,MAAMwM,EAA+BjS,EAAUyF,EAAG,IAAM,MAClDyM,EAAmBzM,GAAK,EAAK,EAAI,EAEjCE,EAAe/F,EAAS6F,EAAG,EAAM,KACjCG,EAAe7F,EAAS0F,EAAG,IAAM,MACjCI,EAAalG,EAAO8F,EAAG,IAAM,OAC7B8D,EAAaxJ,EAAS0F,EAAG,MAAO,KAEhCzE,EAAU,CAAC,CACfG,SAAUqE,GACV7M,GAAI,qBACJ0I,KAAM,qBACNpB,KAAM,wBACNqB,MAAO,wBACPN,QAAQ,qDAADzI,OAAuDyF,EAA8C,IAA/BiU,GAAmC,iEAAA1Z,OAAgEyF,EAAekU,GAAgB,WAC/MxN,IAAK,EACLC,IAAKuN,GACL,CACA/Q,SAAUwC,GACVhL,GAAI,cACJ0I,KAAM,cACNpB,KAAM,eACNqB,MAAO,eACPN,QAAQ,oBAADzI,OAAsByF,EAAe,IAAW,wCACtD,CACDmD,SAAUwC,GACVhL,GAAI,mBACJ0I,KAAM,mBACNpB,KAAM,sBACNqB,MAAO,sBACPN,QAAQ,mIACRwC,SAAUiC,EAAI,IAGhB,MAAO,CACLrD,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR8L,mBAAoBD,EACpBE,aAAa,EACbC,kBAAkB,IAEpB7L,kBAAoB7H,IAClB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAgB5B,OAXAjE,EAAE+E,eAAiBoJ,EACnBnO,EAAEgF,eAAiBoJ,EACnBpO,EAAEiF,aAAeoJ,EACjBrO,EAAEmF,aAAe4M,EACjB/R,EAAEmF,aAAgB8I,GAAK,GAAKgB,EAAE4L,iBAAoB,GAAO,EAIzD7a,EAAE+C,eAAkBkM,EAAE2L,YAAe,GAAO,EAC5C5a,EAAEmE,iBAAmB8K,EAAE0L,mBAAqBF,EAErCza,CAAC,EAEVoP,oBAAsBlI,IACpB,MAAMlH,EAAIkH,EAAK,EAEflH,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KACzC0B,EAAEiD,WAAajD,EAAEgF,cAAgBhF,EAAE5B,EAAME,KACzC0B,EAAEkD,SAAWlD,EAAEiF,YAAcjF,EAAE5B,EAAME,KACrC0B,EAAEoD,SAAWpD,EAAEmF,YAAcnF,EAAE5B,EAAME,IAAI,EAG9C,E9BAC,K+BvEc2P,IACd,MAAME,EAAe7F,EAAM2F,EAAG,EAAK,KAC7BG,EAAetG,EAAMmG,EAAG,EAAG,GAC3BI,EAAahG,EAAI4F,EAAG,EAAG,GAEvBzE,EAAU,CAAC,CACfG,SAAUwC,GACVhL,GAAI,mBACJ0I,KAAM,mBACNpB,KAAM,sBACNqB,MAAO,sBACPN,QAAQ,8FAADzI,OAAgGyF,EAAe,IAAW,mBAChI,CACDmD,SAAUwC,GACVhL,GAAI,yBACJ0I,KAAM,yBACNpB,KAAM,4BACNqB,MAAO,4BACPN,QAAQ,qCAADzI,OAAuCyF,EAAe,IAAW,gBACvE,CACDmD,SAAUwC,GACVhL,GAAI,mBACJ0I,KAAM,mBACNpB,KAAM,sBACNqB,MAAO,sBACPN,QAAQ,4BAADzI,OAA8ByF,EAAe,IAAW,qBAC/DwF,SAAUiC,EAAI,GACb,CACDtE,SAAUqE,GACV7M,GAAI,8BACJ0I,KAAM,8BACNpB,KAAM,mCACNqB,MAAO,mCACPN,QAAQ,wEAADzI,OAA0EyF,EAAe,IAAW,gEAC3G0G,IAAK,EACLC,IAAK,EACLnB,SAAUiC,EAAI,IAGhB,MAAO,CACLrD,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRiM,kBAAkB,EAClBC,wBAAwB,EACxBC,kBAAkB,EAClBC,4BAA6B,IAE/BjM,kBAAoB7H,IAClB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAe5B,OAZAjE,EAAE5B,EAAMW,OAAUkQ,EAAE6L,iBAAoB,GAAO,EAC/C9a,EAAE5B,EAAMgB,MAAS6O,GAAK,GAAKgB,EAAE+L,iBAAoB,IAAO,EAGxDhb,EAAE+E,eAAiBoJ,EACnBnO,EAAEgF,eAAiBoJ,EACnBpO,EAAEiF,aAAeoJ,EAGjBrO,EAAEsE,eAAkB2K,EAAE8L,uBAA2B,GAAY,EAC7D/a,EAAEoE,eAAkB6J,GAAK,EAAqC,GAAhCgB,EAAEgM,4BAAqC,EAE9Djb,CAAC,EAEVoP,oBAAsBlI,IACpB,MAAMlH,EAAIkH,EAAK,EAEflH,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KACzC0B,EAAEiD,WAAa,EACfjD,EAAEkD,SAAW,EACblD,EAAEmD,SAAW,CAAC,EAGnB,E/BHC,KH8BF,GG7BE,KgC1Ea8K,IACb,MAAMiN,EAA0BjN,GAAK,EAAK,GAAK,EACzCkN,EAAsB5S,EAAS0F,EAAG,IAAM,MACxCmN,EAAyB5S,EAAUyF,EAAG,GAAM,KAE5CE,EAAe/F,EAAS6F,EAAG,EAAM,KACjCoN,EAAwBjT,EAAS6F,EAAG,IAAM,MAC1CqN,EAAwBlT,EAAS6F,EAAG,IAAM,MAC1CsN,EAAwBnT,EAAS6F,EAAG,EAAM,KAC1CG,EAAe7F,EAAS0F,EAAG,EAAG,GAC9BI,EAAalG,EAAO8F,EAAG,EAAM,MAE7BzE,EAAU,CAAC,CACfG,SAAUqE,GACV7M,GAAI,gBACJ0I,KAAM,gBACNpB,KAAM,qBACNqB,MAAO,qBACPN,QAAQ,oEAADzI,OAAsEyF,EAA8B,IAAf2H,GAAmB,gHAAApN,OACtCyF,EAAuC,IAAxB6U,GAA4B,gHAAAta,OAC3CyF,EAAuC,IAAxB8U,GAA4B,oJAAAva,OAC3CyF,EAAuC,IAAxB+U,GAA4B,uEACpHrO,IAAK,EACLC,IAAK,GACL,CACAxD,SAAUqE,GACV7M,GAAI,qBACJ0I,KAAM,qBACNpB,KAAM,iBACNqB,MAAO,iBACPN,QAAQ,oMAADzI,OACoEyF,EAAqC,IAAtB2U,GAA0B,mDACpHjO,IAAK,EACLC,IAAK,GACJ,CACDxD,SAAUqE,GACV7M,GAAI,6BACJ0I,KAAM,6BACNpB,KAAM,yBACNqB,MAAO,yBACPN,QAAQ,kIAADzI,OAA+HyF,EAAwC,IAAzB4U,GAA6B,4BAClLlO,IAAK,EACLC,IAAK+N,GACJ,CACDvR,SAAUqE,GACV7M,GAAI,iBACJ0I,KAAM,iBACNpB,KAAM,oBACNqB,MAAO,oBACPN,QAAQ,wKACR0D,IAAK,EACLC,IAAK,EACLnB,SAAUiC,EAAI,IAGhB,MAAO,CACLrD,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR8G,cAAe,EACf6F,mBAAoB,EACpBC,2BAA4BP,EAC5BQ,eAAgB,IAElB1M,kBAAoB7H,IAClB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAoB5B,OAjBAjE,EAAE5B,EAAMI,KAAQ2I,EAAQmP,mBAAsB,IAAO,EACrDtW,EAAE5B,EAAMI,KAAOyQ,EAAEuM,mBAAqBL,EAGtCnb,EAAE+E,eAAiB,CACjB,EAAGoJ,EACH,EAAGkN,EACH,EAAGC,EACH,EAAGC,GACHtM,EAAE0G,eACJ3V,EAAEgF,eAAiBoJ,EACnBpO,EAAEiF,aAAeoJ,EAGjBrO,EAAE+C,eAAiBkM,EAAEwM,2BAA6BL,EAClDpb,EAAEmG,eAAkB8H,GAAK,GAAwB,GAAnBgB,EAAE0G,cAAsB,GAAO1G,EAAEyM,eAAiB,EAEzE1b,CAAC,EAEVoP,oBAAsBlI,IACpB,MAAMlH,EAAIkH,EAAK,EAEflH,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KACzC0B,EAAEkD,SAAWlD,EAAEiF,YAAcjF,EAAE5B,EAAME,IAAI,EAG9C,EhCnBC,KiCxEa2P,IACb,MAAM0N,EAActT,EAAI4F,EAAG,GAAM,MAC3BE,EAAe7F,EAAM2F,EAAG,EAAM,KAC9BG,EAAetG,EAAMmG,EAAG,IAAM,MAC9BI,EAAahG,EAAI4F,EAAG,IAAM,KAC1BK,EAAapG,EAAO+F,EAAG,GAAM,KAE7B2N,EAAoB,CACxB,EAAG,EACH,EAAG5X,IACH,EAAGA,IACH,EAAGA,KAGCwF,EAAyB,CAC7B,CACErI,GAAI,mBACJsH,KAAM,0BACNkB,SAAUwC,GACVrC,MAAO,0BACPN,QAAS,kIAEX,CACErI,GAAI,6BACJsH,KAAM,qBACNkB,SAAUqE,GACVlE,MAAO,+BACPN,QAAQ,wGAADzI,OAA0GyF,EAA6B,IAAdmV,GAAkB,eAClJzO,IAAK,EACLC,IAAKwO,EACL/O,SAAS,GAEX,CACEzL,GAAI,UACJsH,KAAM,WACNkB,SAAUqE,GACVlE,MAAO,8BACPN,QAAQ,oOAADzI,OACgEyF,EAA4B,IAAb8H,GAAiB,8CACvGpB,IAAK,EACLC,IAAK,GAEP,CACEhM,GAAI,WACJsH,KAAM,qBACNkB,SAAUwC,GACVrC,MAAO,uBACPN,QAAS,wEACTwC,SAAWiC,EAAI,IAInB,MAAO,CACLrD,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAAC+M,YAAaA,EAAa5T,QAASkG,EAAGzE,QAASA,IAClFqF,SAAUA,KAAA,CACRgN,kBAAkB,EAClBC,2BAA4BH,EAC5BI,QAAS,EACTC,UAAU,IAEZhN,kBAAoB7H,IAClB,MAAM8H,EAAoB9H,EAAQ+H,sBAC5BlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAgB5B,OAbAjE,EAAE5B,EAAMG,KAAQ0P,GAAK,GAAKgB,EAAE+M,SAAY,GAAO,EAG/Chc,EAAE+E,eAAiBoJ,EACnBnO,EAAEgF,eAAiBoJ,EACnBpO,EAAEiF,aAAeoJ,EACjBrO,EAAEkF,aAAeoJ,EAAcW,EAAE8M,QAGjC/b,EAAEsF,WAAc2J,EAAE4M,iBAAoB,GAAO,EAC7C7b,EAAEsF,WAAa2J,EAAE6M,2BACjB9b,EAAEuF,WAAc0I,GAAK,EAAK,GAAO,EAE1BjO,CAAC,EAEVoP,oBAAqBA,CAAClI,EAAYC,KAChC,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAyBkH,EAAK,EAEpClH,EAAE+C,eAAiB+D,KAAKoG,IAAI,IAAMlN,EAAE5B,EAAMG,KAE1CyB,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KACzC0B,EAAEiD,WAAajD,EAAEgF,cAAgBhF,EAAE5B,EAAME,KACzC0B,EAAEkD,SAAWlD,EAAEiF,YAAcjF,EAAE5B,EAAME,KAErC,MAAM8I,EAAWwU,EAAkB3M,EAAE8M,UAC/B,gBAAEnU,EAAe,cAAEH,GAAkBR,EAAuBC,EAAGC,EAASC,GAC9EpH,EAAEmD,SAAWnD,EAAEkF,aAAelF,EAAE5B,EAAME,KAAOmJ,EAAgBG,EAAgB,EAEhF,EjCrBD,KkC5EcqG,IACd,MAAMyE,EAAkBvK,EAAO8F,EAAG,GAAM,KAClCgO,EAAkB9T,EAAO8F,EAAG,GAAM,MACxC,IAAIiO,EAAsB1T,EAAUyF,EAAG,GAAM,KAE7CiO,GAAwBjO,GAAK,EAAK,GAAO,EAEzC,MAAME,EAAe/F,EAAS6F,EAAG,EAAM,KACjCG,EAAe7F,EAAS0F,EAAG,IAAM,MACjCI,EAAalG,EAAO8F,EAAG,EAAG,GAE1BzE,EAAU,CAAC,CACfG,SAAUwC,GACVhL,GAAI,UACJ0I,KAAM,UACNpB,KAAM,kBACNqB,MAAO,kBACPN,QAAQ,yCAADzI,OAA2CyF,EAAiC,IAAlBkM,GAAsB,iEAAA3R,OAAgEyF,EAAiC,IAAlByV,GAAsB,OAC3L,CACDtS,SAAUwC,GACVhL,GAAI,qBACJ0I,KAAM,qBACNpB,KAAM,uBACNqB,MAAO,uBACPN,QAAQ,mHAADzI,OAAqHyF,EAAqC,IAAtB0V,GAA0B,qBACpK,CACDvS,SAAUwC,GACVhL,GAAI,gBACJ0I,KAAM,gBACNpB,KAAM,kBACNqB,MAAO,kBACPN,QAAQ,sFAADzI,OAAwFyF,EAAe,IAAW,kBACxH,CACDmD,SAAUwC,GACVhL,GAAI,iBACJ0I,KAAM,iBACNpB,KAAM,oBACNqB,MAAO,oBACPN,QAAQ,qCAADzI,OAAuCyF,EAAe,IAAW,iBACxEwF,SAAUiC,EAAI,IAGhB,MAAO,CACLrD,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR6E,SAAS,EACTyI,oBAAoB,EACpBC,eAAe,EACflF,cAAc,IAEhBlI,kBAAoB7H,IAClB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAgB5B,OAXAjE,EAAE+E,eAAiBoJ,EACnBnO,EAAEgF,eAAiBoJ,EACnBpO,EAAEiF,aAAeoJ,EAEjBrO,EAAE5B,EAAMC,QAAW4Q,EAAEyE,QAAWuI,EAAkB,EAClDjc,EAAE5B,EAAMC,QAAW4Q,EAAEmN,cAAiB,GAAO,EAC7Cpc,EAAE5B,EAAMoB,QAAWyO,GAAK,GAAKgB,EAAE0E,eAAkB,GAAO,EAGxD3T,EAAEoE,cAAiB6K,EAAEkN,mBAAsBD,EAAsB,EAE1Dlc,CAAC,EAEVoP,oBAAqBA,CAAClI,EAAoCC,KACxD,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIkH,EAAK,EAEflH,EAAE5B,EAAMqB,MAASwP,EAAEyE,QAAWhB,EAAkB1S,EAAE5B,EAAMqB,KAAO,EAE/DO,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KACzC0B,EAAEiD,WAAajD,EAAEgF,cAAgBhF,EAAE5B,EAAME,KACzC0B,EAAEkD,SAAWlD,EAAEiF,YAAcjF,EAAE5B,EAAME,IAAI,EAG9C,ElCJC,KmChFa2P,IACb,MAAMoO,EAAehU,EAAI4F,EAAG,GAAM,MAC5BE,EAAe7F,EAAM2F,EAAG,GAAM,KAE9BzE,EAAU,CAAC,CACfG,SAAUwC,GACVhL,GAAI,UACJ0I,KAAM,UACNpB,KAAM,WACNqB,MAAO,WACPN,QAAQ,gCAADzI,OAAkCyF,EAA8B,IAAf6V,GAAmB,wCAC1E,CACD1S,SAAUwC,GACVhL,GAAI,YACJ0I,KAAM,YACNpB,KAAM,gBACNqB,MAAO,gBACPN,QAAQ,sEACRwC,SAAUiC,EAAI,GACb,CACDtE,SAAUwC,GACVhL,GAAI,YACJ0I,KAAM,YACNpB,KAAM,cACNqB,MAAO,cACPN,QAAQ,4FACRwC,SAAUiC,EAAI,IAGhB,MAAO,CACLrD,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR6E,SAAS,EACTD,WAAW,EACX6I,WAAW,IAEbtN,kBAAoB7H,IAClB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAY5B,OATAjE,EAAE5B,EAAMoB,QAAWyO,GAAK,GAAKgB,EAAEwE,UAAa,IAAO,EACnDzT,EAAE5B,EAAMC,QAAW4Q,EAAEyE,QAAW2I,EAAe,EAG/Crc,EAAE+E,eAAiBoJ,EAGnBnO,EAAE+C,eAAkBkL,GAAK,GAAKgB,EAAEwE,UAAa,GAAO,EAE7CzT,CAAC,EAEVoP,oBAAsBlI,IACpB,MAAMlH,EAAIkH,EAAElH,EAEZA,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAMY,GAAG,EAGjD,EnCuBC,KN5EciP,IACd,MAAMsO,EAAmBtO,GAAK,EAAK,GAAK,GAElCE,EAAe7F,EAAM2F,EAAG,EAAM,KAC9BG,EAAetG,EAAMmG,EAAG,IAAM,MAC9BI,EAAahG,EAAI4F,EAAG,IAAM,OAC1ByC,EAAqBrI,EAAI4F,EAAG,IAAM,OAClCuO,EAA6BnU,EAAI4F,EAAG,IAAM,OAC1CwO,EAAqBvU,EAAO+F,EAAG,KAAO,MAEtCzE,EAAU,CAAC,CACfG,SAAUwC,GACVhL,GAAI,cACJ0I,KAAM,cACNpB,KAAM,eACNqB,MAAO,eACPN,QAAQ,uDAADzI,OAAyDyF,EAAoC,IAArBkK,GAAyB,sIAAA3P,OACZyF,EAA4C,IAA7BgW,GAAiC,0CAC3I,CACD7S,SAAUqE,GACV7M,GAAI,eACJ0I,KAAM,eACNpB,KAAM,oBACNqB,MAAO,oBACPN,QAAQ,mBAADzI,OAAqByF,EAAoC,IAArBiW,GAAyB,wBAAA1b,OAAuByF,EAAe+V,GAAgB,YAC1HrP,IAAK,EACLC,IAAKoP,GACJ,CACD5S,SAAUqE,GACV7M,GAAI,uBACJ0I,KAAM,uBACNpB,KAAM,oCACNqB,MAAO,oCACPN,QAAQ,wCAADzI,OAA0CyF,EAA4C,IAA7BgW,GAAiC,kBACjGtP,IAAK,EACLC,IAAK,GACJ,CACDxD,SAAUwC,GACVhL,GAAI,eACJ0I,KAAM,eACNpB,KAAM,kBACNqB,MAAO,kBACPN,QAAQ,mFAADzI,OAAqFyF,EAAe,IAAW,iBACtHwF,SAAUiC,EAAI,IAGhB,MAAO,CACLrD,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR6N,aAAa,EACb7L,aAAc0L,EACdI,qBAAsB,EACtB9H,cAAc,IAEhB7F,kBAAoB7H,IAClB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAqB5B,OAlBAjE,EAAE5B,EAAMK,KAAQwQ,EAAE4B,aAAgB4L,EAKlCzc,EAAE5B,EAAMI,KAAQyP,GAAK,EAAwB,IAAlBgB,EAAE4B,aAAuB,EACpD7Q,EAAE5B,EAAMC,QAAW4P,GAAK,GAAKgB,EAAE4F,aAAgB,GAAO,EAGtD7U,EAAE+E,eAAiBoJ,EACnBnO,EAAEgF,eAAiBoJ,EACnBpO,EAAEiF,aAAgBgK,EAAEyN,YAAehM,EAAqBrC,EACxDrO,EAAEiF,aAAgBgK,EAAE0N,qBAAwBH,EAG5Cxc,EAAEsF,WAAc6B,EAAQiK,gBAAkB,GAAO,IAAO,EACxDpR,EAAEgG,aAAgBiI,GAAK,EAAK,GAAO,EAE5BjO,CAAC,EAEVoP,oBAAsBlI,IACpB,MAAMlH,EAAIkH,EAAK,EAEflH,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KACzC0B,EAAEiD,WAAajD,EAAEgF,cAAgBhF,EAAE5B,EAAME,KACzC0B,EAAEkD,SAAWlD,EAAEiF,YAAcjF,EAAE5B,EAAME,KACrC0B,EAAEmD,SAAW,CAAC,EAGnB,EMXC,KoChFe8K,IACf,MAAM2O,EAAmBvU,EAAI4F,EAAG,IAAM,KAChCE,EAAe7F,EAAM2F,EAAG,EAAM,KAC9BG,EAAetG,EAAMmG,EAAG,EAAG,GAC3BI,EAAahG,EAAI4F,EAAG,EAAG,GAEvBzE,EAAU,CAAC,CACfG,SAAUwC,GACVhL,GAAI,iBACJ0I,KAAK,iBACLpB,KAAM,mBACNqB,MAAO,mBACPN,QAAQ,qEAADzI,OAAuEyF,EAAkC,IAAnBoW,GAAuB,iIAGnH,CACDjT,SAAUwC,GACVhL,GAAI,WACJ0I,KAAK,WACLpB,KAAM,uBACNqB,MAAO,uBACPN,QAAS,0GACTwC,SAAWiC,EAAI,IAGjB,MAAO,CACLrD,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRgO,gBAAgB,EAChBb,UAAU,IAEZhN,kBAAoB7H,IAClB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAgB5B,OAbAjE,EAAE5B,EAAMG,KAAO,GACfyB,EAAE5B,EAAMG,KAAQ0P,GAAK,GAAKgB,EAAE+M,SAAY,EAAO,EAG/Chc,EAAE+E,eAAiBoJ,EACnBnO,EAAEgF,eAAiBoJ,EACnBpO,EAAEiF,aAAeoJ,EAGjBrO,EAAEqE,SAAY4K,EAAE4N,eAAkBD,EAAmB,EACrD5c,EAAEkE,WAAc+J,GAAK,GAAKgB,EAAE4N,eAAkB,GAAO,EACrD7c,EAAE5B,EAAMC,QAAW4P,GAAK,GAAK9G,EAAQ2J,oBAAuB,GAAO,EAE5D9Q,CAAC,EAEVoP,oBAAsBlI,IACpB,MAAMlH,EAAIkH,EAAK,EAET4V,EAAStW,GAA8B,IAAdxG,EAAE5B,EAAMG,IAAY,KAAO,IAC1DyB,EAAE+C,eAAmD,IAAlC+D,KAAKiW,MAAMjW,KAAKqG,IAAI,EAAG2P,IAE1C9c,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KACzC0B,EAAEiD,WAAajD,EAAEgF,cAAgBhF,EAAE5B,EAAME,KACzC0B,EAAEkD,SAAWlD,EAAEiF,YAAcjF,EAAE5B,EAAME,IAAI,EAE5C,EpCoBD,KAAM0e,GACN,KqC/Ec/O,IACd,MAAMgP,EAAqBnV,EAAMmG,EAAG,IAAM,MACpCiP,EAAkBpV,EAAMmG,EAAG,IAAM,MACjCkP,EAAyB9U,EAAI4F,EAAG,GAAM,MACtCmP,EAAuB/U,EAAI4F,EAAG,IAAM,MAEpCE,EAAe7F,EAAM2F,EAAG,EAAM,KAC9BG,EAAetG,EAAMmG,EAAG,EAAG,GAC3BI,EAAahG,EAAI4F,EAAG,EAAG,GAEvBoP,EAA0B,CAC9B,EAAG,EACH,EAAG,IACH,EAAG,IACH,EAAG,IAGC7T,EAAU,CAAC,CACfG,SAAUwC,GACVhL,GAAI,cACJ0I,KAAM,cACNpB,KAAM,gBACNqB,MAAO,gBACPN,QAAQ,8CAADzI,OAAgDyF,EAAoC,IAArByW,GAAyB,iCAAAlc,OAAgCyF,EAAiC,IAAlB0W,GAAsB,8BACnK,CACDvT,SAAUwC,GACVhL,GAAI,aACJ0I,KAAM,aACNpB,KAAM,cACNqB,MAAO,cACPN,QAAQ,sIAADzI,OAAwIyF,EAAwC,IAAzB2W,GAA6B,4BAC1L,CACDxT,SAAUqE,GACV7M,GAAI,eACJ0I,KAAM,eACNpB,KAAM,oBACNqB,MAAO,oBACPN,QAAQ,yEAADzI,OAA2EyF,EAAsC,IAAvB4W,GAA2B,qEAC5HlQ,IAAK,EACLC,IAAK,GACJ,CACDxD,SAAUqE,GACV7M,GAAI,gBACJ0I,KAAM,gBACNpB,KAAM,iBACNqB,MAAO,iBACPN,QAAQ,0GACR0D,IAAK,EACLC,IAAK,IAGP,MAAO,CACLvC,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRyO,aAAa,EACbC,YAAY,EACZ1M,aAAc,EACd2M,cAAe,IAEjBxO,kBAAoB7H,IAClB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAY5B,OAVAjE,EAAE5B,EAAMC,QAAU,KAAQgf,EAAwBpO,EAAEuO,gBAAkB,GACtExd,EAAE5B,EAAMC,QAAW4P,GAAK,GAAKgB,EAAEsO,WAAc,GAAO,EAEpDvd,EAAE+C,eAAkBkM,EAAEsO,WAActO,EAAE4B,cAAgBuM,EAAuBD,GAA0BlO,EAAE4B,aAAeuM,EACxHpd,EAAEkE,WAAc+J,GAAK,EAAK,IAAOgB,EAAE4B,aAAe,EAElD7Q,EAAE+E,eAAiBoJ,EACnBnO,EAAEgF,eAAiBoJ,EACnBpO,EAAEiF,aAAeoJ,EAEVrO,CAAC,EAEVoP,oBAAqBA,CAAClI,EAAoCC,KACxD,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIkH,EAAK,EAEflH,EAAE5B,EAAMI,KAAQyQ,EAAEqO,YAAeJ,EAAkBD,EAAqBjd,EAAE5B,EAAMI,IAAM,EACtFwB,EAAE5B,EAAMI,KAAQyP,GAAK,GAAKgB,EAAEqO,YAAe,GAAOtd,EAAE5B,EAAMI,IAAM,EAEhEwB,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KACzC0B,EAAEiD,WAAajD,EAAEgF,cAAgBhF,EAAE5B,EAAME,KACzC0B,EAAEkD,SAAWlD,EAAEiF,YAAcjF,EAAE5B,EAAME,IAAI,EAG9C,ErCPC,KsChFc2P,IACd,MAAMwP,EAAwBvV,EAAO+F,EAAG,IAAM,MACxCyP,EAAwBrV,EAAI4F,EAAG,IAAM,KACrC0P,EAAgB7V,EAAMmG,EAAG,KAAO,KAEhCE,EAAe7F,EAAM2F,EAAG,GAAM,KAC9BG,EAAetG,EAAMmG,EAAG,GAAM,KAC9BI,EAAahG,EAAI4F,EAAG,IAAM,KAC1B8D,EAAa7J,EAAO+F,EAAG,IAAM,MAE7BzE,EAAU,CAAC,CACfG,SAAUwC,GACVhL,GAAI,iBACJ0I,KAAM,iBACNpB,KAAM,kBACNqB,MAAO,kBACPN,QAAQ,qCAADzI,OAAuCyF,EAAuC,IAAxBkX,GAA4B,8BACxF,CACD/T,SAAUwC,GACVhL,GAAI,oBACJ0I,KAAM,oBACNpB,KAAM,sBACNqB,MAAO,4BACPN,QAAQ,+BAADzI,OAAiCyF,EAA+B,IAAhBmX,GAAoB,OAC1E,CACDhU,SAAUqE,GACV7M,GAAI,eACJ0I,KAAM,eACNpB,KAAM,gBACNqB,MAAO,gBACPN,QAAQ,wEAADzI,OAA0EyF,EAA4B,IAAbuL,GAAiB,+GAAAhR,OAA8GyF,EAAuC,IAAxBiX,GAA4B,0QAG1QvQ,IAAK,EACLC,IAAK,IACJ,CACDxD,SAAUwC,GACVhL,GAAI,iBACJ0I,KAAM,iBACNpB,KAAM,mBACNqB,MAAO,mBACPN,QAAQ,uMACRwC,SAAUiC,EAAI,IAGhB,MAAO,CACLrD,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR+O,gBAAgB,EAChBC,mBAAmB,EACnBC,aAAc,EACdC,gBAAgB,IAElB/O,kBAAoB7H,IAElB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAa5B,OAXAjE,EAAE+E,eAAiBoJ,EACnBnO,EAAEgF,eAAiBoJ,EACnBpO,EAAEiF,aAAeoJ,EACjBrO,EAAEmF,aAAe4M,EAAa0L,EAAwBxO,EAAE6O,aAExD9d,EAAEkG,aAAgB+I,EAAE6O,cAAgB,EAAK,GAAO,EAChD9d,EAAEkE,WAAc+K,EAAE4O,kBAAqBF,EAAgB,EACvD3d,EAAE6F,mBAAsBoJ,EAAE2O,eAAkBF,EAAwB,EAEpE1d,EAAEqE,SAAY4J,GAAK,GAAKgB,EAAE8O,eAAkB,IAAO,EAE5C/d,CAAC,EAEVoP,oBAAsBlI,IACpB,MAAMlH,EAAIkH,EAAK,EAEflH,EAAE+C,eAAiB+D,KAAKoG,IAAI,IAAM,GAAOlN,EAAE5B,EAAMQ,MAEjDoB,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KACzC0B,EAAEiD,WAAajD,EAAEgF,cAAgBhF,EAAE5B,EAAME,KACzC0B,EAAEkD,SAAWlD,EAAEiF,YAAcjF,EAAE5B,EAAME,KACrC0B,EAAEoD,SAAWpD,EAAEmF,YAAcnF,EAAE5B,EAAME,IAAI,EAG9C,EtCDC,KuClFc2P,IACd,MAAME,EAAe/F,EAAS6F,EAAG,EAAM,KACjCG,EAAe7F,EAAS0F,EAAG,EAAM,KACvC,IAAI+P,EAAkB7V,EAAO8F,EAAG,GAAM,KACtC+P,GAAoB/P,GAAK,EAAI,IAAO,EAEpC,MAAMzE,EAAU,CAAC,CACfG,SAAUqE,GACV7M,GAAI,kBACJ0I,KAAM,kBACNpB,KAAM,qBACNqB,MAAO,qBACPN,QAAQ,uEAADzI,OAAyEyF,EAAiC,IAAlBwX,GAAsB,kBACrH9Q,IAAK,EACLC,IAAK,IACJ,CACDxD,SAAUwC,GACVhL,GAAI,cACJ0I,KAAM,cACNpB,KAAM,eACNqB,MAAO,eACPN,QAAQ,kEACP,CACDG,SAAUwC,GACVhL,GAAI,iBACJ0I,KAAM,iBACNpB,KAAM,mBACNqB,MAAO,mBACPN,QAAQ,qDACRwC,SAAUiC,EAAI,GACb,CACDtE,SAAUwC,GACVhL,GAAI,gBACJ0I,KAAM,gBACNpB,KAAM,mBACNqB,MAAO,mBACPN,QAAQ,4FACRwC,SAAUiC,EAAI,IAGhB,MAAO,CACLrD,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRoP,gBAAiB,GACjBC,aAAa,EACbC,gBAAgB,EAChBC,eAAe,IAEjBpP,kBAAoB7H,IAClB,MAAM8H,EAAI9H,EAAQ+H,sBACZlP,EAAIH,OAAOsP,OAAO,CAAC,EAAGlL,GAW5B,OATAjE,EAAE5B,EAAMI,KAAQyQ,EAAEiP,YAAe,GAAO,EAExCle,EAAEkE,WAAc+J,GAAK,GAAKgB,EAAEkP,eAAkB,IAAO,EACrDne,EAAE+C,eAAkBkL,GAAK,GAAKgB,EAAEmP,cAAiB,GAAO,EAExDpe,EAAE+E,eAAiBoJ,EACnBnO,EAAEgF,eAAiBoJ,EACnBpO,EAAEiF,aAAe+Y,EAAmB/O,EAAEgP,gBAE/Bje,CAAC,EAEVoP,oBAAsBlI,IACpB,MAAMlH,EAAIkH,EAAK,EAEflH,EAAEgD,WAAahD,EAAE+E,cAAgB/E,EAAE5B,EAAME,KACzC0B,EAAEiD,WAAajD,EAAEgF,cAAgBhF,EAAE5B,EAAME,KACzC0B,EAAEkD,SAAWlD,EAAEiF,YAAcjF,EAAE5B,EAAME,IAAI,EAG9C,EvCYC,KAAM+f,GACN,KAAMA,GACN,KAAMC,GACN,KAAMA,IAGKC,GACLpX,IAEGqX,EADazN,GAAuB5J,EAAQsX,cAChCtX,EAAQuX,kBwCvC/B,SAjC8BC,CAACC,EAAyBC,KACtD,MAAMC,EAASD,EAAOC,OAAOF,GAC7B,IAAIjW,EAAMkW,EAAOE,KAsBjB,OAnBID,GAEFD,EAAOE,KAAKC,MAAM,kBAAkBhW,SAASiW,IAE3CA,EAAMD,MAAM,UAAUhW,SAAQ,CAACkW,EAAatf,KAC1C,GAAIA,EAAI,EAAG,CAET,IAAIiB,EAAQie,EAAOK,SAASD,GAAe,GAGvCre,EAAQ,IACVA,EAYZ,SAAwB4F,GAAwB,IAAhBC,EAASC,UAAApG,OAAA,QAAAqG,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC1C,MAAME,EAASC,KAAKC,IAAI,GAAIL,GAC5B,OAAOI,KAAKE,MAAMP,EAASI,GAAUA,CACvC,CAfoBL,CAAuB,IAAR3F,IAEzB8H,EAAMA,EAAIgG,QAAQsQ,EAAOpe,EAAMue,WACjC,IACA,IAICzW,CAAG,EC5CNkW,GAAS,CACb,GAAM,QACN,MAAS,kBACT,KAAQ,yIACR,OAAU,CACR,CAAC,GAAK,IAAM,EAAG,IAAM,IAAM,GAC3B,CAAC,IAAM,IAAM,EAAG,IAAM,IAAM,GAC5B,CAAC,IAAM,GAAK,EAAG,IAAM,IAAM,GAC3B,CAAC,IAAM,IAAM,EAAG,IAAM,IAAM,GAC5B,CAAC,IAAM,IAAM,EAAG,GAAK,GAAK,IAE5B,WAAc,CACZ,CAAC,CAAC,KAAQ,qBAAsB,MAAS,KACzC,CAAC,CAAC,KAAQ,qBAAsB,MAAS,MACzC,CAAC,CAAC,KAAQ,qBAAsB,MAAS,MACzC,CAAC,CAAC,KAAQ,qBAAsB,MAAS,MACzC,CAAC,CAAC,KAAQ,qBAAsB,MAAS,QAGvCQ,GAAU,IACXR,GACHE,KAAM,gPCoEFO,GAAW,CACf,KC5FcV,IACd,MAAMW,EAAa,CAAC,IAAM,KAAO,IAAM,KAAO,KACxCC,EAAa,CAAC,GAAM,IAAM,GAAM,IAAM,IAEtCX,EAA2B,CAC/B,GAAM,QACN,MAAS,eACT,KAAQ,uFACR,OAAU,CAAC,CAAC,GAAK,KAAO,CAAC,IAAM,MAAQ,CAAC,GAAK,KAAO,CAAC,IAAM,MAAQ,CAAC,GAAK,MACzE,WAAc,CAAC,GAAI,GAAI,GAAI,GAAI,KAE3BQ,EAA4B,IAC7BR,EACHE,KAAK,+GAGDvV,EAAyB,CAAC,CAC9B6B,IAAI,EACJlK,GAAI,oBACJ0I,KAAM,oBACNF,SAAUwC,GACV1D,KAAM,uBACNqB,MAAO+U,EAAO/W,MACd0B,QAASmV,GAAsBC,EAAGC,IACjC,CACDxT,IAAI,EACJlK,GAAI,4BACJ0I,KAAM,4BACNF,SAAUwC,GACV1D,KAAM,gCACNqB,MAAO+U,EAAO/W,MACd0B,QAASmV,GAAsBC,EAAGS,KAGpC,MAAO,CACLzU,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR4Q,mBAAmB,EACnBC,2BAA2B,IAE7B1Q,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE5B,EAAMC,QAAW4Q,EAAEwQ,kBAAqBtY,EAAQqJ,WAAa+O,EAAWX,GAAK,EAC/E5e,EAAE+C,eAAkBkM,EAAEyQ,0BAA6BF,EAAWZ,GAAK,CAAC,EAEtEgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,ED4CC,ME7FcwP,IACd,MAAMY,EAAa,CAAC,IAAM,IAAM,IAAM,IAAM,IACtCK,EAAY,CAAC,IAAM,IAAM,IAAM,IAAM,IAErChB,EAA2B,CAC/B,GAAM,QACN,MAAS,0BACT,KAAQ,gPACR,OAAU,CAAC,CAAC,IAAM,GAAI,IAAM,IAAM,GAAI,CAAC,IAAM,GAAI,IAAM,IAAM,GAAI,CAAC,IAAM,GAAI,IAAM,IAAM,GAAI,CAAC,IAAM,GAAI,IAAM,IAAM,GAAI,CAAC,GAAK,GAAI,GAAK,GAAK,IAC3I,WAAc,CAAC,CAAC,CAAC,KAAQ,qBAAsB,MAAS,MAAQ,CAAC,CAAC,KAAQ,qBAAsB,MAAS,MAAQ,CAAC,CAAC,KAAQ,qBAAsB,MAAS,MAAQ,CAAC,CAAC,KAAQ,qBAAsB,MAAS,MAAQ,CAAC,CAAC,KAAQ,qBAAsB,MAAS,OAGxPrV,EAAyB,CAAC,CAC9B6B,IAAI,EACJlK,GAAI,kBACJ0I,KAAM,kBACNF,SAAUwC,GACV1D,KAAM,8BACNqB,MAAO+U,EAAO/W,MACd0B,QAASmV,GAAsBC,EAAGC,KAGpC,MAAO,CACLjU,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRiR,iBAAiB,IAEnB9Q,kBAAmBA,OAGnB4Q,kBAAmBA,OACnBxQ,oBAAqBA,CAAClI,EAAoCC,KACxD,MAAM8H,EAAI9H,EAAQwY,sBACZ3f,EAAIkH,EAAK,EAET0Q,EAAS9Q,KAAKqG,IAAI,EAAGrG,KAAKoG,IAAI,EAAGpG,KAAKiW,OAAO/c,EAAE5B,EAAMqB,KAAO,KAAO,MAEzEO,EAAEoF,aAAgB6J,EAAE6Q,gBAAmBlI,EAAS4H,EAAWZ,GAAK,EAChE5e,EAAEqF,aAAgB4J,EAAE6Q,gBAAmBlI,EAAS4H,EAAWZ,GAAK,EAChE5e,EAAE6E,cAAiBoK,EAAE6Q,gBAAmBlI,EAASiI,EAAUjB,GAAK,CAAC,EAGtE,EFoDC,MG9FcA,IACd,MAAMmB,EAAU,CAAC,IAAM,IAAM,IAAM,IAAM,IAEnClB,EAA2B,CAC/B,GAAM,QACN,MAAS,UACT,KAAQ,sQACR,OAAU,CAAC,CAAC,IAAM,IAAM,KAAO,CAAC,IAAM,IAAM,KAAO,CAAC,IAAM,GAAK,KAAO,CAAC,IAAM,IAAM,KAAO,CAAC,GAAK,IAAM,KACtG,WAAc,CAAC,CAAC,CAAC,KAAQ,mBAAoB,MAAS,MAAQ,CAAC,CAAC,KAAQ,mBAAoB,MAAS,MAAQ,CAAC,CAAC,KAAQ,mBAAoB,MAAS,MAAQ,CAAC,CAAC,KAAQ,mBAAoB,MAAS,MAAQ,CAAC,CAAC,KAAQ,mBAAoB,MAAS,OAG9OrV,EAAyB,CAAC,CAC9B6B,IAAI,EACJlK,GAAI,UACJ0I,KAAM,UACNF,SAAUwC,GACV1D,KAAM,sCACNqB,MAAO+U,EAAO/W,MACd0B,QAASmV,GAAsBC,EAAGC,KAGpC,MAAO,CACLjU,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRmR,SAAS,IAEXhR,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE+C,eAAkBkM,EAAE+Q,QAAWD,EAAQnB,GAAK,CAAC,EAEjDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,EH6DC,MI/FcwP,IACd,MAAMqB,EAAa,CAAC,GAAM,IAAM,IAAM,IAAM,KACtCT,EAAa,CAAC,GAAM,IAAM,GAAM,IAAM,IAEtCX,EAA2B,CAC/B,GAAM,QACN,MAAS,OACT,KAAQ,6HACR,OAAU,CAAC,CAAC,GAAK,GAAK,GAAI,CAAC,IAAM,IAAM,GAAI,CAAC,IAAM,GAAK,GAAI,CAAC,IAAM,IAAM,GAAI,CAAC,IAAM,GAAK,IACxF,WAAc,CAAC,CAAC,CAAC,KAAQ,cAAe,MAAS,KAAO,CAAC,CAAC,KAAQ,cAAe,MAAS,MAAQ,CAAC,CAAC,KAAQ,cAAe,MAAS,MAAQ,CAAC,CAAC,KAAQ,cAAe,MAAS,MAAQ,CAAC,CAAC,KAAQ,cAAe,MAAS,QAGpNrV,EAAyB,CAAC,CAC9B6B,IAAI,EACJlK,GAAI,mBACJ0I,KAAM,mBACNF,SAAUwC,GACV1D,KAAM,sBACNqB,MAAO+U,EAAO/W,MACd0B,QAASmV,GAAsBC,EAAGC,KAGpC,MAAO,CACLjU,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRqR,kBAAkB,IAEpBlR,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE5B,EAAMS,MAAQohB,EAAWrB,GAC3B5e,EAAE+C,eAAkBkM,EAAEiR,iBAAoBV,EAAWZ,GAAK,CAAC,EAE7DgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,EJ4DC,MKjGcwP,IACd,MAAMY,EAAa,CAAC,IAAM,IAAM,IAAM,IAAM,IAEtCX,EAAQ,CACZ,GAAM,QACN,MAAS,YACT,KAAQ,4DACR,OAAU,CAAC,CAAC,IAAM,IAAM,KAAO,CAAC,IAAM,IAAM,KAAO,CAAC,IAAM,IAAM,KAAO,CAAC,IAAM,IAAM,KAAO,CAAC,GAAK,GAAK,KACtG,WAAc,CAAC,GAAI,GAAI,GAAI,GAAI,KAE3BQ,EAAU,IACXR,EACHE,KAAK,2HAGDvV,EAAyB,CAAC,CAC9B6B,IAAI,EACJlK,GAAI,wBACJ0I,KAAM,wBACNF,SAAUwC,GACV1D,KAAM,2BACNqB,MAAO+U,EAAO/W,MACd0B,QAASmV,GAAsBC,EAAGC,IACjC,CACDxT,IAAI,EACJlK,GAAI,gBACJ0I,KAAM,gBACNF,SAAUwC,GACV1D,KAAM,oCACNqB,MAAO+U,EAAO/W,MACd0B,QAASmV,GAAsBC,EAAGS,KAGpC,MAAO,CACLzU,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRsR,uBAAuB,EACvBC,eAAe,IAEjBpR,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE+C,eAAkBkM,EAAEkR,sBAAyBX,EAAWZ,GAAK,CAAC,EAElEgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,ELmDC,MMhGcwP,IACd,MAAMmB,EAAU,CAAC,IAAM,IAAM,IAAM,IAAM,IAEnClB,EAA2B,CAC/B,GAAM,QACN,MAAS,UACT,KAAQ,wKACR,OAAU,CAAC,CAAC,EAAG,IAAM,IAAM,KAAO,CAAC,EAAG,IAAM,IAAM,KAAO,CAAC,EAAG,IAAM,IAAM,KAAO,CAAC,EAAG,IAAM,IAAM,KAAO,CAAC,EAAG,GAAK,GAAK,KACrH,WAAc,CAAC,CAAC,CAAC,KAAQ,oBAAqB,MAAS,KAAO,CAAC,KAAQ,wBAAyB,MAAS,MAAQ,CAAC,CAAC,KAAQ,oBAAqB,MAAS,KAAO,CAAC,KAAQ,wBAAyB,MAAS,MAAQ,CAAC,CAAC,KAAQ,oBAAqB,MAAS,KAAO,CAAC,KAAQ,wBAAyB,MAAS,MAAQ,CAAC,CAAC,KAAQ,oBAAqB,MAAS,KAAO,CAAC,KAAQ,wBAAyB,MAAS,MAAQ,CAAC,CAAC,KAAQ,oBAAqB,MAAS,IAAM,CAAC,KAAQ,wBAAyB,MAAS,OAG5erV,EAAyB,CAAC,CAC9B6B,IAAI,EACJlK,GAAI,sBACJ0I,KAAM,sBACNF,SAAUwC,GACV1D,KAAM,yBACNqB,MAAO+U,EAAO/W,MACd0B,QAASmV,GAAsBC,EAAGC,KAGpC,MAAO,CACLjU,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRwR,qBAAqB,IAEvBrR,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE5B,EAAMM,QAAWuQ,EAAEoR,oBAAuBN,EAAQnB,GAAK,CAAC,EAE5DgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,EN+DC,MOhGcwP,IACd,MAAMY,EAAa,CAAC,IAAM,IAAM,IAAM,IAAM,IACtCc,EAAa,CAAC,KAAO,KAAO,KAAO,KAAO,KAE1CzB,EAA2B,CAC/B,GAAM,QACN,MAAS,aACT,KAAQ,+CACR,OAAU,CAAC,CAAC,GAAK,IAAM,KAAO,EAAG,GAAI,CAAC,GAAK,IAAM,KAAO,EAAG,GAAI,CAAC,GAAK,IAAM,KAAO,EAAG,GAAI,CAAC,GAAK,IAAM,KAAO,EAAG,GAAI,CAAC,EAAG,GAAK,IAAM,EAAG,IACrI,WAAc,CAAC,CAAC,CAAC,KAAQ,0BAA2B,MAAS,MAAQ,CAAC,CAAC,KAAQ,0BAA2B,MAAS,MAAQ,CAAC,CAAC,KAAQ,0BAA2B,MAAS,MAAQ,CAAC,CAAC,KAAQ,0BAA2B,MAAS,MAAQ,CAAC,CAAC,KAAQ,0BAA2B,MAAS,OAEjRQ,EAA4B,IAC7BR,EACHE,KAAK,sGAEDwB,EAA4B,IAC7B1B,EACHE,KAAK,0TAGDvV,EAAyB,CAAC,CAC9B6B,IAAI,EACJlK,GAAI,YACJ0I,KAAM,YACNF,SAAUqE,GACVvF,KAAM,aACNqB,MAAO+U,EAAO/W,MACd0B,QAASmV,GAAsBC,EAAGS,GAClCnS,IAAK,EACLC,IAAK,GACJ,CACD9B,IAAI,EACJlK,GAAI,YACJ0I,KAAM,YACNF,SAAUwC,GACV1D,KAAM,+BACNqB,MAAO+U,EAAO/W,MACd0B,QAASmV,GAAsBC,EAAG2B,KAIpC,MAAO,CACL3V,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR2R,UAAW,EACXC,WAAW,IAEbzR,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE5B,EAAMoB,QAAUyP,EAAEuR,UAAYF,EAAW1B,GAC3C5e,EAAE+C,eAAiByc,EAAWZ,EAAE,EAElCgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,EPyCC,MQlGcwP,IACd,MAAM8B,EAAY,CAAC,IAAM,IAAM,IAAM,IAAM,IACrClB,EAAa,CAAC,IAAM,IAAM,IAAM,IAAM,IAEtCX,EAA2B,CAC/B,GAAM,QACN,MAAS,oBACT,KAAQ,8HACR,OAAU,CAAC,CAAC,IAAM,EAAG,IAAM,EAAG,KAAO,CAAC,IAAM,EAAG,IAAM,EAAG,KAAO,CAAC,IAAM,EAAG,IAAM,EAAG,KAAO,CAAC,IAAM,EAAG,IAAM,EAAG,KAAO,CAAC,GAAK,EAAG,GAAK,EAAG,KACpI,WAAc,CAAC,CAAC,CAAC,KAAQ,wBAAyB,MAAS,MAAQ,CAAC,CAAC,KAAQ,wBAAyB,MAAS,MAAQ,CAAC,CAAC,KAAQ,wBAAyB,MAAS,MAAQ,CAAC,CAAC,KAAQ,wBAAyB,MAAS,MAAQ,CAAC,CAAC,KAAQ,wBAAyB,MAAS,OAEvQQ,EAA4B,IAC7BR,EACHE,KAAK,2NAGDvV,EAAyB,CAAC,CAC9B6B,IAAI,EACJlK,GAAI,uBACJ0I,KAAM,uBACNF,SAAUwC,GACV1D,KAAM,iCACNqB,MAAO+U,EAAO/W,MACd0B,QAASmV,GAAsBC,EAAGC,IACjC,CACDxT,IAAI,EACJlK,GAAI,mBACJ0I,KAAM,mBACNF,SAAUwC,GACV1D,KAAM,4BACNqB,MAAO+U,EAAO/W,MACd0B,QAASmV,GAAsBC,EAAGS,KAGpC,MAAO,CACLzU,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR8R,sBAAsB,EACtBC,kBAAkB,IAEpB5R,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE5B,EAAMK,KAAQwQ,EAAE0R,qBAAwBD,EAAU9B,GAAK,EACzD5e,EAAE+C,eAAkBkM,EAAE2R,iBAAoBpB,EAAWZ,GAAK,CAAC,EAE7DgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,ERkDC,MSpGcwP,IACd,MAAMmB,EAAU,CAAC,GAAI,GAAI,GAAI,GAAI,IAE3BlB,EAA2B,CAC/B,GAAM,QACN,MAAS,SACT,KAAQ,2PACR,OAAU,CAAC,CAAC,IAAM,GAAI,EAAG,GAAI,CAAC,IAAM,GAAI,IAAK,GAAI,CAAC,IAAM,GAAI,EAAG,GAAI,CAAC,IAAM,GAAI,IAAK,GAAI,CAAC,GAAK,GAAI,EAAG,IACpG,WAAc,CAAC,CAAC,CAAC,KAAQ,mBAAoB,MAAS,MAAQ,CAAC,CAAC,KAAQ,mBAAoB,MAAS,MAAQ,CAAC,CAAC,KAAQ,mBAAoB,MAAS,MAAQ,CAAC,CAAC,KAAQ,mBAAoB,MAAS,MAAQ,CAAC,CAAC,KAAQ,mBAAoB,MAAS,OAG9OrV,EAAyB,CAAC,CAC9B6B,IAAI,EACJlK,GAAI,iBACJ0I,KAAM,iBACNF,SAAUwC,GACV1D,KAAM,oBACNqB,MAAO+U,EAAO/W,MACd0B,QAASmV,GAAsBC,EAAGC,KAGpC,MAAO,CACLjU,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRgS,gBAAgB,IAElB7R,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE5B,EAAMqB,MAASwP,EAAE4R,eAAkBd,EAAQnB,GAAK,CAAC,EAErDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,ETmEC,MUtGcwP,IACd,MAAMmB,EAAU,CAAC,IAAM,IAAM,IAAM,IAAM,IAEnClB,EAA0B,CAC9B,GAAM,QACN,MAAS,uBACT,KAAQ,+IACR,OAAU,CAAC,CAAC,IAAM,IAAM,KAAO,CAAC,IAAM,IAAM,KAAO,CAAC,IAAM,IAAM,KAAO,CAAC,IAAM,IAAM,KAAO,CAAC,GAAK,GAAK,KACtG,WAAc,CAAC,CAAC,CAAC,KAAQ,qBAAsB,MAAS,KAAO,CAAC,KAAQ,eAAgB,MAAS,MAAQ,CAAC,CAAC,KAAQ,qBAAsB,MAAS,KAAO,CAAC,KAAQ,eAAgB,MAAS,MAAQ,CAAC,CAAC,KAAQ,qBAAsB,MAAS,KAAO,CAAC,KAAQ,eAAgB,MAAS,MAAQ,CAAC,CAAC,KAAQ,qBAAsB,MAAS,KAAO,CAAC,KAAQ,eAAgB,MAAS,MAAQ,CAAC,CAAC,KAAQ,qBAAsB,MAAS,IAAM,CAAC,KAAQ,eAAgB,MAAS,OAGpcrV,EAAyB,CAAC,CAC9B6B,IAAI,EACJlK,GAAI,UACJ0I,KAAM,UACNF,SAAUwC,GACV1D,KAAM,mCACNqB,MAAO+U,EAAO/W,MACd0B,QAASmV,GAAsBC,EAAGC,KAGpC,MAAO,CACLjU,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRmR,SAAS,IAEXhR,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE+C,eAAkBkM,EAAE+Q,QAAWD,EAAQnB,GAAK,CAAC,EAEjDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,EVqEC,MWtGcwP,IACd,MAAMkC,EAAqB,CAAC,IAAM,IAAM,IAAM,IAAM,IAC9CC,EAAgB,CAAC,IAAM,IAAM,IAAM,IAAM,IAEzClC,EAA2B,CAC/B,GAAM,QACN,MAAS,aACT,KAAQ,sGACR,OAAU,CAAC,CAAC,IAAM,IAAM,KAAO,CAAC,IAAM,IAAM,KAAO,CAAC,IAAM,IAAM,KAAO,CAAC,IAAM,IAAM,KAAO,CAAC,GAAK,GAAK,KACtG,WAAc,CAAC,CAAC,CAAC,KAAQ,qBAAsB,MAAS,MAAQ,CAAC,CAAC,KAAQ,qBAAsB,MAAS,MAAQ,CAAC,CAAC,KAAQ,qBAAsB,MAAS,MAAQ,CAAC,CAAC,KAAQ,qBAAsB,MAAS,MAAQ,CAAC,CAAC,KAAQ,qBAAsB,MAAS,OAExPQ,EAA4B,IAC7BR,EACHE,KAAK,gMAGDvV,EAAyB,CAAC,CAC9B6B,IAAI,EACJlK,GAAI,cACJ0I,KAAM,cACNF,SAAUwC,GACV1D,KAAM,gBACNqB,MAAO+U,EAAO/W,MACd0B,QAASmV,GAAsBC,EAAGS,GAClCnS,IAAK,EACLC,IAAK,KAGP,MAAO,CACLvC,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRmS,aAAa,IAEfhS,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAEqF,aAAeyb,EAAmBlC,GACpC5e,EAAEsF,WAAawb,EAAmBlC,GAClC5e,EAAEuF,WAAc0J,EAAE+R,YAAeD,EAAcnC,GAAK,CAAC,EAEvDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,EX4DC,MYxGcwP,IACd,MAAMmB,EAAU,CAAC,IAAM,KAAO,IAAM,KAAO,KAErClB,EAA2B,CAC/B,GAAM,QACN,MAAS,aACT,KAAQ,0GACR,OAAU,CAAC,CAAC,IAAM,IAAM,GAAK,IAAM,GAAI,CAAC,IAAM,KAAO,IAAM,IAAM,GAAI,CAAC,IAAM,IAAM,GAAK,IAAM,GAAI,CAAC,IAAM,KAAO,IAAM,IAAM,GAAI,CAAC,GAAK,IAAM,EAAG,GAAK,IACnJ,WAAc,CAAC,CAAC,CAAC,KAAQ,eAAgB,MAAS,KAAO,CAAC,KAAQ,cAAe,MAAS,MAAQ,CAAC,CAAC,KAAQ,eAAgB,MAAS,KAAO,CAAC,KAAQ,cAAe,MAAS,MAAQ,CAAC,CAAC,KAAQ,eAAgB,MAAS,KAAO,CAAC,KAAQ,cAAe,MAAS,MAAQ,CAAC,CAAC,KAAQ,eAAgB,MAAS,KAAO,CAAC,KAAQ,cAAe,MAAS,MAAQ,CAAC,CAAC,KAAQ,eAAgB,MAAS,IAAM,CAAC,KAAQ,cAAe,MAAS,OAEjarV,EAAyB,CAAC,CAC9B6B,IAAI,EACJlK,GAAI,gBACJ0I,KAAM,gBACNF,SAAUwC,GACV1D,KAAM,mBACNqB,MAAO+U,EAAO/W,MACd0B,QAASmV,GAAsBC,EAAGC,KAGpC,MAAO,CACLjU,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRoS,eAAe,IAEjBjS,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE+C,eAAkBkM,EAAEgS,cAAiBlB,EAAQnB,GAAK,CAAC,EAEvDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,EZwEC,MaxGcwP,IACd,MAAMmB,EAAU,CAAC,IAAM,IAAM,IAAM,IAAM,IAEnClB,EAA2B,CAC/B,GAAM,QACN,MAAS,eACT,KAAQ,oLACR,OAAU,CAAC,CAAC,GAAK,IAAM,EAAG,GAAI,CAAC,IAAM,IAAM,EAAG,GAAI,CAAC,GAAK,IAAM,EAAG,GAAI,CAAC,IAAM,IAAM,EAAG,GAAI,CAAC,GAAK,GAAK,EAAG,IACvG,WAAc,CAAC,CAAC,CAAC,KAAQ,qBAAsB,MAAS,KAAO,CAAC,CAAC,KAAQ,qBAAsB,MAAS,MAAQ,CAAC,CAAC,KAAQ,qBAAsB,MAAS,KAAO,CAAC,CAAC,KAAQ,qBAAsB,MAAS,MAAQ,CAAC,CAAC,KAAQ,qBAAsB,MAAS,OAEtPrV,EAAyB,CAAC,CAC9B6B,IAAI,EACJlK,GAAI,mBACJ0I,KAAM,mBACNF,SAAUwC,GACV1D,KAAM,sBACNqB,MAAO+U,EAAO/W,MACd0B,QAASmV,GAAsBC,EAAGC,KAGpC,MAAO,CACLjU,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRqS,kBAAkB,IAEpBlS,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE5B,EAAMK,KAAQwQ,EAAEiS,iBAAoBnB,EAAQnB,GAAK,CAAC,EAEtDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,EbwEC,Mc5GcwP,IACd,MAAMC,EAA2B,CAC/B,GAAM,QACN,MAAS,8BACT,KAAQ,2WACR,OAAU,CAAC,CAAC,IAAM,IAAM,KAAO,CAAC,IAAM,IAAM,KAAO,CAAC,IAAM,IAAM,KAAO,CAAC,IAAM,IAAM,KAAO,CAAC,GAAK,GAAK,KACtG,WAAc,CAAC,CAAC,CAAC,KAAQ,eAAgB,MAAS,KAAO,CAAC,KAAQ,gBAAiB,MAAS,MAAQ,CAAC,CAAC,KAAQ,eAAgB,MAAS,KAAO,CAAC,KAAQ,gBAAiB,MAAS,MAAQ,CAAC,CAAC,KAAQ,eAAgB,MAAS,KAAO,CAAC,KAAQ,gBAAiB,MAAS,MAAQ,CAAC,CAAC,KAAQ,eAAgB,MAAS,KAAO,CAAC,KAAQ,gBAAiB,MAAS,MAAQ,CAAC,CAAC,KAAQ,eAAgB,MAAS,IAAM,CAAC,KAAQ,gBAAiB,MAAS,OAE3arV,EAAyB,CAAC,CAC9B6B,IAAI,EACJlK,GAAI,sBACJ0I,KAAM,sBACNF,SAAUwC,GACV1D,KAAM,2CACNqB,MAAO+U,EAAO/W,MACd0B,QAASmV,GAAsBC,EAAGC,KAGpC,MAAO,CACLjU,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRsS,qBAAqB,IAEvBnS,kBAAmBA,OAGnB4Q,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,EdgFC,MezGcwP,IACd,MAAMwC,EAAkB,CAAC,IAAM,KAAO,IAAM,KAAO,KAC7CC,EAAgB,CAAC,IAAM,IAAM,IAAM,IAAM,IACzCxC,EAA2B,CAC/B,GAAM,QACN,MAAS,yBACT,KAAQ,qNACR,OAAU,CAAC,CACL,GAAK,EAAG,IAAM,KAChB,CACE,IAAM,EAAG,KAAO,KAClB,CACE,IAAM,EAAG,IAAM,KACjB,CACE,IAAM,EAAG,KAAO,KAClB,CACE,IAAM,EAAG,IAAM,KAGrB,WAAc,CAAC,CAAC,CACZ,KAAQ,qBAAsB,MAAS,KACtC,CAAC,CACF,KAAQ,qBAAsB,MAAS,MACtC,CAAC,CACF,KAAQ,qBAAsB,MAAS,MACtC,CAAC,CACF,KAAQ,qBAAsB,MAAS,MACtC,CAAC,CACF,KAAQ,qBAAsB,MAAS,QAGvCQ,EAA4B,IAC7BR,EACHE,KAAK,uKAGDvV,EAAyB,CAC7B,CACE6B,IAAI,EACJlK,GAAI,gBACJ0I,KAAM,gBACNF,SAAUqE,GACVvF,KAAM,iBACNqB,MAAO+U,EAAO/W,MACd0B,QAASmV,GAAsBC,EAAGC,GAClC3R,IAAK,EACLC,IAAK,GAEP,CACE9B,IAAI,EACJlK,GAAI,iBACJ0I,KAAM,iBACNF,SAAUwC,GACV1D,KAAM,oBACNqB,MAAO+U,EAAO/W,MACd0B,QAASmV,GAAsBC,EAAGS,KAItC,MAAO,CACLzU,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRyS,cAAe,EACfC,gBAAgB,IAElBvS,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAClB3f,EAAiB,eAAKiP,EAAEqS,cAAgBF,EAAgBxC,GACxD5e,EAAa,WAAMiP,EAAEsS,gBAAqC,GAAnBtS,EAAEqS,cAAsBD,EAAczC,GAAK,CAAC,EAErFgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,EfiCC,MgB3GcwP,IACd,MAAMW,EAAa,CAAC,IAAM,IAAM,IAAM,IAAM,IACtCU,EAAa,CAAC,IAAM,IAAM,IAAM,IAAM,IAEtCpB,EAA2B,CAC/B,GAAM,QACN,MAAS,qBACT,KAAQ,oQACR,OAAU,CAAC,CAAC,IAAM,EAAG,EAAG,IAAM,KAAO,CAAC,IAAM,EAAG,EAAG,IAAM,KAAO,CAAC,IAAM,EAAG,EAAG,IAAM,KAAO,CAAC,IAAM,EAAG,EAAG,IAAM,KAAO,CAAC,GAAK,EAAG,EAAG,GAAK,KACpI,WAAc,CAAC,CAAC,CAAC,KAAQ,qBAAsB,MAAS,MAAQ,CAAC,CAAC,KAAQ,qBAAsB,MAAS,MAAQ,CAAC,CAAC,KAAQ,qBAAsB,MAAS,MAAQ,CAAC,CAAC,KAAQ,qBAAsB,MAAS,MAAQ,CAAC,CAAC,KAAQ,qBAAsB,MAAS,OAExPrV,EAAyB,CAAC,CAC9B6B,IAAI,EACJlK,GAAI,oBACJ0I,KAAM,oBACNF,SAAUqE,GACVvF,KAAM,uBACNqB,MAAO+U,EAAO/W,MACd0B,QAASmV,GAAsBC,EAAGC,GAClC3R,IAAK,EACLC,IAAK,IAGP,MAAO,CACLvC,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR2S,kBAAmB,IAErBxS,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE5B,EAAMC,QAAU4Q,EAAEuS,kBAAoBjC,EAAWX,GACnD5e,EAAE5B,EAAMS,MAAQoQ,EAAEuS,kBAAoBvB,EAAWrB,EAAE,EAErDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,EhBuEC,MiB5GcwP,IACd,MAAMmC,EAAgB,CAAC,GAAM,IAAM,GAAM,IAAM,IACzClB,EAAY,CAAC,IAAM,IAAM,IAAM,IAAM,IACrChB,EAA2B,CAC/B,GAAM,QACN,MAAS,gBACT,KAAQ,wFACR,OAAU,CAAC,CAAC,IAAM,GAAK,IAAM,GAAI,CAAC,IAAM,IAAM,IAAM,GAAI,CAAC,IAAM,GAAK,IAAM,GAAI,CAAC,IAAM,IAAM,IAAM,GAAI,CAAC,GAAK,GAAK,GAAK,IACrH,WAAc,CAAC,CAAC,CAAC,KAAQ,qBAAsB,MAAS,MAAQ,CAAC,CAAC,KAAQ,qBAAsB,MAAS,MAAQ,CAAC,CAAC,KAAQ,qBAAsB,MAAS,MAAQ,CAAC,CAAC,KAAQ,qBAAsB,MAAS,MAAQ,CAAC,CAAC,KAAQ,qBAAsB,MAAS,OAExPQ,EAA4B,IAC7BR,EACHE,KAAK,2NAEDvV,EAAyB,CAAC,CAC9B6B,IAAI,EACJlK,GAAI,mBACJ0I,KAAM,mBACNF,SAAUqE,GACVvF,KAAM,qBACNqB,MAAO+U,EAAO/W,MACd0B,QAASmV,GAAsBC,EAAGS,GAClCnS,IAAK,EACLC,IAAK,IAGP,MAAO,CACLvC,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR4S,iBAAkB,IAEpBzS,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE5B,EAAMI,KAAOyQ,EAAEwS,iBAAmB5B,EAAUjB,GAC9C5e,EAAEuF,WAAawb,EAAcnC,EAAE,EAEjCgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,EjBqEC,MkB7GcwP,IACd,MAAMmB,EAAU,CAAC,KAAO,KAAO,KAAO,KAAO,KAEvClB,EAA2B,CAC/B,GAAM,QACN,MAAS,qBACT,KAAQ,iKACR,OAAU,CAAC,CAAC,IAAM,GAAK,KAAO,EAAG,GAAI,CAAC,IAAM,IAAM,KAAO,EAAG,GAAI,CAAC,IAAM,IAAM,KAAO,EAAG,GAAI,CAAC,IAAM,IAAM,KAAO,EAAG,GAAI,CAAC,GAAK,IAAM,IAAM,EAAG,IAC3I,WAAc,CAAC,CAAC,CAAC,KAAQ,cAAe,MAAS,MAAQ,CAAC,CAAC,KAAQ,cAAe,MAAS,MAAQ,CAAC,CAAC,KAAQ,cAAe,MAAS,MAAQ,CAAC,CAAC,KAAQ,cAAe,MAAS,MAAQ,CAAC,CAAC,KAAQ,cAAe,MAAS,OAGrNrV,EAAyB,CAAC,CAC9B6B,IAAI,EACJlK,GAAI,gBACJ0I,KAAM,gBACNF,SAAUqE,GACVvF,KAAM,kBACNqB,MAAO+U,EAAO/W,MACd0B,QAASmV,GAAsBC,EAAGC,GAClC3R,IAAK,EACLC,IAAK,IAGP,MAAO,CACLvC,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR6S,cAAe,IAEjB1S,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE5B,EAAMC,QAAU4Q,EAAEyS,cAAgB3B,EAAQnB,EAAE,EAEhDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,ElB0EC,MmB/GcwP,IACd,MAAMmB,EAAU,CAAC,MAAQ,MAAQ,MAAQ,MAAQ,MAE3ClB,EAA2B,CAC/B,GAAM,QACN,MAAS,wBACT,KAAQ,0LACR,OAAU,CAAC,CAAC,IAAM,MAAQ,KAAM,CAAC,IAAM,MAAQ,KAAM,CAAC,IAAM,MAAQ,KAAM,CAAC,IAAM,MAAQ,KAAM,CAAC,GAAK,KAAO,MAC5G,WAAc,CAAC,CAAC,CAAC,KAAQ,qBAAsB,MAAS,MAAQ,CAAC,CAAC,KAAQ,qBAAsB,MAAS,MAAQ,CAAC,CAAC,KAAQ,qBAAsB,MAAS,MAAQ,CAAC,CAAC,KAAQ,qBAAsB,MAAS,MAAQ,CAAC,CAAC,KAAQ,qBAAsB,MAAS,OAGxPrV,EAAyB,CAAC,CAC9B6B,IAAI,EACJlK,GAAI,wBACJ0I,KAAM,wBACNF,SAAUqE,GACVvF,KAAM,aACNqB,MAAO+U,EAAO/W,MACd0B,QAASmV,GAAsBC,EAAGC,GAClC3R,IAAK,EACLC,IAAK,MAGP,MAAO,CACLvC,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR8S,sBAAuB,MAEzB3S,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAEsF,WAAa2J,EAAE0S,sBAAwB5B,EAAQnB,EAAE,EAErDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,EnB4EC,MoBhHcwP,IACd,MAAMmB,EAAU,CAAC,IAAM,IAAM,IAAM,IAAM,IAEnClB,EAA2B,CAC/B,GAAM,QACN,MAAS,iCACT,KAAQ,uGACR,OAAU,CACR,CAAC,GAAK,IAAM,EAAG,IAAK,IACpB,CAAC,GAAK,IAAM,EAAG,IAAK,MACpB,CAAC,GAAK,IAAM,EAAG,IAAK,IACpB,CAAC,GAAK,IAAM,EAAG,IAAK,MACpB,CAAC,EAAG,GAAK,EAAG,IAAK,KAEnB,WAAc,CACZ,CAAC,CAAC,KAAQ,4BAA6B,MAAS,KAChD,CAAC,CAAC,KAAQ,4BAA6B,MAAS,KAChD,CAAC,CAAC,KAAQ,4BAA6B,MAAS,KAChD,CAAC,CAAC,KAAQ,4BAA6B,MAAS,KAChD,CAAC,CAAC,KAAQ,4BAA6B,MAAS,MAI9CrV,EAAyB,CAAC,CAC9B6B,IAAI,EACJlK,GAAI,iBACJ0I,KAAM,iBACNF,SAAUwC,GACV1D,KAAM,oBACNqB,MAAO+U,EAAO/W,MACd0B,QAASmV,GAAsBC,EAAGC,KAGpC,MAAO,CACLjU,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR+S,gBAAgB,IAElB5S,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE+C,eAAkBkM,EAAE2S,eAAkB7B,EAAQnB,GAAK,CAAC,EAExDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,EpBmEC,MDtF4BwP,IAC5B,MAAMiB,EAAY,CAAC,IAAM,IAAM,GAAM,IAAM,KACrCL,EAAa,CAAC,IAAM,IAAM,IAAM,IAAM,IACtCqC,EAAgB,CAAC,IAAM,IAAM,IAAM,IAAM,IAEzCrY,EAAU,CAAC,CACf6B,IAAI,EACJ1B,SAAUqE,GACV7M,GAAI,iBACJ0I,KAAM,iBACNpB,KAAM,mBACNqB,MAAO+U,GAAO/W,MACd0B,QAASmV,GAAsBC,EAAGC,IAClC3R,IAAK,EACLC,IAAK,GACJ,CACD9B,IAAI,EACJ1B,SAAUwC,GACVhL,GAAI,cACJ0I,KAAM,cACNpB,KAAM,wCACNqB,MAAOuV,GAAQvX,MACf0B,QAASmV,GAAsBC,EAAGS,MAGpC,MAAO,CACLzU,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRiT,eAAgB,EAChBC,aAAa,IAEf/S,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE5B,EAAMI,KAAOyQ,EAAE6S,eAAiBjC,EAAUjB,GAC5C5e,EAAE+C,eAAiBkM,EAAE8S,YAAcvC,EAAWZ,GAAK,EACnD5e,EAAEiG,aAAegJ,EAAE8S,YAAcF,EAAcjD,GAAK,CAAC,EAEvDgB,kBAAmBA,OACnBxQ,oBAAqBA,OACtB,EC+CD,MqBjHcwP,IACd,MAAM8B,EAAY,CAAC,GAAM,IAAM,IAAM,IAAM,KACrCb,EAAY,CAAC,IAAM,IAAM,IAAM,IAAM,KACrCmC,EAAU,CACd,GAAM,QACN,MAAS,iBACT,KAAQ,ycACR,OAAU,CAAC,CAAC,IAAM,IAAM,EAAG,EAAG,GAAK,GAAI,CAAC,IAAM,IAAM,EAAG,EAAG,IAAM,GAAI,CAAC,IAAM,IAAM,EAAG,EAAG,IAAM,GAAI,CAAC,IAAM,IAAM,EAAG,EAAG,IAAM,GAAI,CAAC,GAAK,IAAM,EAAG,EAAG,IAAM,IACtJ,WAAc,CAAC,CAAC,CAAC,KAAQ,qBAAsB,MAAS,MAAQ,CAAC,CAAC,KAAQ,qBAAsB,MAAS,MAAQ,CAAC,CAAC,KAAQ,qBAAsB,MAAS,MAAQ,CAAC,CAAC,KAAQ,qBAAsB,MAAS,MAAQ,CAAC,CAAC,KAAQ,qBAAsB,MAAS,OAExPxY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,aACJ0I,KAAM,aACNF,SAAUwC,GACV1D,KAAM,cACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,KAGpC,MAAO,CACLpX,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRoT,YAAY,IAEdjT,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE5B,EAAMK,KAAQwQ,EAAEgT,WAAcvB,EAAU9B,GAAK,EAC/C5e,EAAE5B,EAAMI,KAAQyQ,EAAEgT,WAAcpC,EAAUjB,GAAK,CAAC,EAElDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,ErBgFC,MsBlHcwP,IACd,MAAMW,EAAa,CAAC,IAAM,IAAM,IAAM,IAAM,KACtC2C,EAAgB,CAAC,KAAO,KAAO,KAAO,KAAO,IAC7CF,EAAU,CACd,GAAM,QACN,MAAS,cACT,KAAQ,+WACR,OAAU,CAAC,CAAC,GAAK,IAAM,KAAO,GAAI,CAAC,IAAM,IAAM,KAAO,GAAI,CAAC,GAAK,IAAM,KAAO,GAAI,CAAC,IAAM,IAAM,KAAO,GAAI,CAAC,GAAK,IAAM,GAAK,IAC1H,WAAc,CAAC,CAAC,CAAC,KAAQ,wBAAyB,MAAS,KAAO,CAAC,CAAC,KAAQ,wBAAyB,MAAS,MAAQ,CAAC,CAAC,KAAQ,wBAAyB,MAAS,KAAO,CAAC,CAAC,KAAQ,wBAAyB,MAAS,MAAQ,CAAC,CAAC,KAAQ,wBAAyB,MAAS,OAErQxY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,gBACJ0I,KAAM,gBACNF,SAAUqE,GACVvF,KAAM,iBACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,GAClC9U,IAAK,EACLC,IAAK,IAGP,MAAO,CACLvC,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRsT,cAAe,IAEjBnT,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE5B,EAAMC,QAAU4Q,EAAEkT,cAAgB5C,EAAWX,GAC/C5e,EAAEkG,aAAe+I,EAAEkT,cAAgBD,EAActD,EAAE,EAErDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,EtB+EC,KuBlHcwP,IACd,MAAMwD,EAAmB,CAAC,IAAM,GAAM,IAAM,IAAM,KAC5CC,EAAiB,CAAC,IAAM,IAAM,IAAM,IAAM,KAE1CxD,EAA2B,CAC/B,GAAM,QACN,MAAS,iBACT,KAAQ,2HACR,OAAU,CAAC,CAAC,IAAM,EAAG,IAAM,GAAI,CAAC,GAAK,EAAG,IAAM,GAAI,CAAC,IAAM,EAAG,IAAM,GAAI,CAAC,IAAM,EAAG,IAAM,GAAI,CAAC,IAAM,EAAG,IAAM,IAC1G,WAAc,CAAC,GAAI,GAAI,GAAI,GAAI,KAE3BQ,EAA4B,IAC7BR,EACHE,KAAK,kHAEDvV,EAAyB,CAAC,CAC9B6B,IAAI,EACJlK,GAAI,iBACJ0I,KAAM,iBACNF,SAAUqE,GACVvF,KAAM,mBACNqB,MAAO+U,EAAO/W,MACd0B,QAASmV,GAAsBC,EAAGC,GAClC3R,IAAK,EACLC,IAAK,GACJ,CACD9B,IAAI,EACJlK,GAAI,uBACJ0I,KAAM,uBACNF,SAAUwC,GACV1D,KAAM,0BACNqB,MAAO+U,EAAO/W,MACd0B,QAASmV,GAAsBC,EAAGS,KAGpC,MAAO,CACLzU,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRyT,eAAgB,EAChBC,sBAAsB,IAExBvT,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE5B,EAAMC,QAAU4Q,EAAEqT,eAAiBF,EAAiBxD,GACtD5e,EAAE+C,eAAkBkM,EAAEsT,qBAAwBF,EAAezD,GAAK,CAAC,EAErEgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,EvBiEC,MwBpHcwP,IACd,MAAM8B,EAAY,CAAC,IAAM,GAAM,IAAM,IAAM,KACrCnB,EAAa,CAAC,GAAM,IAAM,GAAM,IAAM,IAEtCV,EAA2B,CAC/B,GAAM,QACN,MAAS,QACT,KAAQ,4GACR,OAAU,CAAC,CAAC,IAAM,GAAK,IAAM,GAAK,GAAI,CAAC,GAAK,GAAK,GAAK,IAAM,GAAI,CAAC,IAAM,GAAK,IAAM,GAAK,GAAI,CAAC,IAAM,GAAK,IAAM,IAAM,GAAI,CAAC,IAAM,GAAK,IAAM,GAAK,IAC9I,WAAc,CAAC,CAAC,CAAC,KAAQ,qBAAsB,MAAS,MAAQ,CAAC,CAAC,KAAQ,qBAAsB,MAAS,KAAO,CAAC,CAAC,KAAQ,qBAAsB,MAAS,MAAQ,CAAC,CAAC,KAAQ,qBAAsB,MAAS,MAAQ,CAAC,CAAC,KAAQ,qBAAsB,MAAS,QAEvPQ,EAA4B,IAC7BR,EACHE,KAAM,yFAGFvV,EAAyB,CAAC,CAC9B6B,IAAI,EACJlK,GAAI,mBACJ0I,KAAM,mBACNF,SAAUwC,GACV1D,KAAM,8BACNqB,MAAO+U,EAAO/W,MACd0B,QAASmV,GAAsBC,EAAGC,IACjC,CACDxT,IAAI,EACJlK,GAAI,uBACJ0I,KAAM,uBACNF,SAAUwC,GACV1D,KAAM,0BACNqB,MAAO+U,EAAO/W,MACd0B,QAASmV,GAAsBC,EAAGS,KAIpC,MAAO,CACLzU,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR2T,kBAAkB,EAClBC,sBAAsB,IAExBzT,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE5B,EAAMK,KAAQwQ,EAAEuT,kBAAoBrb,EAAQiK,gBAAkB,GAAQsP,EAAU9B,GAAK,EACvF5e,EAAE5B,EAAMC,QAAW4Q,EAAEwT,qBAAwBlD,EAAWX,GAAK,CAAC,EAEhEgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,ExBmEC,MyBrHcwP,IACd,MAAMmB,EAAU,CAAC,IAAM,IAAM,IAAM,IAAM,KAEnClB,EAA2B,CAC/B,GAAM,QACN,MAAS,WACT,KAAQ,qQACR,OAAU,CAAC,CAAC,IAAM,IAAM,EAAG,EAAG,KAAO,CAAC,GAAK,GAAK,EAAG,EAAG,KAAO,CAAC,IAAM,IAAM,EAAG,EAAG,KAAO,CAAC,IAAM,IAAM,EAAG,EAAG,KAAO,CAAC,IAAM,IAAM,EAAG,EAAG,MACpI,WAAc,CAAC,CAAC,CAAC,KAAQ,uBAAwB,MAAS,MAAQ,CAAC,CAAC,KAAQ,uBAAwB,MAAS,KAAO,CAAC,CAAC,KAAQ,uBAAwB,MAAS,MAAQ,CAAC,CAAC,KAAQ,uBAAwB,MAAS,MAAQ,CAAC,CAAC,KAAQ,uBAAwB,MAAS,QAGjQrV,EAAyB,CAAC,CAC9B6B,IAAI,EACJlK,GAAI,0BACJ0I,KAAM,0BACNF,SAAUwC,GACV1D,KAAM,mCACNqB,MAAO+U,EAAO/W,MACd0B,QAASmV,GAAsBC,EAAGC,KAGpC,MAAO,CACLjU,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR6T,yBAAyB,IAE3B1T,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAEsE,eAAkB2K,EAAEyT,wBAA4B,EAAI3C,EAAQnB,GAAM,CAAC,EAEvEgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,EzBoFC,M0BtHawP,IACb,MAAMmB,EAAU,CAAC,IAAM,GAAM,IAAM,IAAM,KAEnClB,EAA0B,CAChC,GAAM,QACN,MAAS,eACT,KAAQ,+GACR,OAAU,CAAC,CAAC,GAAK,IAAM,EAAG,GAAI,CAAC,IAAM,GAAK,EAAG,KAAM,CAAC,GAAK,IAAM,EAAG,GAAI,CAAC,IAAM,IAAM,EAAG,KAAM,CAAC,GAAK,IAAM,EAAG,IAC3G,WAAc,CAAC,CAAC,CAAC,KAAQ,4BAA6B,MAAS,KAAO,CAAC,CAAC,KAAQ,4BAA6B,MAAS,MAAQ,CAAC,CAAC,KAAQ,4BAA6B,MAAS,KAAO,CAAC,CAAC,KAAQ,4BAA6B,MAAS,MAAQ,CAAC,CAAC,KAAQ,4BAA6B,MAAS,OAGvRrV,EAAyB,CAAC,CAC9B6B,IAAI,EACJlK,GAAI,oBACJ0I,KAAM,oBACNF,SAAUwC,GACV1D,KAAM,wBACNqB,MAAO+U,EAAO/W,MACd0B,QAASmV,GAAsBC,EAAGC,KAGpC,MAAO,CACLjU,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR8T,mBAAmB,IAErB3T,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAEwF,WAAayJ,EAAE0T,kBAAoB5C,EAAQnB,GAAK,CAAC,EAErDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,G1BuFKwT,GAAW,CACf,K2B3HchE,IACd,MAAMmB,EAAU,CAAC,IAAM,IAAM,IAAM,IAAM,KACnCiC,EAAS,CACb,GAAM,QACN,MAAS,iBACT,KAAQ,kFACR,OAAU,CAAC,CAAC,IAAM,KAAO,CAAC,GAAK,KAAO,CAAC,IAAM,KAAO,CAAC,IAAM,KAAO,CAAC,IAAM,MACzE,WAAc,CAAC,CAAC,CAAC,KAAQ,cAAe,MAAS,MAAQ,CAAC,CAAC,KAAQ,cAAe,MAAS,KAAO,CAAC,CAAC,KAAQ,cAAe,MAAS,MAAQ,CAAC,CAAC,KAAQ,cAAe,MAAS,MAAQ,CAAC,CAAC,KAAQ,cAAe,MAAS,QAEpNxY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,sBACJ0I,KAAM,sBACNF,SAAUwC,GACV1D,KAAM,oBACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,KAGpC,MAAO,CACLpX,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRgU,qBAAqB,IAEvB7T,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE5B,EAAMgB,MAAS6P,EAAE4T,oBAAuB9C,EAAQnB,GAAK,CAAC,EAE1DgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,E3B4FC,M4B5HcwP,IACd,MAAMmB,EAAU,CAAC,IAAM,IAAM,IAAM,IAAM,KACnCiC,EAAU,CACd,GAAM,QACN,MAAS,SACT,KAAQ,yJACR,OAAU,CAAC,CAAC,IAAM,GAAI,CAAC,IAAM,GAAI,CAAC,IAAM,GAAI,CAAC,IAAM,GAAI,CAAC,IAAM,IAC9D,WAAc,CAAC,GAAI,GAAI,GAAI,GAAI,KAE3BxY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,0BACJ0I,KAAM,0BACNF,SAAUqE,GACVvF,KAAM,6BACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,GAClC9U,IAAK,EACLC,IAAK,IAGP,MAAO,CACLvC,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRiU,wBAAyB,IAE3B9T,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE+C,eAAiBkM,EAAE6T,wBAA0B/C,EAAQnB,EAAE,EAE3DgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,E5B2FC,M6B7HcwP,IACd,MAAMmB,EAAU,CAAC,IAAM,IAAM,GAAM,IAAM,KACnCiC,EAAU,CACd,GAAM,QACN,MAAS,sBACT,KAAQ,gHACR,OAAU,CAAC,CAAC,IAAM,KAAO,CAAC,IAAM,KAAO,CAAC,GAAK,IAAM,CAAC,IAAM,KAAO,CAAC,IAAM,MACxE,WAAc,CAAC,CAAC,CAAC,KAAQ,oBAAqB,MAAS,MAAQ,CAAC,CAAC,KAAQ,oBAAqB,MAAS,MAAQ,CAAC,CAAC,KAAQ,oBAAqB,MAAS,KAAO,CAAC,CAAC,KAAQ,oBAAqB,MAAS,MAAQ,CAAC,CAAC,KAAQ,oBAAqB,MAAS,QAElPxY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,aACJ0I,KAAM,aACNF,SAAUwC,GACV1D,KAAM,eACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,KAGpC,MAAO,CACLpX,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRkU,YAAY,IAEd/T,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAEsE,eAAkB2K,EAAE8T,WAAe,EAAIhD,EAAQnB,GAAM,CAAC,EAE1DgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,E7B8FC,M8B7HcwP,IACd,MAAMmB,EAAU,CAAC,IAAM,IAAM,IAAM,IAAM,KACnCiC,EAAU,CACd,GAAM,QACN,MAAS,SACT,KAAQ,wFACR,OAAU,CAAC,CAAC,IAAM,KAAO,CAAC,GAAK,KAAO,CAAC,IAAM,KAAO,CAAC,IAAM,KAAO,CAAC,IAAM,MACzE,WAAc,CAAC,CAAC,CAAC,KAAQ,mBAAoB,MAAS,MAAQ,CAAC,CAAC,KAAQ,mBAAoB,MAAS,KAAO,CAAC,CAAC,KAAQ,mBAAoB,MAAS,MAAQ,CAAC,CAAC,KAAQ,mBAAoB,MAAS,MAAQ,CAAC,CAAC,KAAQ,mBAAoB,MAAS,QAE7OxY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,iBACJ0I,KAAM,iBACNF,SAAUwC,GACV1D,KAAM,2BACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,KAGpC,MAAO,CACLpX,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRmU,gBAAgB,IAElBhU,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE5B,EAAMK,KAAQwQ,EAAE+T,gBAAkB7b,EAAQqJ,YAAc,EAAKuP,EAAQnB,GAAK,CAAC,EAE/EgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,E9B8FC,M+BtIF,KA8DS,CACLxE,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAAS,OAC5CqF,SAAUA,KAAA,CACT,GACDG,kBAAmBA,OAGnB4Q,kBAAmBA,OACnBxQ,oBAAqBA,S/BiEvB,MgC/HcwP,IACd,MAAMmB,EAAU,CAAC,IAAM,IAAM,IAAM,IAAM,KACnCiC,EAAU,CACd,GAAM,QACN,MAAS,sBACT,KAAQ,oKACR,OAAU,CAAC,CAAC,KAAO,CAAC,KAAO,CAAC,KAAO,CAAC,KAAO,CAAC,MAC5C,WAAc,CAAC,GAAI,GAAI,GAAI,GAAI,KAE3BxY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,gBACJ0I,KAAM,gBACNF,SAAUqE,GACVvF,KAAM,kBACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,GAClC9U,IAAK,EACLC,IAAK,IAGP,MAAO,CACLvC,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR6S,cAAe,IAEjB1S,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE5B,EAAMC,QAAW4Q,EAAEyS,cAAiB3B,EAAQnB,EAAE,EAElDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,EhC8FC,MiChIcwP,IACd,MAAMmB,EAAU,CAAC,IAAM,GAAM,IAAM,IAAM,KAEnCiC,EAAU,CACd,GAAM,QACN,MAAS,6BACT,KAAQ,kIACR,OAAU,CAAC,CAAC,IAAM,GAAK,KAAO,CAAC,GAAK,GAAK,IAAM,CAAC,IAAM,GAAK,KAAO,CAAC,IAAM,GAAK,KAAO,CAAC,IAAM,GAAK,MACjG,WAAc,CAAC,GAAI,GAAI,GAAI,GAAI,KAE3BxY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,mBACJ0I,KAAM,mBACNF,SAAUwC,GACV1D,KAAM,0BACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,KAGpC,MAAO,CACLpX,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRoU,kBAAkB,IAEpBjU,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAGlB3f,EAAEuF,WAAawa,EAAQnB,GACvB5e,EAAEuF,WAAc0J,EAAEgU,kBAAoB9b,EAAQiK,eAAiB,GAAQ2O,EAAQnB,GAAK,CAAC,EAEvFgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,EjC8FC,MkCzIF,KA8DS,CACLxE,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAAS,OAC5CqF,SAAUA,KAAA,CACT,GACDG,kBAAmBA,OAGnB4Q,kBAAmBA,OACnBxQ,oBAAqBA,SlCoEvB,MmCvIcwP,IACd,MAAMmB,EAAU,CAAC,IAAM,GAAM,IAAM,IAAM,KAEzC,MAAO,CACLnV,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAAS,KAC5CqF,SAAUA,KAAA,CACT,GACDG,kBAAoBhP,IAClBA,EAAEwF,WAAaua,EAAQnB,EAAE,EAE3BgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,EnC2HC,MoC1IcwP,IACd,MAAMmB,EAAU,CAAC,IAAM,IAAM,GAAM,IAAM,KAoCzC,MAAO,CACLnV,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAAS,OAC5CqF,SAAUA,KAAA,CACT,GACDG,kBAAoBhP,IAGlBA,EAAEsE,eAAkB,EAAIyb,EAAQnB,EAAG,EAErCgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,EpC0FC,MqCrIcwP,IACd,MAAMmB,EAAU,CAAC,IAAM,GAAM,IAAM,IAAM,KACnCiC,EAAU,CACd,GAAM,QACN,MAAS,uBACT,KAAQ,6KACR,OAAU,CAAC,CAAC,IAAM,GAAI,CAAC,GAAK,GAAI,CAAC,IAAM,GAAI,CAAC,IAAM,GAAI,CAAC,IAAM,IAC7D,WAAc,CAAC,GAAI,GAAI,GAAI,GAAI,KAE3BxY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,sBACJ0I,KAAM,sBACNF,SAAUqE,GACVvF,KAAM,yBACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,GAClC9U,IAAK,EACLC,IAAK,IAGP,MAAO,CACLvC,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRqU,oBAAqB,IAEvBlU,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE+C,eAAkBkM,EAAEiU,oBAAuBnD,EAAQnB,EAAE,EAEzDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,ErCoGC,MsCvIcwP,IACd,MAAMmB,EAAU,CAAC,IAAM,IAAM,IAAM,IAAM,KACnCiC,EAAU,CACd,GAAM,QACN,MAAS,YACT,KAAQ,0GACR,OAAU,CAAC,CAAC,KAAO,CAAC,KAAO,CAAC,KAAO,CAAC,KAAO,CAAC,MAC5C,WAAc,CAAC,GAAI,GAAI,GAAI,GAAI,KAE3BxY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,oBACJ0I,KAAM,oBACNF,SAAUwC,GACV1D,KAAM,8BACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,KAGpC,MAAO,CACLpX,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRsU,mBAAmB,IAErBnU,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE+C,eAAkBkM,EAAEkU,kBAAqBpD,EAAQnB,GAAK,CAAC,EAE3DgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,EtCwGC,MuCvIcwP,IACd,MAAMmB,EAAU,CAAC,GAAM,IAAM,GAAM,IAAM,IACnCiC,EAAU,CACd,GAAM,QACN,MAAS,kBACT,KAAQ,qJACR,OAAU,CAAC,CAAC,GAAK,IAAM,CAAC,IAAM,KAAO,CAAC,GAAK,IAAM,CAAC,IAAM,KAAO,CAAC,GAAK,KACrE,WAAc,CAAC,CAAC,CAAC,KAAQ,0BAA2B,MAAS,KAAO,CAAC,CAAC,KAAQ,0BAA2B,MAAS,MAAQ,CAAC,CAAC,KAAQ,0BAA2B,MAAS,KAAO,CAAC,CAAC,KAAQ,0BAA2B,MAAS,MAAQ,CAAC,CAAC,KAAQ,0BAA2B,MAAS,OAE/QxY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,wBACJ0I,KAAM,wBACNF,SAAUwC,GACV1D,KAAM,8BACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,KAGpC,MAAO,CACLpX,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRuU,uBAAuB,IAEzBpU,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE+C,eAAiBgd,EAAQnB,GAC3B5e,EAAE+C,eAAkBkM,EAAEmU,sBAAyBrD,EAAQnB,GAAK,CAAC,EAE/DgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,EvCuGC,MwCvIcwP,IACd,MAAMmB,EAAU,CAAC,IAAM,GAAM,IAAM,IAAM,KACnCiC,EAAU,CACd,GAAM,QACN,MAAS,qBACT,KAAQ,8GACR,OAAU,CAAC,CAAC,IAAM,IAAK,CAAC,GAAK,IAAK,CAAC,IAAM,IAAK,CAAC,IAAM,IAAK,CAAC,IAAM,KACjE,WAAc,CAAC,GAAI,GAAI,GAAI,GAAI,KAE3BxY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,aACJ0I,KAAM,aACNF,SAAUwC,GACV1D,KAAM,eACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,KAGpC,MAAO,CACLpX,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRsI,YAAY,IAEdnI,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAEsF,WAAc2J,EAAEkI,WAAc4I,EAAQnB,GAAK,CAAC,EAEhDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,ExCwGC,MyCxIcwP,IACd,MAAMmB,EAAU,CAAC,IAAM,IAAM,IAAM,IAAM,KACnCsD,EAAa,CAAC,IAAM,IAAM,IAAM,IAAM,KACtCrB,EAAS,CACb,GAAM,QACN,MAAS,0BACT,KAAQ,0JACR,OAAU,CAAC,CAAC,IAAM,IAAM,KAAO,CAAC,GAAK,IAAM,KAAO,CAAC,IAAM,IAAM,KAAO,CAAC,IAAM,IAAM,KAAO,CAAC,IAAM,IAAM,MACvG,WAAc,CAAC,CAAC,CAAC,KAAQ,uBAAwB,MAAS,MAAQ,CAAC,CAAC,KAAQ,uBAAwB,MAAS,KAAO,CAAC,CAAC,KAAQ,uBAAwB,MAAS,MAAQ,CAAC,CAAC,KAAQ,uBAAwB,MAAS,MAAQ,CAAC,CAAC,KAAQ,uBAAwB,MAAS,QAEjQxY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,oBACJ0I,KAAM,oBACNF,SAAUwC,GACV1D,KAAM,uBACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,KAGpC,MAAO,CACLpX,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRyU,mBAAmB,IAErBtU,kBAAmBA,OAGnB4Q,kBAAmBA,OACnBxQ,oBAAqBA,CAAClI,EAAGC,KACvB,MAAM8H,EAAI9H,EAAQwY,sBACZ3f,EAAIkH,EAAElH,EAENujB,EAAQzc,KAAKoG,IAAImW,EAAWzE,GAAImB,EAAQnB,GAAK5e,EAAE5B,EAAMmB,MAC3DS,EAAE5B,EAAMgB,MAAS6P,EAAEqU,kBAAqBC,EAAQ,CAAC,EAGtD,EzCoGC,M0C1Ic3E,IACd,MAAMmB,EAAU,CAAC,IAAM,IAAM,IAAM,IAAM,KACnCiC,EAAU,CACd,GAAM,QACN,MAAS,cACT,KAAQ,4LACR,OAAU,CAAC,CAAC,GAAK,IAAM,GAAI,CAAC,GAAK,IAAM,GAAI,CAAC,GAAK,IAAM,GAAI,CAAC,GAAK,IAAM,GAAI,CAAC,EAAG,IAAM,IACrF,WAAc,CAAC,GAAI,GAAI,GAAI,GAAI,KAE3BxY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,iBACJ0I,KAAM,iBACNF,SAAUwC,GACV1D,KAAM,kBACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,KAGpC,MAAO,CACLpX,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR2U,gBAAgB,IAElBxU,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAEkE,WAAc+K,EAAEuU,eAAkBzD,EAAQnB,GAAK,CAAC,EAEpDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,E1C2GC,M2ClJF,KAwES,CACLxE,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAAS,OAC5CqF,SAAUA,KAAA,CACT,GACDG,kBAAmBA,OAGnB4Q,kBAAmBA,OACnBxQ,oBAAqBA,S3CmEvB,M4C7IcwP,IACd,MAAMmB,EAAU,CAAC,IAAM,GAAM,IAAM,IAAM,KACnCiC,EAAU,CACd,GAAM,QACN,MAAS,yBACT,KAAQ,oKACR,OAAU,CAAC,CAAC,IAAM,KAAO,CAAC,GAAK,IAAM,CAAC,IAAM,KAAO,CAAC,IAAM,KAAO,CAAC,IAAM,MACxE,WAAc,CAAC,GAAI,GAAI,GAAI,GAAI,KAE3BxY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,oBACJ0I,KAAM,oBACNF,SAAUwC,GACV1D,KAAM,uBACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,KAGpC,MAAO,CACLpX,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR4U,mBAAmB,IAErBzU,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAEoF,aAAe2a,EAAQnB,GACzB5e,EAAEqF,aAAe0a,EAAQnB,GACzB5e,EAAEoF,aAAgB6J,EAAEwU,kBAAqB1D,EAAQnB,GAAK,EACtD5e,EAAEqF,aAAgB4J,EAAEwU,kBAAqB1D,EAAQnB,GAAK,CAAC,EAEzDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,E5C2GC,M6CpJF,KAgCS,CACLxE,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAAS,OAC5CqF,SAAUA,KAAA,CACT,GACDG,kBAAmBA,OAGnB4Q,kBAAmBA,OACnBxQ,oBAAqBA,S7C6GvB,M8C9IcwP,IACd,MAAMmB,EAAU,CAAC,IAAM,IAAM,IAAM,IAAM,KACnCiC,EAAU,CACd,GAAM,QACN,MAAS,oBACT,KAAQ,kGACR,OAAU,CAAC,CAAC,IAAM,IAAM,GAAI,CAAC,GAAK,IAAM,GAAI,CAAC,IAAM,IAAM,GAAI,CAAC,IAAM,IAAM,GAAI,CAAC,IAAM,IAAM,IAC3F,WAAc,CAAC,CAAC,CAAC,KAAQ,mBAAoB,MAAS,MAAQ,CAAC,CAAC,KAAQ,mBAAoB,MAAS,KAAO,CAAC,CAAC,KAAQ,mBAAoB,MAAS,MAAQ,CAAC,CAAC,KAAQ,mBAAoB,MAAS,MAAQ,CAAC,CAAC,KAAQ,mBAAoB,MAAS,QAE7OxY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,sBACJ0I,KAAM,sBACNF,SAAUwC,GACV1D,KAAM,yBACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,KAGpC,MAAO,CACLpX,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR6U,qBAAqB,IAEvB1U,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE5B,EAAMK,KAAQwQ,EAAEyU,oBAAuB3D,EAAQnB,GAAK,CAAC,EAEzDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,E9C+GC,M+C9IcwP,IACd,MAAMmB,EAAU,CAAC,IAAM,GAAM,IAAM,IAAM,KACnCiC,EAAU,CACd,GAAM,QACN,MAAS,8BACT,KAAQ,iGACR,OAAU,CAAC,CAAC,IAAM,IAAM,GAAI,CAAC,GAAK,GAAK,GAAI,CAAC,IAAM,IAAM,GAAI,CAAC,IAAM,IAAM,GAAI,CAAC,IAAM,IAAM,IAC1F,WAAc,CAAC,CAAC,CAAC,KAAQ,mBAAoB,MAAS,MAAQ,CAAC,CAAC,KAAQ,mBAAoB,MAAS,KAAO,CAAC,CAAC,KAAQ,mBAAoB,MAAS,MAAQ,CAAC,CAAC,KAAQ,mBAAoB,MAAS,MAAQ,CAAC,CAAC,KAAQ,mBAAoB,MAAS,QAE7OxY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,sBACJ0I,KAAM,sBACNF,SAAUwC,GACV1D,KAAM,yBACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,KAGpC,MAAO,CACLpX,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR8U,qBAAqB,IAEvB3U,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE5B,EAAMI,KAAQyQ,EAAE0U,oBAAuB5D,EAAQnB,GAAK,CAAC,EAEzDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,E/C+GC,MgDvJF,KAqCS,CACLxE,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAAS,OAC5CqF,SAAUA,KAAA,CACT,GACDG,kBAAmBA,OAGnB4Q,kBAAmBA,OACnBxQ,oBAAqBA,ShD2GvB,MiDjJcwP,IACd,MAAMmB,EAAU,CAAC,IAAM,GAAM,IAAM,IAAM,KACnCiC,EAAU,CACd,GAAM,QACN,MAAS,iBACT,KAAQ,gHACR,OAAU,CAAC,CAAC,IAAM,KAAO,CAAC,GAAK,IAAM,CAAC,IAAM,KAAO,CAAC,IAAM,KAAO,CAAC,IAAM,MACxE,WAAc,CAAC,CAAC,CAAC,KAAQ,4BAA6B,MAAS,MAAQ,CAAC,CAAC,KAAQ,4BAA6B,MAAS,KAAO,CAAC,CAAC,KAAQ,4BAA6B,MAAS,MAAQ,CAAC,CAAC,KAAQ,4BAA6B,MAAS,MAAQ,CAAC,CAAC,KAAQ,4BAA6B,MAAS,QAE1RxY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,sBACJ0I,KAAM,sBACNF,SAAUwC,GACV1D,KAAM,+BACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,KAGpC,MAAO,CACLpX,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR+U,qBAAqB,IAEvB5U,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE+C,eAAkBkM,EAAE2U,oBAAuB7D,EAAQnB,GAAK,CAAC,EAE7DgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,EjDkHC,MkDnJcwP,IACd,MAAMmB,EAAU,CAAC,IAAM,GAAM,IAAM,IAAM,KACnCiC,EAAU,CACd,GAAM,QACN,MAAS,aACT,KAAQ,wPACR,OAAU,CAAC,CAAC,GAAK,IAAM,GAAI,CAAC,IAAM,GAAK,GAAI,CAAC,GAAK,IAAM,GAAI,CAAC,IAAM,IAAM,GAAI,CAAC,GAAK,IAAM,IACxF,WAAc,CAAC,GAAI,GAAI,GAAI,GAAI,KAE3BxY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,0BACJ0I,KAAM,0BACNF,SAAUwC,GACV1D,KAAM,6BACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,KAGpC,MAAO,CACLpX,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRgV,yBAAyB,IAE3B7U,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAEsE,eAAkB2K,EAAE4U,wBAA4B,EAAI9D,EAAQnB,GAAM,CAAC,EAEvEgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,ElDoHC,MmDnJcwP,IACd,MAAM0B,EAAa,CAAC,IAAM,IAAM,GAAM,IAAM,KACtCd,EAAa,CAAC,IAAM,IAAM,IAAM,IAAM,KACtCwC,EAAU,CACd,GAAM,QACN,MAAS,+BACT,KAAQ,yMACR,OAAU,CAAC,CAAC,IAAM,KAAO,CAAC,IAAM,KAAO,CAAC,GAAK,KAAO,CAAC,IAAM,KAAO,CAAC,IAAM,MACzE,WAAc,CAAC,GAAI,GAAI,GAAI,GAAI,KAE3BxY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,aACJ0I,KAAM,aACNF,SAAUwC,GACV1D,KAAM,wBACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,KAGpC,MAAO,CACLpX,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRiV,YAAY,IAEd9U,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE5B,EAAMoB,QAAWyP,EAAE6U,WAAcxD,EAAW1B,GAAK,EACnD5e,EAAE+C,eAAkBkM,EAAE6U,WAActE,EAAWZ,GAAK,CAAC,EAEvDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,EnDkHC,MoD3JF,KAUS,CACLxE,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAAS,OAC5CqF,SAAUA,KAAA,CACT,GACDG,kBAAmBA,OAGnB4Q,kBAAmBA,OACnBxQ,oBAAqBA,SpD0IvB,MqDtJcwP,IACd,MAAMmB,EAAU,CAAC,IAAM,GAAM,IAAM,IAAM,KACnCiC,EAAU,CACd,GAAM,QACN,MAAS,OACT,KAAQ,0GACR,OAAU,CAAC,CAAC,GAAK,KAAO,CAAC,KAAO,IAAM,CAAC,IAAM,KAAO,CAAC,KAAO,KAAO,CAAC,GAAK,MACzE,WAAc,CAAC,CAAC,CAAC,KAAQ,mBAAoB,MAAS,KAAO,CAAC,CAAC,KAAQ,mBAAoB,MAAS,OAAS,CAAC,CAAC,KAAQ,mBAAoB,MAAS,MAAQ,CAAC,CAAC,KAAQ,mBAAoB,MAAS,OAAS,CAAC,CAAC,KAAQ,mBAAoB,MAAS,OAE/OxY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,WACJ0I,KAAM,WACNF,SAAUwC,GACV1D,KAAM,6BACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,KAGpC,MAAO,CACLpX,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRkV,qBAAqB,IAEvB/U,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE+C,eAAkBkM,EAAE8U,oBAAuBhE,EAAQnB,GAAK,CAAC,EAE7DgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,ErDuHC,MsDrJcwP,IACd,MAAMoF,EAAkB,CAAC,IAAM,IAAM,IAAM,IAAM,KAC3CC,EAAgB,CAAC,IAAM,IAAM,IAAM,IAAM,KACzCjC,EAAU,CACd,GAAM,QACN,MAAS,YACT,KAAQ,wCACR,OAAU,CAAC,CAAC,IAAM,IAAM,GAAI,CAAC,IAAM,IAAM,GAAI,CAAC,IAAM,IAAM,GAAI,CAAC,IAAM,IAAM,GAAI,CAAC,IAAM,IAAM,IAC5F,WAAc,CAAC,CAAC,CAAC,KAAQ,0BAA2B,MAAS,MAAQ,CAAC,CAAC,KAAQ,0BAA2B,MAAS,MAAQ,CAAC,CAAC,KAAQ,0BAA2B,MAAS,MAAQ,CAAC,CAAC,KAAQ,0BAA2B,MAAS,MAAQ,CAAC,CAAC,KAAQ,0BAA2B,MAAS,QAEjRkC,EAAW,IACZlC,EACHjD,KAAK,+GAGDvV,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,WACJ0I,KAAM,WACNF,SAAUwC,GACV1D,KAAM,YACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,IACjC,CACD3W,IAAI,EACJlK,GAAI,yBACJ0I,KAAM,yBACNF,SAAUqE,GACVvF,KAAM,4BACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGsF,GAClChX,IAAK,EACLC,IAAK,IAGP,MAAO,CACLvC,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRsV,UAAU,EACVC,uBAAwB,IAE1BpV,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE5B,EAAMC,QAAU4Q,EAAEmV,uBAAyBH,EAAcrF,GAC3D5e,EAAE+C,eAAkBkM,EAAEkV,SAAYH,EAAgBpF,GAAK,CAAC,EAE1DgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,EtDoGC,MuD9JF,KAUS,CACLxE,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAAS,OAC5CqF,SAAUA,KAAA,CACT,GACDG,kBAAmBA,OAGnB4Q,kBAAmBA,OACnBxQ,oBAAqBA,SvD6IvB,MwDxJcwP,IACd,MAAMmB,EAAU,CAAC,IAAM,GAAM,IAAM,IAAM,KACnClB,EAAS,CACb,GAAM,QACN,MAAS,sBACT,KAAQ,+IACR,OAAU,CAAC,CAAC,IAAM,GAAM,IAAM,IAAM,MACpC,WAAc,CAAC,GAAG,GAAG,GAAG,GAAG,KAEvBrV,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,eACJ0I,KAAM,eACNF,SAAUwC,GACV1D,KAAM,sBACNqB,MAAO+U,EAAO/W,MACd0B,QAASmV,GAAsBC,EAAGC,KAGpC,MAAO,CACLjU,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRwV,cAAc,IAEhBrV,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE+E,eAAkBkK,EAAEoV,aAAgBtE,EAAQnB,GAAK,EACnD5e,EAAEgF,eAAkBiK,EAAEoV,aAAgBtE,EAAQnB,GAAK,CAAC,EAEtDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,ExDwHC,MyD1JcwP,IACd,MAAMC,EAAS,CACb,GAAM,QACN,MAAS,cACT,KAAQ,yLACR,OAAU,CAAC,CAAC,IAAM,IAAM,CAAC,GAAK,KAAO,CAAC,IAAM,IAAM,CAAC,IAAM,MAAO,CAAC,IAAM,MACvE,WAAc,CAAC,CAAC,CAAC,KAAQ,oBAAqB,MAAS,MAAQ,CAAC,CAAC,KAAQ,oBAAqB,MAAS,KAAO,CAAC,CAAC,KAAQ,oBAAqB,MAAS,MAAQ,CAAC,CAAC,KAAQ,oBAAqB,MAAS,MAAQ,CAAC,CAAC,KAAQ,oBAAqB,MAAS,QAElPrV,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,mBACJ0I,KAAM,mBACNF,SAAUwC,GACV1D,KAAM,wCACNqB,MAAO+U,EAAO/W,MACd0B,QAASmV,GAAsBC,EAAGC,KAGpC,MAAO,CACLjU,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRyV,kBAAkB,IAEpBtV,kBAAmBA,OAGnB4Q,kBAAmBA,OACnBxQ,oBAAqBA,OAQxB,EzDwHC,M0DjKF,KAUS,CACLxE,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAAS,OAC5CqF,SAAUA,KAAA,CACT,GACDG,kBAAmBA,OAGnB4Q,kBAAmBA,OACnBxQ,oBAAqBA,S1DgJvB,M2DzJcwP,IACd,MAAMW,EAAa,CAAC,GAAM,KAAO,IAAM,KAAO,IACxCM,EAAY,CAAC,IAAM,IAAM,IAAM,IAAM,KACrChB,EAAS,CACb,GAAM,QACN,MAAS,SACT,KAAO,2jBAUP,OAAU,CAAC,CAAC,GAAK,IAAM,KAAO,CAAC,KAAO,IAAM,MAAQ,CAAC,IAAM,IAAM,KAAO,CAAC,KAAO,IAAM,MAAQ,CAAC,GAAK,IAAM,MAC1G,WAAc,CAAC,GAAI,GAAI,GAAI,GAAI,KAG3BrV,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,gBACJ0I,KAAM,gBACNF,SAAUwC,GACV1D,KAAM,kBACNqB,MAAO+U,EAAO/W,MACd0B,QAASmV,GAAsBC,EAAGC,IACjC,CACDxT,IAAI,EACJlK,GAAI,eACJ0I,KAAM,eACNF,SAAUwC,GACV1D,KAAM,iBACNqB,MAAO+U,EAAO/W,MACd0B,QAASmV,GAAsBC,EAAGC,KAGpC,MAAO,CACLjU,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR0V,eAAe,EACfC,cAAc,IAEhBxV,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE5B,EAAMC,QAAW4Q,EAAEsV,cAAiBhF,EAAWX,GAAK,EACtD5e,EAAE5B,EAAMI,KAAQyQ,EAAEuV,aAAgB3E,EAAUjB,GAAK,CAAC,EAEpDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,E3DqGC,M4DnKF,KAUS,CACLxE,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAAS,OAC5CqF,SAAUA,KAAA,CACT,GACDG,kBAAmBA,OAGnB4Q,kBAAmBA,OACnBxQ,oBAAqBA,S5DkJvB,M6D5JcwP,IACd,MAAMmB,EAAU,CAAC,KAAO,MAAQ,KAAO,MAAQ,MAEzClB,EAAS,CACb,GAAM,QACN,MAAS,oBACT,KAAQ,gJACR,OAAU,CAAC,CAAC,KAAO,KAAM,CAAC,MAAQ,KAAM,CAAC,KAAO,KAAM,CAAC,MAAQ,KAAM,CAAC,KAAO,MAC7E,WAAc,CAAC,GAAI,GAAI,GAAI,GAAI,KAE3BrV,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,kBACJ0I,KAAM,kBACNF,SAAUqE,GACVvF,KAAM,aACNqB,MAAO+U,EAAO/W,MACd0B,QAASmV,GAAsBC,EAAGC,GAClC3R,IAAK,EACLC,IAAK,MAGP,MAAO,CACLvC,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR4V,gBAAiB,MAEnBzV,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE+C,eAAiBkM,EAAEwV,gBAAkB1E,EAAQnB,EAAE,EAEnDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,E7D0HC,M8DnKF,KAGS,CACLxE,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAAS,KAC5CqF,SAAUA,KAAA,CACT,GACDG,kBAAmBA,OAGnB4Q,kBAAmBA,OACnBxQ,oBAAqBA,S9DyJvB,M+D9JcwP,IACd,MAAMmB,EAAU,CAAC,IAAM,IAAM,IAAM,IAAM,IACnCiC,EAAU,CACd,GAAM,QACN,MAAS,aACT,KAAQ,2TACR,OAAU,CACR,CACE,KAEF,CACE,KAEF,CACE,KAEF,CACE,KAEF,CACE,KAGJ,WAAc,CACZ,GACA,GACA,GACA,GACA,KAGExY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,eACJ0I,KAAM,eACNF,SAAUwC,GACV1D,KAAM,iBACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,IAEpC,CACE3W,IAAI,EACJlK,GAAI,eACJ0I,KAAM,eACNF,SAAUwC,GACV1D,KAAM,iBACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,IAEpC,CACE3W,IAAI,EACJlK,GAAI,aACJ0I,KAAM,aACNF,SAAUwC,GACV1D,KAAM,eACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,KAGpC,MAAO,CACLpX,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR6V,cAAc,EACdC,cAAc,EACdxN,YAAY,IAEdnI,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAEoF,aAAgB6J,EAAEyV,aAAgB3E,EAAQnB,GAAK,EACjD5e,EAAEqF,aAAgB4J,EAAE0V,aAAgB5E,EAAQnB,GAAK,EACjD5e,EAAEsF,WAAc2J,EAAEkI,WAAc4I,EAAQnB,GAAK,CAAC,EAEhDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,E/DmFC,MgE/JcwP,IACd,MAAMmB,EAAU,CAAC,IAAM,IAAM,GAAM,IAAM,KACnCiC,EAAU,CACd,GAAM,QACN,MAAS,SACT,KAAQ,6PACR,OAAU,CACR,CACE,IACA,IACA,GAEF,CACE,IACA,IACA,GAEF,CACE,IACA,GACA,GAEF,CACE,IACA,IACA,GAEF,CACE,GACA,IACA,IAGJ,WAAc,CACZ,CACE,CACE,KAAQ,mBACR,MAAS,MAGb,CACE,CACE,KAAQ,mBACR,MAAS,MAGb,CACE,CACE,KAAQ,mBACR,MAAS,MAGb,CACE,CACE,KAAQ,mBACR,MAAS,MAGb,CACE,CACE,KAAQ,mBACR,MAAS,OAKXxY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,oBACJ0I,KAAM,oBACNF,SAAUqE,GACVvF,KAAM,sBACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,GAClC9U,IAAK,EACLC,IAAK,IAGP,MAAO,CACLvC,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR+V,kBAAmB,IAErB5V,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE5B,EAAMI,KAAOyQ,EAAE2V,kBAAoB7E,EAAQnB,EAAE,EAEjDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,EhEqEC,MiElKcwP,IACd,MAAMmB,EAAU,CAAC,IAAM,MAAQ,KAAO,MAAQ,IACxCiC,EAAU,CACd,GAAM,QACN,MAAS,eACT,KAAQ,yYACR,OAAU,CACR,CACE,IACA,IACA,IACA,EACA,GAEF,CACE,IACA,MACA,IACA,EACA,GAEF,CACE,IACA,KACA,IACA,EACA,GAEF,CACE,IACA,MACA,IACA,EACA,GAEF,CACE,IACA,GACA,IACA,EACA,IAGJ,WAAc,CACZ,GACA,GACA,GACA,GACA,KAGExY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,UACJ0I,KAAM,UACNF,SAAUwC,GACV1D,KAAM,qBACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,KAGpC,MAAO,CACLpX,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRmR,SAAS,IAEXhR,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE+C,eAAkBkM,EAAE+Q,QAAWD,EAAQnB,GAAK,CAAC,EAEjDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,EjEyFC,MkEpKcwP,IACd,MAAMmB,EAAU,CAAC,KAAO,KAAO,IAAM,KAAO,MACtC8E,EAAa,CAAC,IAAM,IAAM,GAAM,IAAM,KAE5C,MAAO,CACLja,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAAS,KAC5CqF,SAAUA,KAAA,CACT,GACDG,kBAAmBA,OAGnB4Q,kBAAmBA,OACnBxQ,oBAAsBlI,IAEpB,MAAMlH,EAAIkH,EAAK,EAGflH,EAAE+C,eAAiB+D,KAAKoG,IAAI2X,EAAWjG,GAAI9X,KAAKiW,MAAM/c,EAAE5B,EAAMO,KAAO,KAAOohB,EAAQnB,GAAG,EAG5F,ElEiJC,MmEjKcA,IACd,MAAMmB,EAAU,CAAC,GAAM,IAAM,GAAM,IAAM,IACnCiC,EAAU,CACd,GAAM,QACN,MAAS,YACT,KAAQ,+JACR,OAAU,CACR,CACE,IACA,GACA,GAEF,CACE,IACA,IACA,GAEF,CACE,GACA,GACA,GAEF,CACE,IACA,IACA,GAEF,CACE,IACA,GACA,IAGJ,WAAc,CACZ,CACE,CACE,KAAQ,mBACR,MAAS,MAGb,CACE,CACE,KAAQ,mBACR,MAAS,MAGb,CACE,CACE,KAAQ,mBACR,MAAS,KAGb,CACE,CACE,KAAQ,mBACR,MAAS,MAGb,CACE,CACE,KAAQ,mBACR,MAAS,QAKXxY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,eACJ0I,KAAM,eACNF,SAAUwC,GACV1D,KAAM,oCACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,KAGpC,MAAO,CACLpX,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR2V,cAAc,IAEhBxV,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE5B,EAAMI,KAAQyQ,EAAEuV,aAAgBzE,EAAQnB,GAAK,CAAC,EAElDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,EnEyEC,MoEnKcwP,IACd,MAAMY,EAAa,CAAC,IAAM,IAAM,IAAM,IAAM,IACtCsF,EAAiB,CAAC,GAAM,IAAM,IAAM,IAAM,KAE1C9C,EAAU,CACd,GAAM,QACN,MAAS,iBACT,KAAQ,6RACR,OAAU,CACR,CACE,IACA,EACA,EACA,GACA,IAEF,CACE,IACA,EACA,EACA,GACA,KAEF,CACE,IACA,EACA,EACA,GACA,KAEF,CACE,IACA,EACA,EACA,GACA,KAEF,CACE,GACA,EACA,EACA,GACA,MAGJ,WAAc,CACZ,GACA,GACA,GACA,GACA,KAGExY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,cACJ0I,KAAM,cACNF,SAAUqE,GACVvF,KAAM,eACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,GAClC9U,IAAK,EACLC,IAAK,IAGP,MAAO,CACLvC,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRkW,YAAa,IAEf/V,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE+C,eAAiBkM,EAAE8V,YAAcvF,EAAWZ,EAAE,EAElDgB,kBAAmBA,OACnBxQ,oBAAsBlI,IACpB,MAAMlH,EAAIkH,EAAK,EAEflH,EAAE5B,EAAME,MAAQ0B,EAAE5B,EAAMQ,MAAQ,GAAOsI,EAAES,QAAUmd,EAAelG,GAAK,CAAC,EAG7E,EpEkFC,MqErKcA,IACd,MAAMmB,EAAU,CAAC,IAAM,MAAQ,KAAO,MAAQ,IACxCiC,EAAU,CACd,GAAM,QACN,MAAS,cACT,KAAQ,gJACR,OAAU,CACR,CACE,IACA,IACA,GAEF,CACE,IACA,MACA,GAEF,CACE,IACA,KACA,GAEF,CACE,IACA,MACA,GAEF,CACE,IACA,GACA,IAGJ,WAAc,CACZ,CACE,CACE,KAAQ,4BACR,MAAS,MAGb,CACE,CACE,KAAQ,4BACR,MAAS,MAGb,CACE,CACE,KAAQ,4BACR,MAAS,MAGb,CACE,CACE,KAAQ,4BACR,MAAS,MAGb,CACE,CACE,KAAQ,4BACR,MAAS,QAKXxY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,SACJ0I,KAAM,SACNF,SAAUwC,GACV1D,KAAM,cACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,KAGpC,MAAO,CACLpX,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRmW,QAAQ,IAEVhW,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE5B,EAAMK,KAAQwQ,EAAE+V,OAAUjF,EAAQnB,GAAK,CAAC,EAE5CgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,ErE8EC,KsE9KF,KAqBS,CACLxE,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAAS,OAC5CqF,SAAUA,KAAA,CACT,GACDG,kBAAmBA,OAGnB4Q,kBAAmBA,OACnBxQ,oBAAqBA,StEkJvB,MuEtKcwP,IACd,MAAMmB,EAAU,CAAC,IAAM,IAAM,IAAM,IAAM,KACnClB,EAAS,CACb,GAAM,QACN,MAAS,kBACT,KAAQ,qGACR,OAAU,CAAC,CAAC,IAAM,IAAM,GAAI,CAAC,IAAM,IAAM,GAAI,CAAC,GAAK,IAAM,GAAI,CAAC,IAAM,IAAM,GAAI,CAAC,IAAM,IAAM,IAC3F,WAAc,CAAC,CAAC,CAAC,KAAQ,eAAgB,MAAS,MAAQ,CAAC,CAAC,KAAQ,eAAgB,MAAS,MAAQ,CAAC,CAAC,KAAQ,eAAgB,MAAS,KAAO,CAAC,CAAC,KAAQ,eAAgB,MAAS,MAAQ,CAAC,CAAC,KAAQ,eAAgB,MAAS,QAEzNrV,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,oBACJ0I,KAAM,oBACNF,SAAUwC,GACV1D,KAAM,uBACNqB,MAAO+U,EAAO/W,MACd0B,QAASmV,GAAsBC,EAAGC,KAGpC,MAAO,CACLjU,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRoW,mBAAmB,IAErBjW,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE5B,EAAMgB,MAAS6P,EAAEgW,kBAAqBlF,EAAQnB,GAAK,CAAC,EAExDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,GvEiKK8V,GAAyB,IAC1B5F,MACAsD,MA1Ba,CAChB,IwE3KchE,IACd,MAAMmB,EAAU,CAAC,IAAM,IAAM,IAAM,IAAM,KACnCiC,EAAU,CACd,GAAM,QACN,MAAS,SACT,KAAQ,4FACR,OAAU,CACR,CACE,IACA,GAEF,CACE,IACA,GAEF,CACE,IACA,GAEF,CACE,IACA,GAEF,CACE,IACA,IAGJ,WAAc,CACZ,GACA,GACA,GACA,GACA,KAGExY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,WACJ0I,KAAM,WACNF,SAAUwC,GACV1D,KAAM,kBACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,KAGpC,MAAO,CACLpX,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRsW,UAAU,IAEZnW,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE5B,EAAMK,KAAQwQ,EAAEkW,SAAYpF,EAAQnB,GAAK,CAAC,EAE9CgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,ExEiHC,MyE5KcwP,IACd,MAAMmB,EAAU,CAAC,IAAM,IAAM,IAAM,IAAM,KACnCiC,EAAU,CACd,GAAM,QACN,MAAS,aACT,KAAQ,4FACR,OAAU,CACR,CACE,KAEF,CACE,KAEF,CACE,KAEF,CACE,KAEF,CACE,MAGJ,WAAc,CACZ,GACA,GACA,GACA,GACA,KAGExY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,cACJ0I,KAAM,cACNF,SAAUwC,GACV1D,KAAM,eACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,KAGpC,MAAO,CACLpX,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRuW,aAAa,IAEfpW,kBAAmBA,CAAChP,EAAmCmH,KACrD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE5B,EAAMgB,MAAS6P,EAAEmW,YAAerF,EAAQnB,GAAK,CAAC,EAElDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,EzEuHC,M0E7KcwP,IACd,MAAMmB,EAAU,CAAC,GAAM,IAAM,GAAM,IAAM,IACnCiC,EAAU,CACd,GAAM,QACN,MAAS,QACT,KAAQ,4DACR,OAAU,CACR,CACE,IAEF,CACE,KAEF,CACE,IAEF,CACE,KAEF,CACE,KAGJ,WAAc,CACZ,GACA,GACA,GACA,GACA,KAGExY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,oBACJ0I,KAAM,oBACNF,SAAUwC,GACV1D,KAAM,uBACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,KAGpC,MAAO,CACLpX,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRwW,mBAAmB,IAErBrW,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAEoF,aAAgB6J,EAAEoW,kBAAqBtF,EAAQnB,GAAK,EACtD5e,EAAEqF,aAAgB4J,EAAEoW,kBAAqBtF,EAAQnB,GAAK,CAAC,EAEzDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,E1EuHC,M2E9KcwP,IACd,MAAMmB,EAAU,CAAC,IAAM,GAAM,IAAM,IAAM,KACnCiC,EAAU,CACd,GAAM,QACN,MAAS,SACT,KAAQ,4FACR,OAAU,CAAC,CAAC,IAAM,GAAK,KAAO,CAAC,GAAK,GAAK,IAAM,CAAC,IAAM,GAAK,KAAO,CAAC,IAAM,GAAK,KAAO,CAAC,IAAM,GAAK,MACjG,WAAc,CAAC,CAAC,CAAC,KAAQ,oBAAqB,MAAS,MAAQ,CAAC,CAAC,KAAQ,oBAAqB,MAAS,KAAO,CAAC,CAAC,KAAQ,oBAAqB,MAAS,MAAQ,CAAC,CAAC,KAAQ,oBAAqB,MAAS,MAAQ,CAAC,CAAC,KAAQ,oBAAqB,MAAS,QAElPxY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,cACJ0I,KAAM,cACNF,SAAUwC,GACV1D,KAAM,oBACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,KAGpC,MAAO,CACLpX,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRyW,aAAa,IAEftW,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE5B,EAAMM,QAAWuQ,EAAEqW,YAAevF,EAAQnB,GAAK,CAAC,EAEpDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,E3E+IC,M4E9KcwP,IACd,MAAMmB,EAAU,CAAC,GAAM,IAAM,EAAG,GAAI,IAAM,IACpCiC,EAAU,CACd,GAAM,QACN,MAAS,SACT,KAAQ,kGACR,OAAU,CACR,CACE,GACA,GAEF,CACE,IACA,GAEF,CACE,GACA,GAEF,CACE,IACA,GAEF,CACE,GACA,IAGJ,WAAc,CACZ,GACA,GACA,GACA,GACA,KAGExY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,iBACJ0I,KAAM,iBACNF,SAAUwC,GACV1D,KAAM,mBACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,KAGpC,MAAO,CACLpX,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR0W,gBAAgB,IAElBvW,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE5B,EAAMQ,MAASqQ,EAAEsW,eAAkBxF,EAAQnB,GAAK,CAAC,EAErDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,E5EoHC,M6EhLcwP,IACd,MAAMmB,EAAU,CAAC,IAAM,IAAM,GAAM,IAAM,KACnCiC,EAAU,CACd,GAAM,QACN,MAAS,YACT,KAAQ,2GACR,OAAU,CACR,CACE,KAEF,CACE,KAEF,CACE,IAEF,CACE,KAEF,CACE,MAGJ,WAAc,CACZ,GACA,GACA,GACA,GACA,KAGExY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,kBACJ0I,KAAM,kBACNF,SAAUwC,GACV1D,KAAM,mBACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,KAGpC,MAAO,CACLpX,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR2W,iBAAiB,IAEnBxW,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE5B,EAAMC,QAAW4Q,EAAEuW,gBAAmBzF,EAAQnB,GAAK,CAAC,EAExDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,E7E2HC,M8E/KcwP,IACd,MAAMmB,EAAU,CAAC,IAAM,IAAM,IAAM,IAAM,KACnCiC,EAAU,CACd,GAAM,QACN,MAAS,UACT,KAAQ,iDACR,OAAU,CACR,CACE,KAEF,CACE,KAEF,CACE,KAEF,CACE,KAEF,CACE,MAGJ,WAAc,CACZ,GACA,GACA,GACA,GACA,KAGExY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,aACJ0I,KAAM,aACNF,SAAUwC,GACV1D,KAAM,eACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,KAGpC,MAAO,CACLpX,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRsI,YAAY,IAEdnI,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAEsF,WAAc2J,EAAEkI,WAAc4I,EAAQnB,GAAK,CAAC,EAEhDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,E9E0HC,M+ElLcwP,IACd,MAAMmB,EAAU,CAAC,IAAM,GAAM,IAAM,IAAM,KACnCiC,EAAU,CACd,GAAM,QACN,MAAS,UACT,KAAQ,+EACR,OAAU,CACR,CACE,IACA,GAEF,CACE,GACA,GAEF,CACE,IACA,GAEF,CACE,IACA,GAEF,CACE,IACA,IAGJ,WAAc,CACZ,GACA,GACA,GACA,GACA,KAGExY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,uBACJ0I,KAAM,uBACNF,SAAUwC,GACV1D,KAAM,0BACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,KAGpC,MAAO,CACLpX,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR4W,sBAAsB,IAExBzW,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE5B,EAAMC,QAAW4Q,EAAEwW,qBAAwB1F,EAAQnB,GAAK,CAAC,EAE7DgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,E/EwHC,MgFxLF,KAGS,CACLxE,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAAS,KAC5CqF,SAAUA,KAAA,CACRhF,MAAM,IAERmF,kBAAmBA,OACnB4Q,kBAAmBA,OACnBxQ,oBAAqBA,ShF+KvB,MiFtLcwP,IACd,MAAMmB,EAAU,CAAC,GAAM,IAAM,GAAM,IAAM,IACnCiC,EAAU,CACd,GAAM,QACN,MAAS,cACT,KAAQ,gGACR,OAAU,CACR,CACE,GACA,IAEF,CACE,GACA,KAEF,CACE,GACA,IAEF,CACE,GACA,KAEF,CACE,GACA,KAGJ,WAAc,CACZ,GACA,GACA,GACA,GACA,KAGExY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,gBACJ0I,KAAM,gBACNF,SAAUwC,GACV1D,KAAM,0BACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,KAGpC,MAAO,CACLpX,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR6W,eAAe,IAEjB1W,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE+C,eAAkBkM,EAAEyW,cAAiB3F,EAAQnB,GAAK,CAAC,EAEvDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,EjF4HC,MkF5LF,KAGS,CACLxE,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAAS,KAC5CqF,SAAUA,KAAA,CACT,GACDG,kBAAmBA,OAGnB4Q,kBAAmBA,OACnBxQ,oBAAqBA,SlFkLvB,MmFtLcwP,IACd,MAAMmB,EAAU,CAAC,IAAM,GAAM,IAAM,IAAM,KACnCiC,EAAU,CACd,GAAM,QACN,MAAS,UACT,KAAQ,mEACR,OAAU,CACR,CACE,KAEF,CACE,IAEF,CACE,KAEF,CACE,KAEF,CACE,MAGJ,WAAc,CACZ,GACA,GACA,GACA,GACA,KAGExY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,qBACJ0I,KAAM,qBACNF,SAAUwC,GACV1D,KAAM,wBACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,KAGpC,MAAO,CACLpX,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR8W,oBAAoB,IAEtB3W,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE+C,eAAkBkM,EAAE0W,mBAAsB5F,EAAQnB,GAAK,CAAC,EAE5DgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,EnFiIC,MoF9LF,KAyCS,CACLxE,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAAS,KAC5CqF,SAAUA,KAAA,CACT,GACDG,kBAAmBA,OAGnB4Q,kBAAmBA,OACnBxQ,oBAAqBA,SpF8IvB,MqF9LF,KAyCS,CACLxE,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAAS,KAC5CqF,SAAUA,KAAA,CACT,GACDG,kBAAmBA,OAGnB4Q,kBAAmBA,OACnBxQ,oBAAqBA,SrF8IvB,MsFzLcwP,IACd,MAAMmB,EAAU,CAAC,GAAM,IAAM,IAAM,IAAM,KACnCiC,EAAU,CACd,GAAM,QACN,MAAS,WACT,KAAQ,+EACR,OAAU,CACR,CACE,GACA,GAEF,CACE,IACA,GAEF,CACE,IACA,GAEF,CACE,IACA,GAEF,CACE,IACA,IAGJ,WAAc,CACZ,GACA,GACA,GACA,GACA,KAGExY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,uBACJ0I,KAAM,uBACNF,SAAUwC,GACV1D,KAAM,0BACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,KAGpC,MAAO,CACLpX,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACR+W,sBAAsB,IAExB5W,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE5B,EAAMoB,QAAWyP,EAAE2W,qBAAwB7F,EAAQnB,GAAK,CAAC,EAE7DgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,EtF+HC,MuFhMF,KAyCS,CACLxE,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAAS,KAC5CqF,SAAUA,KAAA,CACT,GACDG,kBAAmBA,OAGnB4Q,kBAAmBA,OACnBxQ,oBAAqBA,SvFgJvB,MwF3LcwP,IACd,MAAMmB,EAAU,CAAC,IAAM,IAAM,IAAM,IAAM,KACnCiC,EAAU,CACd,GAAM,QACN,MAAS,SACT,KAAQ,kFACR,OAAU,CAAC,CAAC,GAAK,KAAO,CAAC,GAAK,KAAO,CAAC,GAAK,KAAO,CAAC,GAAK,KAAO,CAAC,GAAK,MACrE,WAAc,CAAC,GAAI,GAAI,GAAI,GAAI,KAE3BxY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,iBACJ0I,KAAM,iBACNF,SAAUwC,GACV1D,KAAM,wBACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,KAGpC,MAAO,CACLpX,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRgX,gBAAgB,IAElB7W,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE5B,EAAMK,KAAQwQ,EAAE4W,eAAkB9F,EAAQnB,GAAK,CAAC,EAEpDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,ExF4JC,MyFnMF,KAmBS,CACLxE,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAAS,KAC5CqF,SAAUA,KAAA,CACT,GACDG,kBAAmBA,OAGnB4Q,kBAAmBA,OACnBxQ,oBAAqBA,SzFyKvB,M0F/LcwP,IACd,MAAMmB,EAAU,CAAC,GAAM,IAAM,GAAM,KAAM,KACnCiC,EAAU,CACd,GAAM,QACN,MAAS,YACT,KAAQ,kHACR,OAAU,CAAC,CAAC,IAAM,CAAC,KAAO,CAAC,IAAM,CAAC,MAAO,CAAC,MAC1C,WAAc,CAAC,GAAI,GAAI,GAAI,GAAI,KAE3BxY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,eACJ0I,KAAM,eACNF,SAAUwC,GACV1D,KAAM,sBACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,KAGpC,MAAO,CACLpX,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRiX,cAAc,IAEhB9W,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE+E,eAAkBkK,EAAE6W,aAAgB/F,EAAQnB,GAAK,CAAC,EAEtDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,E1FgKC,M2F/LcwP,IACd,MAAMmB,EAAU,CAAC,GAAI,GAAI,GAAI,GAAI,IAC3BiC,EAAU,CACd,GAAM,QACN,MAAS,SACT,KAAQ,uFACR,OAAU,CAAC,CAAC,GAAI,GAAI,CAAC,GAAI,GAAI,CAAC,GAAI,GAAI,CAAC,GAAI,GAAI,CAAC,GAAI,IACpD,WAAc,CAAC,GAAI,GAAI,GAAI,GAAI,KAE3BxY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,iBACJ0I,KAAM,iBACNF,SAAUwC,GACV1D,KAAM,mBACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,KAGpC,MAAO,CACLpX,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRkX,gBAAgB,IAElB/W,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE5B,EAAMqB,MAASwP,EAAE8W,eAAkBhG,EAAQnB,GAAK,CAAC,EAErDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,E3FgKC,M4FhMcwP,IACd,MAAMmB,EAAU,CAAC,IAAM,GAAM,IAAM,IAAM,KACnCiC,EAAU,CACd,GAAM,QACN,MAAS,SACT,KAAQ,kFACR,OAAU,CAAC,CAAC,IAAM,GAAI,CAAC,GAAK,GAAI,CAAC,IAAM,GAAI,CAAC,IAAM,GAAI,CAAC,IAAM,IAC7D,WAAc,CAAC,GAAI,GAAI,GAAI,GAAI,KAE3BxY,EAAU,CAAC,CACf6B,IAAI,EACJlK,GAAI,iBACJ0I,KAAM,iBACNF,SAAUwC,GACV1D,KAAM,oBACNqB,MAAOkY,EAAQla,MACf0B,QAASmV,GAAsBC,EAAGoD,KAGpC,MAAO,CACLpX,QAASA,KAAM1B,EAAAA,EAAAA,KAAC0F,EAAkB,CAACpF,QAASA,IAC5CqF,SAAUA,KAAA,CACRmX,gBAAgB,IAElBhX,kBAAmBA,CAAChP,EAAoCmH,KACtD,MAAM8H,EAAI9H,EAAQwY,sBAElB3f,EAAE5B,EAAMC,QAAW4Q,EAAE+W,eAAkBjG,EAAQnB,GAAK,CAAC,EAEvDgB,kBAAmBA,OACnBxQ,oBAAqBA,OAExB,I5F0KY6W,GACL9e,IACJ,IAAI+e,EAAOhB,GAAuB/d,EAAQgf,WAE1C,OAAKD,EAUEA,EAAK/e,EAAQif,yBAA2B,GATtC,CACLxb,QAASA,KACP1B,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CAACC,UAAQ,EAACC,IAAK,EAAEb,UACpBH,EAAAA,EAAAA,KAACtF,EAAU,CAAAyF,SAAC,0BAGhBwF,SAAUA,KAAA,CAAS,GAG0B,E6F7NrD,SAASwX,GAAcC,EAAYC,EAAaC,EAAYC,EAAYC,EAAoBC,EAAgBC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,GAC5H,IAAIC,EAAc,CAAC,EACnB,IAAK,IAAIC,KAAQF,EACfC,EAAYC,GACVd,EAAWM,GAAGS,eAAeD,GAC7Bb,EAAYM,GAAGQ,eAAeD,GAC9BZ,EAAWM,GAAGO,eAAeD,GAC7BX,EAAWM,GAAGM,eAAeD,GAC7BV,EAAmBM,GAAGK,eAAeD,GACrCT,EAAeM,GAAGI,eAAeD,GAUrC,OARAD,EAAY7lB,OACVglB,EAAWM,GAAGU,YACdf,EAAYM,GAAGS,YACfd,EAAWM,GAAGQ,YACdb,EAAWM,GAAGO,YACdZ,EAAmBM,GAAGM,YACtBX,EAAeM,GAAGK,YAEbH,CACT,CAEA,SAASI,GAAkBH,EAAMI,EAAOC,EAAWpc,EAAIqc,EAAOC,EAAUC,GACtE,OAAQH,GAAc,EAAIG,EAAaD,EAASH,GAASE,EAAMF,GAASnc,EAAGmc,IAAUG,EAASP,GAAQM,EAAMN,EAC9G,CAEA,SAASS,GAAkBT,EAAMU,EAAMzc,GACrC,OAAOyc,EAAKV,GAAQ/b,EAAG+b,EACzB,CAEA,SAASW,GAAqBX,EAAMU,EAAMzc,EAAIqc,EAAOC,EAAUC,GAC7D,OAAOE,EAAKV,GAAQ/b,EAAG+b,GAAQO,EAASP,GAAQM,EAAMN,GAAQQ,CAChE,CAEA,MAAMI,GAAsB,CAC1B,EAAG,EACH,EAAG,IACH,EAAG,IACH,EAAG,IACH,EAAG,KAkaL,SAASC,GAAuBC,EAAQC,EAAQC,EAAcC,EAAWC,GACvE,OAAQJ,EAAS,MAAQC,EAAS,IAAMrhB,KAAKqG,IAAI,EAAG,EAAIib,EAAeC,EAAYC,GAAiBJ,EAAS,GAC/G,CAEA,SAAS5gB,GAAGO,GACV,OAAOA,GAAO,CAChB,CAEA,SAAS0gB,GAAG1gB,GACV,OAAOf,KAAKoG,IAAI,EAAGrF,GAAO,EAC5B,CAzaA2gB,KAAKC,UAAY,SAAUxa,GAIzB,IAAIya,EAAOza,EAAEya,KACTC,EAASD,EAAKC,OACd7lB,EAAY4lB,EAAK5lB,UACjB1E,EAAQqC,EACRymB,EAAarnB,OAAOC,OAAO1B,GAC3B6C,EAAM,IAAIsC,aAAamlB,EAAKplB,QAE5BgjB,EAAaqC,EAAOC,KACpBrC,EAAcoC,EAAOE,MACrBrC,EAAamC,EAAOG,KACpBrC,EAAakC,EAAOI,KACpBrC,EAAqBiC,EAAOK,aAC5BrC,EAAiBgC,EAAOM,SAExBC,EAAgBrpB,OAAOC,OAAOW,GAAsBF,OACpD4oB,EAAmBtpB,OAAOC,OAAOW,GAAyBF,OAE1D6oB,EAASV,EAAKU,OAEdC,EAAQD,EAAS,EAAIT,EAAOM,SAAS1oB,OACrC+oB,EAAQF,EAAS,EAAIT,EAAOK,aAAazoB,OACzCgpB,EAAQH,EAAS,EAAIT,EAAOI,KAAKxoB,OACjCipB,EAAQJ,EAAS,EAAIT,EAAOG,KAAKvoB,OACjCkpB,EAAQL,EAAS,EAAIT,EAAOE,MAAMtoB,OAClCmpB,EAAQN,EAAS,EAAIT,EAAOC,KAAKroB,OAEjCopB,EAAoBjB,EAAKiB,kBACzBC,EAAuBlB,EAAKkB,qBAE5BC,EAAkBnB,EAAKmB,gBACvBC,EAAqBpB,EAAKoB,mBAE1BC,EAAuBrB,EAAKqB,qBAE5BrC,EAAQ5kB,EAAUknB,OAClB3e,EAAKvI,EAAUqjB,UACf2B,EAAOhlB,EAAUglB,KAEjB3gB,EAAUuhB,EAAKvhB,QACfO,EAAkBP,EAAQO,gBAE1BwH,EAAwBqP,GAA0BpX,GAClDwY,EAAwBsG,GAA0B9e,GAElD8iB,EAA2F,GAA5DviB,EAAgBjH,EAAeypB,uBAAuB,GAAa,EAAI,EACtGC,EAA6F,GAA7DziB,EAAgBjH,EAAe2pB,wBAAwB,GAAa,EAAI,EACxGC,EAA6F,GAA7D3iB,EAAgBjH,EAAe6pB,wBAAwB,GAAa,EAAI,EACxGC,EAA2F,GAA5D7iB,EAAgBjH,EAAe+pB,uBAAuB,GAAa,EAAI,EACtGC,EAA6G,GAArE/iB,EAAgBjH,EAAeiqB,gCAAgC,GAAa,EAAI,EACxHC,EAA+F,GAA9DjjB,EAAgBjH,EAAemqB,yBAAyB,GAAa,EAAI,EAC1GC,EAAuH,GAA1EnjB,EAAgBjH,EAAeqqB,qCAAqC,GAAa,EAAI,EAElIC,EAAkCrjB,EAAgBjH,EAAeuqB,4BAA4B,GAC7FC,EAAmCvjB,EAAgBjH,EAAeyqB,6BAA6B,GAC/FC,EAAyBzjB,EAAgBjH,EAAe2qB,mBAAmB,GAC3EC,EAA8B3jB,EAAgBjH,EAAe+G,wBAAwB,GACrF8jB,EAAiC5jB,EAAgBjH,EAAe8qB,2BAA2B,GAC3FC,EAAgC9jB,EAAgBjH,EAAegrB,0BAA0B,GAEzFC,EAAmBvkB,EAAQ2J,oBAAsB,EAAI,GACrD6a,EAAaxkB,EAAQmP,mBAAqB,EAAInP,EAAQykB,gBAEtDC,GAAe3c,EAAsBF,kBAAkB7H,GAC3DwY,EAAsB3Q,kBAAkB6c,GAAc1kB,GAEtD,IAAI2kB,GAAuC,UAAvB3kB,EAAQ4kB,YACxBC,IAAeF,GAEnB,IAAK,IAAIG,EAAM,EAAGA,EAAMvD,EAAKwD,MAAOD,IAAO,CACzC,IAAIE,EAAQzD,EAAK0D,KAAOH,EAExB,GAAIE,GAASzD,EAAK2D,aAChB,MAGF,IAAIpF,EAAKkF,EAAQ9C,EACbrC,GAAOmF,EAAQlF,GAAKoC,EAASC,EAC7BvC,GAAOoF,EAAQnF,EAAIqC,EAAQpC,IAAMoC,EAAQC,GAAUC,EACnDzC,GAAOqF,EAAQpF,EAAIuC,EAAQD,EAAQrC,EAAIqC,EAAQpC,IAAMoC,EAAQC,EAAQC,GAAUC,EAC/E3C,GAAOsF,EAAQrF,EAAIyC,EAAQD,EAAQD,EAAQtC,EAAIuC,EAAQD,EAAQrC,EAAIqC,EAAQpC,IAAMoC,EAAQC,EAAQC,EAAQC,GAAUC,EACnH7C,IAAOuF,EAAQtF,EAAI2C,EAAQD,EAAQD,EAAQD,EAAQvC,EAAIyC,EAAQD,EAAQD,EAAQtC,EAAIuC,EAAQD,EAAQrC,EAAIqC,EAAQpC,IAAMoC,EAAQC,EAAQC,EAAQC,EAAQC,GAAUC,EAE/J4C,GAAOzC,EAAgBlB,EAAOC,KAAKhC,IAAG/e,KACtC0kB,GAAO1C,EAAgBlB,EAAOE,MAAMhC,GAAGhf,KACvC2kB,GAAO3C,EAAgBlB,EAAOG,KAAKhC,GAAGjf,KACtC4kB,GAAO5C,EAAgBlB,EAAOI,KAAKhC,GAAGlf,KAEtC6kB,GAAO5C,EAAmBnB,EAAOK,aAAahC,GAAGnf,KACjD8kB,GAAO7C,EAAmBnB,EAAOM,SAAShC,GAAGpf,KAE7CpF,GAAgB6pB,GAAOE,GAAOtD,EAAgBqD,GAAOrD,EAAgBA,EAAgBuD,GAAOvD,EAAgBA,EAAgBA,EAC5HxmB,GAAmBgqB,GAAOC,GAAOxD,EAGrC,IAAwC,GAApCQ,EAAkBlnB,KAAiE,GAA1CmnB,EAAqBlnB,OAC3D0mB,EACH,SAIJ,IAAIliB,GAAImf,GAAcC,EAAYC,EAAaC,EAAYC,EAAYC,EAAoBC,EAAgBC,GAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,GAE7HhgB,GAAEzE,cAAgBA,GAClByE,GAAExE,iBAAmBA,GAErBwE,GAAEK,KAAO,CAAC,EACV,IAAIA,GAAOL,GAAEK,KACbA,GAAKqlB,0BAA4B,IAAa,EAAPN,MAAc,IAAa,EAAPC,MAAc,IAAa,EAAPC,MAAc,IAAa,EAAPC,KACnGllB,GAAKslB,sBAAwB,IAAa,EAAPP,MAAc,IAAa,EAAPC,MAAc,IAAa,EAAPC,MAAc,IAAa,EAAPC,KAC/FllB,GAAKulB,sBAAwB,IAAa,EAAPR,MAAc,IAAa,EAAPC,MAAc,IAAa,EAAPC,MAAc,IAAa,EAAPC,KAC/FllB,GAAK2iB,uBAAyB,IAAa,EAAPoC,MAAc,IAAa,EAAPC,MAAc,IAAa,EAAPC,MAAc,IAAa,EAAPC,KAChGllB,GAAKyjB,4BAA8B,IAAa,EAAPsB,MAAc,IAAa,EAAPC,MAAc,IAAa,EAAPC,MAAc,IAAa,EAAPC,KACrGllB,GAAKwlB,sBAAwB,IAAa,EAAPT,MAAc,IAAa,EAAPC,MAAc,IAAa,EAAPC,MAAc,IAAa,EAAPC,KAC/FllB,GAAK6iB,wBAA0B,IAAa,EAAPkC,MAAc,IAAa,EAAPC,MAAc,IAAa,EAAPC,MAAc,IAAa,EAAPC,KACjGllB,GAAK+iB,wBAA0B,IAAa,EAAPgC,MAAc,IAAa,EAAPC,MAAc,IAAa,EAAPC,MAAc,IAAa,EAAPC,KACjGllB,GAAKijB,uBAAyB,IAAa,EAAP8B,MAAc,IAAa,EAAPC,MAAc,IAAa,EAAPC,MAAc,IAAa,EAAPC,KAChGllB,GAAKylB,qBAAuB,IAAa,EAAPV,MAAc,IAAa,EAAPC,MAAc,IAAa,EAAPC,MAAc,IAAa,EAAPC,KAC9FllB,GAAK0lB,uBAAyB,IAAa,GAAPX,MAAe,IAAa,GAAPC,MAAe,IAAa,GAAPC,MAAe,IAAa,GAAPC,KACnGllB,GAAK2jB,6BAA+B,IAAa,GAAPoB,MAAe,IAAa,GAAPC,MAAe,IAAa,GAAPC,MAAe,IAAa,GAAPC,KACzGllB,GAAK6jB,mBAAqB,IAAa,GAAPkB,MAAe,IAAa,GAAPC,MAAe,IAAa,GAAPC,MAAe,IAAa,GAAPC,KAC/FllB,GAAKmjB,gCAAkC,IAAa,GAAP4B,MAAe,IAAa,GAAPC,MAAe,IAAa,GAAPC,MAAe,IAAa,GAAPC,KAC5GllB,GAAKC,wBAA0B,IAAa,GAAP8kB,MAAe,IAAa,GAAPC,MAAe,IAAa,GAAPC,MAAe,IAAa,GAAPC,KACpGllB,GAAKgkB,2BAA6B,IAAa,GAAPe,MAAe,IAAa,GAAPC,MAAe,IAAa,GAAPC,MAAe,IAAa,GAAPC,KACvGllB,GAAKkkB,0BAA4B,IAAa,GAAPa,MAAe,IAAa,GAAPC,MAAe,IAAa,GAAPC,MAAe,IAAa,GAAPC,KACtGllB,GAAKujB,qCAAuC,IAAa,GAAPwB,MAAe,IAAa,GAAPC,MAAe,IAAa,GAAPC,MAAe,IAAa,GAAPC,KAEjHllB,GAAK2lB,qBAAuB,IAAa,EAAPR,MAAc,IAAa,EAAPC,KACtDplB,GAAK4lB,mBAAqB,IAAa,EAAPT,MAAc,IAAa,EAAPC,KACpDplB,GAAK6lB,+BAAiC,IAAa,EAAPV,MAAc,IAAa,EAAPC,KAChEplB,GAAK8lB,wBAA0B,IAAa,EAAPX,MAAc,IAAa,EAAPC,KACzDplB,GAAKqjB,yBAA2B,IAAa,EAAP8B,MAAc,IAAa,EAAPC,KAC1DplB,GAAK+lB,eAAiB,IAAa,EAAPZ,MAAc,IAAa,EAAPC,KAChDplB,GAAKgmB,wBAA0B,IAAa,EAAPb,MAAc,IAAa,EAAPC,KACzDplB,GAAKimB,kBAAoB,IAAa,EAAPd,MAAc,IAAa,EAAPC,KACnDplB,GAAKkmB,eAAiB,IAAa,EAAPf,MAAc,IAAa,EAAPC,KAChDplB,GAAKmmB,YAAc,IAAa,EAAPhB,MAAc,IAAa,EAAPC,KAC7CplB,GAAKomB,2BAA6B,IAAa,GAAPjB,MAAe,IAAa,GAAPC,KAC7DplB,GAAKqmB,yBAA2B,IAAa,GAAPlB,MAAe,IAAa,GAAPC,KAM3DzlB,GAAEnE,cAAgB,EACdgnB,EAAqB,KAAI7iB,GAAEnE,cAAgBglB,GAAqB3pB,EAAMiB,aAAcyoB,EAAMzc,EAAIqc,EAAOxgB,GAAG,GAAOqhB,GAAGhhB,GAAKyjB,8BACvHjB,EAAqB,KAAI7iB,GAAEnE,cAAgBglB,GAAqB3pB,EAAMU,SAAUgpB,EAAMzc,EAAIqc,EAAOxgB,GAAG,GAAOqhB,GAAGhhB,GAAK6iB,wBAA0B,GAAOD,EAAgC7iB,GAAGC,GAAK6iB,0BAC5LL,EAAqB,KAAI7iB,GAAEnE,cAAgBglB,GAAqB3pB,EAAMa,QAAS6oB,EAAMzc,EAAIqc,EAAOxgB,GAAG,GAAOqhB,GAAGhhB,GAAK2iB,yBAClHH,EAAqB,KAAI7iB,GAAEnE,cAAgBglB,GAAqB3pB,EAAMe,cAAe2oB,EAAMzc,EAAIqc,EAAOxgB,GAAG,GAAOqhB,GAAGhhB,GAAKijB,yBACxHT,EAAqB,KAAI7iB,GAAEnE,cAAgBglB,GAAqB3pB,EAAMsB,SAAUooB,EAAMzc,EAAIqc,EAAOxgB,GAAG,GAAOqhB,GAAGhhB,GAAKylB,uBACnHjD,EAAqB,KAAI7iB,GAAEnE,cAAgBglB,GAAqB3pB,EAAMkB,YAAawoB,EAAMzc,EAAIqc,EAAOxgB,GAAG,GAAOqhB,GAAGhhB,GAAK+iB,0BACtHP,EAAqB,KAAI7iB,GAAEnE,cAAgBglB,GAAqB3pB,EAAMc,cAAe4oB,EAAMzc,EAAIqc,EAAOxgB,GAAG,GAAOqhB,GAAGhhB,GAAK2jB,+BAE5H,IAAI2C,GAAQ3mB,GAAE9I,EAAMK,IAChBqvB,GAAQ5mB,GAAE9I,EAAMI,IAMhBuvB,GAASlG,GAAkBzpB,EAAMY,GAAI8oB,EAAMzc,GAC3C1D,GAAUkgB,GAAkBzpB,EAAME,IAAKwpB,EAAMzc,GAC7C2iB,GAAUnG,GAAkBzpB,EAAMO,IAAKmpB,EAAMzc,GAC7C4iB,GAAUpG,GAAkBzpB,EAAMqB,IAAKqoB,EAAMzc,GAmDjD,GAlDAnE,GAAES,QAAUA,GAMZT,GAAE9I,EAAMY,IAAMuoB,GAAkBnpB,EAAMY,GAAIZ,EAAMW,KAAMgvB,GAAQ1iB,EAAIqc,EAAOxgB,GACvE,IAAOqhB,GAAGhhB,GAAK4lB,mBACf,IAAO5E,GAAGhhB,GAAK6jB,oBAEjBlkB,GAAE9I,EAAME,KAAOipB,GAAkBnpB,EAAME,IAAKF,EAAMC,MAAOsJ,GAAS0D,EAAIqc,EAAOxgB,GAC3E,IAAOqhB,GAAGhhB,GAAK2lB,qBACf,IAAO3E,GAAGhhB,GAAKomB,2BACf,IAAOpF,GAAGhhB,GAAKslB,sBACf,IAAOtE,GAAGhhB,GAAKgkB,4BAEjBrkB,GAAE9I,EAAMO,KAAO4oB,GAAkBnpB,EAAMO,IAAKP,EAAMM,MAAOsvB,GAAS3iB,EAAIqc,EAAOxgB,GAC3E,IAAOqhB,GAAGhhB,GAAK8lB,wBACf,IAAO9E,GAAGhhB,GAAKulB,uBAEjB5lB,GAAE9I,EAAMqB,KAAO8nB,GAAkBnpB,EAAMqB,IAAKrB,EAAMoB,MAAOyuB,GAAS5iB,EAAIqc,EAAOxgB,GAC3E,IAAOqhB,GAAGhhB,GAAKmjB,gCACf,IAAOpjB,GAAGC,GAAKslB,uBAEjB3lB,GAAE9I,EAAMK,IAAMspB,GAAqB3pB,EAAMK,GAAIqpB,EAAMzc,EAAIqc,EAAOxgB,GAC5D,IAAOqhB,GAAGhhB,GAAK+lB,eACf,IAAO/E,GAAGhhB,GAAKkmB,gBAEjBvmB,GAAE9I,EAAMI,IAAMupB,GAAqB3pB,EAAMI,GAAIspB,EAAMzc,EAAIqc,EAAOxgB,GAC5D,IAAOqhB,GAAGhhB,GAAKqjB,0BAEjB1jB,GAAE9I,EAAMQ,KAAOmpB,GAAqB3pB,EAAMQ,IAAKkpB,EAAMzc,EAAIqc,EAAOxgB,GAC9D,GAAOqhB,GAAGhhB,GAAK6lB,gCAEjBlmB,GAAE9I,EAAMmB,KAAOwoB,GAAqB3pB,EAAMmB,IAAKuoB,EAAMzc,EAAIqc,EAAOxgB,GAC9D,GAAOqhB,GAAGhhB,GAAKmmB,aAEjBxmB,GAAE9I,EAAMG,IAAMwpB,GAAqB3pB,EAAMG,GAAIupB,EAAMzc,EAAIqc,EAAOxgB,GAC5D,IAAOqhB,GAAGhhB,GAAKgmB,wBACf,IAAOhF,GAAGhhB,GAAK0lB,uBACf,IAAO3lB,GAAGC,GAAK0lB,wBAEjB/lB,GAAE9I,EAAMS,KAAOkpB,GAAqB3pB,EAAMS,IAAKipB,EAAMzc,EAAIqc,EAAOxgB,GAC9D,IAAOqhB,GAAGhhB,GAAKimB,kBACf,IAAOjF,GAAGhhB,GAAKqmB,0BAEjB1mB,GAAE9I,EAAMgB,KAAO2oB,GAAqB3pB,EAAMgB,IAAK0oB,EAAMzc,EAAIqc,EAAOxgB,GAC9D,GAAOqhB,GAAGhhB,GAAKqlB,2BAGbZ,KAAgB5C,EAAQ,CAY1B,KAVEliB,GAAE9I,EAAMY,KAAOmI,EAAQ+mB,OAAShnB,GAAE9I,EAAMY,KAAOmI,EAAQgnB,OACvDjnB,GAAE9I,EAAME,MAAQ6I,EAAQinB,QAAUlnB,GAAE9I,EAAME,MAAQ6I,EAAQknB,QAC1DnnB,GAAE9I,EAAMO,MAAQwI,EAAQmnB,QAAUpnB,GAAE9I,EAAMO,MAAQwI,EAAQonB,QAC1DrnB,GAAE9I,EAAMqB,MAAQ0H,EAAQqnB,QAAUtnB,GAAE9I,EAAMqB,MAAQ0H,EAAQsnB,QAC1DvnB,GAAE9I,EAAMK,KAAO0I,EAAQunB,OAASxnB,GAAE9I,EAAMK,KAAO0I,EAAQwnB,OACvDznB,GAAE9I,EAAMI,KAAO2I,EAAQynB,OAAS1nB,GAAE9I,EAAMI,KAAO2I,EAAQ0nB,OACvD3nB,GAAE9I,EAAMQ,MAAQuI,EAAQ2nB,QAAU5nB,GAAE9I,EAAMQ,MAAQuI,EAAQ4nB,QAC1D7nB,GAAE9I,EAAMmB,MAAQ4H,EAAQ6nB,QAAU9nB,GAAE9I,EAAMmB,MAAQ4H,EAAQ8nB,QAC1D/nB,GAAE9I,EAAMG,KAAO4I,EAAQ+nB,OAAShoB,GAAE9I,EAAMG,KAAO4I,EAAQgoB,OACvDjoB,GAAE5F,QAAU6F,EAAQioB,WAAaloB,GAAE5F,QAAU6F,EAAQkoB,WAErD,QAEJ,CAEAnoB,GAAE/F,GAAKgrB,EAMP,IAAInsB,GAAIH,OAAOsP,OAAO,CAAC,EAAG0c,IAC1B3kB,GAAElH,EAAIA,GAENA,GAAE5B,EAAME,MAAQ4I,GAAE9I,EAAME,KACxB0B,GAAE5B,EAAMO,MAAQuI,GAAE9I,EAAMO,KACxBqB,GAAE5B,EAAMY,KAAOkI,GAAE9I,EAAMY,IACvBgB,GAAE5B,EAAMqB,MAAQyH,GAAE9I,EAAMqB,KACxBO,GAAE5B,EAAMI,KAAO0I,GAAE9I,EAAMI,IACvBwB,GAAE5B,EAAMK,KAAOyI,GAAE9I,EAAMK,IACvBuB,GAAE5B,EAAMQ,MAAQsI,GAAE9I,EAAMQ,KACxBoB,GAAE5B,EAAMmB,MAAQ2H,GAAE9I,EAAMmB,KACxBS,GAAE5B,EAAMG,KAAO2I,GAAE9I,EAAMG,IACvByB,GAAE5B,EAAMS,MAAQqI,GAAE9I,EAAMS,KACxBmB,GAAE5B,EAAMgB,MAAQ8H,GAAE9I,EAAMgB,KACxBY,GAAE+C,eAAiBmE,GAAEnE,cAErB/C,GAAE5B,EAAME,MAAQ6I,EAAQmoB,QACxBtvB,GAAE5B,EAAME,MAAQ6I,EAAQooB,SAAW5nB,GACnC3H,GAAE5B,EAAMI,KAAO2I,EAAQqoB,OACvBxvB,GAAE5B,EAAMK,KAAO0I,EAAQsoB,OACvBzvB,GAAE5B,EAAMqB,MAAQ0H,EAAQuoB,SAAWzB,GAAU9mB,EAAQwoB,QACrD3vB,GAAE5B,EAAMG,KAAO4I,EAAQyoB,OACvB5vB,GAAE+C,eAAiBoE,EAAQ0oB,aAc3B7vB,GAAE5B,EAAMoB,QACN,IAAOirB,EAAwCnjB,GAAGC,GAAKmjB,gCACzD1qB,GAAE5B,EAAMqB,MAAQO,GAAE5B,EAAMoB,OAASyuB,GAEjCjuB,GAAE5B,EAAMC,QACN,IAAO0sB,EAAkCzjB,GAAGC,GAAKyjB,4BACjD,GAAOT,EAA+BjjB,GAAGC,GAAKijB,uBAC9C,IAAOa,EAA8B/jB,GAAGC,GAAKC,wBAC7C,KAAQxH,GAAE5B,EAAMqB,MAAQ,IAAM,EAAI,GAAK8oB,GAAGhhB,GAAK2lB,qBAC/C,KAAQltB,GAAE5B,EAAMqB,MAAQ,IAAM,EAAI,GAAK8oB,GAAGhhB,GAAK4lB,mBAC/CrmB,KAAKoG,IAAI,IAAM,IAAOhG,GAAE9I,EAAMQ,MAAQ2pB,GAAGhhB,GAAK6lB,+BAChDptB,GAAE5B,EAAME,MAAQ0B,GAAE5B,EAAMC,OAASsJ,GAEjC3H,GAAE5B,EAAMM,QACN,KAAQwI,GAAE9I,EAAMQ,MAAQ,GAAO,EAAI,GAAK2pB,GAAGhhB,GAAK8lB,wBAClDrtB,GAAE5B,EAAMO,MAAQqB,GAAE5B,EAAMM,OAASsvB,GAEjChuB,GAAE5B,EAAMY,KAAOgB,GAAE5B,EAAMW,MAAQgvB,GAE/B/tB,GAAE5B,EAAMK,KACN,IAAQwsB,EAAmC,EAAI,EAAI,GAAK3jB,GAAGC,GAAK2jB,6BAChE,IAAOC,EAAyB7jB,GAAGC,GAAK6jB,mBACxC,GAAOT,GAAkCzjB,GAAE9I,EAAMI,KAAO,IAAO,EAAI,GAAK+pB,GAAGhhB,GAAKqjB,yBAChF,KAAQY,EAAgC,EAAI,EAAI,GAAKlkB,GAAGC,GAAKkkB,0BAE/DzrB,GAAE5B,EAAMI,KACN,IAAOyrB,EAA+B3iB,GAAGC,GAAK2iB,uBAC9C,IAA4C,GAApCe,EAAwC,EAAI,GAAK3jB,GAAGC,GAAK2jB,6BACjE,IAAQhkB,GAAE9I,EAAMmB,MAAQ,GAAO,EAAI,GAAKgpB,GAAGhhB,GAAKmmB,YAChD1F,GAAoBwD,GAAiClkB,GAAGC,GAAKkkB,0BAE/DzrB,GAAE5B,EAAMG,KACN,IAAQ2I,GAAE9I,EAAMqB,MAAQ,IAAM,EAAI,GAAK8oB,GAAGhhB,GAAKgmB,wBAC/C,GAAO1C,EAA6CvjB,GAAGC,GAAKujB,qCAE9D9qB,GAAEoF,aACA,GAAOkC,GAAGC,GAAKslB,sBACf,IAAQ7sB,GAAE5B,EAAMK,KAAO,GAAO,EAAI,GAAK8pB,GAAGhhB,GAAKkmB,eAEjDztB,GAAEqF,aACA,IAAOiC,GAAGC,GAAK6iB,wBACf,IAAQpqB,GAAE5B,EAAMK,KAAO,GAAO,EAAI,GAAK8pB,GAAGhhB,GAAKkmB,eAEjDztB,GAAEsF,WACA,KAAQtF,GAAE5B,EAAMK,KAAO,GAAO,EAAI,GAAK8pB,GAAGrhB,GAAEK,KAAK+lB,eAEnDttB,GAAEuF,WACA,KAAQvF,GAAE5B,EAAMK,KAAO,GAAO,EAAI,GAAK8pB,GAAGrhB,GAAEK,KAAK+lB,eAEnDttB,GAAEuF,WACA,GAAOgjB,GAAGrhB,GAAEK,KAAKC,wBAEnBxH,GAAEkE,WAAaoD,GAAGJ,GAAEK,KAAK+iB,wBAA2BD,EAAgC,GAAO,GAAQ,EAEnGrqB,GAAEkE,WAAa,IAAOonB,EAAiChkB,GAAGJ,GAAEK,KAAKgkB,2BAEjEvrB,GAAE+C,eACA,KAAQ/C,GAAE5B,EAAMqB,MAAQ,IAAM,EAAI,GAAK8oB,GAAGhhB,GAAKomB,2BAC/C,KAAQ3tB,GAAE5B,EAAMqB,MAAQ,IAAM,EAAI,GAAK8oB,GAAGhhB,GAAKomB,2BAMjDze,EAAsBE,oBAAoBlI,GAAGC,GAC7CwY,EAAsBvQ,oBAAoBlI,GAAGC,GAM7C,IAAI+gB,GAAS/gB,EAAQ2oB,eACjB3H,GAAShhB,EAAQ4oB,WACjB3H,GAAepoB,GAAEkE,UAAYiD,EAAQ6oB,aACrC3H,GAAY,EAEZ4H,GAAqB,EAAIjwB,GAAEoE,cAAgBpE,GAAE+C,cAC7CmtB,GAAyB,EAEzBC,GAAMnwB,GAAE5B,EAAMY,KAAO,EAAIgB,GAAE5B,EAAMO,MAAQqB,GAAE5B,EAAMO,KAAO,IAAM,GAAKwI,EAAQ4oB,aAC/EI,IAAO,IAAM,EAAI,IAAO5H,GAAGhhB,GAAKwlB,uBAAyB/sB,GAAEsE,eAC3D4C,GAAE3F,IAAM4uB,GACR,IAAIC,GAAK,KAAe,EAARvC,GAAYC,IAC5B5mB,GAAE7F,GAAK+uB,GAEP,IAAIC,GAAiBH,GAAyBxE,EAa9C,GAXA1rB,GAAEgD,WAAaqtB,IAAkBJ,GAAqBjwB,GAAEoF,aAAe6iB,GAAuBC,GAAQC,GAAQC,GAAcC,GAAWroB,GAAE8F,gBAAkBgB,KAAKoG,IAAI,EAAGlN,GAAE5B,EAAMK,IAAMuB,GAAEuE,iBAAmB,EAAIvE,GAAE5B,EAAMI,IAAMwB,GAAE2E,iBAAmB,EAAImC,KAAKoG,IAAI,EAAGlN,GAAE5B,EAAMK,IAAMuB,GAAEuE,mBAAqB,EAAIvE,GAAEmE,gBAAkBnE,GAAEyF,sBAAwB,GAAKkmB,EAAa3rB,GAAEqE,QAAU8C,EAAQmpB,WAAatwB,GAAEmG,gBAC7YnG,GAAEiD,WAAaotB,IAAkBJ,GAAqBjwB,GAAEqF,aAAe4iB,GAAuBC,GAAQC,GAAQC,GAAcC,GAAWroB,GAAE+F,gBAAkBe,KAAKoG,IAAI,EAAGlN,GAAE5B,EAAMK,IAAMuB,GAAEwE,iBAAmB,EAAIxE,GAAE5B,EAAMI,IAAMwB,GAAE4E,iBAAmB,EAAIkC,KAAKoG,IAAI,EAAGlN,GAAE5B,EAAMK,IAAMuB,GAAEwE,mBAAqB,EAAIxE,GAAEmE,gBAAkBnE,GAAE0F,sBAAwB,GAAKimB,EAAa3rB,GAAEqE,QAAU8C,EAAQmpB,WAAatwB,GAAEoG,gBAC7YpG,GAAEkD,SAAWmtB,IAAkBJ,GAAqBjwB,GAAEsF,WAAa2iB,GAAuBC,GAAQC,GAAQC,GAAcC,GAAWroB,GAAEgG,cAAgBc,KAAKoG,IAAI,EAAGlN,GAAE5B,EAAMK,IAAMuB,GAAEyE,eAAiB,EAAIzE,GAAE5B,EAAMI,IAAMwB,GAAE6E,eAAiB,EAAIiC,KAAKoG,IAAI,EAAGlN,GAAE5B,EAAMK,IAAMuB,GAAEyE,iBAAmB,EAAIzE,GAAEmE,gBAAkBnE,GAAE2F,oBAAsB,GAAKgmB,EAAa3rB,GAAEqE,QAAU8C,EAAQmpB,WAAatwB,GAAEqG,cAC/XrG,GAAEmD,SAAWktB,IAAkBJ,GAAqBjwB,GAAEuF,WAAa0iB,GAAuBC,GAAQC,GAAQC,GAAcC,GAAWroB,GAAEiG,cAAgBa,KAAKoG,IAAI,EAAGlN,GAAE5B,EAAMK,IAAMuB,GAAE0E,eAAiB,EAAI1E,GAAE5B,EAAMI,IAAMwB,GAAE8E,eAAiB,EAAIgC,KAAKoG,IAAI,EAAGlN,GAAE5B,EAAMK,IAAMuB,GAAE0E,iBAAmB,EAAI1E,GAAEmE,gBAAkBnE,GAAE4F,oBAAsB,GAAK+lB,EAAa3rB,GAAEqE,QAAU8C,EAAQmpB,WAAatwB,GAAEsG,cAC/XtG,GAAEoD,SAAWitB,IAAkBJ,GAAqBjwB,GAAEwF,WAAayiB,GAAuBC,GAAQC,GAAQC,GAAcC,GAAWroB,GAAEkG,cAAgB,EAAIlG,GAAEmE,gBAAkBnE,GAAE6F,oBAAsB,GAAK8lB,EAAa3rB,GAAEqE,QAAU8C,EAAQmpB,WAAatwB,GAAEuG,cAOtPulB,KAAkB1C,EAAQ,CAW5B,KATEppB,GAAE5B,EAAMY,KAAOmI,EAAQ+mB,OAASluB,GAAE5B,EAAMY,KAAOmI,EAAQgnB,OACvDnuB,GAAE5B,EAAME,MAAQ6I,EAAQinB,QAAUpuB,GAAE5B,EAAME,MAAQ6I,EAAQknB,QAC1DruB,GAAE5B,EAAMO,MAAQwI,EAAQmnB,QAAUtuB,GAAE5B,EAAMO,MAAQwI,EAAQonB,QAC1DvuB,GAAE5B,EAAMqB,MAAQ0H,EAAQqnB,QAAUxuB,GAAE5B,EAAMqB,MAAQ0H,EAAQsnB,QAC1DzuB,GAAE5B,EAAMK,KAAO0I,EAAQunB,OAAS1uB,GAAE5B,EAAMK,KAAO0I,EAAQwnB,OACvD3uB,GAAE5B,EAAMI,KAAO2I,EAAQynB,OAAS5uB,GAAE5B,EAAMI,KAAO2I,EAAQ0nB,OACvD7uB,GAAE5B,EAAMQ,MAAQuI,EAAQ2nB,QAAU9uB,GAAE5B,EAAMQ,MAAQuI,EAAQ4nB,QAC1D/uB,GAAE5B,EAAMmB,MAAQ4H,EAAQ6nB,QAAUhvB,GAAE5B,EAAMmB,MAAQ4H,EAAQ8nB,QAC1DjvB,GAAE5B,EAAMG,KAAO4I,EAAQ+nB,OAASlvB,GAAE5B,EAAMG,KAAO4I,EAAQgoB,OAEvD,QAEJ,CAEA,IAAIoB,GACFH,IAAMjpB,EAAQqpB,OAASJ,IAAMjpB,EAAQspB,OACrCN,IAAOhpB,EAAQupB,QAAUP,IAAOhpB,EAAQwpB,QACxC3wB,GAAEgD,WAAamE,EAAQypB,UAAY5wB,GAAEgD,WAAamE,EAAQ0pB,UAC1D7wB,GAAEiD,WAAakE,EAAQ2pB,UAAY9wB,GAAEiD,WAAakE,EAAQ4pB,UAC1D/wB,GAAEkD,SAAWiE,EAAQ6pB,QAAUhxB,GAAEkD,SAAWiE,EAAQ8pB,QACpDjxB,GAAEmD,SAAWgE,EAAQ+pB,QAAUlxB,GAAEmD,SAAWgE,EAAQgqB,QACpDnxB,GAAEoD,SAAW+D,EAAQiqB,QAAUpxB,GAAEoD,SAAW+D,EAAQkqB,QAOlDjI,GAAUmH,KACZ7vB,EAAamC,cAAc5B,EAAKgrB,EAAK/kB,GAEzC,CAEAshB,KAAK8I,YAAY,CACfC,KAAM,GACNjuB,OAAQolB,EAAKplB,QACZ,CAAColB,EAAKplB,QACX,C,GC3cIkuB,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqB9qB,IAAjB+qB,EACH,OAAOA,EAAaC,QAGrB,IAAIC,EAASL,EAAyBE,GAAY,CAGjDE,QAAS,CAAC,GAOX,OAHAE,EAAoBJ,GAAUG,EAAQA,EAAOD,QAASH,GAG/CI,EAAOD,OACf,CAGAH,EAAoBM,EAAID,EAGxBL,EAAoBzxB,EAAI,KAGvB,IAAIgyB,EAAsBP,EAAoBQ,OAAErrB,EAAW,CAAC,MAAM,IAAO6qB,EAAoB,QAE7F,OADAO,EAAsBP,EAAoBQ,EAAED,EAClB,E,MCjC3B,IAAIE,EAAW,GACfT,EAAoBQ,EAAI,CAAC1B,EAAQ4B,EAAUC,EAAIC,KAC9C,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAAS3yB,EAAI,EAAGA,EAAIsyB,EAAS3xB,OAAQX,IAAK,CACrCuyB,EAAWD,EAAStyB,GAAG,GACvBwyB,EAAKF,EAAStyB,GAAG,GACjByyB,EAAWH,EAAStyB,GAAG,GAE3B,IAJA,IAGI4yB,GAAY,EACPC,EAAI,EAAGA,EAAIN,EAAS5xB,OAAQkyB,MACpB,EAAXJ,GAAsBC,GAAgBD,IAAaxyB,OAAO6yB,KAAKjB,EAAoBQ,GAAGU,OAAO7pB,GAAS2oB,EAAoBQ,EAAEnpB,GAAKqpB,EAASM,MAC9IN,EAASS,OAAOH,IAAK,IAErBD,GAAY,EACTH,EAAWC,IAAcA,EAAeD,IAG7C,GAAGG,EAAW,CACbN,EAASU,OAAOhzB,IAAK,GACrB,IAAIqP,EAAImjB,SACExrB,IAANqI,IAAiBshB,EAASthB,EAC/B,CACD,CACA,OAAOshB,CArBP,CAJC8B,EAAWA,GAAY,EACvB,IAAI,IAAIzyB,EAAIsyB,EAAS3xB,OAAQX,EAAI,GAAKsyB,EAAStyB,EAAI,GAAG,GAAKyyB,EAAUzyB,IAAKsyB,EAAStyB,GAAKsyB,EAAStyB,EAAI,GACrGsyB,EAAStyB,GAAK,CAACuyB,EAAUC,EAAIC,EAuBjB,C,KC3BdZ,EAAoBoB,EAAKhB,IACxB,IAAIiB,EAASjB,GAAUA,EAAOkB,WAC7B,IAAOlB,EAAiB,QACxB,IAAM,EAEP,OADAJ,EAAoBuB,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,E,MCNd,IACII,EADAC,EAAWtzB,OAAOuzB,eAAkBC,GAASxzB,OAAOuzB,eAAeC,GAASA,GAASA,EAAa,UAQtG5B,EAAoB6B,EAAI,SAASzyB,EAAO0yB,GAEvC,GADU,EAAPA,IAAU1yB,EAAQ2yB,KAAK3yB,IAChB,EAAP0yB,EAAU,OAAO1yB,EACpB,GAAoB,kBAAVA,GAAsBA,EAAO,CACtC,GAAW,EAAP0yB,GAAa1yB,EAAMkyB,WAAY,OAAOlyB,EAC1C,GAAW,GAAP0yB,GAAoC,oBAAf1yB,EAAM4yB,KAAqB,OAAO5yB,CAC5D,CACA,IAAI6yB,EAAK7zB,OAAO8zB,OAAO,MACvBlC,EAAoBxiB,EAAEykB,GACtB,IAAIE,EAAM,CAAC,EACXV,EAAiBA,GAAkB,CAAC,KAAMC,EAAS,CAAC,GAAIA,EAAS,IAAKA,EAASA,IAC/E,IAAI,IAAIU,EAAiB,EAAPN,GAAY1yB,EAAyB,iBAAXgzB,KAAyBX,EAAeY,QAAQD,GAAUA,EAAUV,EAASU,GACxHh0B,OAAOk0B,oBAAoBF,GAAS7qB,SAASF,GAAS8qB,EAAI9qB,GAAO,IAAOjI,EAAMiI,KAI/E,OAFA8qB,EAAa,QAAI,IAAM,EACvBnC,EAAoBuB,EAAEU,EAAIE,GACnBF,CACR,C,KCxBAjC,EAAoBuB,EAAI,CAACpB,EAASoC,KACjC,IAAI,IAAIlrB,KAAOkrB,EACXvC,EAAoBwC,EAAED,EAAYlrB,KAAS2oB,EAAoBwC,EAAErC,EAAS9oB,IAC5EjJ,OAAOq0B,eAAetC,EAAS9oB,EAAK,CAAEqrB,YAAY,EAAMC,IAAKJ,EAAWlrB,IAE1E,ECND2oB,EAAoB1K,EAAI,CAAC,EAGzB0K,EAAoBxjB,EAAKomB,GACjBC,QAAQC,IAAI10B,OAAO6yB,KAAKjB,EAAoB1K,GAAGyN,QAAO,CAACC,EAAU3rB,KACvE2oB,EAAoB1K,EAAEje,GAAKurB,EAASI,GAC7BA,IACL,KCNJhD,EAAoBiD,EAAKL,GAEjB,aAAeA,EAAf,qBCFR5C,EAAoBkD,SAAYN,IAEf,ECHjB5C,EAAoB5K,EAAI,WACvB,GAA0B,kBAAf+N,WAAyB,OAAOA,WAC3C,IACC,OAAOpB,MAAQ,IAAIqB,SAAS,cAAb,EAChB,CAAE,MAAO5mB,GACR,GAAsB,kBAAX6mB,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxBrD,EAAoBwC,EAAI,CAACZ,EAAK0B,IAAUl1B,OAAOm1B,UAAUC,eAAeC,KAAK7B,EAAK0B,GCClFtD,EAAoBxiB,EAAK2iB,IACH,qBAAXuD,QAA0BA,OAAOC,aAC1Cv1B,OAAOq0B,eAAetC,EAASuD,OAAOC,YAAa,CAAEv0B,MAAO,WAE7DhB,OAAOq0B,eAAetC,EAAS,aAAc,CAAE/wB,OAAO,GAAO,ECL9D4wB,EAAoBzK,EAAI,oB,MCIxB,IAAIqO,EAAkB,CACrB,IAAK,GAkBN5D,EAAoB1K,EAAEnnB,EAAI,CAACy0B,EAASI,KAE/BY,EAAgBhB,IAElBiB,cAAc7D,EAAoBzK,EAAIyK,EAAoBiD,EAAEL,GAE9D,EAGD,IAAIkB,EAAqB/M,KAAgC,0BAAIA,KAAgC,2BAAK,GAC9FgN,EAA6BD,EAAmB30B,KAAK60B,KAAKF,GAC9DA,EAAmB30B,KAzBC8nB,IACnB,IAAIyJ,EAAWzJ,EAAK,GAChBgN,EAAchN,EAAK,GACnBiN,EAAUjN,EAAK,GACnB,IAAI,IAAIgJ,KAAYgE,EAChBjE,EAAoBwC,EAAEyB,EAAahE,KACrCD,EAAoBM,EAAEL,GAAYgE,EAAYhE,IAIhD,IADGiE,GAASA,EAAQlE,GACdU,EAAS5xB,QACd80B,EAAgBlD,EAASyD,OAAS,EACnCJ,EAA2B9M,EAAK,C,KCrBjC+I,EAAoBoE,QAAKjvB,E,MCAzB,IAAIkvB,EAAOrE,EAAoBzxB,EAC/ByxB,EAAoBzxB,EAAI,IAChByxB,EAAoBxjB,EAAE,KAAKwlB,KAAKqC,E,KCDdrE,EAAoBzxB,G","sources":["lib/constants.ts","lib/bufferPacker.js","components/HeaderText.js","components/TooltipImage.js","lib/conditionals/constants.ts","lib/conditionals/utils.ts","components/common/ColorizeNumbers.tsx","components/optimizerForm/conditionals/DisplayFormControl.tsx","components/common/WithPopover.tsx","components/optimizerForm/conditionals/FormSwitch.tsx","components/optimizerForm/conditionals/FormSlider.tsx","lib/conditionals/character/Argenti.tsx","lib/conditionals/character/DrRatio.tsx","lib/conditionals/character/TrailblazerPreservation.tsx","lib/conditionals/character/Jingliu.tsx","lib/conditionals/character/Luocha.tsx","lib/conditionals/character/TrailblazerDestruction.tsx","lib/characterConditionals.js","lib/conditionals/character/March7th.tsx","lib/conditionals/character/DanHeng.tsx","lib/conditionals/character/Himeko.tsx","lib/conditionals/character/Welt.tsx","lib/conditionals/character/Kafka.tsx","lib/conditionals/character/SilverWolf.tsx","lib/conditionals/character/Arlan.tsx","lib/conditionals/character/Asta.tsx","lib/conditionals/character/Herta.tsx","lib/conditionals/character/Bronya.tsx","lib/conditionals/character/Seele.tsx","lib/conditionals/character/Serval.tsx","lib/conditionals/character/Gepard.tsx","lib/conditionals/character/Natasha.tsx","lib/conditionals/character/Pela.tsx","lib/conditionals/character/Clara.tsx","lib/conditionals/character/Sampo.tsx","lib/conditionals/character/Hook.tsx","lib/conditionals/character/Lynx.tsx","lib/conditionals/character/Luka.tsx","lib/conditionals/character/Topaz.tsx","lib/conditionals/character/Qingque.tsx","lib/conditionals/character/Tingyun.tsx","lib/conditionals/character/JingYuan.tsx","lib/conditionals/character/Blade.tsx","lib/conditionals/character/Sushang.tsx","lib/conditionals/character/Yukong.tsx","lib/conditionals/character/FuXuan.tsx","lib/conditionals/character/Yanqing.tsx","lib/conditionals/character/Guinaifen.tsx","lib/conditionals/character/Bailu.tsx","lib/conditionals/character/ImbibitorLunae.tsx","lib/conditionals/character/Xueyi.tsx","lib/conditionals/character/Hanya.tsx","lib/conditionals/character/Huohuo.tsx","lib/conditionals/character/RuanMei.tsx","lib/conditionals/character/Sparkle.tsx","lib/conditionals/character/BlackSwan.tsx","lib/conditionals/character/Misha.tsx","lib/conditionals/lightcone/getContentFromLCRank.ts","lib/conditionals/lightcone/5star/BaptismOfPureThought.tsx","lib/lightConeConditionals.js","lib/conditionals/lightcone/5star/NightOnTheMilkyWay.tsx","lib/conditionals/lightcone/5star/InTheNight.tsx","lib/conditionals/lightcone/5star/SomethingIrreplaceable.tsx","lib/conditionals/lightcone/5star/ButTheBattleIsntOver.tsx","lib/conditionals/lightcone/5star/InTheNameOfTheWorld.tsx","lib/conditionals/lightcone/5star/MomentOfVictory.tsx","lib/conditionals/lightcone/5star/PatienceIsAllYouNeed.tsx","lib/conditionals/lightcone/5star/IncessantRain.tsx","lib/conditionals/lightcone/5star/EchoesOfTheCoffin.tsx","lib/conditionals/lightcone/5star/TheUnreachableSide.tsx","lib/conditionals/lightcone/5star/BeforeDawn.tsx","lib/conditionals/lightcone/5star/SheAlreadyShutHerEyes.tsx","lib/conditionals/lightcone/5star/SleepLikeTheDead.tsx","lib/conditionals/lightcone/5star/TimeWaitsForNoOne.tsx","lib/conditionals/lightcone/5star/IShallBeMyOwnSword.tsx","lib/conditionals/lightcone/5star/BrighterThanTheSun.tsx","lib/conditionals/lightcone/5star/WorrisomeBlissful.tsx","lib/conditionals/lightcone/5star/NightOfFright.tsx","lib/conditionals/lightcone/5star/AnInstantBeforeAGaze.tsx","lib/conditionals/lightcone/5star/PastSelfInTheMirror.tsx","lib/conditionals/lightcone/5star/EarthlyEscapade.tsx","lib/conditionals/lightcone/5star/ReforgedRemembrance.tsx","lib/conditionals/lightcone/5star/OnTheFallOfAnAeon.tsx","lib/conditionals/lightcone/5star/CruisingInTheStellarSea.tsx","lib/conditionals/lightcone/5star/TextureOfMemories.tsx","lib/conditionals/lightcone/5star/SolitaryHealing.tsx","lib/conditionals/lightcone/4star/PostOpConversation.tsx","lib/conditionals/lightcone/4star/GoodNightAndSleepWell.tsx","lib/conditionals/lightcone/4star/DayOneOfMyNewLife.tsx","lib/conditionals/lightcone/4star/OnlySilenceRemains.tsx","lib/conditionals/lightcone/4star/MemoriesOfThePast.tsx","lib/conditionals/lightcone/4star/TheMolesWelcomeYou.tsx","lib/conditionals/lightcone/4star/TheBirthOfTheSelf.tsx","lib/conditionals/lightcone/4star/SharedFeeling.tsx","lib/conditionals/lightcone/4star/EyesOfThePrey.tsx","lib/conditionals/lightcone/4star/LandausChoice.tsx","lib/conditionals/lightcone/4star/Swordplay.tsx","lib/conditionals/lightcone/4star/PlanetaryRendezvous.tsx","lib/conditionals/lightcone/4star/ASecretVow.tsx","lib/conditionals/lightcone/4star/MakeTheWorldClamor.tsx","lib/conditionals/lightcone/4star/PerfectTiming.tsx","lib/conditionals/lightcone/4star/ResolutionShinesAsPearlsOfSweat.tsx","lib/conditionals/lightcone/4star/TrendOfTheUniversalMarket.tsx","lib/conditionals/lightcone/4star/SubscribeForMore.tsx","lib/conditionals/lightcone/4star/DanceDanceDance.tsx","lib/conditionals/lightcone/4star/UnderTheBlueSky.tsx","lib/conditionals/lightcone/4star/GeniusesRepose.tsx","lib/conditionals/lightcone/4star/QuidProQuo.tsx","lib/conditionals/lightcone/4star/Fermata.tsx","lib/conditionals/lightcone/4star/WeAreWildfire.tsx","lib/conditionals/lightcone/4star/RiverFlowsInSpring.tsx","lib/conditionals/lightcone/4star/PastAndFuture.tsx","lib/conditionals/lightcone/4star/WoofWalkTime.tsx","lib/conditionals/lightcone/4star/TheSeriousnessOfBreakfast.tsx","lib/conditionals/lightcone/4star/WarmthShortensColdNights.tsx","lib/conditionals/lightcone/4star/WeWillMeetAgain.tsx","lib/conditionals/lightcone/4star/ThisIsMe.tsx","lib/conditionals/lightcone/4star/ReturnToDarkness.tsx","lib/conditionals/lightcone/4star/CarveTheMoonWeaveTheClouds.tsx","lib/conditionals/lightcone/4star/NowhereToRun.tsx","lib/conditionals/lightcone/4star/TodayIsAnotherPeacefulDay.tsx","lib/conditionals/lightcone/4star/WhatIsReal.tsx","lib/conditionals/lightcone/4star/DreamvilleAdventure.tsx","lib/conditionals/lightcone/4star/FinalVictor.tsx","lib/conditionals/lightcone/4star/FlamesAfar.tsx","lib/conditionals/lightcone/4star/DestinysThreadsForewoven.tsx","lib/conditionals/lightcone/4star/TheDayTheCosmosFell.tsx","lib/conditionals/lightcone/4star/ItsShowtime.tsx","lib/conditionals/lightcone/4star/IndeliblePromise.tsx","lib/conditionals/lightcone/4star/BeforeTheTutorialMissionStarts.tsx","lib/conditionals/lightcone/4star/HeyOverHere.tsx","lib/conditionals/lightcone/3star/Arrows.tsx","lib/conditionals/lightcone/3star/Cornucopia.tsx","lib/conditionals/lightcone/3star/CollapsingSky.tsx","lib/conditionals/lightcone/3star/Amber.tsx","lib/conditionals/lightcone/3star/Void.tsx","lib/conditionals/lightcone/3star/Chorus.tsx","lib/conditionals/lightcone/3star/DataBank.tsx","lib/conditionals/lightcone/3star/DartingArrow.tsx","lib/conditionals/lightcone/3star/FineFruit.tsx","lib/conditionals/lightcone/3star/ShatteredHome.tsx","lib/conditionals/lightcone/3star/Defense.tsx","lib/conditionals/lightcone/3star/Loop.tsx","lib/conditionals/lightcone/3star/MeshingCogs.tsx","lib/conditionals/lightcone/3star/Passkey.tsx","lib/conditionals/lightcone/3star/Adversarial.tsx","lib/conditionals/lightcone/3star/Multiplication.tsx","lib/conditionals/lightcone/3star/MutualDemise.tsx","lib/conditionals/lightcone/3star/Pioneering.tsx","lib/conditionals/lightcone/3star/HiddenShadow.tsx","lib/conditionals/lightcone/3star/Mediation.tsx","lib/conditionals/lightcone/3star/Sagacity.tsx","lib/worker/optimizerWorker.js","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/compat get default export","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/nonce","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["export const Stats = {\n  ATK_P: 'ATK%',\n  ATK: 'ATK',\n  BE: 'Break Effect',\n  CD: 'CRIT DMG',\n  CR: 'CRIT Rate',\n  DEF_P: 'DEF%',\n  DEF: 'DEF',\n  EHR: 'Effect Hit Rate',\n  ERR: 'Energy Regeneration Rate',\n  Fire_DMG: 'Fire DMG Boost',\n  HP_P: 'HP%',\n  HP: 'HP',\n  Ice_DMG: 'Ice DMG Boost',\n  Imaginary_DMG: 'Imaginary DMG Boost',\n  Lightning_DMG: 'Lightning DMG Boost',\n  OHB: 'Outgoing Healing Boost',\n  Physical_DMG: 'Physical DMG Boost',\n  Quantum_DMG: 'Quantum DMG Boost',\n  RES: 'Effect RES',\n  SPD_P: 'SPD%',\n  SPD: 'SPD',\n  Wind_DMG: 'Wind DMG Boost'\n};\nexport type StatsKeys = keyof typeof Stats;\nexport type StatsValues = (typeof Stats)[StatsKeys];\n\n\nexport const MainStats = [\n  Stats.HP_P,\n  Stats.ATK_P,\n  Stats.DEF_P,\n  Stats.HP,\n  Stats.ATK,\n  Stats.SPD,\n  Stats.CR,\n  Stats.CD,\n  Stats.EHR,\n  Stats.BE,\n  Stats.ERR,\n  Stats.OHB,\n  Stats.Physical_DMG,\n  Stats.Fire_DMG,\n  Stats.Ice_DMG,\n  Stats.Lightning_DMG,\n  Stats.Wind_DMG,\n  Stats.Quantum_DMG,\n  Stats.Imaginary_DMG,\n];\nexport type MainStats = typeof MainStats[number];\n\nexport const MainStatsValues = {\n  [Stats.HP_P]: { '5': { 'base': 6.912, 'increment': 2.4192 }, '4': { 'base': 5.5296, 'increment': 1.9354 }, '3': { 'base': 4.1472, 'increment': 1.4515 }, '2': { 'base': 2.7648, 'increment': 0.9677 } },\n  [Stats.ATK_P]: { '5': { 'base': 6.912, 'increment': 2.4192 }, '4': { 'base': 5.5296, 'increment': 1.9354 }, '3': { 'base': 4.1472, 'increment': 1.4515 }, '2': { 'base': 2.7648, 'increment': 0.9677 } },\n  [Stats.DEF_P]: { '5': { 'base': 8.64, 'increment': 3.024 }, '4': { 'base': 6.912, 'increment': 2.4192 }, '3': { 'base': 5.184, 'increment': 1.8144 }, '2': { 'base': 3.456, 'increment': 1.2096 } },\n  [Stats.HP]: { '5': { 'base': 112.896, 'increment': 39.5136 }, '4': { 'base': 90.3168, 'increment': 31.61088 }, '3': { 'base': 67.7376, 'increment': 23.70816 }, '2': { 'base': 45.1584, 'increment': 15.80544 } },\n  [Stats.ATK]: { '5': { 'base': 56.448, 'increment': 19.7568 }, '4': { 'base': 45.1584, 'increment': 15.80544 }, '3': { 'base': 33.8688, 'increment': 11.85408 }, '2': { 'base': 22.5792, 'increment': 7.90272 } },\n  [Stats.SPD]: { '5': { 'base': 4.032, 'increment': 1.4 }, '4': { 'base': 3.226, 'increment': 1.1 }, '3': { 'base': 2.419, 'increment': 1.0 }, '2': { 'base': 1.613, 'increment': 1.0 } },\n  [Stats.CR]: { '5': { 'base': 5.184, 'increment': 1.8144 }, '4': { 'base': 4.1472, 'increment': 1.4515 }, '3': { 'base': 3.1104, 'increment': 1.0886 }, '2': { 'base': 2.0736, 'increment': 0.7258 } },\n  [Stats.CD]: { '5': { 'base': 10.368, 'increment': 3.6288 }, '4': { 'base': 8.2944, 'increment': 2.9030 }, '3': { 'base': 6.2208, 'increment': 2.1773 }, '2': { 'base': 4.1472, 'increment': 1.4515 } },\n  [Stats.EHR]: { '5': { 'base': 6.912, 'increment': 2.4192 }, '4': { 'base': 5.5296, 'increment': 1.9354 }, '3': { 'base': 4.1472, 'increment': 1.4515 }, '2': { 'base': 2.7648, 'increment': 0.9677 } },\n  [Stats.BE]: { '5': { 'base': 10.3680, 'increment': 3.6288 }, '4': { 'base': 8.2944, 'increment': 2.9030 }, '3': { 'base': 6.2208, 'increment': 2.1773 }, '2': { 'base': 4.1472, 'increment': 1.4515 } },\n  [Stats.ERR]: { '5': { 'base': 3.1104, 'increment': 1.0886 }, '4': { 'base': 2.4883, 'increment': 0.8709 }, '3': { 'base': 1.8662, 'increment': 0.6532 }, '2': { 'base': 1.2442, 'increment': 0.4355 } },\n  [Stats.OHB]: { '5': { 'base': 5.5296, 'increment': 1.9354 }, '4': { 'base': 4.4237, 'increment': 1.5483 }, '3': { 'base': 3.3178, 'increment': 1.1612 }, '2': { 'base': 2.2118, 'increment': 0.7741 } },\n  [Stats.Physical_DMG]: { '5': { 'base': 6.2208, 'increment': 2.1773 }, '4': { 'base': 4.9766, 'increment': 1.7418 }, '3': { 'base': 3.7325, 'increment': 1.3064 }, '2': { 'base': 2.4883, 'increment': 0.8709 } },\n  [Stats.Fire_DMG]: { '5': { 'base': 6.2208, 'increment': 2.1773 }, '4': { 'base': 4.9766, 'increment': 1.7418 }, '3': { 'base': 3.7325, 'increment': 1.3064 }, '2': { 'base': 2.4883, 'increment': 0.8709 } },\n  [Stats.Ice_DMG]: { '5': { 'base': 6.2208, 'increment': 2.1773 }, '4': { 'base': 4.9766, 'increment': 1.7418 }, '3': { 'base': 3.7325, 'increment': 1.3064 }, '2': { 'base': 2.4883, 'increment': 0.8709 } },\n  [Stats.Lightning_DMG]: { '5': { 'base': 6.2208, 'increment': 2.1773 }, '4': { 'base': 4.9766, 'increment': 1.7418 }, '3': { 'base': 3.7325, 'increment': 1.3064 }, '2': { 'base': 2.4883, 'increment': 0.8709 } },\n  [Stats.Wind_DMG]: { '5': { 'base': 6.2208, 'increment': 2.1773 }, '4': { 'base': 4.9766, 'increment': 1.7418 }, '3': { 'base': 3.7325, 'increment': 1.3064 }, '2': { 'base': 2.4883, 'increment': 0.8709 } },\n  [Stats.Quantum_DMG]: { '5': { 'base': 6.2208, 'increment': 2.1773 }, '4': { 'base': 4.9766, 'increment': 1.7418 }, '3': { 'base': 3.7325, 'increment': 1.3064 }, '2': { 'base': 2.4883, 'increment': 0.8709 } },\n  [Stats.Imaginary_DMG]: { '5': { 'base': 6.2208, 'increment': 2.1773 }, '4': { 'base': 4.9766, 'increment': 1.7418 }, '3': { 'base': 3.7325, 'increment': 1.3064 }, '2': { 'base': 2.4883, 'increment': 0.8709 } },\n}\n\nexport const SubStats = [\n  Stats.ATK_P,\n  Stats.ATK,\n  Stats.BE,\n  Stats.CD,\n  Stats.CR,\n  Stats.DEF_P,\n  Stats.DEF,\n  Stats.EHR,\n  Stats.HP_P,\n  Stats.HP,\n  Stats.RES,\n  Stats.SPD,\n];\nexport type SubStats = typeof SubStats[number];\n\nexport const StatsToReadable = {\n  [Stats.HP_P]: 'HP %',\n  [Stats.ATK_P]: 'ATK %',\n  [Stats.DEF_P]: 'DEF %',\n  [Stats.SPD_P]: 'SPD %',\n  [Stats.HP]: 'HP',\n  [Stats.ATK]: 'ATK',\n  [Stats.DEF]: 'DEF',\n  [Stats.SPD]: 'SPD',\n  [Stats.CR]: 'CRIT Rate',\n  [Stats.CD]: 'CRIT DMG',\n  [Stats.EHR]: 'Effect Hit Rate',\n  [Stats.RES]: 'Effect RES',\n  [Stats.BE]: 'Break Effect',\n  [Stats.ERR]: 'Energy Regen',\n  [Stats.OHB]: 'Healing Boost',\n  [Stats.Physical_DMG]: 'Physical DMG',\n  [Stats.Fire_DMG]: 'Fire DMG',\n  [Stats.Ice_DMG]: 'Ice DMG',\n  [Stats.Lightning_DMG]: 'Lightning DMG',\n  [Stats.Wind_DMG]: 'Wind DMG',\n  [Stats.Quantum_DMG]: 'Quantum DMG',\n  [Stats.Imaginary_DMG]: 'Imaginary DMG'\n}\n\nexport const StatsToIndex = {\n\n}\nlet i = 0;\nObject.values(Stats).map(x => StatsToIndex[x] = i++)\n\nexport const Parts = {\n  Head: 'Head',\n  Hands: 'Hands',\n  Body: 'Body',\n  Feet: 'Feet',\n  PlanarSphere: 'PlanarSphere',\n  LinkRope: 'LinkRope'\n};\nexport type Parts = typeof Parts[keyof typeof Parts];\n\nexport const PartsToReadable = {\n  [Parts.Head]: 'Head',\n  [Parts.Hands]: 'Hands',\n  [Parts.Body]: 'Body',\n  [Parts.Feet]: 'Feet',\n  [Parts.PlanarSphere]: 'Sphere',\n  [Parts.LinkRope]: 'Rope'\n};\nexport type PartsToReadable = typeof PartsToReadable[keyof typeof PartsToReadable];\n\nexport const PartsMainStats = {\n  [Parts.Head]: [Stats.HP],\n  [Parts.Hands]: [Stats.ATK],\n  [Parts.Body]: [Stats.HP_P, Stats.ATK_P, Stats.DEF_P, Stats.CR, Stats.CD, Stats.OHB, Stats.EHR],\n  [Parts.Feet]: [Stats.HP_P, Stats.ATK_P, Stats.DEF_P, Stats.SPD],\n  [Parts.PlanarSphere]: [Stats.HP_P, Stats.ATK_P, Stats.DEF_P, Stats.Physical_DMG, Stats.Fire_DMG, Stats.Ice_DMG, Stats.Lightning_DMG, Stats.Wind_DMG, Stats.Quantum_DMG, Stats.Imaginary_DMG],\n  [Parts.LinkRope]: [Stats.HP_P, Stats.ATK_P, Stats.DEF_P, Stats.BE, Stats.ERR],\n}\n\nexport const SetsRelics = {\n  'PasserbyOfWanderingCloud': 'Passerby of Wandering Cloud',\n  'MusketeerOfWildWheat': 'Musketeer of Wild Wheat',\n  'KnightOfPurityPalace': 'Knight of Purity Palace',\n  'HunterOfGlacialForest': 'Hunter of Glacial Forest',\n  'ChampionOfStreetwiseBoxing': 'Champion of Streetwise Boxing',\n  'GuardOfWutheringSnow': 'Guard of Wuthering Snow',\n  'FiresmithOfLavaForging': 'Firesmith of Lava-Forging',\n  'GeniusOfBrilliantStars': 'Genius of Brilliant Stars',\n  'BandOfSizzlingThunder': 'Band of Sizzling Thunder',\n  'EagleOfTwilightLine': 'Eagle of Twilight Line',\n  'ThiefOfShootingMeteor': 'Thief of Shooting Meteor',\n  'WastelanderOfBanditryDesert': 'Wastelander of Banditry Desert',\n  'LongevousDisciple': 'Longevous Disciple',\n  'MessengerTraversingHackerspace': 'Messenger Traversing Hackerspace',\n  'TheAshblazingGrandDuke': 'The Ashblazing Grand Duke',\n  'PrisonerInDeepConfinement': 'Prisoner in Deep Confinement',\n  'PioneerDiverOfDeadWaters': 'Pioneer Diver of Dead Waters',\n  'WatchmakerMasterOfDreamMachinations': 'Watchmaker, Master of Dream Machinations',\n};\nexport type SetsRelics = typeof SetsRelics[keyof typeof SetsRelics];\n\nexport const SetsOrnaments = {\n  'SpaceSealingStation': 'Space Sealing Station',\n  'FleetOfTheAgeless': 'Fleet of the Ageless',\n  'PanCosmicCommercialEnterprise': 'Pan-Cosmic Commercial Enterprise',\n  'BelobogOfTheArchitects': 'Belobog of the Architects',\n  'CelestialDifferentiator': 'Celestial Differentiator',\n  'InertSalsotto': 'Inert Salsotto',\n  'TaliaKingdomOfBanditry': 'Talia: Kingdom of Banditry',\n  'SprightlyVonwacq': 'Sprightly Vonwacq',\n  'RutilantArena': 'Rutilant Arena',\n  'BrokenKeel': 'Broken Keel',\n  'FirmamentFrontlineGlamoth': 'Firmament Frontline: Glamoth',\n  'PenaconyLandOfTheDreams': 'Penacony, Land of the Dreams',\n};\nexport type SetsOrnaments = typeof SetsOrnaments[keyof typeof SetsOrnaments];\n\nexport const Sets = {\n  ...SetsRelics,\n  ...SetsOrnaments\n}\nexport type Sets = typeof Sets[keyof typeof Sets];\n\nexport const SetsRelicsNames = Object.values(SetsRelics)\nexport const SetsOrnamentsNames = Object.values(SetsOrnaments)\n\nconst OrnamentSetToIndex = {}\nfor (let i = 0; i < SetsOrnamentsNames.length; i++) {\n  OrnamentSetToIndex[SetsOrnamentsNames[i]] = i\n}\n\nconst RelicSetToIndex = {}\nfor (let i = 0; i < SetsRelicsNames.length; i++) {\n  RelicSetToIndex[SetsRelicsNames[i]] = i\n}\n\nexport const Constants = {\n  Sets,\n  Parts,\n  Stats,\n  MainStats,\n  MainStatsValues,\n  SubStats,\n  StatsToIndex,\n  SetsOrnaments,\n  SetsRelics,\n  SetsRelicsNames,\n  SetsOrnamentsNames,\n  StatsToReadable,\n  PartsToReadable,\n  PartsMainStats,\n  RelicSetToIndex,\n  OrnamentSetToIndex,\n  // StatMaxes,\n  MAX_INT: 2147483647,\n  THREAD_BUFFER_LENGTH: 100000\n}\n\n\n\nexport const levelOptions = (() => {\n  const levelStats = []\n  for (let i = 80; i >= 1; i--) {\n    levelStats.push({\n      value: i,\n      label: `Lv. ${i}`\n    })\n  }\n\n  return levelStats\n})();\n\nexport const enemyLevelOptions = (() => {\n  const levelStats = []\n  for (let i = 95; i >= 1; i--) {\n    levelStats.push({\n      value: i,\n      label: `Lv. ${i}`\n    })\n  }\n\n  return levelStats\n})();\n\nexport const enemyCountOptions = (() => {\n  const levelStats = []\n  for (let i = 1; i <= 5; i += 2) {\n    levelStats.push({\n      value: i,\n      label: `${i} target${i > 1 ? 's' : ''}`\n    })\n  }\n\n  return levelStats\n})();\n\nexport const enemyResistanceOptions = (() => {\n  const levelStats = []\n  for (let i = 20; i <= 60; i += 20) {\n    levelStats.push({\n      value: i / 100,\n      label: `${i}% RES`\n    })\n  }\n\n  return levelStats\n})();\n\nexport const enemyHpPercentOptions = (() => {\n  const levelStats = []\n  for (let i = 100; i >= 1; i--) {\n    levelStats.push({\n      value: i / 100,\n      label: `${i}% HP`\n    })\n  }\n\n  return levelStats\n})();\n\nexport const superimpositionOptions = (() => {\n  return [\n    { value: 1, label: 'S1' },\n    { value: 2, label: 'S2' },\n    { value: 3, label: 'S3' },\n    { value: 4, label: 'S4' },\n    { value: 5, label: 'S5' },\n  ]\n})();\n\nexport const eidolonOptions = (() => {\n  return [\n    { value: 0, label: 'E0' },\n    { value: 1, label: 'E1' },\n    { value: 2, label: 'E2' },\n    { value: 3, label: 'E3' },\n    { value: 4, label: 'E4' },\n    { value: 5, label: 'E5' },\n    { value: 6, label: 'E6' },\n  ]\n})();\n","import { Constants, Stats } from \"./constants.ts\";\n\nconst SIZE = 35\n\n// When adding new rows, use:\n// let i = 0\n// offset + i++\n\nexport const BufferPacker = {\n  extractCharacter: (arr, offset) => { // Float32Array\n    offset = offset * SIZE\n    return {\n      id: arr[offset], // 0\n      [Constants.Stats.HP]: arr[offset + 1],\n      [Constants.Stats.ATK]: arr[offset + 2],\n      [Constants.Stats.DEF]: arr[offset + 3],\n      [Constants.Stats.SPD]: arr[offset + 4],\n      [Constants.Stats.CD]: arr[offset + 5],\n      [Constants.Stats.CR]: arr[offset + 6],\n      [Constants.Stats.EHR]: arr[offset + 7],\n      [Constants.Stats.RES]: arr[offset + 8],\n      [Constants.Stats.BE]: arr[offset + 9],\n      [Constants.Stats.ERR]: arr[offset + 10], // 10\n      [Constants.Stats.OHB]: arr[offset + 11],\n      ED: arr[offset + 12],\n      CV: arr[offset + 13],\n      WEIGHT: arr[offset + 14],\n      EHP: arr[offset + 15],\n      BASIC: arr[offset + 16],\n      SKILL: arr[offset + 17],\n      ULT: arr[offset + 18],\n      FUA: arr[offset + 19],\n      DOT: arr[offset + 20], // 20\n      xHP: arr[offset + 21],\n      xATK: arr[offset + 22],\n      xDEF: arr[offset + 23],\n      xSPD: arr[offset + 24],\n      xCR: arr[offset + 25],\n      xCD: arr[offset + 26],\n      xEHR: arr[offset + 27],\n      xRES: arr[offset + 28],\n      xBE: arr[offset + 29],\n      xERR: arr[offset + 30], // 30\n      xOHB: arr[offset + 31],\n      xELEMENTAL_DMG: arr[offset + 32],\n      relicSetIndex: arr[offset + 33],\n      ornamentSetIndex: arr[offset + 34],\n    }\n  },\n\n  extractArrayToResults: (arr, length, results) => {\n    for (let i = 0; i < length; i++) {\n      if (arr[i * SIZE + 1]) {\n        results.push(BufferPacker.extractCharacter(arr, i))\n      }\n    }\n  },\n\n  packCharacter: (arr, offset, character) => {\n    offset = offset * SIZE\n\n    // When adding new rows, use:\n    arr[offset] = character.id // 0\n    arr[offset + 1] = character[Stats.HP]\n    arr[offset + 2] = character[Stats.ATK]\n    arr[offset + 3] = character[Stats.DEF]\n    arr[offset + 4] = character[Stats.SPD]\n    arr[offset + 5] = character[Stats.CD]\n    arr[offset + 6] = character[Stats.CR]\n    arr[offset + 7] = character[Stats.EHR]\n    arr[offset + 8] = character[Stats.RES]\n    arr[offset + 9] = character[Stats.BE]\n    arr[offset + 10] = character[Stats.ERR] // 10\n    arr[offset + 11] = character[Stats.OHB]\n    arr[offset + 12] = character.ELEMENTAL_DMG\n    arr[offset + 13] = character.CV\n    arr[offset + 14] = character.WEIGHT\n    arr[offset + 15] = character.EHP\n    arr[offset + 16] = character.x.BASIC_DMG\n    arr[offset + 17] = character.x.SKILL_DMG\n    arr[offset + 18] = character.x.ULT_DMG\n    arr[offset + 19] = character.x.FUA_DMG\n    arr[offset + 20] = character.x.DOT_DMG // 20\n    arr[offset + 21] = character.x[Stats.HP]\n    arr[offset + 22] = character.x[Stats.ATK]\n    arr[offset + 23] = character.x[Stats.DEF]\n    arr[offset + 24] = character.x[Stats.SPD]\n    arr[offset + 25] = character.x[Stats.CR]\n    arr[offset + 26] = character.x[Stats.CD]\n    arr[offset + 27] = character.x[Stats.EHR]\n    arr[offset + 28] = character.x[Stats.RES]\n    arr[offset + 29] = character.x[Stats.BE]\n    arr[offset + 30] = character.x[Stats.ERR] // 30\n    arr[offset + 31] = character.x[Stats.OHB]\n    arr[offset + 32] = character.x.ELEMENTAL_DMG\n    arr[offset + 33] = character.relicSetIndex\n    arr[offset + 34] = character.ornamentSetIndex\n  },\n\n  cleanFloatBuffer: (buffer) => {\n    new Float64Array(buffer).fill(0);\n  },\n\n  createFloatBuffer: (length) => {\n    return new Float64Array(length * SIZE).buffer\n  }\n}","import { Typography, } from 'antd';\nimport styled from 'styled-components';\n\nconst { Text } = Typography;\n\nexport const HeaderText = styled(Text)`\n  text-decoration: underline;\n  text-decoration-color: #6d97ffb3;\n  text-underline-offset: 2px\n`","import React from \"react\";\nimport { Popover } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport { Assets } from \"../lib/assets\";\n\nexport const TooltipImage = (props) => (\n  <Popover\n    content={props.type.content}\n    title={props.type.title}\n    overlayStyle={{\n      width: 500\n    }}\n  >\n    <img src={Assets.getQuestion()} style={{width: 16, opacity: 0.6}}/>\n  </Popover>\n)\nTooltipImage.propTypes = {\n  type: PropTypes.object,\n}\n","import { Constants } from 'lib/constants';\nconst Stats = Constants.Stats\n\nexport const ASHBLAZING_ATK_STACK = 0.06;\n\n// TODO profile & convert to array for performance?\nexport const baseComputedStatsObject = {\n  [Stats.HP_P]: 0,\n  [Stats.ATK_P]: 0,\n  [Stats.DEF_P]: 0,\n  [Stats.SPD_P]: 0,\n  [Stats.HP]: 0,\n  [Stats.ATK]: 0,\n  [Stats.DEF]: 0,\n  [Stats.SPD]: 0,\n  [Stats.CD]: 0,\n  [Stats.CR]: 0,\n  [Stats.EHR]: 0,\n  [Stats.RES]: 0,\n  [Stats.BE]: 0,\n  [Stats.ERR]: 0,\n  [Stats.OHB]: 0,\n\n  ELEMENTAL_DMG: 0,\n  DEF_SHRED: 0,\n  DMG_TAKEN_MULTI: 0,\n  ALL_DMG_MULTI: 0,\n  RES_PEN: 0,\n  DMG_RED_MULTI: 1,\n\n  BASIC_CR_BOOST: 0,\n  SKILL_CR_BOOST: 0,\n  ULT_CR_BOOST: 0,\n  FUA_CR_BOOST: 0,\n\n  BASIC_CD_BOOST: 0,\n  SKILL_CD_BOOST: 0,\n  ULT_CD_BOOST: 0,\n  FUA_CD_BOOST: 0,\n\n  BASIC_SCALING: 0,\n  SKILL_SCALING: 0,\n  ULT_SCALING: 0,\n  FUA_SCALING: 0,\n  DOT_SCALING: 0,\n\n  BASIC_BOOST: 0,\n  SKILL_BOOST: 0,\n  ULT_BOOST: 0,\n  FUA_BOOST: 0,\n  DOT_BOOST: 0,\n\n  BASIC_VULNERABILITY: 0,\n  SKILL_VULNERABILITY: 0,\n  ULT_VULNERABILITY: 0,\n  FUA_VULNERABILITY: 0,\n  DOT_VULNERABILITY: 0,\n\n  BASIC_DMG: 0,\n  SKILL_DMG: 0,\n  ULT_DMG: 0,\n  FUA_DMG: 0,\n  DOT_DMG: 0,\n\n  BASIC_DEF_PEN: 0,\n  SKILL_DEF_PEN: 0,\n  ULT_DEF_PEN: 0,\n  FUA_DEF_PEN: 0,\n  DOT_DEF_PEN: 0,\n\n  BASIC_RES_PEN: 0,\n  SKILL_RES_PEN: 0,\n  ULT_RES_PEN: 0,\n  FUA_RES_PEN: 0,\n  DOT_RES_PEN: 0,\n};\nexport type ComputedStatsObject = typeof baseComputedStatsObject;","import { Constants } from \"lib/constants\";\n\nexport const precisionRound = (number: number, precision: number = 8): number => {\n  const factor = Math.pow(10, precision);\n  return Math.round(number * factor) / factor;\n};\n\n// Remove the ashblazing set atk bonus only when calc-ing fua attacks\nexport const calculateAshblazingSet = (c, request, hitMulti): {\n  ashblazingMulti: number,\n  ashblazingAtk: number\n} => {\n  const enabled = p4(c.sets.TheAshblazingGrandDuke);\n  const valueTheAshblazingGrandDuke = request.setConditionals[Constants.Sets.TheAshblazingGrandDuke][1];\n  const ashblazingAtk = 0.06 * valueTheAshblazingGrandDuke * enabled * c.baseAtk * enabled;\n  const ashblazingMulti = hitMulti * enabled * c.baseAtk;\n\n  return {\n    ashblazingMulti,\n    ashblazingAtk\n  }\n};\n\nexport const p4 = (set: number): number => {\n  return set >> 2\n};\n\n\n// normal: JL, Dr.Ratio\n// reversed: Topaz\nexport const skill = (eidolon: number, value1: number, value2: number): number => {\n  return eidolon >= 3 ? value2 : value1\n};\nexport const talent = skill;\nexport const ultRev = skill;\nexport const basicRev = skill;\n\nexport const ult = (eidolon: number, value1: number, value2: number): number => {\n  return eidolon >= 5 ? value2 : value1\n}\nexport const basic = ult;\nexport const skillRev = ult;\nexport const talentRev = ult;\n\n\ntype SkillLevel = 10 | 12;\nexport const getContentForCharacterSkill = (skillLevel: SkillLevel, skill: string, skillRank: unknown): string => {\n  let ret = '';\n\n  skill.match(/#(\\d+)\\[\\w+\\]/g).forEach((token) => {\n    // get params value\n    token.match(/#(\\d+)/).forEach((tokenPieces, i) => {\n      if (i > 0) {\n        // [\"#4[i]\", \"4\"]\n        let value = skillRank[parseInt(tokenPieces) - 1];\n        // change to percent\n        if (value < 1) {\n          value = Math.round(value * 100);\n        }\n        ret = ret.replace(token, value.toString());\n      }\n    });\n  });\n\n  return ret;\n};","import React from 'react';\n\n// Colorizes numbers in a string with JSX elements\nconst ColorizeNumbers = (text: string, color: string = '#ebb434') => {\n  const ret = [];\n  let num = '';\n  let isNum = false;\n  let key = 0;\n\n  if (text) {\n    text.split('::BR::').forEach((item) => {\n      if (ret.length > 0) {\n        ret.push(<br key={key++} />);\n        ret.push(<br key={key++} />);\n      }\n\n      for (let i = 0; i < item.length; i++) {\n        if (\n          (item[i] >= '0' && item[i] <= '9')\n            || item[i] === '%'\n            || (item[i] === 'A' && item[i + 1] && /[2,4,6]/.test(item[i + 1]))\n            || (item[i] === 'E' && item[i + 1] && /[0-6]/.test(item[i + 1]))\n          ) {\n          num += item[i];\n          isNum = true;\n        } else {\n          if (isNum) {\n            ret.push(<span key={key++} style={{ color: color }}>{num}</span>);\n            num = '';\n            isNum = false;\n          }\n          ret.push(item[i]);\n        }\n      }\n    \n      if (isNum) {\n        ret.push(<span key={key++} style={{ color: color }}>{num}</span>);\n      }\n    });\n\n  }\n\n  return <>{ret}</>;\n};\n\nexport default ColorizeNumbers;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Flex } from 'antd';\nimport ColorizeNumbers from 'components/common/ColorizeNumbers';\n\nconst DisplayFormControl = ({ content }): JSX.Element => {\n  const ret = [];\n  let i = 0;\n\n  if (!content || content.length === 0) {\n    ret.push(<div key={i++}>No conditional passives</div>);\n  } else {\n    content.forEach(passive => {\n      const Item = passive.formItem;\n      ret.push(\n        <Item\n          {...passive}\n          name={passive.id}\n          title={passive.title}\n          content={ColorizeNumbers(passive.content)}\n          text={passive.text}\n          key={i++}\n          />\n      );\n      i++;\n    });\n  }\n\n  return (<Flex vertical gap={10}>{ret}</Flex>);\n};\nDisplayFormControl.propTypes = {\n  content: PropTypes.array,\n  eidolon: PropTypes.number,\n  ultBoostMax: PropTypes.number,\n};\n\nexport default DisplayFormControl;","import React, { FC } from \"react\";\nimport { object, string } from \"prop-types\";\nimport { Popover, Typography } from \"antd\";\nconst { Text } = Typography;\n\nconst WithPopover = (WrappedComponent: FC) => {\n  const Wrapped = (props) => {\n    const [open, setOpen] = React.useState(false);\n    const handleOpenChange = (newOpen: boolean) => { setOpen(newOpen); }\n    const content =\n      <Text style={{ width: 400, display: 'block' }}>\n        <hr />\n        {props.content}\n      </Text>;\n\n    return (\n      <Popover\n        trigger=\"hover\"\n        placement=\"left\"\n        content={content}\n        title={props.title}\n        open={open}\n        onOpenChange={handleOpenChange}\n      >\n        <span style={{ cursor: 'pointer' }}>{WrappedComponent(props)}</span>\n      </Popover>\n    );\n  };\n  Wrapped.displayName = 'WithPopoverWrapped';\n  Wrapped.propTypes = WithPopover.propTypes\n  return Wrapped;\n};\n\nWithPopover.displayName = 'WithPopover';\nWithPopover.propTypes = {\n  title: string,\n  content: object,\n};\nexport default WithPopover;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Flex, Form, Switch, Typography } from \"antd\";\nimport { CheckOutlined, CloseOutlined } from \"@ant-design/icons\";\nimport WithPopover from \"components/common/WithPopover\";\n\nconst justify = 'flex-start'\nconst align = 'center'\n\nconst Text = styled(Typography)`\n  white-space: pre-line;\n`\n\nfunction conditionalType(props) {\n  if (props.lc) {\n    return 'lightConeConditionals'\n  }\n  return 'characterConditionals'\n}\n\nexport function FormSwitch(props) {\n  return (\n\n    <Flex justify={justify} align={align}>\n      <Form.Item name={[conditionalType(props), props.name]} valuePropName='checked'>\n        <Switch\n          checkedChildren={<CheckOutlined />}\n          unCheckedChildren={<CloseOutlined />}\n          disabled={props.disabled}\n          defaultChecked={!props.disabled}\n          style={{ width: 45, marginRight: 10 }}\n        />\n      </Form.Item>\n      <Text>{props.text}</Text>\n    </Flex>\n\n  )\n}\nFormSwitch.propTypes = {\n  disabled: PropTypes.bool,\n  name: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  lc: PropTypes.bool,\n};\n\nexport const FormSwitchWithPopover = WithPopover(FormSwitch);\nFormSwitchWithPopover.propTypes = {\n  ...FormSwitch.propTypes,\n  ...WithPopover.propTypes\n};\n\nexport type FormSwitchWithPopoverProps = PropTypes.InferProps<typeof FormSwitchWithPopover.propTypes>;","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Flex, Form, InputNumber, Slider, Typography } from \"antd\";\nimport styled from \"styled-components\";\nimport WithPopover from \"components/common/WithPopover\";\n\nconst justify = 'flex-start'\nconst align = 'center'\nconst inputWidth = 75\nconst numberWidth = 65\nconst sliderWidth = 145\n\nconst Text = styled(Typography)`\n  white-space: pre-line;\n`\nfunction precisionRound(number, precision = 8) {\n  const factor = Math.pow(10, precision);\n  return Math.round(number * factor) / factor;\n}\n\nfunction conditionalType(props) {\n  if (props.lc) {\n    return 'lightConeConditionals'\n  }\n  return 'characterConditionals'\n}\n\nexport function FormSlider(props) {\n  const [inputValue, setInputValue] = useState(1);\n  const onChange = (newValue) => {\n    setInputValue(newValue);\n  };\n\n  const multiplier = (props.percent ? 100 : 1)\n  const step = props.percent ? 0.01 : 1\n  const symbol = props.percent ? '%' : ''\n\n  return (\n    <Flex vertical gap={5} style={{ marginBottom: 0 }}>\n      <Flex justify={justify} align={align}>\n        <div style={{ minWidth: inputWidth, display: 'block' }}>\n          <Form.Item name={[conditionalType(props), props.name]}>\n            <InputNumber\n              min={props.min}\n              max={props.max}\n              controls={false}\n              size='small'\n              style={{\n                width: numberWidth,\n              }}\n              parser={(value) => value == null || value == '' ? 0 : precisionRound(parseFloat(value) / multiplier)}\n              formatter={(value) => `${precisionRound(value * multiplier)}`}\n              addonAfter={symbol}\n              onChange={onChange}\n              disabled={props.disabled}\n            />\n          </Form.Item>\n        </div>\n        <Text>{props.text}</Text>\n      </Flex>\n      <Flex align='center' justify='flex-start' gap={10} style={{ height: 14 }}>\n        <Form.Item name={[conditionalType(props), props.name]}>\n          <Slider\n            min={props.min}\n            max={props.max}\n            step={step}\n            value={typeof inputValue === 'number' ? inputValue : 0}\n            style={{\n              minWidth: sliderWidth,\n              marginTop: 0,\n              marginBottom: 0,\n              marginLeft: 1\n            }}\n            tooltip={{\n              formatter: (value) => `${precisionRound(value * multiplier)}${symbol}`\n            }}\n            onChange={onChange}\n            disabled={props.disabled}\n          />\n        </Form.Item>\n        <Text style={{ minWidth: 20, marginBottom: 2, textAlign: 'center' }}>{`${precisionRound(props.max * multiplier)}${symbol}`}</Text>\n      </Flex>\n    </Flex>\n  )\n}\nFormSlider.propTypes = {\n  disabled: PropTypes.bool,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  text: PropTypes.string,\n  name: PropTypes.string,\n  percent: PropTypes.bool,\n  lc: PropTypes.bool,\n}\n\nexport const FormSliderWithPopover = WithPopover(FormSlider);\nFormSliderWithPopover.propTypes = {\n  ...FormSlider.propTypes,\n  ...WithPopover.propTypes\n}\n\nexport type FormSliderWithPopoverProps = PropTypes.InferProps<typeof FormSliderWithPopover.propTypes>","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { baseComputedStatsObject } from 'lib/conditionals/constants';\nimport { basic, precisionRound, skill, talent, ult } from 'lib/conditionals/utils';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\n\nimport { Eidolon } from 'types/Character'\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { Form } from 'types/Form';\n\n\nexport default (e: Eidolon) => {\n  const talentMaxStacks = (e >= 4) ? 12 : 10\n\n  const basicScaling = basic(e, 1.00, 1.10)\n  const skillScaling = skill(e, 1.20, 1.32)\n  const ultScaling = ult(e, 1.60, 1.728)\n  const ultEnhancedScaling = ult(e, 2.80, 3.024)\n  const ultEnhancedExtraHitScaling = ult(e, 0.95, 1.026)\n  const talentCrStackValue = talent(e, 0.025, 0.028)\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'ultEnhanced',\n    name: 'ultEnhanced',\n    text: 'Enhanced ult',\n    title: 'Enhanced ult',\n    content: `Consumes 180 Energy and deals Physical DMG equal to ${precisionRound(ultEnhancedScaling * 100)}% of Argenti's ATK to all enemies,\n      and further deals DMG for 6 extra time(s), with each time dealing Physical DMG equal to ${precisionRound(ultEnhancedExtraHitScaling * 100)}% of Argenti's ATK to a random enemy.`,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'talentStacks',\n    name: 'talentStacks',\n    text: 'Apotheosis stacks',\n    title: 'Apotheosis stacks',\n    content: `Increases CR by ${precisionRound(talentCrStackValue * 100)}% per stack, max of ${precisionRound(talentMaxStacks)} stacks.`,\n    min: 0,\n    max: talentMaxStacks,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'ultEnhancedExtraHits',\n    name: 'ultEnhancedExtraHits',\n    text: 'Enhanced ult extra hits on target',\n    title: 'Enhanced ult extra hits on target',\n    content: `Enhanced Ult hits a random enemy for ${precisionRound(ultEnhancedExtraHitScaling * 100)}% ATK per hit.`,\n    min: 0,\n    max: 6,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e2UltAtkBuff',\n    name: 'e2UltAtkBuff',\n    text: 'E2 ult ATK buff',\n    title: 'E2 ult ATK buff',\n    content: `E2: If the number of enemies on the field equals to 3 or more, increases ATK by ${precisionRound(0.40 * 100)}% for 1 turn.`,\n    disabled: e < 2,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      ultEnhanced: true,\n      talentStacks: talentMaxStacks,\n      ultEnhancedExtraHits: 6,\n      e2UltAtkBuff: true\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Skills\n      x[Stats.CR] += (r.talentStacks) * talentCrStackValue\n\n      // Traces\n\n      // Eidolons\n      x[Stats.CD] += (e >= 1) ? (r.talentStacks) * 0.04 : 0\n      x[Stats.ATK_P] += (e >= 2 && r.e2UltAtkBuff) ? 0.40 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += (r.ultEnhanced) ? ultEnhancedScaling : ultScaling\n      x.ULT_SCALING += (r.ultEnhancedExtraHits) * ultEnhancedExtraHitScaling\n\n      // BOOST\n      x.ULT_BOOST += (request.enemyHpPercent <= 0.5) ? 0.15 : 0\n      x.ULT_DEF_PEN += (e >= 6) ? 0.30 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional) => {\n      const x = c['x'];\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.FUA_DMG += 0\n    }\n  }\n}\n","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\nimport { basic, calculateAshblazingSet, precisionRound, skill, talent, ult } from \"lib/conditionals/utils\";\nimport { ASHBLAZING_ATK_STACK, baseComputedStatsObject } from 'lib/conditionals/constants';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { Eidolon } from 'types/Character';\n\nconst DrRatio = (e: Eidolon) => {\n  const debuffStacksMax = 5\n  const summationStacksMax = (e >= 1) ? 10 : 6\n\n  const basicScaling = basic(e, 1.00, 1.10)\n  const skillScaling = skill(e, 1.50, 1.65)\n  const ultScaling = ult(e, 2.40, 2.592)\n  const fuaScaling = talent(e, 2.70, 2.97)\n\n  function e2FuaRatio(procs, fua = true) {\n    return fua\n      ? fuaScaling / (fuaScaling + 0.20 * procs) // for fua dmg\n      : 0.20 / (fuaScaling + 0.20 * procs) // for each e2 proc\n  }\n\n  const baseHitMulti = ASHBLAZING_ATK_STACK * (1 * 1 / 1)\n  const fuaMultiByDebuffs = {\n    0: ASHBLAZING_ATK_STACK * (1 * 1 / 1), // 0\n    1: ASHBLAZING_ATK_STACK * (1 * e2FuaRatio(1, true) + 2 * e2FuaRatio(1, false)), // 2\n    2: ASHBLAZING_ATK_STACK * (1 * e2FuaRatio(2, true) + 5 * e2FuaRatio(2, false)), // 2 + 3\n    3: ASHBLAZING_ATK_STACK * (1 * e2FuaRatio(3, true) + 9 * e2FuaRatio(3, false)), // 2 + 3 + 4\n    4: ASHBLAZING_ATK_STACK * (1 * e2FuaRatio(4, true) + 14 * e2FuaRatio(4, false)), // 2 + 3 + 4 + 5\n  };\n\n  // TODO: Make consistent with the other code\n  const getContentWithTalentLevel = () => {\n    const base = [\n      \"When using his Skill, Dr. Ratio has a 40% fixed chance of launching a follow-up attack against his target for 1 time,\",\n      \"dealing Imaginary DMG equal to {0}% of Dr. Ratio's ATK.\",\n      \"For each debuff the target enemy has, the fixed chance of launching follow-up attack increases by 20%.\",\n      \"If the target enemy is defeated before the follow-up attack triggers, the follow-up attack will be directed at a single random enemy instead.\",\n      \"::BR::When dealing DMG to a target that has 3 or more debuff(s), for each debuff the target has, the DMG dealt by Dr. Ratio to this target increases by 10%, up to a maximum increase of 50%.\",\n      \"::BR::E2: When his Talent's follow-up attack hits a target, for every debuff the target has, additionally deals Imaginary Additional DMG equal to 20% of Dr. Ratio's ATK. This effect can be triggered for a maximum of 4 times during each follow-up attack.\"\n    ].join(' ');\n\n    // assume max talent level\n    return base.replace('{0}', (e >= 5) ? '297' : '270')\n  }\n\n  const content = [{\n    id: 'summationStacks',\n    name: 'summationStacks',\n    formItem: FormSliderWithPopover,\n    text: 'Summation stacks',\n    title: 'Summation stacks',\n    content: `When Dr. Ratio uses his Skill, for every debuff on the target, his CRIT Rate increases by 2.5% and CRIT DMG by 5%. This effect can stack up to ${precisionRound(summationStacksMax)} time(s).`,\n    min: 0,\n    max: summationStacksMax\n  }, {\n    id: 'enemyDebuffStacks',\n    name: 'enemyDebuffStacks',\n    formItem: FormSliderWithPopover,\n    text: 'Enemy debuff stacks',\n    title: 'Talent: Cogito, Ergo Sum',\n    content: getContentWithTalentLevel(),\n    min: 0,\n    max: debuffStacksMax\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      enemyDebuffStacks: debuffStacksMax,\n      summationStacks: summationStacksMax,\n    }),\n    precomputeEffects: (request) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CR] += r.summationStacks * 0.025\n      x[Stats.CD] += r.summationStacks * 0.05\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += fuaScaling\n\n      // Boost\n      x.ELEMENTAL_DMG += (r.enemyDebuffStacks >= 3) ? Math.min(0.50, r.enemyDebuffStacks * 0.10) : 0\n      x.FUA_BOOST += (e >= 6) ? 0.50 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      const r = request.characterConditionals\n      const x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      if (e >= 2) {\n        const hitMulti = fuaMultiByDebuffs[Math.min(4, r.enemyDebuffStacks)]\n        const { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n        x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n      } else {\n        const { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, baseHitMulti)\n        x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n      }\n    }\n  }\n}\n\nexport default DrRatio;","import React from \"react\"\nimport { Stats } from \"lib/constants\"\nimport { baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basicRev, precisionRound, skillRev, ultRev } from \"lib/conditionals/utils\";\nimport { FormSliderWithPopover } from \"components/optimizerForm/conditionals/FormSlider\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\n\n// TODO: Missing E1 dmg\nconst TrailblazerPreservation = (e) => {\n  const skillDamageReductionValue = skillRev(e, 0.50, 0.52);\n\n  const basicAtkScaling = basicRev(e, 1.00, 1.10);\n  const basicDefScaling = (e >= 1) ? 0.25 : 0\n  const basicEnhancedAtkScaling = basicRev(e, 1.35, 1.463);\n  const basicEnhancedDefScaling = (e >= 1) ? 0.50 : 0\n  const skillScaling = skillRev(e, 0, 0);\n  const ultAtkScaling = ultRev(e, 1.00, 1.10);\n  const ultDefScaling = ultRev(e, 1.50, 1.65);\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'enhancedBasic',\n    name: 'enhancedBasic',\n    text: 'Enhanced basic',\n    title: `Enhanced basic`,\n    content: `Enhanced basic ATK deals Fire DMG equal to ${precisionRound(basicEnhancedAtkScaling * 100)}% of the Trailblazer's ATK to a single enemy, and reduced damage to adjacent enemies.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'skillActive',\n    name: 'skillActive',\n    text: 'Skill active',\n    title: `Skill active`,\n    content: `When the Skill is used, reduces DMG taken by ${precisionRound(skillDamageReductionValue * 100)}%. Also reduces DMG taken by all allies by 15% for 1 turn.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'shieldActive',\n    name: 'shieldActive',\n    text: 'Shield active',\n    title: 'Shield active',\n    content: `When the shield is active, increases ATK by 15%.`,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'e6DefStacks',\n    name: 'e6DefStacks',\n    text: 'E6 def stacks',\n    title: 'E6 def stacks: Increases DEF by 10%',\n    content: `E6: Increases DEF by 10% per stack.`,\n    min: 0,\n    max: 3,\n    disabled: e < 6,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      enhancedBasic: true,\n      skillActive: true,\n      shieldActive: true,\n      e6DefStacks: 3,\n    }),\n    precomputeEffects: (request) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject);\n\n      // Stats\n      x[Stats.DEF_P] += (e >= 6) ? r.e6DefStacks * 0.10 : 0\n      x[Stats.ATK_P] += (r.shieldActive) ? 0.15 : 0\n\n      // Scaling\n      x.SKILL_SCALING += skillScaling\n\n      // Boost\n      x.DMG_RED_MULTI *= (r.skillActive) ? (1 - skillDamageReductionValue) : 1\n      x.DMG_RED_MULTI *= (r.skillActive) ? (1 - 0.15) : 1\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      const r = request.characterConditionals\n      const x = c.x\n\n      if (r.enhancedBasic) {\n        x.BASIC_DMG += basicEnhancedAtkScaling * x[Stats.ATK]\n        x.BASIC_DMG += basicEnhancedDefScaling * x[Stats.DEF]\n      } else {\n        x.BASIC_DMG += basicAtkScaling * x[Stats.ATK]\n        x.BASIC_DMG += basicDefScaling * x[Stats.DEF]\n      }\n\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += ultAtkScaling * x[Stats.ATK]\n      x.ULT_DMG += ultDefScaling * x[Stats.DEF]\n    }\n  }\n}\n\nexport default TrailblazerPreservation;","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport { basic, precisionRound, skill, talent, ult } from \"lib/conditionals/utils\";\nimport { baseComputedStatsObject } from 'lib/conditionals/constants';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { Eidolon } from 'types/Character';\nimport { Unknown } from 'types/Common';\nimport { ConditionalMap } from 'types/Conditionals';\nimport { CharacterConditional } from 'types/CharacterConditional';\nimport { ContentItem } from 'types/Conditionals';\nimport { Form } from 'types/Form';\nimport { FormSliderWithPopover } from \"../../../components/optimizerForm/conditionals/FormSlider.tsx\";\n\n\nconst Jingliu = (e: Eidolon): CharacterConditional => {\n  const talentCrBuff = talent(e, 0.50, 0.52);\n  let talentHpDrainAtkBuffMax = talent(e, 1.80, 1.98);\n  talentHpDrainAtkBuffMax += (e >= 4) ? 0.30 : 0;\n  const basicScaling = basic(e, 1.00, 1.10);\n  const skillScaling = skill(e, 2.00, 2.20);\n  const skillEnhancedScaling = skill(e, 2.50, 2.75);\n  const ultScaling = ult(e, 3.00, 3.24);\n\n  const content: ContentItem[] = [\n    {\n      id: 'talentEnhancedState',\n      formItem: FormSwitchWithPopover,\n      text: 'Enhanced state',\n      title: 'Crescent Transmigration',\n      content: `When Jingliu has 2 stacks of Syzygy, she enters the Spectral Transmigration state with her Action Advanced by 100% and her CRIT Rate increases by ${precisionRound(talentCrBuff)}%. \n      Then, Jingliu's Skill \"Transcendent Flash\" becomes enhanced and turns into \"Moon On Glacial River,\" and becomes the only ability she can use in battle.`,\n    },\n    {\n      id: 'talentHpDrainAtkBuff',\n      formItem: FormSliderWithPopover,\n      text: 'HP drain ATK buff',\n      title: 'Crescent Transmigration - ATK Bonus',\n      content: `When Jingliu uses an attack in the Spectral Transmigration state, she consumes HP from all other allies and Jingliu's ATK increases based on the total HP consumed from all allies in this attack, \n      capped at ${precisionRound(talentHpDrainAtkBuffMax * 100)}% of her base ATK, lasting until the current attack ends.`,\n      min: 0,\n      max: talentHpDrainAtkBuffMax,\n      percent: true,\n    },\n    {\n      id: 'e1CdBuff',\n      formItem: FormSwitchWithPopover,\n      text: 'E1 ult active',\n      title: 'E1 Moon Crashes Tianguan Gate',\n      content: `E1: When using her Ultimate or Enhanced Skill, Jingliu's CRIT DMG increases by 24% for 1 turn. If only one enemy target is attacked, the target will additionally be dealt Ice DMG equal to 100% of Jingliu's ATK.`,\n      disabled: e < 1,\n    },\n    {\n      id: 'e2SkillDmgBuff',\n      formItem: FormSwitchWithPopover,\n      text: 'E2 skill buff',\n      title: 'E2 Crescent Shadows Qixing Dipper',\n      content: `E2: After using Ultimate, increases the DMG of the next Enhanced Skill by 80%.`,\n      disabled: e < 2,\n    },\n  ];\n  \n  return {\n    display: () => <DisplayFormControl eidolon={e} content={content} />,\n    defaults: () => ({\n      talentEnhancedState: true,\n      talentHpDrainAtkBuff: talentHpDrainAtkBuffMax,\n      e1CdBuff: true,\n      e2SkillDmgBuff: true,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r: ConditionalMap = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Skills\n      x[Stats.CR] += (r.talentEnhancedState) ? talentCrBuff : 0\n      x[Stats.ATK_P] += ((r.talentEnhancedState) ? r.talentHpDrainAtkBuff : 0) as number;\n\n      // Traces\n      x[Stats.RES] += (r.talentEnhancedState) ? 0.35 : 0\n      x.ULT_BOOST += (r.talentEnhancedState) ? 0.20 : 0\n\n      // Eidolons\n      x[Stats.CD] += (e >= 1 && r.e1CdBuff) ? 0.24 : 0\n      x[Stats.CD] += (e >= 6 && r.talentEnhancedState) ? 0.50 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n\n      x.SKILL_SCALING += (r.talentEnhancedState) ? skillEnhancedScaling : skillScaling\n      x.SKILL_SCALING += (e >= 1 && r.talentEnhancedState && request.enemyCount == 1) ? 1 : 0\n\n      x.ULT_SCALING += ultScaling\n      x.ULT_SCALING += (e >= 1 && request.enemyCount == 1) ? 1 : 0\n\n      x.FUA_SCALING += 0\n\n      // BOOST\n      x.SKILL_BOOST += (e >= 2 && r.talentEnhancedState && r.e2SkillDmgBuff) ? 0.80 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c: Unknown) => {\n      const x = c['x']\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.FUA_DMG += 0\n    }\n  }\n};\nJingliu.label = 'Jingliu';\n\nexport default Jingliu;","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport { baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basicRev, skillRev, ultRev } from \"lib/conditionals/utils\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\n\nimport { Eidolon } from \"types/Character\";\n\nexport default (e: Eidolon) => {\n  const basicScaling = basicRev(e, 1.00, 1.10)\n  const skillScaling = skillRev(e, 0, 0)\n  const ultScaling = ultRev(e, 2.00, 2.16)\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'fieldActive',\n    name: 'fieldActive',\n    text: 'Field active',\n    title: 'Field active',\n    content: `\n      E1: While the Field is active, ATK of all allies increases by 20%.\n    `,\n    // disabled: e < 1, Not disabling this one since technically the field can be active at E0\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e6ResReduction',\n    name: 'e6ResReduction',\n    text: 'E6 RES reduction',\n    title: 'E6 RES reduction',\n    content: `E6: When Ultimate is used, reduces all enemies' All-Type RES by 20% for 2 turn(s).`,\n    disabled: e < 6,\n  }]\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      fieldActive: true,\n      e6ResReduction: true,\n    }),\n    precomputeEffects: (request) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (r >= 1 && r.fieldActive) ? 0.20 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.RES_PEN += (e >= 6 && r.e6ResReduction) ? 0.20 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      const x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\n","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport { baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basicRev, precisionRound, skillRev, talentRev, ultRev } from \"lib/conditionals/utils\";\nimport { Eidolon } from \"types/Character\"\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { FormSliderWithPopover } from \"components/optimizerForm/conditionals/FormSlider\";\n\nconst TrailblazerDestruction = (e: Eidolon) => {\n  const talentAtkScalingValue = talentRev(e, 0.20, 0.22);\n\n  const basicScaling = basicRev(e, 1.00, 1.10);\n  const skillScaling = skillRev(e, 1.25, 1.375);\n  const ultScaling = ultRev(e, 4.5, 4.80);\n  const ultEnhancedScaling = ultRev(e, 2.70, 2.88);\n  const ultEnhancedScaling2 = ultRev(e, 1.62, 1.728);\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'enhancedUlt',\n    name: 'Enhanced Ult',\n    text: 'AoE ult',\n    title: 'AoE ULT - Split DMG to adjacent enemies',\n    content: `Choose between two attack modes to deliver a full strike. ::BR:: Blowout: (ST) Farewell Hit deals Physical DMG equal to ${precisionRound(ultScaling * 100)}% of the Trailblazer's ATK to a single enemy. \n    ::BR::Blowout: (Blast) RIP Home Run deals Physical DMG equal to ${precisionRound(ultEnhancedScaling * 100)}% of the Trailblazer's ATK to a single enemy, and Physical DMG equal to ${precisionRound(ultEnhancedScaling2 * 100)}% of the Trailblazer's ATK to enemies adjacent to it.`,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'talentStacks',\n    name: 'Talent stacks',\n    text: 'Talent stacks',\n    title: `Talent stacks`,\n    content: `Each time after this character inflicts Weakness Break on an enemy, ATK increases by ${precisionRound(talentAtkScalingValue * 100)}% and DEF increases by 10%. This effect stacks up to 2 times.`,\n    min: 0,\n    max: 2,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      enhancedUlt: true,\n      talentStacks: 2,\n    }),\n    precomputeEffects: (request) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject);\n\n      // Stats\n      x[Stats.ATK_P] += r.talentStacks * talentAtkScalingValue\n      x[Stats.DEF_P] += r.talentStacks * 0.10\n      x[Stats.CR] += (request.enemyWeaknessBroken) ? 0.25 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += (r.enhancedUlt) ? ultEnhancedScaling : ultScaling\n\n      // Boost\n      x.SKILL_BOOST += 0.25\n      x.ULT_BOOST += (r.enhancedUlt) ? 0.25 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      const x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n};\nexport default TrailblazerDestruction;","import React from \"react\";\nimport { Flex } from \"antd\";\nimport { HeaderText } from \"components/HeaderText\";\nimport { TooltipImage } from \"components/TooltipImage\";\nimport { Hint } from \"lib/hint\";\n\nimport argenti from \"lib/conditionals/character/Argenti\";\nimport arlan from \"lib/conditionals/character/Arlan\";\nimport asta from \"lib/conditionals/character/Asta\";\nimport bailu from \"lib/conditionals/character/Bailu\";\nimport blackswan from \"lib/conditionals/character/BlackSwan\";\nimport blade from \"lib/conditionals/character/Blade\";\nimport bronya from \"lib/conditionals/character/Bronya\";\nimport clara from \"lib/conditionals/character/Clara\";\nimport danheng from \"lib/conditionals/character/DanHeng\";\nimport drratio from 'lib/conditionals/character/DrRatio';\nimport firetrailblazer from 'lib/conditionals/character/TrailblazerPreservation';\nimport fuxuan from \"lib/conditionals/character/FuXuan\";\nimport gepard from \"lib/conditionals/character/Gepard\";\nimport guinaifen from \"lib/conditionals/character/Guinaifen\";\nimport hanya from \"lib/conditionals/character/Hanya\";\nimport herta from \"lib/conditionals/character/Herta\";\nimport himeko from \"lib/conditionals/character/Himeko\";\nimport hook from \"lib/conditionals/character/Hook\";\nimport huohuo from \"lib/conditionals/character/Huohuo\";\nimport imbibitorlunae from \"lib/conditionals/character/ImbibitorLunae\";\nimport jingliu from 'lib/conditionals/character/Jingliu';\nimport jingyuan from \"lib/conditionals/character/JingYuan\";\nimport kafka from \"lib/conditionals/character/Kafka\";\nimport luka from 'lib/conditionals/character/Luka';\nimport luocha from 'lib/conditionals/character/Luocha';\nimport lynx from 'lib/conditionals/character/Lynx';\nimport march7th from 'lib/conditionals/character/March7th';\nimport misha from \"lib/conditionals/character/Misha\";\nimport natasha from 'lib/conditionals/character/Natasha';\nimport pela from 'lib/conditionals/character/Pela';\nimport physicaltrailblazer from 'lib/conditionals/character/TrailblazerDestruction';\nimport qingque from 'lib/conditionals/character/Qingque';\nimport ruanmei from 'lib/conditionals/character/RuanMei';\nimport sampo from 'lib/conditionals/character/Sampo';\nimport seele from 'lib/conditionals/character/Seele';\nimport serval from 'lib/conditionals/character/Serval';\nimport silverwolf from 'lib/conditionals/character/SilverWolf';\nimport sparkle from \"lib/conditionals/character/Sparkle\";\nimport sushang from 'lib/conditionals/character/Sushang';\nimport tingyun from 'lib/conditionals/character/Tingyun';\nimport topaz from 'lib/conditionals/character/Topaz';\nimport welt from 'lib/conditionals/character/Welt';\nimport xueyi from 'lib/conditionals/character/Xueyi';\nimport yanqing from 'lib/conditionals/character/Yanqing';\nimport yukong from 'lib/conditionals/character/Yukong';\n\nexport const characterOptionMapping = {\n  1001: march7th,\n  1002: danheng,\n  1003: himeko,\n  1004: welt,\n  1005: kafka,\n  1006: silverwolf,\n  1008: arlan,\n  1009: asta,\n  1013: herta,\n  1101: bronya,\n  1102: seele,\n  1103: serval,\n  1104: gepard,\n  1105: natasha,\n  1106: pela,\n  1107: clara,\n  1108: sampo,\n  1109: hook,\n  1110: lynx,\n  1111: luka,\n  1112: topaz,\n  1201: qingque,\n  1202: tingyun,\n  1203: luocha,\n  1204: jingyuan,\n  1205: blade,\n  1206: sushang,\n  1207: yukong,\n  1208: fuxuan,\n  1209: yanqing,\n  1210: guinaifen,\n  1211: bailu,\n  1212: jingliu,\n  1213: imbibitorlunae, // Simplified stacking logic, revisit\n  1214: xueyi,\n  1215: hanya,\n  1217: huohuo,\n  1302: argenti,\n  1303: ruanmei,\n  1305: drratio,\n  1306: sparkle,\n  1307: blackswan,\n  1312: misha,\n  8001: physicaltrailblazer,\n  8002: physicaltrailblazer,\n  8003: firetrailblazer,\n  8004: firetrailblazer,\n}\n\nexport const CharacterConditionals = {\n  get: (request) => {\n    const characterFn = characterOptionMapping[request.characterId]\n    return characterFn(request.characterEidolon)\n  },\n  getDisplayForCharacter: (id, eidolon) => {\n    console.log('getDisplayForCharacter', id)\n    if (!id || !characterOptionMapping[id]) {\n      return (\n        <Flex justify='space-between' align='center'>\n          <HeaderText>Character passives</HeaderText>\n          <TooltipImage type={Hint.characterPassives()} />\n        </Flex>\n      )\n    }\n\n    const characterFn = characterOptionMapping[id]\n    const display = characterFn(eidolon).display();\n\n    return (\n      <Flex vertical gap={5} >\n        <Flex justify='space-between' align='center'>\n          <HeaderText>Character passives</HeaderText>\n          <TooltipImage type={Hint.characterPassives()} />\n        </Flex>\n        {display}\n      </Flex>\n    )\n  },\n}","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport { ASHBLAZING_ATK_STACK, baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basic, calculateAshblazingSet, skill, talent, ult } from \"lib/conditionals/utils\";\nimport { Eidolon } from \"types/Character\";\n\nexport default (e: Eidolon) => {\n  const basicScaling = basic(e, 1.00, 1.10)\n  const skillScaling = skill(e, 0, 0)\n  const ultScaling = ult(e, 1.50, 1.62)\n  const fuaScaling = talent(e, 1.00, 1.10)\n\n  const hitMulti = ASHBLAZING_ATK_STACK * (1 * 1 / 1)\n\n  return {\n    display: () => (\n      <br />\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: () => {\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += fuaScaling\n\n      // Boost\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      const x = c.x\n\n      const { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n      x.FUA_DMG += (e >= 4) ? 0.30 * x[Stats.DEF] : 0\n    }\n  }\n}","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { baseComputedStatsObject } from 'lib/conditionals/constants';\nimport { basic, precisionRound, skill, talent, ult } from 'lib/conditionals/utils';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\n\nimport { Eidolon } from 'types/Character'\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { Form } from 'types/Form';\n\n// TODO: missing A4 SPD buff\nexport default (e: Eidolon) => {\n  const extraPenValue = talent(e, 0.36, 0.396)\n\n  const basicScaling = basic(e, 1.00, 1.10)\n  const skillScaling = skill(e, 2.60, 2.86)\n  const ultScaling = ult(e, 4.00, 4.32)\n  const ultExtraScaling = ult(e, 1.20, 1.296)\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'talentPenBuff',\n    name: 'talentPenBuff',\n    text: 'Talent RES PEN buff',\n    title: 'Talent RES PEN buff',\n    content: `When Dan Heng is the target of an ally's Ability, his next attack's Wind RES PEN increases by ${precisionRound(extraPenValue * 100)}%.`\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'enemySlowed',\n    name: 'enemySlowed',\n    text: 'Enemy slowed',\n    title: 'Enemy slowed',\n    content: `Basic ATK deals 40% more damage to Slowed enemies.`\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      talentPenBuff: true,\n      enemySlowed: true,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CR] += (e >= 1 && request.enemyHpPercent >= 0.50) ? 0.12 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.ULT_SCALING += (r.enemySlowed) ? ultExtraScaling : 0\n\n      // Boost\n      x.BASIC_BOOST += (r.enemySlowed) ? 0.40 : 0\n      x.RES_PEN += (r.talentPenBuff) ? extraPenValue : 0\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional) => {\n      const x = c['x'];\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { ASHBLAZING_ATK_STACK, baseComputedStatsObject } from 'lib/conditionals/constants';\nimport { basicRev, calculateAshblazingSet, precisionRound, skillRev, talentRev, ultRev } from 'lib/conditionals/utils';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\n\nimport { Eidolon } from 'types/Character'\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { Form } from 'types/Form';\n\nexport default(e: Eidolon) => {\n  const basicScaling = basicRev(e, 1.00, 1.10)\n  const skillScaling = skillRev(e, 2.00, 2.20)\n  const ultScaling = ultRev(e, 2.30, 2.484)\n  const fuaScaling = talentRev(e, 1.40, 1.54)\n  const dotScaling = 0.30\n\n  const hitMultiByTargets = {\n    1: ASHBLAZING_ATK_STACK * (1 * 0.20 + 2 * 0.20 + 3 * 0.20 + 4 * 0.40), // 0.168\n    3: ASHBLAZING_ATK_STACK * (2 * 0.20 + 5 * 0.20 + 8 * 0.20 + 8 * 0.40), // 0.372\n    5: ASHBLAZING_ATK_STACK * (3 * 0.20 + 8 * 0.20 + 8 * 0.20 + 8 * 0.40), // 0.42\n  }\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'targetBurned',\n    name: 'targetBurned',\n    text: 'Target burned',\n    title: 'Target burned',\n    content: `Skill deals 20% more DMG to enemies currently afflicted with Burn.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'selfCurrentHp80Percent',\n    name: 'selfCurrentHp80Percent',\n    text: 'Self HP ≥ 80%',\n    title: 'Self HP ≥ 80%',\n    content: `When current HP percentage is 80% or higher, CRIT Rate increases by 15%.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e1TalentSpdBuff',\n    name: 'e1TalentSpdBuff',\n    text: 'E1 SPD buff',\n    title: 'E1 SPD buff',\n    content: `E1: After Victory Rush is triggered, Himeko's SPD increases by 20% for 2 turns.`,\n    disabled: e < 1,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'e6UltExtraHits',\n    name: 'e6UltExtraHits',\n    text: 'E6 ult extra hits',\n    title: 'E6 ult extra hits',\n    content: `Ultimate deals DMG 2 extra times. Extra hits deals ${precisionRound(0.40 * 100)}% of the original DMG per hit.`,\n    min: 0,\n    max: 2,\n    disabled: e < 6,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      targetBurned: true,\n      selfCurrentHp80Percent: true,\n      e1TalentSpdBuff: true,\n      e6UltExtraHits: 2,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CR] += (r.selfCurrentHp80Percent) ? 0.15 : 0\n      x[Stats.SPD_P] += (e >= 1 && r.e1TalentSpdBuff) ? 0.20 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.ULT_SCALING += (e >= 6) ? r.e6UltExtraHits * ultScaling * 0.40 : 0\n      x.FUA_SCALING += fuaScaling\n      x.DOT_SCALING += dotScaling\n\n      // Boost\n      x.SKILL_BOOST += (r.targetBurned) ? 0.20 : 0\n      x.ELEMENTAL_DMG += (e >= 2 && request.enemyHpPercent <= 0.50) ? 0.15 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c:PrecomputedCharacterConditional, request:Form) => {\n      const x = c['x'];\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n\n      const hitMulti = hitMultiByTargets[request.enemyCount]\n      const { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n    }\n  }\n}\n","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { basicRev, precisionRound, skillRev, talentRev, ultRev } from '../utils';\nimport { baseComputedStatsObject } from '../constants';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\n\nimport { Eidolon } from 'types/Character';\nimport { Form } from 'types/Form';\n\nconst Welt = (e: Eidolon) => {\n  const skillExtraHitsMax = (e >= 6) ? 3 : 2\n\n  const basicScaling = basicRev(e, 1.00, 1.10);\n  const skillScaling = skillRev(e, 0.72, 0.792);\n  const ultScaling = ultRev(e, 1.50, 1.62);\n  const talentScaling = talentRev(e, 0.60, 0.66);\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'enemyDmgTakenDebuff',\n    name: 'enemyDmgTakenDebuff',\n    text: 'Enemy dmg taken debuff',\n    title: 'Retribution',\n    content: 'When using Ultimate, there is a 100% base chance to increase the DMG received by the targets by 12% for 2 turn(s).',\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'enemySlowed',\n    name: 'enemySlowed',\n    text: 'Enemy slowed',\n    title: 'Time Distortion',\n    content: `When hitting an enemy that is already Slowed, Welt deals Additional Imaginary DMG equal to ${precisionRound(talentScaling * 100)}% of his ATK to the enemy.`,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'skillExtraHits',\n    name: 'skillExtraHits',\n    text: 'Skill extra hits on target',\n    title: 'Edge of the Void',\n    content: `Deals Imaginary DMG equal to ${precisionRound(skillScaling * 100)}% of Welt's ATK to a single enemy and further deals DMG 2 extra times, with each time dealing Imaginary DMG equal to ${precisionRound(skillScaling * 100)}% of Welt's ATK to a random enemy.`,\n    min: 0,\n    max: skillExtraHitsMax,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e1EnhancedState',\n    name: 'e1EnhancedState',\n    text: 'E1 enhanced state',\n    title: 'E1 Legacy of Honor',\n    content: \"E1: After Welt uses his Ultimate, his abilities are enhanced. The next 2 time(s) he uses his Basic ATK or Skill, deals Additional DMG to the target equal to 50% of his Basic ATK's DMG multiplier or 80% of his Skill's DMG multiplier respectively.\",\n    disabled: (e < 1)\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      enemySlowed: true,\n      enemyDmgTakenDebuff: true,\n      skillExtraHits: skillExtraHitsMax,\n      e1EnhancedState: true,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject);\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      x.BASIC_SCALING += (r.enemySlowed) ? talentScaling : 0\n      x.SKILL_SCALING += (r.enemySlowed) ? talentScaling : 0\n      x.ULT_SCALING += (r.enemySlowed) ? talentScaling : 0\n\n      x.BASIC_SCALING += (e >= 1 && r.e1EnhancedState) ? 0.50 * basicScaling : 0\n      x.SKILL_SCALING += (e >= 1 && r.e1EnhancedState) ? 0.80 * skillScaling : 0\n\n      x.SKILL_SCALING += r.skillExtraHits * skillScaling\n\n      // Boost\n      x.ELEMENTAL_DMG += (request.enemyWeaknessBroken) ? 0.20 : 0\n      x.DMG_TAKEN_MULTI += (r.enemyDmgTakenDebuff) ? 0.12 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      const x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\nexport default Welt;","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport { ASHBLAZING_ATK_STACK, baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basic, calculateAshblazingSet, skill, talent, ult } from \"lib/conditionals/utils\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\n\nimport { Eidolon } from \"types/Character\";\n\nexport default (e: Eidolon) => {\n  const basicScaling = basic(e, 1.00, 1.10)\n  const skillScaling = skill(e, 1.60, 1.76)\n  const ultScaling = ult(e, 0.80, 0.864)\n  const fuaScaling = talent(e, 1.40, 1.596)\n  const dotScaling = ult(e, 2.90, 3.183)\n\n  const hitMulti = ASHBLAZING_ATK_STACK *\n    (1 * 0.15 + 2 * 0.15 + 3 * 0.15 + 4 * 0.15 + 5 * 0.15 + 6 * 0.25)\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'e1DotDmgReceivedDebuff',\n    name: 'e1DotDmgReceivedDebuff',\n    text: 'E1 DoT DMG debuff',\n    title: 'E1 DoT DMG debuff',\n    content: `E1: When the Talent triggers a follow-up attack, there is a 100% base chance to increase the DoT received by the target by 30% for 2 turn(s).`,\n    disabled: e < 1,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      e1DotDmgReceivedDebuff: true,\n    }),\n    precomputeEffects: (request) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += fuaScaling\n      x.DOT_SCALING += dotScaling\n\n      // Boost\n      x.DOT_VULNERABILITY += (e >= 1 && r.e1DotDmgReceivedDebuff) ? 0.30 : 0\n      x.DOT_BOOST += (e >= 2) ? 0.25 : 0\n      x.DOT_SCALING += (e >= 6) ? 1.56 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      const x = c.x\n\n      const { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n    }\n  }\n};","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport { baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basicRev, precisionRound, skillRev, ultRev } from \"lib/conditionals/utils\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { FormSliderWithPopover } from \"components/optimizerForm/conditionals/FormSlider\";\n\nimport { Eidolon } from \"types/Character\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\n\nconst SilverWolf = (e: Eidolon) => {\n  const skillResShredValue = skillRev(e, 0.10, 0.105);\n  const skillDefShredBufValue = skillRev(e, 0.08, 0.088);\n  const ultDefShredValue = ultRev(e, 0.45, 0.468);\n\n  const basicScaling = basicRev(e, 1.00, 1.10);\n  const skillScaling = skillRev(e, 1.96, 2.156);\n  const ultScaling = ultRev(e, 3.80, 4.104);\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'skillResShredDebuff',\n    name: 'skillResShredDebuff',\n    text: 'Skill RES shred',\n    title: 'Skill: Allow Changes? RES Shred',\n    content: `Decreases the target's All-Type RES of the enemy by ${precisionRound(skillResShredValue * 100)}% for 2 turn(s).\n    ::BR::If there are 3 or more debuff(s) affecting the enemy when the Skill is used, then the Skill decreases the enemy's All-Type RES by an additional 3%.`,\n  }, {\n    // TODO: should be talent\n    formItem: FormSwitchWithPopover,\n    id: 'skillDefShredDebuff',\n    name: 'skillDefShredDebuff',\n    text: 'Bug DEF shred',\n    title: 'Talent: Awaiting System Response... DEF shred',\n    content: `Silver Wolf's bug reduces the target's DEF by ${precisionRound(skillDefShredBufValue * 100)}% for 3 turn(s).`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'ultDefShredDebuff',\n    name: 'ultDefShredDebuff',\n    text: 'Ult DEF shred',\n    title: 'Ult: User Banned DEF shred',\n    content: `Decreases the target's DEF by ${precisionRound(ultDefShredValue * 100)}% for 3 turn(s).`,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'targetDebuffs',\n    name: 'targetDebuffs',\n    text: 'Target debuffs',\n    title: 'Target debuffs',\n    content: `\n      If there are 3 or more debuff(s) affecting the enemy when the Skill is used, then the Skill decreases the enemy's All-Type RES by an additional 3%.\n      ::BR::\n      E4: After using her Ultimate to attack enemies, deals Additional Quantum DMG equal to 20% of Silver Wolf's ATK for every debuff currently on the enemy target. This effect can be triggered for a maximum of 5 time(s) during each use of her Ultimate.\n      ::BR::\n      E6: For every debuff the target enemy has, the DMG dealt by Silver Wolf increases by 20%, up to a limit of 100%.\n    `,\n    min: 0,\n    max: 5,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      skillResShredDebuff: true,\n      skillDefShredDebuff: true,\n      ultDefShredDebuff: true,\n      targetDebuffs: 5,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.ULT_SCALING += (e >= 4) ? r.targetDebuffs * 0.20 : 0\n\n      // Boost\n      x.RES_PEN += (r.skillResShredDebuff) ? skillResShredValue : 0\n      x.RES_PEN += (r.skillResShredDebuff && r.targetDebuffs >= 3) ? 0.03 : 0\n      x.DEF_SHRED += (r.skillDefShredDebuff) ? skillDefShredBufValue : 0\n      x.DEF_SHRED += (r.ultDefShredDebuff) ? ultDefShredValue : 0\n      x.ELEMENTAL_DMG += (e >= 6) ? r.targetDebuffs * 0.20 : 0\n\n      return x;\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional) => {\n      const x = c['x'];\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\n\nexport default SilverWolf;","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { baseComputedStatsObject } from 'lib/conditionals/constants';\nimport { basic, precisionRound, skill, talent, ult } from 'lib/conditionals/utils';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\n\nimport { Eidolon } from 'types/Character'\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { Form } from 'types/Form';\n\nexport default (e: Eidolon) => {\n  const basicScaling = basic(e, 1.00, 1.10)\n  const skillScaling = skill(e, 2.40, 2.64)\n  const ultScaling = ult(e, 3.20, 3.456)\n\n  const talentMissingHpDmgBoostMax = talent(e, 0.72, 0.792)\n\n  const content = [{\n    formItem: FormSliderWithPopover,\n    id: 'selfCurrentHpPercent',\n    name: 'selfCurrentHpPercent',\n    text: 'Self current HP%',\n    title: 'Self current HP%',\n    content: `Increases Arlan's DMG for every percent of HP below his Max HP, up to a max of ${precisionRound(talentMissingHpDmgBoostMax * 100)}% more DMG.`,\n    min: 0.01,\n    max: 1.0,\n    percent: true,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      selfCurrentHpPercent: 1.00,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x.ELEMENTAL_DMG += Math.min(talentMissingHpDmgBoostMax, 1 - r.selfCurrentHpPercent)\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.SKILL_BOOST += (e >= 1 && r.selfCurrentHpPercent <= 0.50) ? 0.10 : 0\n      x.ULT_BOOST += (e >= 6 && r.selfCurrentHpPercent <= 0.50) ? 0.20 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional) => {\n      const x = c['x'];\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.FUA_DMG += 0\n    }\n  }\n}\n","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { baseComputedStatsObject } from 'lib/conditionals/constants';\nimport { basic, precisionRound, skill, talent, ult } from 'lib/conditionals/utils';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\n\nimport { Eidolon } from 'types/Character'\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { Form } from 'types/Form';\n\n\nexport default (e: Eidolon) => {\n  const ultSpdBuffValue = ult(e, 50, 52.8)\n  const talentStacksAtkBuff = talent(e, 0.14, 0.154)\n  const talentStacksDefBuff = 0.06\n  const skillExtraDmgHitsMax = (e >= 1) ? 5 : 4\n\n  const basicScaling = basic(e, 1.0, 1.1)\n  const skillScaling = skill(e, 0.50, 0.55)\n  const ultScaling = ult(e, 0, 0)\n  const dotScaling = basic(e, 0.50, 0.55)\n\n  const content = [{\n    formItem: FormSliderWithPopover,\n    id: 'skillExtraDmgHits',\n    name: 'skillExtraDmgHits',\n    text: 'Skill extra hits',\n    title: 'Skill extra hits',\n    content: `Deals 50% ATK DMG equal to a single enemy. Deals DMG for ${precisionRound(skillExtraDmgHitsMax)} extra times to a random enemy.`,\n    min: 0,\n    max: skillExtraDmgHitsMax,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'talentBuffStacks',\n    name: 'talentBuffStacks',\n    text: 'Talent ATK buff stacks',\n    title: 'Charging ATK buff stacks',\n    content: `Increases allies' ATK by ${precisionRound(talentStacksAtkBuff * 100)}% for every stack.`,\n    min: 0,\n    max: 5,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'ultSpdBuff',\n    name: 'ultSpdBuff',\n    text: 'Ult SPD buff active',\n    title: 'Ult SPD buff active',\n    content: `Increases SPD of all allies by ${precisionRound(ultSpdBuffValue)} for 2 turn(s).`,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      talentBuffStacks: 5,\n      skillExtraDmgHits: skillExtraDmgHitsMax,\n      ultSpdBuff: true\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (r.talentBuffStacks) * talentStacksAtkBuff\n      x[Stats.DEF_P] += (r.talentBuffStacks) * talentStacksDefBuff\n      x[Stats.ERR] += (e >= 4 && r.talentBuffStacks >= 2) ? 0.15 : 0\n      x[Stats.SPD] += (r.ultSpdBuff) ? ultSpdBuffValue : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.DOT_SCALING += dotScaling\n\n      // Boost\n      x.ELEMENTAL_DMG += 0.18\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional) => {\n      const x = c['x'];\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += 0\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n    }\n  }\n}","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { ASHBLAZING_ATK_STACK, baseComputedStatsObject } from 'lib/conditionals/constants';\nimport { basicRev, calculateAshblazingSet, precisionRound, skillRev, talentRev, ultRev } from 'lib/conditionals/utils';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\n\nimport { Eidolon } from 'types/Character'\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { Form } from 'types/Form';\n\n\nexport default (e: Eidolon) => {\n  const basicScaling = basicRev(e, 1.00, 1.10)\n  const skillScaling = skillRev(e, 1.00, 1.10)\n  const ultScaling = ultRev(e, 2.00, 2.16)\n  const fuaScaling = talentRev(e, 0.40, 0.43)\n\n  const hitMultiByTargets = {\n    1: ASHBLAZING_ATK_STACK * (1 * 1 / 1),\n    3: ASHBLAZING_ATK_STACK * (2 * 1 / 1),\n    5: ASHBLAZING_ATK_STACK * (3 * 1 / 1)\n  };\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'techniqueBuff',\n    name: 'techniqueBuff',\n    text: 'Technique buff',\n    title: 'Technique buff',\n    content: `Increases ATK by ${precisionRound(0.40 * 100)}% for 3 turns.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'targetFrozen',\n    name: 'targetFrozen',\n    text: 'Target frozen',\n    title: 'Target frozen',\n    content: `When Ultimate is used, deals ${precisionRound(0.20 * 100)}% more DMG to Frozen enemies.`,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'e2TalentCritStacks',\n    name: 'e2TalentCritStacks',\n    text: 'E2 talent CR stacks',\n    title: 'E2 talent CR stacks',\n    content: `E2: Increases CRIT Rate by 3% per stack. Stacks up to 5 times.`,\n    min: 0,\n    max: 5,\n    disabled: e < 2,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e6UltAtkBuff',\n    name: 'e6UltAtkBuff',\n    text: 'E6 ult ATK buff',\n    title: 'E6 ult ATK buff',\n    content: `E6: After Ult, increases ATK by ${precisionRound(0.25 * 100)}% for 1 turn.`,\n    disabled: e < 6,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      techniqueBuff: true,\n      targetFrozen: true,\n      e2TalentCritStacks: 5,\n      e6UltAtkBuff: true,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (r.techniqueBuff) ? 0.40 : 0\n      x[Stats.CR] += (e >= 2) ? r.e2TalentCritStacks * 0.03 : 0\n      x[Stats.ATK_P] += (e >= 6 && r.e6UltAtkBuff) ? 0.25 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.BASIC_SCALING += (e >= 1 && request.enemyHpPercent <= 0.50) ? 0.40 : 0\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += fuaScaling\n\n      x.SKILL_BOOST += (request.enemyHpPercent >= 0.50) ? 0.45 : 0\n\n      // Boost\n      x.ULT_BOOST += (r.targetFrozen) ? 0.20 : 0\n      x.FUA_BOOST += (e >= 4) ? 0.10 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional, request: Form) => {\n      const x = c['x'];\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n\n      const hitMulti = hitMultiByTargets[request.enemyCount]\n      const { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n    }\n  }\n}\n","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { ASHBLAZING_ATK_STACK, baseComputedStatsObject } from 'lib/conditionals/constants';\nimport { basicRev, calculateAshblazingSet, precisionRound, skillRev, ultRev } from 'lib/conditionals/utils';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\n\nimport { Eidolon } from 'types/Character'\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { Form } from 'types/Form';\n\n\nexport default (e: Eidolon) => {\n  const skillDmgBoostValue = skillRev(e, 0.66, 0.726);\n  const ultAtkBoostValue = ultRev(e, 0.55, 0.594);\n  const ultCdBoostValue = ultRev(e, 0.16, 0.168);\n  const ultCdBoostBaseValue = ultRev(e, 0.20, 0.216);\n\n  const basicScaling = basicRev(e, 1.0, 1.1);\n  const fuaScaling = basicScaling * 0.80\n\n  const hitMulti = ASHBLAZING_ATK_STACK * (1 * 1 / 1);\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'techniqueBuff',\n    name: 'techniqueBuff',\n    text: 'Technique buff',\n    title: 'Technique buff',\n    content: `Increases all allies' ATK by ${precisionRound(0.15 * 100)}% for 2 turns at the start of the battle.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'battleStartDefBuff',\n    name: 'battleStartDefBuff',\n    text: 'Battle start DEF buff',\n    title: 'Battle start DEF buff',\n    content: `Increases all allies' DEF by ${precisionRound(0.20 * 100)}% for 2 turns at the start of the battle.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'skillBuff',\n    name: 'skillBuff',\n    text: 'Skill buff',\n    title: 'Skill buff',\n    content: `Increases DMG by ${precisionRound(skillDmgBoostValue * 100)}%.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'ultBuff',\n    name: 'ultBuff',\n    text: 'Ult buff',\n    title: 'Ult buff',\n    content: `Increases the ATK of all allies by ${precisionRound(ultAtkBoostValue * 100)}% and CRIT DMG by ${precisionRound(ultCdBoostValue * 100)}% of Bronya's CRIT DMG plus ${precisionRound(ultCdBoostBaseValue * 100)}% for 2 turns.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e2SkillSpdBuff',\n    name: 'e2SkillSpdBuff',\n    text: 'E2 skill SPD buff',\n    title: 'E2 skill SPD buff',\n    content: `E2: When using Skill, the target ally's SPD increases by ${precisionRound(0.30 * 100)}% after taking action, lasting for 1 turn.`,\n    disabled: e < 2,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      techniqueBuff: true,\n      battleStartDefBuff: true,\n      skillBuff: true,\n      ultBuff: true,\n      e2SkillSpdBuff: false,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.DEF_P] += (r.battleStartDefBuff) ? 0.20 : 0\n      x[Stats.SPD_P] += (r.e2SkillSpdBuff) ? 0.30 : 0\n      x[Stats.ATK_P] += (r.techniqueBuff) ? 0.15 : 0\n      x[Stats.ATK_P] += (r.ultBuff) ? ultAtkBoostValue : 0\n      x.BASIC_CR_BOOST += 1.00\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.FUA_SCALING += (e >= 4) ? fuaScaling : 0\n\n      // Boost\n      x.ELEMENTAL_DMG += 0.10\n      x.ELEMENTAL_DMG += (r.skillBuff) ? skillDmgBoostValue : 0\n\n      return x\n    },\n    calculateBaseMultis: (c:PrecomputedCharacterConditional, request:Form) => {\n      const r = request.characterConditionals\n      const x = c['x'];\n\n      // Order matters?\n      x[Stats.CD] += (r.ultBuff) ? ultCdBoostValue * x[Stats.CD] : 0\n      x[Stats.CD] += (r.ultBuff) ? ultCdBoostBaseValue : 0\n\n      const { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n    }\n  }\n}","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport { baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basicRev, precisionRound, skillRev, talentRev, ultRev } from \"lib/conditionals/utils\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { FormSliderWithPopover } from \"components/optimizerForm/conditionals/FormSlider\";\n\nimport { Eidolon } from \"types/Character\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\n\nconst Seele = (e: Eidolon) => {\n  const buffedStateDmgBuff = talentRev(e, 0.80, 0.88);\n  const speedBoostStacksMax = (e >= 2 ? 2 : 1);\n\n  const basicScaling = basicRev(e, 1.00, 1.10);\n  const skillScaling = skillRev(e, 2.20, 2.42);\n  const ultScaling = ultRev(e, 4.25, 4.59);\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'buffedState',\n    name: 'buffedState',\n    text: 'Buffed State',\n    title: 'Buffed State',\n    content: `\n      Enters the buffed state upon defeating an enemy with Basic ATK, Skill, or Ultimate, and receives an extra turn. While in the buffed state, the DMG of Seele's attacks increases by ${precisionRound(buffedStateDmgBuff * 100)}% for 1 turn(s).\n      ::BR::\n      While Seele is in the buffed state, her Quantum RES PEN increases by 20%.\n    `,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'speedBoostStacks',\n    name: 'speedBoostStacks',\n    text: 'Speed boost stacks',\n    title: 'Speed boost stacks',\n    content: `Increases SPD by 25% per stack. Stacks up to ${precisionRound(speedBoostStacksMax)} time(s).`,\n    min: 0,\n    max: speedBoostStacksMax,\n  \n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e6UltTargetDebuff',\n    name: 'e6UltTargetDebuff',\n    text: 'E6 Ult Debuff',\n    title: 'E6 Shattering Shambles',\n    content: `E6: After Seele uses her Ultimate, inflict the target enemy with Butterfly Flurry for 1 turn(s). \n    Enemies suffering from Butterfly Flurry will take Additional Quantum DMG equal to 15% of Seele's Ultimate DMG every time they are attacked.`,\n    disabled: e < 6,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      buffedState: true,\n      speedBoostStacks: speedBoostStacksMax,\n      e6UltTargetDebuff: true\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals;\n      const x = Object.assign({}, baseComputedStatsObject);\n\n      // Stats\n      x[Stats.CR] += (e >= 1 && request.enemyHpPercent <= 0.80) ? 0.15 : 0;\n      x[Stats.SPD_P] += 0.25 * r.speedBoostStacks;\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling;\n      x.SKILL_SCALING += skillScaling;\n      x.ULT_SCALING += ultScaling;\n\n      // Boost\n      x.ELEMENTAL_DMG += (r.buffedState) ? buffedStateDmgBuff : 0;\n      x.RES_PEN += (r.buffedState) ? 0.20 : 0;\n\n      return x;\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.characterConditionals;\n      const x = c['x'];\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK];\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK];\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK];\n\n      x.BASIC_DMG += (e >= 6 && r.e6UltTargetDebuff) ? 0.15 * x.ULT_DMG : 0;\n      x.SKILL_DMG += (e >= 6 && r.e6UltTargetDebuff) ? 0.15 * x.ULT_DMG : 0;\n      x.ULT_DMG += (e >= 6 && r.e6UltTargetDebuff) ? 0.15 * x.ULT_DMG : 0;\n    }\n  }\n};\nexport default Seele;","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport { baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basicRev, precisionRound, skillRev, talentRev, ultRev } from \"lib/conditionals/utils\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\n\nimport { Eidolon } from \"types/Character\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\n\nconst Serval = (e:Eidolon) => {\n  const talentExtraDmgScaling = talentRev(e, 0.72, 0.792);\n\n  const basicScaling = basicRev(e, 1.00, 1.10);\n  const skillScaling = skillRev(e, 1.40, 1.54);\n  const ultScaling = ultRev(e, 1.80, 1.944);\n  const dotScaling = skillRev(e, 1.04, 1.144);\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'targetShocked',\n    name: 'targetShocked',\n    text: 'Target shocked',\n    title: 'Target shocked',\n    content: `After Serval attacks, deals Additional Lightning DMG equal to ${precisionRound(talentExtraDmgScaling * 100)}% of Serval's ATK to all Shocked enemies.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'enemyDefeatedBuff',\n    name: 'enemyDefeatedBuff',\n    text: 'Enemy defeated buff',\n    title: 'Enemy defeated buff',\n    content: `Upon defeating an enemy, ATK increases by 20% for 2 turn(s).`,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      targetShocked: true,\n      enemyDefeatedBuff: true,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals;\n      const x = Object.assign({}, baseComputedStatsObject);\n\n      // Stats\n      x[Stats.ATK_P] += (r.enemyDefeatedBuff) ? 0.20 : 0;\n\n      // Scaling;\n      x.BASIC_SCALING += basicScaling;\n      x.SKILL_SCALING += skillScaling;\n      x.ULT_SCALING += ultScaling;\n      x.DOT_SCALING += dotScaling;\n\n      x.BASIC_SCALING += (r.targetShocked) ? talentExtraDmgScaling : 0;\n      x.SKILL_SCALING += (r.targetShocked) ? talentExtraDmgScaling : 0;\n      x.ULT_SCALING += (r.targetShocked) ? talentExtraDmgScaling : 0;\n\n      // Boost\n      x.ELEMENTAL_DMG += (e >= 6 && r.targetShocked) ? 0.30 : 0;\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional) => {\n      const x = c['x'];\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK];\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK];\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK];\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK];\n    }\n  }\n};\nexport default Serval;","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { baseComputedStatsObject } from 'lib/conditionals/constants';\nimport { basic, skill, ult } from 'lib/conditionals/utils';\nimport { Eidolon } from 'types/Character'\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\n\nexport default (e: Eidolon) => {\n  const basicScaling = basic(e, 1.00, 1.10)\n  const skillScaling = skill(e, 2.00, 2.20)\n  const ultScaling = ult(e, 0, 0)\n\n  return {\n    display: () => <br />,\n    defaults: () => ({\n    }),\n    precomputeEffects: () => {\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.RES] += 0.20\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional) => {\n      const x = c['x'];\n\n      x[Stats.ATK] += 0.35 * x[Stats.DEF]\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n    }\n  }\n}\n","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport { baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basic, skill, ult } from \"lib/conditionals/utils\";\n\nexport default (e) => {\n  const basicScaling = basic(e, 1.00, 1.10)\n  const skillScaling = skill(e, 0, 0)\n  const ultScaling = ult(e, 0, 0)\n\n  return {\n    display: () => (\n      <br />\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: () => {\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      const x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.BASIC_DMG += (e >= 6) ? 0.40 * x[Stats.HP] : 0\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport { baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basic, precisionRound, skill, ult } from \"lib/conditionals/utils\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\n\nimport { Eidolon } from \"types/Character\";\n\nconst Pela = (e: Eidolon) => {\n  const ultDefPenValue = ult(e, 0.40, 0.42);\n\n  const basicScaling = basic(e, 1.00, 1.10);\n  const skillScaling = skill(e, 2.10, 2.31);\n  const ultScaling = ult(e, 1.00, 1.08);\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'enemyDebuffed',\n    name: 'enemyDebuffed',\n    text: 'Enemy debuffed',\n    title: 'Enemy debuffed',\n    content: `Deals 20% more DMG to debuffed enemies.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'skillRemovedBuff',\n    name: 'skillRemovedBuff',\n    text: 'Enemy buff removed skill buff',\n    title: 'Enemy buff removed skill buff',\n    content: `Using Skill to remove buff(s) increases the DMG of Pela's next attack by 20%.\n    ::BR::\n    E2: Using Skill to remove buff(s) increases SPD by 10% for 2 turn(s).`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'ultDefPenDebuff',\n    name: 'ultDefPenDebuff',\n    text: 'Ult DEF shred debuff',\n    title: 'Ult DEF shred debuff',\n    content: `When Exposed, enemies' DEF is reduced by ${precisionRound(ultDefPenValue * 100)}% for 2 turn(s).`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e4SkillResShred',\n    name: 'e4SkillResShred',\n    text: 'E4 skill RES shred',\n    title: 'E4 skill RES shred',\n    content: `E4: When using Skill, there is a 100% base chance to reduce the target enemy's Ice RES by 12% for 2 turn(s).`,\n    disabled: e < 4,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      enemyDebuffed: true,\n      skillRemovedBuff: true,\n      ultDefPenDebuff: true,\n      e4SkillResShred: true,\n    }),\n    precomputeEffects: (request) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject);\n\n      // Stats\n      x[Stats.EHR] += 0.10\n      x[Stats.SPD_P] += (e >= 2 && r.skillRemovedBuff) ? 0.10 : 0\n      x[Stats.SPD_P] += (e >= 2 && r.skillRemovedBuff) ? 0.10 : 0\n      x[Stats.SPD_P] += (e >= 2 && r.skillRemovedBuff) ? 0.10 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.BASIC_BOOST += (r.skillRemovedBuff) ? 0.20 : 0\n      x.SKILL_BOOST += (r.skillRemovedBuff) ? 0.20 : 0\n      x.ULT_BOOST += (r.skillRemovedBuff) ? 0.20 : 0\n\n      x.RES_PEN += (e >= 4 && r.e4SkillResShred) ? 0.12 : 0\n      x.DEF_SHRED += (r.ultDefPenDebuff) ? ultDefPenValue : 0\n\n      x.ELEMENTAL_DMG += (r.enemyDebuffed) ? 0.20 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      const x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n\n      x.BASIC_DMG += (e >= 6) ? 0.40 * x[Stats.ATK] : 0\n      x.SKILL_DMG += (e >= 6) ? 0.40 * x[Stats.ATK] : 0\n      x.ULT_DMG += (e >= 6) ? 0.40 * x[Stats.ATK] : 0\n    }\n  }\n};\nexport default Pela;","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { ASHBLAZING_ATK_STACK, baseComputedStatsObject } from 'lib/conditionals/constants';\nimport { basic, calculateAshblazingSet, precisionRound, skill, talent, ult } from 'lib/conditionals/utils';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\n\nimport { Eidolon } from 'types/Character'\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { Form } from 'types/Form';\n\nexport default (e: Eidolon) => {\n  const ultDmgReductionValue = ult(e, 0.25, 0.27)\n  const ultFuaExtraScaling = ult(e, 1.60, 1.728)\n\n  const basicScaling = basic(e, 1.00, 1.10)\n  const skillScaling = skill(e, 1.20, 1.32)\n  const fuaScaling = talent(e, 1.60, 1.76)\n\n  const hitMultiByTargetsBlast = {\n    1: ASHBLAZING_ATK_STACK * (1 * 1 / 1),\n    3: ASHBLAZING_ATK_STACK * (2 * 1 / 1),\n    5: ASHBLAZING_ATK_STACK * (2 * 1 / 1) // Clara is 1 hit blast when enhanced\n  }\n\n  const hitMultiSingle = ASHBLAZING_ATK_STACK * (1 * 1 / 1);\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'ultBuff',\n    name: 'ultBuff',\n    text: 'Ult buff',\n    title: 'Ult buff',\n    content: `Increases Svarog Counter DMG by ${precisionRound(ultFuaExtraScaling * 100)}% during Ultimate. DMG dealt to Clara is reduced by an extra ${precisionRound(ultDmgReductionValue * 100)}% for 2 turns`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'talentEnemyMarked',\n    name: 'talentEnemyMarked',\n    text: 'Enemy marked',\n    title: 'Enemy marked',\n    content: `Additionally deals Physical DMG equal to ${precisionRound(skillScaling * 100)}% of Clara's ATK to enemies marked by Svarog with a Mark of Counter.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e2UltAtkBuff',\n    name: 'e2UltAtkBuff',\n    text: 'E2 ult ATK buff',\n    title: 'E2 ult ATK buff',\n    content: `E2: After using Ultimate, increases ATK by ${precisionRound(0.30 * 100)}% for 2 turns.`,\n    disabled: e < 2,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e4DmgReductionBuff',\n    name: 'e4DmgReductionBuff',\n    text: 'E4 DMG reduction buff',\n    title: 'E4 DMG reduction buff',\n    content: `E4: Decreases DMG taken by ${precisionRound(0.30 * 100)}%.`,\n    disabled: e < 4,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      ultBuff: true,\n      talentEnemyMarked: true,\n      e2UltAtkBuff: true,\n      e4DmgReductionBuff: true,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (e >= 2 && r.e2UltAtkBuff) ? 0.30 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.SKILL_SCALING += r.talentEnemyMarked ? skillScaling : 0\n\n      x.FUA_SCALING += fuaScaling\n      x.FUA_SCALING += r.ultBuff ? ultFuaExtraScaling : 0\n\n      // Boost\n      x.DMG_RED_MULTI *= (1 - 0.10)\n      x.DMG_RED_MULTI *= r.ultBuff ? (1 - ultDmgReductionValue) : 1\n      x.DMG_RED_MULTI *= (e >= 4 && r.e4DmgReductionBuff) ? (1 - 0.30) : 1\n      x.FUA_BOOST += 0.30\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.characterConditionals\n      const x = c['x'];\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n\n      // Calc ashblazing: ult buff -> blast, unbuffed -> single\n      if (r.ultBuff) {\n        const { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMultiByTargetsBlast[request.enemyCount])\n        x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n      } else {\n        const { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMultiSingle)\n        x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n      }\n    }\n  }\n}\n","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport { baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basicRev, precisionRound, skillRev, talentRev, ultRev } from \"lib/conditionals/utils\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { FormSliderWithPopover } from \"components/optimizerForm/conditionals/FormSlider\";\n\nimport { Eidolon } from \"types/Character\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\n\nconst Sampo = (e:Eidolon) => {\n  const dotVulnerabilityValue = ultRev(e, 0.30, 0.32);\n\n  const basicScaling = basicRev(e, 1.00, 1.10);\n  const skillScaling = skillRev(e, 0.56, 0.616);\n  const ultScaling = ultRev(e, 1.60, 1.728);\n  const dotScaling = talentRev(e, 0.52, 0.572);\n\n  const maxExtraHits = e < 1 ? 4 : 5;\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'targetDotTakenDebuff',\n    name: 'targetDotTakenDebuff',\n    text: 'Ult DoT taken debuff',\n    title: 'Ult Dot taken debuff',\n    content: `When debuffed by Sampo's Ultimate, increase the targets' DoT taken by ${precisionRound(dotVulnerabilityValue * 100)}% for 2 turn(s).`,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'skillExtraHits',\n    name: 'skillExtraHits',\n    text: 'Skill extra hits',\n    title: 'Skill extra hits',\n    content: `\n      Number of extra hits from Skill.\n      `,\n    min: 1,\n    max: maxExtraHits,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'targetWindShear',\n    name: 'targetWindShear',\n    text: 'Target has wind shear',\n    title: 'Target has wind shear',\n    content: `Enemies with Wind Shear effect deal 15% less damage to Sampo.`,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      targetDotTakenDebuff: true,\n      skillExtraHits: maxExtraHits,\n      targetWindShear: true\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.SKILL_SCALING += (r.skillExtraHits) * skillScaling\n      x.ULT_SCALING += ultScaling\n      x.DOT_SCALING += dotScaling\n      x.DOT_SCALING += (e >= 6) ? 0.15 : 0\n\n      // Boost\n      x.DOT_VULNERABILITY += (r.targetDotTakenDebuff) ? dotVulnerabilityValue : 0\n      x.DMG_RED_MULTI *= (r.targetWindShear) ? (1 - 0.15) : 1\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional) => {\n      const x = c['x'];\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nexport default Sampo;","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport { baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basicRev, precisionRound, skillRev, talentRev, ultRev } from \"lib/conditionals/utils\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\n\nimport { Eidolon } from \"types/Character\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\n\nexport default (e: Eidolon) => {\n  const targetBurnedExtraScaling = talentRev(e, 1.00, 1.10);\n\n  const basicScaling = basicRev(e, 1.00, 1.10);\n  const skillScaling = skillRev(e, 2.40, 2.64);\n  const skillEnhancedScaling = skillRev(e, 2.80, 3.08);\n  const ultScaling = ultRev(e, 4.00, 4.32);\n  const dotScaling = skillRev(e, 0.65, 0.715);\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'enhancedSkill',\n    name: 'enhancedSkill',\n    text: 'Enhanced skill',\n    title: 'Enhanced skill',\n    content: `After using Ultimate, the next Skill to be used is Enhanced. Enhanced Skill deals Fire DMG equal to ${precisionRound(skillEnhancedScaling * 100)}% of Hook's ATK to a single enemy and reduced DMG to adjacent enemies.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'targetBurned',\n    name: 'targetBurned',\n    text: 'Target burned',\n    title: 'Target burned',\n    content: `When attacking a target afflicted with Burn, deals Additional Fire DMG equal to ${precisionRound(targetBurnedExtraScaling * 100)}% of Hook's ATK.`,\n  }];\n\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      enhancedSkill: true,\n      targetBurned: true,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += (r.enhancedSkill) ? skillEnhancedScaling : skillScaling\n      x.ULT_SCALING += ultScaling\n      x.BASIC_SCALING += (r.targetBurned) ? targetBurnedExtraScaling : 0\n      x.SKILL_SCALING += (r.targetBurned) ? targetBurnedExtraScaling : 0\n      x.ULT_SCALING += (r.targetBurned) ? targetBurnedExtraScaling : 0\n      x.DOT_SCALING += dotScaling\n\n      // Boost\n      x.SKILL_BOOST += (e >= 1 && r.enhancedSkill) ? 0.20 : 0\n      x.ELEMENTAL_DMG += (e >= 6 && r.targetBurned) ? 0.20 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional) => {\n      const x = c['x'];\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n    }\n  }\n}","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport { baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basicRev, precisionRound, skillRev, ultRev } from \"lib/conditionals/utils\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\n\nimport { Eidolon } from \"types/Character\";\n\nexport default (e: Eidolon) => {\n  const skillHpPercentBuff = skillRev(e, 0.075, 0.08);\n  const skillHpFlatBuff = skillRev(e, 200, 223);\n\n  const basicScaling = basicRev(e, 0.50, 0.55);\n  const skillScaling = skillRev(e, 0, 0);\n  const ultScaling = ultRev(e, 0, 0);\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'skillBuff',\n    name: 'skillBuff',\n    text: 'Skill max HP buff',\n    title: 'Skill max HP buff',\n    content: `\n    Applies \"Survival Response\" to a single target ally and increases their Max HP by ${precisionRound(skillHpPercentBuff * 100)}% of Lynx's Max HP plus ${precisionRound(skillHpFlatBuff)}.\n    ::BR::E4: When \"Survival Response\" is gained, increases the target's ATK by an amount equal to 3% of Lynx's Max HP for 1 turn(s).`,\n  }]\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      skillBuff: true,\n      e4TalentAtkBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.HP_P] += (r.skillBuff) ? skillHpPercentBuff : 0\n      x[Stats.HP] += (r.skillBuff) ? skillHpFlatBuff : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      const r = request.characterConditionals\n      const x = c.x\n\n      x[Stats.HP] += (e >= 6 && r.skillBuff) ? 0.06 * x[Stats.HP] : 0\n      x[Stats.ATK] += (e >= 4 && r.skillBuff) ? 0.03 * x[Stats.HP] : 0\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.HP]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\n","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport { baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basicRev, precisionRound, skillRev, ultRev } from \"lib/conditionals/utils\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\n\nimport { Eidolon } from \"types/Character\";\nimport { FormSliderWithPopover } from \"components/optimizerForm/conditionals/FormSlider\";\n\nexport default function luka(e: Eidolon) {\n  const basicEnhancedHitValue = basicRev(e, 0.20, 0.22);\n  const targetUltDebuffDmgTakenValue = ultRev(e, 0.20, 0.216);\n\n  const basicScaling = basicRev(e, 1.00, 1.10);\n  const basicEnhancedScaling = basicRev(e, 0.20 * 3 + 0.80, 0.22 * 3 + 0.88);\n  const skillScaling = skillRev(e, 1.20, 1.32);\n  const ultScaling = ultRev(e, 3.30, 3.564);\n  const dotScaling = skillRev(e, 3.38, 3.718);\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'basicEnhanced',\n    name: 'basicEnhanced',\n    text: 'Basic enhanced',\n    title: 'Basic enhanced: Sky-Shatter Fist',\n    content: `Enhances Basic ATK to deal additional damage, and has a chance to trigger extra hits.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'targetUltDebuffed',\n    name: 'targetUltDebuffed',\n    text: 'Target ult debuffed',\n    title: 'Target ult debuffed',\n    content: `Increase the target's DMG received by ${precisionRound(targetUltDebuffDmgTakenValue * 100)}% for 3 turn(s)`,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'basicEnhancedExtraHits',\n    name: 'basicEnhancedExtraHits',\n    text: 'Enhanced basic extra hits',\n    title: 'Enhanced basic extra hits',\n    content: `Increases the number of hits of Basic Enhanced.`,\n    min: 0,\n    max: 3,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e1TargetBleeding',\n    name: 'e1TargetBleeding',\n    text: 'E1 target bleeding',\n    title: 'E1 target bleeding',\n    content: `E1: When Luka takes action, if the target enemy is Bleeding, increases DMG dealt by Luka by 15% for 2 turn(s).`,\n    disabled: e < 1,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'e4TalentStacks',\n    name: 'e4TalentStacks',\n    text: 'E4 talent stacks',\n    title: 'E4 talent stacks',\n    content: `E4: For every stack of Fighting Will obtained, increases ATK by 5%, stacking up to 4 time(s).`,\n    min: 0,\n    max: 4,\n    disabled: e < 4,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      basicEnhanced: true,\n      targetUltDebuffed: true,\n      e1TargetBleeding: true,\n      basicEnhancedExtraHits: 3,\n      e4TalentStacks: 4,\n    }),\n    precomputeEffects: (request) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (e >= 4) ? r.e4TalentStacks * 0.05 : 0\n\n      // Scaling\n      x.BASIC_SCALING += (r.basicEnhanced) ? basicEnhancedScaling : basicScaling\n      x.BASIC_SCALING += (r.basicEnhanced && r.basicEnhancedExtraHits) * basicEnhancedHitValue\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.DOT_SCALING += dotScaling\n\n      // Boost\n      x.DMG_TAKEN_MULTI += (r.targetUltDebuffed) ? targetUltDebuffDmgTakenValue : 0\n      x.ELEMENTAL_DMG += (e >= 1 && r.e1TargetBleeding) ? 0.15 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      const x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { ASHBLAZING_ATK_STACK, baseComputedStatsObject } from 'lib/conditionals/constants';\nimport { basic, calculateAshblazingSet, precisionRound, skill, talent, ult } from 'lib/conditionals/utils';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\n\nimport { Eidolon } from 'types/Character'\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { Form } from 'types/Form';\n\nconst Topaz = (e: Eidolon) => {\n  const proofOfDebtFuaVulnerability = skill(e, 0.50, 0.55)\n  const enhancedStateFuaScalingBoost = ult(e, 1.50, 1.65)\n  const enhancedStateFuaCdBoost = ult(e, 0.25, 0.275)\n\n  const basicScaling = basic(e, 1.00, 1.10)\n  const skillScaling = skill(e, 1.50, 1.65)\n  const fuaScaling = talent(e, 1.50, 1.65)\n\n  // 0.06\n  const basicHitCountMulti = ASHBLAZING_ATK_STACK *\n    (1 * 1 / 1)\n\n  // 0.18\n  const fuaHitCountMulti = ASHBLAZING_ATK_STACK *\n    (1 * 1 / 7 + 2 * 1 / 7 + 3 * 1 / 7 + 4 * 1 / 7 + 5 * 1 / 7 + 6 * 1 / 7 + 7 * 1 / 7)\n\n  // 0.252\n  const fuaEnhancedHitCountMulti = ASHBLAZING_ATK_STACK *\n    (1 * 1 / 10 + 2 * 1 / 10 + 3 * 1 / 10 + 4 * 1 / 10 + 5 * 1 / 10 + 6 * 1 / 10 + 7 * 1 / 10 + 8 * 3 / 10)\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'enemyProofOfDebtDebuff',\n    name: 'enemyProofOfDebtDebuff',\n    text: 'Enemy proof of debt debuff',\n    title: 'Proof of Debt',\n    content: `Inflicts a single target enemy with a Proof of Debt status, increasing the DMG it takes from follow-up attacks by ${precisionRound(proofOfDebtFuaVulnerability * 100)}%.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'numbyEnhancedState',\n    name: 'numbyEnhancedState',\n    text: 'Numby enhanced state',\n    title: 'Turn a Profit!: Ult Enhanced State',\n    content: `Numby enters the Windfall Bonanza! state and its DMG multiplier increases by ${precisionRound(enhancedStateFuaScalingBoost * 100)}% and CRIT DMG increases by ${precisionRound(enhancedStateFuaCdBoost * 100)}%.`,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'e1DebtorStacks',\n    name: 'e1DebtorStacks',\n    text: 'E1 Debtor stacks',\n    title: `E1 Increases Crit DMG`,\n    content: `E1: When enemies afflicted with Proof of Debt receive follow-up attacks, they will enter the Debtor state. This can take effect only once within a single action. The Debtor state increases the CRIT DMG of follow-up attacks inflicted on the target enemies by 25%, stacking up to 2 time(s). When Proof of Debt is removed, the Debtor state is also removed.`,\n    min: 0,\n    max: 2,\n    disabled: e < 1,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      enemyProofOfDebtDebuff: true,\n      numbyEnhancedState: true,\n      e1DebtorStacks: 2,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.SKILL_SCALING += (r.numbyEnhancedState) ? enhancedStateFuaScalingBoost : 0\n      x.FUA_SCALING += fuaScaling\n      x.FUA_SCALING += (r.numbyEnhancedState) ? enhancedStateFuaScalingBoost : 0\n\n      // Boost\n      x.FUA_VULNERABILITY += (r.enemyProofOfDebtDebuff) ? proofOfDebtFuaVulnerability : 0\n      x.ELEMENTAL_DMG += (request.enemyElementalWeak) ? 0.15 : 0\n      x.FUA_CD_BOOST += (e >= 1) ? 0.25 * r.e1DebtorStacks : 0\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.characterConditionals\n      const x = c['x'];\n\n      const hitMulti = (r.numbyEnhancedState) ? fuaEnhancedHitCountMulti : fuaHitCountMulti\n      const ashblazingFuaData = calculateAshblazingSet(c, request, hitMulti)\n      const ashblazingBasicData = calculateAshblazingSet(c, request, basicHitCountMulti)\n\n\n      x.BASIC_DMG += x.BASIC_SCALING * (x[Stats.ATK] - ashblazingBasicData.ashblazingAtk + ashblazingBasicData.ashblazingMulti)\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingFuaData.ashblazingAtk + ashblazingFuaData.ashblazingMulti)\n      x.SKILL_DMG = x.FUA_DMG\n\n      // Copy fua boosts to skill/basic\n      // BOOSTS get added, while vulnerability / def pen gets replaced (?)\n      x.SKILL_BOOST += x.FUA_BOOST\n      x.SKILL_CD_BOOST += x.FUA_CD_BOOST\n      x.SKILL_CR_BOOST += x.FUA_CR_BOOST\n      x.SKILL_VULNERABILITY = x.FUA_VULNERABILITY\n      x.SKILL_DEF_PEN = x.FUA_DEF_PEN\n      x.SKILL_RES_PEN = x.FUA_RES_PEN\n\n      x.BASIC_BOOST += x.FUA_BOOST\n      x.BASIC_CD_BOOST += x.FUA_CD_BOOST\n      x.BASIC_CR_BOOST += x.FUA_CR_BOOST\n      x.BASIC_VULNERABILITY = x.FUA_VULNERABILITY\n      x.BASIC_DEF_PEN = x.FUA_DEF_PEN\n      x.BASIC_RES_PEN = x.FUA_RES_PEN\n\n      // Her ult buff only applies to the skill/fua not basic\n      x.FUA_CD_BOOST += (r.numbyEnhancedState) ? enhancedStateFuaCdBoost : 0\n      x.SKILL_CD_BOOST += (r.numbyEnhancedState) ? enhancedStateFuaCdBoost : 0\n\n      // Her e6 only applies to skill/fua not basic\n      x.SKILL_RES_PEN += (e >= 6) ? 0.10 : 0\n      x.FUA_RES_PEN += (e >= 6) ? 0.10 : 0\n    }\n  }\n}\nexport default Topaz;","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport { ASHBLAZING_ATK_STACK, baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basic, calculateAshblazingSet, precisionRound, skill, talent, ult } from \"lib/conditionals/utils\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { FormSliderWithPopover } from \"components/optimizerForm/conditionals/FormSlider\";\n\nimport { Eidolon } from \"types/Character\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\n\nconst Qingque = (e: Eidolon) => {\n  const skillStackDmg = skill(e, 0.38, 0.408);\n  const talentAtkBuff = talent(e, 0.72, 0.792);\n\n  const basicScaling = basic(e, 1.00, 1.10);\n  const basicEnhancedScaling = basic(e, 2.40, 2.64);\n  const skillScaling = skill(e, 0, 0);\n  const ultScaling = ult(e, 2.00, 2.16);\n\n  const hitMultiByTargetsBlast = {\n    1: ASHBLAZING_ATK_STACK * (1 * 1 / 1), // 0.06\n    3: ASHBLAZING_ATK_STACK * (2 * 1 / 1), // 0.12\n    5: ASHBLAZING_ATK_STACK * (2 * 1 / 1)  // 0.12\n  };\n\n  const hitMultiSingle = ASHBLAZING_ATK_STACK * (1 * 1 / 1);\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'basicEnhanced',\n    name: 'basicEnhanced',\n    text: 'Basic enhanced',\n    title: 'Basic enhanced',\n    content: `Qingque's ATK increases by ${precisionRound(talentAtkBuff * 100)}%, and her Basic ATK \"Flower Pick\" is enhanced, becoming \"Cherry on Top!\"`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'basicEnhancedSpdBuff',\n    name: 'basicEnhancedSpdBuff',\n    text: 'Basic enhanced SPD buff',\n    title: 'Basic enhanced SPD buff',\n    content: `Qingque's SPD increases by 10% for 1 turn after using the Enhanced Basic ATK.`,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'skillDmgIncreaseStacks',\n    name: 'skillDmgIncreaseStacks',\n    text: 'Skill DMG stacks',\n    title: 'Skill DMG stacks',\n    content: `Immediately draws 2 jade tile(s) and increases DMG by ${precisionRound(skillStackDmg * 100)}% until the end of the current turn. This effect can stack up to 4 time(s).`,\n    min: 0,\n    max: 4,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      basicEnhanced: true,\n      basicEnhancedSpdBuff: true,\n      skillDmgIncreaseStacks: 4,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject);\n\n      // Stats\n      x[Stats.ATK_P] += (r.basicEnhanced) ? talentAtkBuff : 0\n      x[Stats.SPD_P] += (r.basicEnhancedSpdBuff) ? 0.10 : 0\n\n      // Scaling\n      x.BASIC_SCALING += (r.basicEnhanced) ? basicEnhancedScaling : basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += (e >= 4) ? x.BASIC_SCALING : 0\n\n      // Boost\n      x.ELEMENTAL_DMG += r.skillDmgIncreaseStacks * skillStackDmg\n      x.ULT_BOOST += (e >= 1) ? 0.10 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.characterConditionals;\n      const x = c['x'];\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK];\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK];\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK];\n\n      if (r.basicEnhanced) {\n        const hitMulti = hitMultiByTargetsBlast[request.enemyCount];\n        const { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti);\n        x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti);\n      } else {\n        const { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMultiSingle);\n        x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti);\n      }\n    }\n  }\n};\nexport default Qingque;","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport { baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basic, precisionRound, skill, ult, talent } from \"lib/conditionals/utils\";\nimport { Eidolon } from \"types/Character\";\n\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { Form } from \"types/Form\";\n\n\nconst Tingyun = (e: Eidolon) => {\n  const skillAtkBoostMax = skill(e, 0.25, 0.27);\n  const ultDmgBoost = ult(e, 0.50, 0.56);\n  const skillAtkBoostScaling = skill(e, 0.50, 0.55);\n  const skillLightningDmgBoostScaling = skill(e, 0.40, 0.44) + ((e >= 4) ? 0.20 : 0);\n  const talentScaling = talent(e, 0.60, 0.66) + ((e >= 4) ? 0.20 : 0);\n\n  const basicScaling = basic(e, 1.00, 1.10);\n  const skillScaling = skill(e, 0, 0);\n  const ultScaling = ult(e, 0, 0);\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'benedictionBuff',\n    name: 'benedictionBuff',\n    text: 'Benediction buff',\n    title: 'Benediction buff',\n    content: `Grants a single ally with Benediction to increase their ATK by ${precisionRound(skillAtkBoostScaling * 100)}%, up to ${precisionRound(skillAtkBoostMax * 100)}% of Tingyun's current ATK. When the ally with Benediction attacks, it deals lightning damage equal to ${precisionRound(skillLightningDmgBoostScaling * 100)}% of that ally's ATK. This effect lasts for 3 turns.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'skillSpdBuff',\n    name: 'skillSpdBuff',\n    text: 'Skill SPD buff',\n    title: 'Skill SPD buff',\n    content: `Tingyun's SPD increases by 20% for 1 turn after using Skill.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'ultDmgBuff',\n    name: 'ultDmgBuff',\n    text: 'Ult DMG buff',\n    title: 'Ult DMG buff',\n    content: `Regenerates 50 Energy for a single ally and increases the target's DMG by ${precisionRound(ultDmgBoost)}% for 2 turn(s).`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'ultSpdBuff',\n    name: 'ultSpdBuff',\n    text: 'E1 ult SPD buff',\n    title: 'E1 ult SPD buff',\n    content: `E1: After using their Ultimate, the ally with Benediction gains a 20% increase in SPD for 1 turn.`,\n    disabled: e < 1,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      benedictionBuff: false,\n      skillSpdBuff: false,\n      ultSpdBuff: false,\n      ultDmgBuff: false,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals;\n      const x = Object.assign({}, baseComputedStatsObject);\n\n      // Stats\n      x[Stats.SPD_P] += (e >= 1 && r.ultSpdBuff) ? 0.20 : 0\n      x[Stats.SPD_P] += (r.skillSpdBuff) ? 0.20 : 0\n      x[Stats.ATK_P] += (r.benedictionBuff) ? skillAtkBoostMax : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.BASIC_BOOST += 0.40\n      x.ELEMENTAL_DMG += (r.ultDmgBuff) ? ultDmgBoost : 0\n      x.BENEDICTION_LIGHTNING_DMG = (r.benedictionBuff) ? skillLightningDmgBoostScaling + talentScaling : 0\n\n      return x;\n    },\n    calculateBaseMultis: (c) => {\n      const x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK] + x.BENEDICTION_LIGHTNING_DMG * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\nexport default Tingyun;","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport { baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basic, calculateAshblazingSet, skill, talent, ult } from \"lib/conditionals/utils\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { FormSliderWithPopover } from \"components/optimizerForm/conditionals/FormSlider\";\n\nimport { Eidolon } from \"types/Character\";\n\nexport default (e: Eidolon) => {\n  const basicScaling = basic(e, 1.00, 1.10)\n  const skillScaling = skill(e, 1.00, 1.10)\n  const ultScaling = ult(e, 2.00, 2.16)\n  const fuaScaling = talent(e, 0.66, 0.726)\n\n  let hitMulti = 0\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'skillCritBuff',\n    name: 'skillCritBuff',\n    text: 'Skill CR buff',\n    title: 'Skill CR buff',\n    content: `After using Skill, CRIT Rate increases by 10% for 2 turns.`,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'talentHitsPerAction',\n    name: 'talentHitsPerAction',\n    text: 'Lightning Lord stacks',\n    title: 'Lightning Lord stacks',\n    content: `Lightning Lord hits-per-action stack up to 10 times.`,\n    min: 3,\n    max: 10,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'talentAttacks',\n    name: 'talentAttacks',\n    text: 'Lightning Lord hits on target',\n    title: 'Lightning Lord hits on target',\n    content: `Count of hits on target. Should usually be set to the same value as Lightning Lord Stacks.`,\n    min: 0,\n    max: 10,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e2DmgBuff',\n    name: 'e2DmgBuff',\n    text: 'E2 dmg buff',\n    title: 'E2 dmg buff',\n    content: `E2: After Lightning-Lord takes action, DMG caused by Jing Yuan's Basic ATK, Skill, and Ultimate increases by 20% for 2 turns.`,\n    disabled: e < 2,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'e6FuaVulnerabilityStacks',\n    name: 'e6FuaVulnerabilityStacks',\n    text: 'E6 vulnerable stacks',\n    title: 'E6 vulnerable stacks',\n    content: `E6: Each hit performed by the Lightning-Lord when it takes action will make the target enemy Vulnerable. While Vulnerable, enemies receive 12% more DMG until the end of the Lightning-Lord's current turn, stacking up to 3 time(s). (applies to all hits)`,\n    min: 0,\n    max: 3,\n    disabled: e < 6,\n  }];\n\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      skillCritBuff: true,\n      talentHitsPerAction: 10,\n      talentAttacks: 10,\n      e2DmgBuff: true,\n      e6FuaVulnerabilityStacks: 3\n    }),\n    precomputeEffects: (request) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      r.talentHitsPerAction = Math.max(r.talentHitsPerAction, r.talentAttacks)\n\n      // Stats\n      x[Stats.CR] += (r.skillCritBuff) ? 0.10 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += fuaScaling\n\n      // Boost\n      x.FUA_CD_BOOST += (r.talentHitsPerAction >= 6) ? 0.25 : 0\n      x.BASIC_BOOST += (e >= 2 && r.e2DmgBuff) ? 0.20 : 0\n      x.SKILL_BOOST += (e >= 2 && r.e2DmgBuff) ? 0.20 : 0\n      x.ULT_BOOST += (e >= 2 && r.e2DmgBuff) ? 0.20 : 0\n\n      x.FUA_VULNERABILITY += (e >= 6) ? r.e6FuaVulnerabilityStacks * 0.12 : 0\n\n      // Lightning lord calcs\n      const stacks = r.talentHitsPerAction\n      const hits = r.talentAttacks\n      const stacksPerMiss = (request.enemyCount >= 3) ? 2 : 0\n      const stacksPerHit = (request.enemyCount >= 3) ? 3 : 1\n      const stacksPreHit = (request.enemyCount >= 3) ? 2 : 1\n\n      // Calc stacks on miss\n      let ashblazingStacks = stacksPerMiss * (stacks - hits)\n\n      // Calc stacks on hit\n      ashblazingStacks += stacksPreHit\n      let atkBoostSum = 0\n      for (let i = 0; i < hits; i++) {\n        atkBoostSum += Math.min(8, ashblazingStacks) * (1 / hits)\n        ashblazingStacks += stacksPerHit\n      }\n\n      hitMulti = atkBoostSum * 0.06\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      const r = request.characterConditionals\n      const x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n\n      const { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n      x.FUA_DMG += x.FUA_SCALING * r.talentAttacks * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n    }\n  }\n}","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { ASHBLAZING_ATK_STACK, baseComputedStatsObject } from 'lib/conditionals/constants';\nimport { basicRev, calculateAshblazingSet, precisionRound, skillRev, talentRev, ultRev } from 'lib/conditionals/utils';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\n\nimport { Eidolon } from 'types/Character'\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { Form } from 'types/Form';\n\n\nexport default (e: Eidolon) => {\n  const enhancedStateDmgBoost = skillRev(e, 0.40, 0.456)\n  const hpPercentLostTotalMax = 0.90\n\n  const basicScaling = basicRev(e, 1.0, 1.1)\n  const basicEnhancedAtkScaling = skillRev(e, 0.40, 0.44)\n  const basicEnhancedHpScaling = skillRev(e, 1.00, 1.10)\n  const ultAtkScaling = ultRev(e, 0.40, 0.432)\n  const ultHpScaling = ultRev(e, 1.00, 1.08)\n  const ultLostHpScaling = ultRev(e, 1.00, 1.08)\n  const fuaAtkScaling = talentRev(e, 0.44, 0.484)\n  const fuaHpScaling = talentRev(e, 1.10, 1.21)\n\n  const hitMultiByTargets = {\n    1: ASHBLAZING_ATK_STACK * (1 * 0.33 + 2 * 0.33 + 3 * 0.34),\n    3: ASHBLAZING_ATK_STACK * (2 * 0.33 + 5 * 0.33 + 8 * 0.34),\n    5: ASHBLAZING_ATK_STACK * (3 * 0.33 + 8 * 0.33 + 8 * 0.34),\n  };\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'enhancedStateActive',\n    name: 'enhancedStateActive',\n    text: 'Hellscape state',\n    title: 'Hellscape state',\n    content: `\n      Increases DMG by ${precisionRound(enhancedStateDmgBoost * 100)}% and his Basic ATK Shard Sword is enhanced to Forest of Swords for 3 turn(s).\n      ::BR::\n      E2: Increases CRIT Rate by ${precisionRound(0.15 * 100)}%.\n    `,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'hpPercentLostTotal',\n    name: 'hpPercentLostTotal',\n    text: 'HP% lost total',\n    title: 'HP% lost total',\n    content: `Ultimate DMG scales off of the tally of Blade's HP loss in the current battle. \n    The tally of Blade's HP loss in the current battle is capped at ${precisionRound(hpPercentLostTotalMax * 100)}% of his Max HP.`,\n    min: 0,\n    max: hpPercentLostTotalMax,\n    percent: true,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'e4MaxHpIncreaseStacks',\n    name: 'e4MaxHpIncreaseStacks',\n    text: 'E4 max HP stacks',\n    title: 'E4 max HP stacks',\n    content: `E4: Increases HP by ${precisionRound(0.20 * 100)}%, stacks up to 2 times.`,\n    min: 0,\n    max: 2,\n    disabled: e < 4,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      enhancedStateActive: true,\n      hpPercentLostTotal: hpPercentLostTotalMax,\n      e4MaxHpIncreaseStacks: 2,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CR] += (e >= 2 && r.enhancedStateActive) ? 0.15 : 0\n      x[Stats.HP_P] += (e >= 4) ? r.e4MaxHpIncreaseStacks * 0.20 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      // Rest of the scalings are calculated dynamically\n\n      // Boost\n      x.ELEMENTAL_DMG += r.enhancedStateActive ? enhancedStateDmgBoost : 0\n      x.FUA_BOOST += 0.20\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.characterConditionals\n      const x = c['x'];\n\n      if (r.enhancedStateActive) {\n        x.BASIC_DMG += basicEnhancedAtkScaling * x[Stats.ATK]\n        x.BASIC_DMG += basicEnhancedHpScaling * x[Stats.HP]\n      } else {\n        x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      }\n\n      x.ULT_DMG += ultAtkScaling * x[Stats.ATK]\n      x.ULT_DMG += ultHpScaling * x[Stats.HP]\n      x.ULT_DMG += ultLostHpScaling * r.hpPercentLostTotal * x[Stats.HP]\n      x.ULT_DMG += (e >= 1 && request.enemyCount == 1) ? 1.50 * r.hpPercentLostTotal * x[Stats.HP] : 0\n\n      const hitMulti = hitMultiByTargets[request.enemyCount]\n      const { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n      x.FUA_DMG += fuaAtkScaling * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n\n      x.FUA_DMG += fuaHpScaling * x[Stats.HP]\n      x.FUA_DMG += (e >= 6) ? 0.50 * x[Stats.HP] : 0\n    }\n  }\n}\n","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport { baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basic, precisionRound, skill, talent, ult } from \"lib/conditionals/utils\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { FormSliderWithPopover } from \"components/optimizerForm/conditionals/FormSlider\";\n\nimport { Eidolon } from \"types/Character\";\n\nconst Sushang = (e: Eidolon) => {\n  const talentSpdBuffValue = talent(e, 0.20, 0.21);\n  const ultBuffedAtk = ult(e, 0.30, 0.324);\n  const talentSpdBuffStacksMax = (e >= 6) ? 2 : 1\n\n  const basicScaling = basic(e, 1.00, 1.10);\n  const skillScaling = skill(e, 2.10, 2.31);\n  const skillExtraHitScaling = skill(e, 1.00, 1.10);\n  const ultScaling = ult(e, 3.20, 3.456);\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'ultBuffedState',\n    name: 'ultBuffedState',\n    text: 'Ult buffed state',\n    title: 'Ult buffed state',\n    content: `Sushang's ATK increases by ${precisionRound(ultBuffedAtk * 100)}% and using her Skill has 2 extra chances to trigger Sword Stance for 2 turn(s).\n    Sword Stance triggered from the extra chances deals 50% of the original DMG.`,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'skillExtraHits',\n    name: 'skillExtraHits',\n    text: 'Skill extra hits',\n    title: 'Skill extra hits',\n    content: `Increases the number of Sword Stance extra hits of the Skill.`,\n    min: 0,\n    max: 3,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'skillTriggerStacks',\n    name: 'skillTriggerStacks',\n    text: 'Skill trigger stacks',\n    title: 'Skill trigger stacks',\n    content: `For every Sword Stance triggered, the DMG dealt by Sword Stance increases by 2.5%. Stacks up to 10 time(s).`,\n    min: 0,\n    max: 10,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'talentSpdBuffStacks',\n    name: 'talentSpdBuffStacks',\n    text: 'Talent SPD buff stacks',\n    title: 'Talent SPD buff stacks',\n    content: `When an enemy has their Weakness Broken on the field, Sushang's SPD increases by ${precisionRound(talentSpdBuffValue * 100)}% per stack for 2 turn(s).\n    ::BR::\n    E6: Talent's SPD Boost is stackable and can stack up to 2 times.`,\n    min: 0,\n    max: talentSpdBuffStacksMax,\n  },\n  {\n    formItem: FormSwitchWithPopover,\n    id: 'e2DmgReductionBuff',\n    name: 'e2DmgReductionBuff',\n    text: 'E2 DMG reduction buff',\n    title: 'E2 DMG reduction buff',\n    content: `E2: After triggering Sword Stance, the DMG taken by Sushang is reduced by 20% for 1 turn.`,\n    disabled: e < 2,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      ultBuffedState: true,\n      e2DmgReductionBuff: true,\n      skillExtraHits: 3,\n      skillTriggerStacks: 10,\n      talentSpdBuffStacks: talentSpdBuffStacksMax,\n    }),\n    precomputeEffects: (request) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject);\n\n      // Stats\n      x[Stats.BE] += (e >= 4) ? 0.40 : 0\n      x[Stats.ATK_P] += (r.ultBuffedState) ? ultBuffedAtk : 0\n      x[Stats.SPD_P] += (r.talentSpdBuffStacks) * talentSpdBuffValue\n\n      // Scaling\n      // Trace only affects stance damage not skill damage - boost this based on proportion of stance : total skill dmg\n      const originalSkillScaling = skillScaling\n      let stanceSkillScaling = 0\n      stanceSkillScaling += (r.skillExtraHits >= 1) ? skillExtraHitScaling : 0\n      stanceSkillScaling += (r.ultBuffedState && r.skillExtraHits >= 2) ? skillExtraHitScaling * 0.5 : 0\n      stanceSkillScaling += (r.ultBuffedState && r.skillExtraHits >= 3) ? skillExtraHitScaling * 0.5 : 0\n      const stanceScalingProportion = stanceSkillScaling / (stanceSkillScaling + originalSkillScaling);\n\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += originalSkillScaling\n      x.SKILL_SCALING += stanceSkillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.SKILL_BOOST += r.skillTriggerStacks * 0.025 * stanceScalingProportion\n      x.DMG_RED_MULTI *= (e >= 2 && r.e2DmgReductionBuff) ? (1 - 0.20) : 1\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      const x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\n\nexport default Sushang;","import React from 'react';\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport { baseComputedStatsObject } from 'lib/conditionals/constants';\nimport { basicRev, precisionRound, skillRev, talentRev, ultRev } from 'lib/conditionals/utils';\nimport { Stats } from 'lib/constants';\nimport { Eidolon } from 'types/Character';\n\nconst Yukong = (e: Eidolon) => {\n  const skillAtkBuffValue = skillRev(e, 0.80, 0.88)\n  const ultCdBuffValue = skillRev(e, 0.65, 0.702)\n  const ultCrBuffValue = skillRev(e, 0.28, 0.294)\n  const talentAtkScaling = talentRev(e, 0.80, 0.88)\n\n  const basicScaling = basicRev(e, 1.00, 1.10)\n  const skillScaling = skillRev(e, 0, 0)\n  const ultScaling = ultRev(e, 3.80, 4.104)\n\n  // const skillRank = [[2, 0.4],[2, 0.44],[2, 0.48],[2, 0.52],[2, 0.56],[2, 0.6],[2, 0.65],[2, 0.7],[2, 0.75],[2, 0.8],[2, 0.84],[2, 0.88],[2, 0.92],[2, 0.96],[2, 1]];\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'roaringBowstrings',\n    name: 'roaringBowstrings',\n    text: 'Roaring Bowstrings',\n    title: `Roaring Bowstrings`,\n    content: `When \"Roaring Bowstrings\" is active, the ATK of all allies increases by ${precisionRound(skillAtkBuffValue * 100)}%.\n    ::BR::\n    When \"Roaring Bowstrings\" is active, Yukong deals 30% more DMG to enemies.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'ultBuff',\n    name: 'ultBuff',\n    text: 'Ult buff',\n    title: `Ult: Diving Kestrel`,\n    content: `If \"Roaring Bowstrings\" is active on Yukong when her Ultimate is used, additionally increases all allies' CRIT Rate by ${precisionRound(ultCrBuffValue * 100)}% and CRIT DMG by ${precisionRound(ultCdBuffValue * 100)}%. At the same time, deals Imaginary DMG equal to ${precisionRound(ultScaling * 100)}% of Yukong's ATK to a single enemy.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'initialSpeedBuff',\n    name: 'initialSpeedBuff',\n    text: 'E1 Initial speed buff',\n    title: 'E1 Initial speed buff',\n    content: `E1: At the start of battle, increases the SPD of all allies by 10% for 2 turn(s).`,\n    disabled: e < 1\n  }];\n\n  return {\n\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      roaringBowstringsActive: true,\n      ultBuff: true,\n      initialSpeedBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (r.roaringBowstrings) ? skillAtkBuffValue : 0\n      x[Stats.CR] += (r.ultBuff && r.roaringBowstrings) ? ultCrBuffValue : 0\n      x[Stats.CD] += (r.ultBuff && r.roaringBowstrings) ? ultCdBuffValue : 0\n      x[Stats.SPD_P] += (e >= 1 && r.initialSpeedBuff) ? 0.10 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.BASIC_SCALING += talentAtkScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.ELEMENTAL_DMG += 0.12\n      x.ELEMENTAL_DMG += (e >= 4 && r.roaringBowstrings) ? 0.30 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      const x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nexport default Yukong;","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { baseComputedStatsObject } from 'lib/conditionals/constants';\nimport { basicRev, precisionRound, skillRev, talentRev, ultRev } from 'lib/conditionals/utils';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\n\nimport { Eidolon } from 'types/Character'\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { Form } from 'types/Form';\n\nexport default (e: Eidolon) => {\n  const skillCrBuffValue = skillRev(e, 0.12, 0.132);\n  const skillHpBuffValue = skillRev(e, 0.06, 0.066);\n  const talentDmgReductionValue = talentRev(e, 0.18, 0.196);\n\n  const basicScaling = basicRev(e, 0.50, 0.55);\n  const skillScaling = skillRev(e, 0, 0);\n  const ultScaling = ultRev(e, 1.00, 1.08);\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'skillActive',\n    name: 'skillActive',\n    text: 'Skill active',\n    title: 'Skill active',\n    content: `While affected by Matrix of Prescience, all team members gain the Knowledge effect, which increases their respective Max HP by ${precisionRound(skillHpBuffValue * 100)}% of Fu Xuan's Max HP, and increases CRIT Rate by ${precisionRound(skillCrBuffValue * 100)}%.`,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'e6TeamHpLostPercent',\n    name: 'e6TeamHpLostPercent',\n    text: 'E6 team HP lost',\n    title: 'E6 team HP lost',\n    content: `E6: Once Matrix of Prescience is activated, it will keep a tally of the total HP lost by all team members in the current battle. Fu Xuan's Ultimate DMG will increase by 200% of this tally of HP loss. This tally is also capped at 120% of Fu Xuan's Max HP.`,\n    min: 0,\n    max: 1.2,\n    percent: true,\n    disabled: e < 6,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      skillActive: true,\n      e6TeamHpLostPercent: 1.2,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CD] += (e >= 1) ? 0.30 : 0\n      x[Stats.CR] += (r.skillActive) ? skillCrBuffValue : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.DMG_RED_MULTI *= (1 - talentDmgReductionValue)\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.characterConditionals\n      const x = c['x'];\n\n      x[Stats.HP] += (r.skillActive) ? skillHpBuffValue * x[Stats.HP] : 0\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.HP]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.HP]\n      x.ULT_DMG += (e >= 6) ? 2.00 * r.e6TeamHpLostPercent * x[Stats.HP] : 0\n    }\n  }\n}","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport { ASHBLAZING_ATK_STACK, baseComputedStatsObject } from '../constants';\nimport { basicRev, calculateAshblazingSet, precisionRound, skillRev, talentRev, ultRev } from '../utils';\nimport { Eidolon } from 'types/Character';\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\n\nconst Yanqing = (e: Eidolon) => {\n  const ultCdBuffValue = ultRev(e, 0.50, 0.54);\n  const talentCdBuffValue = ultRev(e, 0.30, 0.33);\n  const talentCrBuffValue = ultRev(e, 0.20, 0.21);\n\n  const basicScaling = basicRev(e, 1.00, 1.10);\n  const skillScaling = skillRev(e, 2.20, 2.42);\n  const ultScaling = ultRev(e, 3.50, 3.78);\n  const fuaScaling = talentRev(e, 0.50, 0.55);\n\n  const hitMulti = ASHBLAZING_ATK_STACK * (1 * 1 / 1);\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'ultBuffActive',\n    name: 'ultBuffActive',\n    text: 'Ult buff active',\n    title: 'Ult buff active',\n    content: `Increases Yanqing's CRIT Rate by 60%. When Soulsteel Sync is active, increases Yanqing's CRIT DMG by an extra ${precisionRound(ultCdBuffValue * 100)}%.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'soulsteelBuffActive',\n    name: 'soulsteelBuffActive',\n    text: 'Soulsteel buff active',\n    title: 'Soulsteel buff active',\n    content: `When Soulsteel Sync is active, Yanqing's CRIT Rate increases by ${precisionRound(talentCrBuffValue * 100)}% and his CRIT DMG increases by ${precisionRound(talentCdBuffValue * 100)}%. \n    ::BR::\n    Before using Ultimate, when Soulsteel Sync is active, increases Yanqing's CRIT DMG by an extra ${precisionRound(ultCdBuffValue * 100)}%.\n    ::BR::\n    When Soulsteel Sync is active, Effect RES increases by 20%.\n    ::BR::\n    E2: When Soulsteel Sync is active, Energy Regeneration Rate increases by an extra 10%.\n    `,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'critSpdBuff',\n    name: 'critSpdBuff',\n    text: 'Crit spd buff',\n    title: 'Crit spd buff',\n    content: 'When a CRIT Hit is triggered, increases SPD by 10% for 2 turn(s).',\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e1TargetFrozen',\n    name: 'e1TargetFrozen',\n    text: 'E1 target frozen',\n    title: 'E1 target frozen',\n    content: 'When Yanqing attacks a Frozen enemy, he deals Additional Ice DMG equal to 60% of his ATK.',\n    disabled: (e < 1)\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e4CurrentHp80',\n    name: 'e4CurrentHp80',\n    text: 'E4 self HP ≥ 80% RES PEN buff',\n    title: 'E4 self HP ≥ 80% RES PEN buff',\n    content: 'When the current HP percentage is 80% or higher, Ice RES PEN increases by 12%.',\n    disabled: (e < 4)\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      ultBuffActive: true,\n      soulsteelBuffActive: true,\n      critSpdBuff: true,\n      e1TargetFrozen: true,\n      e4CurrentHp80: true,\n    }),\n    precomputeEffects: (request) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject);\n\n      // Stats\n      x[Stats.CR] += (r.ultBuffActive) ? 0.60 : 0\n      x[Stats.CD] += (r.ultBuffActive && r.soulsteelBuffActive) ? ultCdBuffValue : 0\n      x[Stats.CR] += (r.soulsteelBuffActive) ? talentCrBuffValue : 0\n      x[Stats.CD] += (r.soulsteelBuffActive) ? talentCdBuffValue : 0\n      x[Stats.RES] += (r.soulsteelBuffActive) ? 0.20 : 0\n      x[Stats.SPD_P] += (r.critSpdBuff) ? 0.10 : 0\n      x[Stats.ERR] += (e >= 2 && r.soulsteelBuffActive) ? 0.10 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += fuaScaling\n\n      x.BASIC_SCALING += (request.enemyElementalWeak) ? 0.30 : 0\n      x.SKILL_SCALING += (request.enemyElementalWeak) ? 0.30 : 0\n      x.ULT_SCALING += (request.enemyElementalWeak) ? 0.30 : 0\n      x.FUA_SCALING += (request.enemyElementalWeak) ? 0.30 : 0\n\n      x.BASIC_SCALING += (e >= 1 && r.e1TargetFrozen) ? 0.60 : 0\n      x.SKILL_SCALING += (e >= 1 && r.e1TargetFrozen) ? 0.60 : 0\n      x.ULT_SCALING += (e >= 1 && r.e1TargetFrozen) ? 0.60 : 0\n      x.FUA_SCALING += (e >= 1 && r.e1TargetFrozen) ? 0.60 : 0\n\n      // Boost\n      x.RES_PEN += (e >= 4 && r.e4CurrentHp80) ? 0.12 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      const x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n\n      const { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti);\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti);\n    }\n  }\n}\n\nexport default Yanqing;","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { baseComputedStatsObject } from 'lib/conditionals/constants';\nimport { basicRev, precisionRound, skillRev, talentRev, ultRev } from 'lib/conditionals/utils';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\n\nimport { Eidolon } from 'types/Character'\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { Form } from 'types/Form';\n\nexport default (e: Eidolon) => {\n  const talentDebuffDmgIncreaseValue = talentRev(e, 0.07, 0.076);\n  const talentDebuffMax = (e >= 6) ? 4 : 3\n\n  const basicScaling = basicRev(e, 1.00, 1.10);\n  const skillScaling = skillRev(e, 1.20, 1.32);\n  const ultScaling = ultRev(e, 1.20, 1.296);\n  const dotScaling = skillRev(e, 2.182, 2.40);\n\n  const content = [{\n    formItem: FormSliderWithPopover,\n    id: 'talentDebuffStacks',\n    name: 'talentDebuffStacks',\n    text: 'Enemy Firekiss stacks',\n    title: 'Enemy Firekiss stacks',\n    content: `While inflicted with Firekiss, the enemy receives ${precisionRound(talentDebuffDmgIncreaseValue * 100)}% increased DMG, which lasts for 3 turns and can stack up to ${precisionRound(talentDebuffMax)} times.`,\n    min: 0,\n    max: talentDebuffMax,\n  },{\n    formItem: FormSwitchWithPopover,\n    id: 'enemyBurned',\n    name: 'enemyBurned',\n    text: 'Enemy burned',\n    title: 'Enemy burned',\n    content: `Increases DMG by ${precisionRound(0.20 * 100)}% against enemies affected by Burn.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e2BurnMultiBoost',\n    name: 'e2BurnMultiBoost',\n    text: 'E2 burn multi boost',\n    title: 'E2 burn multi boost',\n    content: `E2: When an enemy target is Burned, Guinaifen's Basic ATK and Skill can increase the DMG multiplier of their Burn status by 40%.`,\n    disabled: e < 2,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      talentDebuffStacks: talentDebuffMax,\n      enemyBurned: true,\n      e2BurnMultiBoost: true,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.DOT_SCALING += dotScaling\n      x.DOT_SCALING += (e >= 2 && r.e2BurnMultiBoost) ? 0.40 : 0\n\n\n      // Boost\n      x.ELEMENTAL_DMG += (r.enemyBurned) ? 0.20 : 0\n      x.DMG_TAKEN_MULTI += r.talentDebuffStacks * talentDebuffDmgIncreaseValue\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional) => {\n      const x = c['x'];\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n    }\n  }\n}","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { baseComputedStatsObject } from 'lib/conditionals/constants';\nimport { basic, precisionRound, skill, ult } from 'lib/conditionals/utils';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\n\nimport { Eidolon } from 'types/Character'\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { Form } from 'types/Form';\n\nexport default (e: Eidolon) => {\n  const basicScaling = basic(e, 1.0, 1.1)\n  const skillScaling = skill(e, 0, 0)\n  const ultScaling = ult(e, 0, 0)\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'healingMaxHpBuff',\n    name: 'healingMaxHpBuff',\n    text: 'Healing max HP buff',\n    title: 'Healing max HP buff',\n    content: `When Bailu heals a target ally above their normal Max HP, the target's Max HP increases by ${precisionRound(0.10 * 100)}% for 2 turns.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'talentDmgReductionBuff',\n    name: 'talentDmgReductionBuff',\n    text: 'Talent DMG reduction buff',\n    title: 'Talent DMG reduction buff',\n    content: `Characters with Invigoration take ${precisionRound(0.10 * 100)}% less DMG.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e2UltHealingBuff',\n    name: 'e2UltHealingBuff',\n    text: 'E2 ult healing buff',\n    title: 'E2 ult healing buff',\n    content: `E2: Increases healing by ${precisionRound(0.15 * 100)}% after Ultimate.`,\n    disabled: e < 2,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'e4SkillHealingDmgBuffStacks',\n    name: 'e4SkillHealingDmgBuffStacks',\n    text: 'E4 skill healing DMG buff stacks',\n    title: 'E4 skill healing DMG buff stacks',\n    content: `E4: Every healing provided by Bailu's Skill makes the recipient deal ${precisionRound(0.10 * 100)}% more DMG for 2 turns. This effect can stack up to 3 times.`,\n    min: 0,\n    max: 3,\n    disabled: e < 4,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      healingMaxHpBuff: true,\n      talentDmgReductionBuff: true,\n      e2UltHealingBuff: true,\n      e4SkillHealingDmgBuffStacks: 0,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.HP_P] += (r.healingMaxHpBuff) ? 0.10 : 0\n      x[Stats.OHB] += (e >= 2 && r.e2UltHealingBuff) ? 0.15 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.DMG_RED_MULTI *= (r.talentDmgReductionBuff) ? (1 - 0.10) : 1\n      x.ALL_DMG_MULTI += (e >= 4) ? r.e4SkillHealingDmgBuffStacks * 0.10 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional) => {\n      const x = c['x'];\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += 0\n      x.ULT_DMG += 0\n      x.FUA_DMG += 0\n    }\n  }\n}","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport { baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basicRev, precisionRound, skillRev, talentRev, ultRev } from \"lib/conditionals/utils\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSliderWithPopover } from \"components/optimizerForm/conditionals/FormSlider\";\n\nimport { Eidolon } from \"types/Character\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\n\n\nexport default(e: Eidolon) => {\n  const righteousHeartStackMax = (e >= 1) ? 10 : 6\n  const outroarStackCdValue = skillRev(e, 0.12, 0.132)\n  const righteousHeartDmgValue = talentRev(e, 0.10, 0.11)\n\n  const basicScaling = basicRev(e, 1.00, 1.10)\n  const basicEnhanced1Scaling = basicRev(e, 2.60, 2.86)\n  const basicEnhanced2Scaling = basicRev(e, 3.80, 4.18)\n  const basicEnhanced3Scaling = basicRev(e, 5.00, 5.50)\n  const skillScaling = skillRev(e, 0, 0)\n  const ultScaling = ultRev(e, 3.00, 3.24)\n\n  const content = [{\n    formItem: FormSliderWithPopover,\n    id: 'basicEnhanced',\n    name: 'basicEnhanced',\n    text: 'Basic enhancements',\n    title: 'Basic enhancements',\n    content: `0 stack(s): Uses a 2-hit attack and deals Imaginary DMG equal to ${precisionRound(basicScaling * 100)}% ATK to a single enemy target.\n    ::BR::1 stack(s): Uses a 3-hit attack and deals Imaginary DMG equal to ${precisionRound(basicEnhanced1Scaling * 100)}% ATK to a single enemy target.\n    ::BR::2 stack(s): Uses a 5-hit attack and deals Imaginary DMG equal to ${precisionRound(basicEnhanced2Scaling * 100)}% ATK to a single enemy target and reduced DMG to adjacent targets.\n    ::BR::3 stack(s): Uses a 7-hit attack and deals Imaginary DMG equal to ${precisionRound(basicEnhanced3Scaling * 100)}% ATK to a single enemy target and reduced DMG to adjacent targets.`,\n    min: 0,\n    max: 3,\n  },{\n    formItem: FormSliderWithPopover,\n    id: 'skillOutroarStacks',\n    name: 'skillOutroarStacks',\n    text: 'Outroar stacks',\n    title: 'Outroar stacks',\n    content: `Divine Spear or Fulgurant Leap, starting from the fourth hit, 1 stack of Outroar is gained before every hit. \n    Each stack of Outroar increases Dan Heng • Imbibitor Lunae's CRIT DMG by ${precisionRound(outroarStackCdValue * 100)}%, for a max of 4 stacks. (applied to all hits)`,\n    min: 0,\n    max: 4,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'talentRighteousHeartStacks',\n    name: 'talentRighteousHeartStacks',\n    text: 'Righteous Heart stacks',\n    title: 'Righteous Heart stacks',\n    content: `After each hit dealt during an attack, Dan Heng • Imbibitor Lunae gains 1 stack of Righteous Heart, increasing his DMG by ${precisionRound(righteousHeartDmgValue * 100)}%. (applied to all hits)`,\n    min: 0,\n    max: righteousHeartStackMax,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'e6ResPenStacks',\n    name: 'e6ResPenStacks',\n    text: 'E6 RES PEN stacks',\n    title: 'E6 RES PEN stacks',\n    content: `E6: After any other ally uses their Ultimate, the Imaginary RES PEN of Dan Heng • Imbibitor Lunae's next Fulgurant Leap attack increases by 20%, up to 3 stacks.`,\n    min: 0,\n    max: 3,\n    disabled: e < 6,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      basicEnhanced: 3,\n      skillOutroarStacks: 4,\n      talentRighteousHeartStacks: righteousHeartStackMax,\n      e6ResPenStacks: 3,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CD] += (request.enemyElementalWeak) ? 0.24 : 0\n      x[Stats.CD] += r.skillOutroarStacks * outroarStackCdValue\n\n      // Scaling\n      x.BASIC_SCALING += {\n        0: basicScaling,\n        1: basicEnhanced1Scaling,\n        2: basicEnhanced2Scaling,\n        3: basicEnhanced3Scaling,\n      }[r.basicEnhanced]\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.ELEMENTAL_DMG += r.talentRighteousHeartStacks * righteousHeartDmgValue\n      x.BASIC_RES_PEN += (e >= 6 && r.basicEnhanced == 3) ? 0.20 * r.e6ResPenStacks : 0\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional) => {\n      const x = c['x'];\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { basic, calculateAshblazingSet, precisionRound, skill, talent, ult } from \"lib/conditionals/utils\";\nimport { ASHBLAZING_ATK_STACK, baseComputedStatsObject, ComputedStatsObject } from 'lib/conditionals/constants';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport { ConditionalMap } from 'types/Conditionals';\nimport { CharacterConditional } from 'types/CharacterConditional';\nimport { ContentItem } from 'types/Conditionals';\nimport { Form } from 'types/Form';\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { Eidolon } from 'types/Character';\nimport { Unknown } from 'types/Common';\n\n\nconst Xueyi = (e: Eidolon): CharacterConditional => {\n  const ultBoostMax = ult(e, 0.60, 0.648)\n  const basicScaling = basic(e, 1.00, 1.10)\n  const skillScaling = skill(e, 1.40, 1.54)\n  const ultScaling = ult(e, 2.50, 2.70)\n  const fuaScaling = talent(e, 0.90, 0.99)\n\n  const hitMultiByFuaHits = {\n    0: 0,\n    1: ASHBLAZING_ATK_STACK * (1 * 1 / 1), // 0.06\n    2: ASHBLAZING_ATK_STACK * (1 * 1 / 2 + 2 * 1 / 2), // 0.09\n    3: ASHBLAZING_ATK_STACK * (1 * 1 / 3 + 2 * 1 / 3 + 3 * 1 / 3) // 0.12\n  };\n\n  const content: ContentItem[] = [\n    {\n      id: 'enemyToughness50',\n      text: 'Intrepid Rollerbearings',\n      formItem: FormSwitchWithPopover,\n      title: 'Intrepid Rollerbearings',\n      content: \"If the enemy target's Toughness is equal to or higher than 50% of their Max Toughness, deals 10% more DMG when using Ultimate.\",\n    },\n    {\n      id: 'toughnessReductionDmgBoost',\n      text: 'Ultimate DMG boost',\n      formItem: FormSliderWithPopover,\n      title: 'Ultimate: Divine Castigation',\n      content: `When using Ultimate, the more Toughness is reduced, the higher the DMG will be dealt, up to a max of ${precisionRound(ultBoostMax * 100)}% increase.`,\n      min: 0,\n      max: ultBoostMax,\n      percent: true,\n    },\n    {\n      id: 'fuaHits',\n      text: 'FUA hits',\n      formItem: FormSliderWithPopover,\n      title: 'Talent: Karmic Perpetuation',\n      content: `When Karma reaches the max number of stacks, consumes all current Karma stacks and immediately launches a follow-up attack against an enemy target, \n      dealing DMG for 3 times, with each time dealing Quantum DMG equal to ${precisionRound(fuaScaling * 100)}% of Xueyi's ATK to a single random enemy.`,\n      min: 0,\n      max: 3,\n    },\n    {\n      id: 'e4BeBuff',\n      text: 'E4: Karma, Severed',\n      formItem: FormSwitchWithPopover,\n      title: 'E4 break effect buff',\n      content: \"E4: When using Ultimate, increases Break Effect by 40% for 2 turn(s).\",\n      disabled: (e < 4),\n    }\n  ];\n\n  return {\n    display: () => <DisplayFormControl ultBoostMax={ultBoostMax} eidolon={e} content={content} />,\n    defaults: () => ({\n      enemyToughness50: true,\n      toughnessReductionDmgBoost: ultBoostMax,\n      fuaHits: 3,\n      e4BeBuff: true,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r: ConditionalMap = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.BE] += (e >= 4 && r.e4BeBuff) ? 0.40 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += fuaScaling * (r.fuaHits as number);\n\n      // Boost\n      x.ULT_BOOST += (r.enemyToughness50) ? 0.10 : 0\n      x.ULT_BOOST += r.toughnessReductionDmgBoost as number;\n      x.FUA_BOOST += (e >= 1) ? 0.40 : 0\n\n      return x;\n    },\n    calculateBaseMultis: (c: Unknown, request: Form) => {\n      const r = request.characterConditionals as { [key: string]: number }\n      const x: ComputedStatsObject = c['x'];\n\n      x.ELEMENTAL_DMG += Math.min(2.40, x[Stats.BE])\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n\n      const hitMulti = hitMultiByFuaHits[r.fuaHits]\n      const { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n    }\n  }\n}\n\nexport default Xueyi;","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { baseComputedStatsObject } from 'lib/conditionals/constants';\nimport { basicRev, precisionRound, skillRev, talentRev, ultRev } from 'lib/conditionals/utils';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\n\nimport { Eidolon } from 'types/Character'\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { Form } from 'types/Form';\n\nexport default (e: Eidolon) => {\n  const ultSpdBuffValue = ultRev(e, 0.20, 0.21)\n  const ultAtkBuffValue = ultRev(e, 0.60, 0.648)\n  let talentDmgBoostValue = talentRev(e, 0.30, 0.33)\n\n  talentDmgBoostValue += (e >= 6) ? 0.10 : 0\n\n  const basicScaling = basicRev(e, 1.00, 1.10)\n  const skillScaling = skillRev(e, 2.40, 2.64)\n  const ultScaling = ultRev(e, 0, 0)\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'ultBuff',\n    name: 'ultBuff',\n    text: 'Ult buff active',\n    title: 'Ult buff active',\n    content: `Increases the SPD of a target ally by ${precisionRound(ultSpdBuffValue * 100)}% of Hanya's SPD and increases the same target ally's ATK by ${precisionRound(ultAtkBuffValue * 100)}%.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'targetBurdenActive',\n    name: 'targetBurdenActive',\n    text: 'Target Burden debuff',\n    title: 'Target Burden debuff',\n    content: `When an ally uses a Basic ATK, Skill, or Ultimate on an enemy inflicted with Burden, the DMG dealt increases by ${precisionRound(talentDmgBoostValue * 100)}% for 2 turn(s).`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'burdenAtkBuff',\n    name: 'burdenAtkBuff',\n    text: 'Burden ATK buff',\n    title: 'Burden ATK buff',\n    content: `Allies triggering Burden's Skill Point recovery effect have their ATK increased by ${precisionRound(0.10 * 100)}% for 1 turn.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e2SkillSpdBuff',\n    name: 'e2SkillSpdBuff',\n    text: 'E2 skill SPD buff',\n    title: 'E2 skill SPD buff',\n    content: `E2: After Skill, increases SPD by ${precisionRound(0.20 * 100)}% for 1 turn.`,\n    disabled: e < 2,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      ultBuff: true,\n      targetBurdenActive: true,\n      burdenAtkBuff: true,\n      skillSpdBuff: true,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      x[Stats.ATK_P] += (r.ultBuff) ? ultAtkBuffValue : 0\n      x[Stats.ATK_P] += (r.burdenAtkBuff) ? 0.10 : 0\n      x[Stats.SPD_P] += (e >= 2 && r.e2SkillSpdBuff) ? 0.20 : 0\n\n      // Boost\n      x.ALL_DMG_MULTI = (r.targetBurdenActive) ? talentDmgBoostValue : 0\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.characterConditionals\n      const x = c['x'];\n\n      x[Stats.SPD] += (r.ultBuff) ? ultSpdBuffValue * x[Stats.SPD] : 0\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport { baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basic, precisionRound, ult } from \"lib/conditionals/utils\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\n\nimport { Eidolon } from \"types/Character\";\n\nexport default(e: Eidolon) => {\n  const ultBuffValue = ult(e, 0.40, 0.432)\n  const basicScaling = basic(e, 0.50, 0.55)\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'ultBuff',\n    name: 'ultBuff',\n    text: 'Ult buff',\n    title: 'Ult buff',\n    content: `Increases all allies' ATK by ${precisionRound(ultBuffValue * 100)}% for 2 turns after using Ultimate.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'skillBuff',\n    name: 'skillBuff',\n    text: 'E1 skill buff',\n    title: 'E1 skill buff',\n    content: `E1: Increases all allies' SPD by 12% for 2 turns after using Skill.`,\n    disabled: e < 1,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e6DmgBuff',\n    name: 'e6DmgBuff',\n    text: 'E6 DMG buff',\n    title: 'E6 DMG buff',\n    content: `E6: When healing a target ally, increases the target ally's DMG dealt by 50% for 2 turns.`,\n    disabled: e < 6,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      ultBuff: true,\n      skillBuff: true,\n      e6DmgBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.SPD_P] += (e >= 1 && r.skillBuff) ? 0.12 : 0\n      x[Stats.ATK_P] += (r.ultBuff) ? ultBuffValue : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n\n      // Boost\n      x.ELEMENTAL_DMG += (e >= 6 && r.skillBuff) ? 0.50 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      const x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.HP]\n    }\n  }\n}","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport { Eidolon } from \"types/Character\";\nimport { Form } from \"types/Form\";\n\nimport { basic, precisionRound, skill, ult } from \"../utils\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { baseComputedStatsObject } from \"../constants\";\nimport { Unknown } from \"types/Common\";\n\nconst RuanMei = (e: Eidolon) => {\n  const fieldResPenValue = ult(e, 0.25, 0.27)\n  const basicScaling = basic(e, 1.00, 1.10)\n  const skillScaling = skill(e, 0, 0)\n  const ultScaling = ult(e, 0, 0)\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'ultFieldActive',\n    name:'ultFieldActive',\n    text: 'Ult field active',\n    title: 'Ult field active',\n    content: `While inside the field, all allies' All-Type RES PEN increases by ${precisionRound(fieldResPenValue * 100)}%.\n    ::BR::\n    E1: While the Ultimate's field is deployed, the DMG dealt by all allies ignores 20% of the target's DEF.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e4BeBuff',\n    name:'e4BeBuff',\n    text: 'E4 break effect buff',\n    title: 'E4 break effect buff',\n    content: 'E4: When an enemy target\\'s Weakness is Broken, Ruan Mei\\'s Break Effect increases by 100% for 3 turn(s).',\n    disabled: (e < 4),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      ultFieldActive: true,\n      e4BeBuff: true,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.BE] += 0.20\n      x[Stats.BE] += (e >= 4 && r.e4BeBuff) ? 1.00 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.RES_PEN += (r.ultFieldActive) ? fieldResPenValue : 0\n      x.DEF_SHRED += (e >= 1 && r.ultFieldActive) ? 0.20 : 0\n      x[Stats.ATK_P] += (e >= 2 && request.enemyWeaknessBroken) ? 0.40 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c: Unknown) => {\n      const x = c['x'];\n\n      const beOver = precisionRound((x[Stats.BE] * 100 - 120) / 10)\n      x.ELEMENTAL_DMG += Math.floor(Math.max(0, beOver)) * 0.06\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nexport default RuanMei;","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { baseComputedStatsObject } from 'lib/conditionals/constants';\nimport { basic, precisionRound, skill, ult } from 'lib/conditionals/utils';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\n\nimport { Eidolon } from 'types/Character'\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { Form } from 'types/Form';\n\n\nexport default (e:Eidolon) => {\n  const skillCdBuffScaling = skill(e, 0.24, 0.264);\n  const skillCdBuffBase = skill(e, 0.45, 0.486);\n  const cipherTalentStackBoost = ult(e, 0.10, 0.108);\n  const talentBaseStackBoost = ult(e, 0.06, 0.066);\n\n  const basicScaling = basic(e, 1.00, 1.10);\n  const skillScaling = skill(e, 0, 0);\n  const ultScaling = ult(e, 0, 0);\n\n  const atkBoostByQuantumAllies = {\n    0: 0,\n    1: 0.05,\n    2: 0.15,\n    3: 0.30,\n  };\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'skillCdBuff',\n    name: 'skillCdBuff',\n    text: 'Skill CD buff',\n    title: 'Skill CD buff',\n    content: `Increases the CRIT DMG of a single ally by ${precisionRound(skillCdBuffScaling * 100)}% of Sparkle's CRIT DMG plus ${precisionRound(skillCdBuffBase * 100)}%, lasting for 1 turn(s).`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'cipherBuff',\n    name: 'cipherBuff',\n    text: 'Cipher buff',\n    title: 'Cipher buff',\n    content: `When allies with Cipher trigger the DMG Boost effect provided by Sparkle's Talent, each stack additionally increases its effect by ${precisionRound(cipherTalentStackBoost * 100)}%, lasting for 2 turns.`,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'talentStacks',\n    name: 'talentStacks',\n    text: 'Talent DMG stacks',\n    title: 'Talent DMG stacks',\n    content: `Whenever an ally consumes 1 Skill Point, all allies' DMG increases by ${precisionRound(talentBaseStackBoost * 100)}%. This effect lasts for 2 turn(s) and can stack up to 3 time(s).`,\n    min: 0,\n    max: 3,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'quantumAllies',\n    name: 'quantumAllies',\n    text: 'Quantum allies',\n    title: 'Quantum allies',\n    content: `When there are 1/2/3 Quantum allies in your team, Quantum-Type allies' ATK are increased by 5%/15%/30%.`,\n    min: 0,\n    max: 3,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      skillCdBuff: true,\n      cipherBuff: true,\n      talentStacks: 3,\n      quantumAllies: 3,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      x[Stats.ATK_P] += 0.15 + (atkBoostByQuantumAllies[r.quantumAllies] || 0)\n      x[Stats.ATK_P] += (e >= 1 && r.cipherBuff) ? 0.40 : 0\n\n      x.ELEMENTAL_DMG += (r.cipherBuff) ? r.talentStacks * (talentBaseStackBoost + cipherTalentStackBoost) : r.talentStacks * talentBaseStackBoost\n      x.DEF_SHRED += (e >= 2) ? 0.08 * r.talentStacks : 0\n\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.characterConditionals\n      const x = c['x'];\n\n      x[Stats.CD] += (r.skillCdBuff) ? skillCdBuffBase + skillCdBuffScaling * x[Stats.CD] : 0\n      x[Stats.CD] += (e >= 6 && r.skillCdBuff) ? 0.30 * x[Stats.CD] : 0\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { baseComputedStatsObject } from 'lib/conditionals/constants';\nimport { basic, precisionRound, skill, talent, ult } from 'lib/conditionals/utils';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\n\nimport { Eidolon } from 'types/Character'\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { Form } from 'types/Form';\n\n\nexport default (e: Eidolon) => {\n  const arcanaStackMultiplier = talent(e, 0.12, 0.132)\n  const epiphanyDmgTakenBoost = ult(e, 0.25, 0.27)\n  const defShredValue = skill(e, 0.208, 0.22)\n\n  const basicScaling = basic(e, 0.60, 0.66)\n  const skillScaling = skill(e, 0.90, 0.99)\n  const ultScaling = ult(e, 1.20, 1.30)\n  const dotScaling = talent(e, 2.40, 2.64)\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'epiphanyDebuff',\n    name: 'epiphanyDebuff',\n    text: 'Epiphany debuff',\n    title: 'Epiphany debuff',\n    content: `Enemies affected by Epiphany take ${precisionRound(epiphanyDmgTakenBoost * 100)}% more DMG in their turn.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'defDecreaseDebuff',\n    name: 'defDecreaseDebuff',\n    text: 'Def decrease debuff',\n    title: 'Skill def decrease debuff',\n    content: `Enemies DEF is decreased by ${precisionRound(defShredValue * 100)}%.`,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'arcanaStacks',\n    name: 'arcanaStacks',\n    text: 'Arcana stacks',\n    title: 'Arcana stacks',\n    content: `While afflicted with Arcana, enemy targets receive Wind DoT equal to ${precisionRound(dotScaling * 100)}% of Black Swan's ATK at the start of each turn. Each stack of Arcana increases this DoT DMG multiplier by ${precisionRound(arcanaStackMultiplier * 100)}%. Arcana can stack up to 50 times. \n    ::BR::\nWhen there are 3 or more Arcana stacks, deals Wind DoT to adjacent targets. When there are 7 or more Arcana stacks, enables the current DoT dealt this time to ignore 20% of the target's and adjacent targets' DEF.`,\n    min: 0,\n    max: 50,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e1ResReduction',\n    name: 'e1ResReduction',\n    text: 'E1 RES reduction',\n    title: 'E1 RES reduction',\n    content: `E1: While Black Swan is active in battle, enemies afflicted with Wind Shear, Bleed, Burn, or Shock will have their corresponding Wind, Physical, Fire, or Lightning RES respectively reduced by 25%.`,\n    disabled: e < 1,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      epiphanyDebuff: true,\n      defDecreaseDebuff: true,\n      arcanaStacks: 7,\n      e1ResReduction: true\n    }),\n    precomputeEffects: (request: Form) => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.DOT_SCALING += dotScaling + arcanaStackMultiplier * r.arcanaStacks\n\n      x.DOT_DEF_PEN += (r.arcanaStacks >= 7) ? 0.20 : 0\n      x.DEF_SHRED += (r.defDecreaseDebuff) ? defShredValue : 0\n      x.DOT_VULNERABILITY += (r.epiphanyDebuff) ? epiphanyDmgTakenBoost : 0\n\n      x.RES_PEN += (e >= 1 && r.e1ResReduction) ? 0.25 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional) => {\n      const x = c['x'];\n\n      x.ELEMENTAL_DMG += Math.min(0.72, 0.60 * x[Stats.EHR])\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { baseComputedStatsObject } from 'lib/conditionals/constants';\nimport { basicRev, precisionRound, skillRev, ultRev } from 'lib/conditionals/utils';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\n\nimport { Eidolon } from 'types/Character'\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { Form } from 'types/Form';\n\nexport default (e: Eidolon) => {\n  const basicScaling = basicRev(e, 1.00, 1.10);\n  const skillScaling = skillRev(e, 2.00, 2.20);\n  let ultStackScaling = ultRev(e, 0.60, 0.65);\n  ultStackScaling += (e >= 4 ? 0.06 : 0);\n\n  const content = [{\n    formItem: FormSliderWithPopover,\n    id: 'ultHitsOnTarget',\n    name: 'ultHitsOnTarget',\n    text: 'Ult hits on target',\n    title: 'Ult hits on target',\n    content: `Number of Ultimate hits on the primary target, dealing DMG equal to ${precisionRound(ultStackScaling * 100)}% ATK per hit.`,\n    min: 1,\n    max: 10,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'enemyFrozen',\n    name: 'enemyFrozen',\n    text: 'Enemy frozen',\n    title: 'Enemy frozen',\n    content: `When dealing DMG to Frozen enemies, increases CRIT DMG by 30%.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e2DefReduction',\n    name: 'e2DefReduction',\n    text: 'E2 DEF reduction',\n    title: 'E2 DEF reduction',\n    content: `E2: Reduces the target's DEF by 16% for 3 turn(s).`,\n    disabled: e < 2,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e6UltDmgBoost',\n    name: 'e6UltDmgBoost',\n    text: 'E6 ult DMG boost',\n    title: 'E6 ult DMG boost',\n    content: `E6: When using the Ultimate, increases own DMG by 30%, lasting until the end of the turn.`,\n    disabled: e < 6,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      ultHitsOnTarget: 10,\n      enemyFrozen: true,\n      e2DefReduction: true,\n      e6UltDmgBoost: true,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject);\n\n      x[Stats.CD] += (r.enemyFrozen) ? 0.30 : 0\n\n      x.DEF_SHRED += (e >= 2 && r.e2DefReduction) ? 0.16 : 0\n      x.ELEMENTAL_DMG += (e >= 6 && r.e6UltDmgBoost) ? 0.30 : 0\n\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultStackScaling * (r.ultHitsOnTarget);\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional) => {\n      const x = c['x'];\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\n\n","import { LightConeRawRank } from 'types/LightConeConditionals';\nimport { SuperImpositionLevel } from 'types/LightCone';\n\n/**\n * Takss a SuperImpositionLevel and a LightConeRawRank and returns a string\n * String will contain tokens in the shape of \"#1[i]\" where (#x - 1) is the index of the param.\n * SuperImpositionLevel indicates rank values to use.\n * \n * Ranks are copied/stored in src/data/en/light_cone_ranks.json; imported from Mar-7th repo.\n * \n * Exmaple rank:\n\nconst lcRank = {\n  \"id\": \"23014\",\n  \"skill\": \"With This Evening Jade\",\n  \"desc\": \"Increases the wearer's CRIT DMG by #1[i]%. When an ally (excluding the wearer) gets attacked or loses HP, the wearer gains 1 stack of Eclipse, up to a max of #2[i] stack(s). Each stack of Eclipse increases the DMG of the wearer's next attack by #3[f1]%. When #2[i] stack(s) are reached, additionally enables that attack to ignore #4[i]% of the enemy's DEF. This effect will be removed after the wearer uses an attack.\",\n  \"params\": [\n    [0.2, 3, 0.14, 0.12], [0.23, 3, 0.165, 0.14],\n    [0.26, 3, 0.19, 0.16], [0.29, 3, 0.215, 0.18], [0.32, 3, 0.24, 0.2]\n  ],\n  \"properties\": [\n    [{ \"type\": \"CriticalDamageBase\", \"value\": 0.2 }],\n    [{ \"type\": \"CriticalDamageBase\", \"value\": 0.23 }],\n    [{ \"type\": \"CriticalDamageBase\", \"value\": 0.26 }],\n    [{ \"type\": \"CriticalDamageBase\", \"value\": 0.29 }],\n    [{ \"type\": \"CriticalDamageBase\", \"value\": 0.32 }]\n  ]\n};\n\n * @param s \n * @param lcRank \n * @returns \n */\nconst getContentFromLCRanks = (s: SuperImpositionLevel, lcRank: LightConeRawRank): string => {\n  const params = lcRank.params[s];\n  let ret = lcRank.desc;\n\n  // on render, \n  if (params) {\n    // const properties = lcRank.properties[s];\n    lcRank.desc.match(/#(\\d+)\\[\\w+\\]/g).forEach((token) => {\n      // get params value\n      token.match(/#(\\d+)/).forEach((tokenPieces, i) => {\n        if (i > 0) {\n          // [\"#4[i]\", \"4\"]\n          let value = params[parseInt(tokenPieces) - 1];\n          // change to percent\n          // TODO: This isnt correct in all cases, \"There is a 100% chance\" gets turned into \"There is a 1% chance\": Incessant Rain\n          if (value < 1) {\n            value = precisionRound(value * 100);\n          }\n          ret = ret.replace(token, value.toString());\n        }\n      });\n    });\n  }\n\n  return ret;\n}\n\n// TODO: When I import from Utils it gives a window not found error from db.js. The typescript refactor will fix that, leaving this here for now\nfunction precisionRound(number, precision = 5) {\n  const factor = Math.pow(10, precision);\n  return Math.round(number * factor) / factor;\n}\n\nexport default getContentFromLCRanks","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSliderWithPopover } from \"components/optimizerForm/conditionals/FormSlider\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\n\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { ConditionalLightConeMap } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\n\nconst lcRank = {\n  \"id\": \"23020\",\n  \"skill\": \"Mental Training\",\n  \"desc\": \"For every debuff on the enemy target, the wearer's CRIT DMG dealt against this target increases by #2[i]%, stacking up to #3[i] times.\",\n  \"params\": [\n    [0.2, 0.08, 3, 0.36, 0.24, 2],\n    [0.23, 0.09, 3, 0.42, 0.28, 2],\n    [0.26, 0.1, 3, 0.48, 0.32, 2],\n    [0.29, 0.11, 3, 0.54, 0.36, 2],\n    [0.32, 0.12, 3, 0.6, 0.4, 2]\n  ],\n  \"properties\": [\n    [{\"type\": \"CriticalDamageBase\", \"value\": 0.2}],\n    [{\"type\": \"CriticalDamageBase\", \"value\": 0.23}],\n    [{\"type\": \"CriticalDamageBase\", \"value\": 0.26}],\n    [{\"type\": \"CriticalDamageBase\", \"value\": 0.29}],\n    [{\"type\": \"CriticalDamageBase\", \"value\": 0.32}]\n  ]\n};\nconst lcRank2 = {\n  ...lcRank,\n  desc: \"When using Ultimate to attack the enemy target, the wearer receives the Disputation effect, which increases DMG dealt by #4[i]% and enables their follow-up attacks to ignore #5[i]% of the target's DEF. This effect lasts for #6[i] turns.\",\n};\n\nconst BaptismOfPureThought = (s: SuperImpositionLevel) => {\n  const sValuesCd = [0.08, 0.09, 0.10, 0.11, 0.12]\n  const sValuesDmg = [0.36, 0.42, 0.48, 0.54, 0.60]\n  const sValuesFuaPen = [0.24, 0.28, 0.32, 0.36, 0.40]\n\n  const content = [{\n    lc: true,\n    formItem: FormSliderWithPopover,\n    id: 'debuffCdStacks',\n    name: 'debuffCdStacks',\n    text: 'Debuff cd stacks',\n    title: lcRank.skill,\n    content: getContentFromLCRanks(s, lcRank),\n    min: 0,\n    max: 3,\n  }, {\n    lc: true,\n    formItem: FormSwitchWithPopover,\n    id: 'postUltBuff',\n    name: 'postUltBuff',\n    text: 'Disputation ult cd / fua def pen buff',\n    title: lcRank2.skill,\n    content: getContentFromLCRanks(s, lcRank2),\n  }]\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      debuffCdStacks: 3,\n      postUltBuff: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals as ConditionalLightConeMap;\n\n      x[Stats.CD] += r.debuffCdStacks * sValuesCd[s]\n      x.ELEMENTAL_DMG += r.postUltBuff ? sValuesDmg[s] : 0\n      x.FUA_DEF_PEN += r.postUltBuff ? sValuesFuaPen[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n};\n\nexport default BaptismOfPureThought;","/* eslint-disable no-unused-vars  */\n\nimport React from 'react';\nimport { Flex, Typography } from 'antd';\nimport { HeaderText } from 'components/HeaderText';\nimport { TooltipImage } from 'components/TooltipImage';\nimport { Hint } from 'lib/hint';\n\nimport Adversarial from 'lib/conditionals/lightcone/3star/Adversarial';\nimport Amber from 'lib/conditionals/lightcone/3star/Amber';\nimport AnInstantBeforeAGaze from 'lib/conditionals/lightcone/5star/AnInstantBeforeAGaze';\nimport Arrows from 'lib/conditionals/lightcone/3star/Arrows';\nimport ASecretVow from 'lib/conditionals/lightcone/4star/ASecretVow';\nimport BaptismOfPureThought from 'lib/conditionals/lightcone/5star/BaptismOfPureThought';\nimport BeforeDawn from 'lib/conditionals/lightcone/5star/BeforeDawn';\nimport BeforeTheTutorialMissionStarts from 'lib/conditionals/lightcone/4star/BeforeTheTutorialMissionStarts';\nimport BrighterThanTheSun from 'lib/conditionals/lightcone/5star/BrighterThanTheSun';\nimport ButTheBattleIsntOver from 'lib/conditionals/lightcone/5star/ButTheBattleIsntOver';\nimport CarveTheMoonWeaveTheClouds from 'lib/conditionals/lightcone/4star/CarveTheMoonWeaveTheClouds';\nimport Chorus from 'lib/conditionals/lightcone/3star/Chorus';\nimport CollapsingSky from 'lib/conditionals/lightcone/3star/CollapsingSky';\nimport Cornucopia from 'lib/conditionals/lightcone/3star/Cornucopia';\nimport CruisingInTheStellarSea from 'lib/conditionals/lightcone/5star/CruisingInTheStellarSea';\nimport DanceDanceDance from 'lib/conditionals/lightcone/4star/DanceDanceDance';\nimport DartingArrow from 'lib/conditionals/lightcone/3star/DartingArrow';\nimport DataBank from 'lib/conditionals/lightcone/3star/DataBank';\nimport DayOneOfMyNewLife from 'lib/conditionals/lightcone/4star/DayOneOfMyNewLife';\nimport Defense from 'lib/conditionals/lightcone/3star/Defense';\nimport EarthlyEscapade from 'lib/conditionals/lightcone/5star/EarthlyEscapade';\nimport EchoesOfTheCoffin from 'lib/conditionals/lightcone/5star/EchoesOfTheCoffin';\nimport EyesOfThePrey from 'lib/conditionals/lightcone/4star/EyesOfThePrey';\nimport Fermata from 'lib/conditionals/lightcone/4star/Fermata';\nimport FineFruit from 'lib/conditionals/lightcone/3star/FineFruit';\nimport GeniusesRepose from 'lib/conditionals/lightcone/4star/GeniusesRepose';\nimport GoodNightAndSleepWell from 'lib/conditionals/lightcone/4star/GoodNightAndSleepWell';\nimport HeyOverHere from 'lib/conditionals/lightcone/4star/HeyOverHere';\nimport HiddenShadow from 'lib/conditionals/lightcone/3star/HiddenShadow';\nimport IncessantRain from 'lib/conditionals/lightcone/5star/IncessantRain';\nimport InTheNameOfTheWorld from 'lib/conditionals/lightcone/5star/InTheNameOfTheWorld';\nimport InTheNight from 'lib/conditionals/lightcone/5star/InTheNight';\nimport IShallBeMyOwnSword from 'lib/conditionals/lightcone/5star/IShallBeMyOwnSword';\nimport LandausChoice from 'lib/conditionals/lightcone/4star/LandausChoice';\nimport Loop from 'lib/conditionals/lightcone/3star/Loop';\nimport MakeTheWorldClamor from 'lib/conditionals/lightcone/4star/MakeTheWorldClamor';\nimport Mediation from 'lib/conditionals/lightcone/3star/Mediation';\nimport MemoriesOfThePast from 'lib/conditionals/lightcone/4star/MemoriesOfThePast';\nimport MeshingCogs from 'lib/conditionals/lightcone/3star/MeshingCogs';\nimport MomentOfVictory from 'lib/conditionals/lightcone/5star/MomentOfVictory';\nimport Multiplication from 'lib/conditionals/lightcone/3star/Multiplication';\nimport MutualDemise from 'lib/conditionals/lightcone/3star/MutualDemise';\nimport NightOfFright from 'lib/conditionals/lightcone/5star/NightOfFright';\nimport NightOnTheMilkyWay from 'lib/conditionals/lightcone/5star/NightOnTheMilkyWay';\nimport NowhereToRun from 'lib/conditionals/lightcone/4star/NowhereToRun';\nimport OnlySilenceRemains from 'lib/conditionals/lightcone/4star/OnlySilenceRemains';\nimport OnTheFallOfAnAeon from 'lib/conditionals/lightcone/5star/OnTheFallOfAnAeon';\nimport Passkey from 'lib/conditionals/lightcone/3star/Passkey';\nimport PastAndFuture from 'lib/conditionals/lightcone/4star/PastAndFuture';\nimport PastSelfInTheMirror from 'lib/conditionals/lightcone/5star/PastSelfInTheMirror';\nimport PatienceIsAllYouNeed from 'lib/conditionals/lightcone/5star/PatienceIsAllYouNeed';\nimport PerfectTiming from 'lib/conditionals/lightcone/4star/PerfectTiming';\nimport Pioneering from 'lib/conditionals/lightcone/3star/Pioneering';\nimport PlanetaryRendezvous from 'lib/conditionals/lightcone/4star/PlanetaryRendezvous';\nimport PostOpConversation from 'lib/conditionals/lightcone/4star/PostOpConversation';\nimport QuidProQuo from 'lib/conditionals/lightcone/4star/QuidProQuo';\nimport ReforgedRemembrance from 'lib/conditionals/lightcone/5star/ReforgedRemembrance';\nimport ResolutionShinesAsPearlsOfSweat from 'lib/conditionals/lightcone/4star/ResolutionShinesAsPearlsOfSweat';\nimport ReturnToDarkness from 'lib/conditionals/lightcone/4star/ReturnToDarkness';\nimport RiverFlowsInSpring from 'lib/conditionals/lightcone/4star/RiverFlowsInSpring';\nimport Sagacity from 'lib/conditionals/lightcone/3star/Sagacity';\nimport SharedFeeling from 'lib/conditionals/lightcone/4star/SharedFeeling';\nimport ShatteredHome from 'lib/conditionals/lightcone/3star/ShatteredHome';\nimport SheAlreadyShutHerEyes from 'lib/conditionals/lightcone/5star/SheAlreadyShutHerEyes';\nimport SleepLikeTheDead from 'lib/conditionals/lightcone/5star/SleepLikeTheDead';\nimport SolitaryHealing from 'lib/conditionals/lightcone/5star/SolitaryHealing';\nimport SomethingIrreplaceable from 'lib/conditionals/lightcone/5star/SomethingIrreplaceable';\nimport SubscribeForMore from 'lib/conditionals/lightcone/4star/SubscribeForMore';\nimport Swordplay from 'lib/conditionals/lightcone/4star/Swordplay';\nimport TextureOfMemories from 'lib/conditionals/lightcone/5star/TextureOfMemories';\nimport TheBirthOfTheSelf from 'lib/conditionals/lightcone/4star/TheBirthOfTheSelf';\nimport TheMolesWelcomeYou from 'lib/conditionals/lightcone/4star/TheMolesWelcomeYou';\nimport TheSeriousnessOfBreakfast from 'lib/conditionals/lightcone/4star/TheSeriousnessOfBreakfast';\nimport TheUnreachableSide from 'lib/conditionals/lightcone/5star/TheUnreachableSide';\nimport ThisIsMe from 'lib/conditionals/lightcone/4star/ThisIsMe';\nimport TimeWaitsForNoOne from 'lib/conditionals/lightcone/5star/TimeWaitsForNoOne';\nimport TodayIsAnotherPeacefulDay from 'lib/conditionals/lightcone/4star/TodayIsAnotherPeacefulDay';\nimport TrendOfTheUniversalMarket from 'lib/conditionals/lightcone/4star/TrendOfTheUniversalMarket';\nimport UnderTheBlueSky from 'lib/conditionals/lightcone/4star/UnderTheBlueSky';\nimport Void from 'lib/conditionals/lightcone/3star/Void';\nimport WarmthShortensColdNights from 'lib/conditionals/lightcone/4star/WarmthShortensColdNights';\nimport WeAreWildfire from 'lib/conditionals/lightcone/4star/WeAreWildfire';\nimport WeWillMeetAgain from 'lib/conditionals/lightcone/4star/WeWillMeetAgain';\nimport WoofWalkTime from 'lib/conditionals/lightcone/4star/WoofWalkTime';\nimport WorrisomeBlissful from 'lib/conditionals/lightcone/5star/WorrisomeBlissful';\nimport WhatIsReal from \"./conditionals/lightcone/4star/WhatIsReal\";\nimport DreamvilleAdventure from \"./conditionals/lightcone/4star/DreamvilleAdventure\";\nimport FinalVictor from \"./conditionals/lightcone/4star/FinalVictor\";\nimport FlamesAfar from \"./conditionals/lightcone/4star/FlamesAfar\";\nimport DestinysThreadsForewoven from \"./conditionals/lightcone/4star/DestinysThreadsForewoven\";\nimport TheDayTheCosmosFell from \"./conditionals/lightcone/4star/TheDayTheCosmosFell\";\nimport ItsShowtime from \"./conditionals/lightcone/4star/ItsShowtime\";\nimport IndeliblePromise from \"./conditionals/lightcone/4star/IndeliblePromise\";\n\nconst fiveStar = {\n  23000: NightOnTheMilkyWay,\n  23001: InTheNight,\n  23002: SomethingIrreplaceable,\n  23003: ButTheBattleIsntOver,\n  23004: InTheNameOfTheWorld, // Skill atk buff not implemented\n  23005: MomentOfVictory,\n  23006: PatienceIsAllYouNeed, // Revisit dot\n  23007: IncessantRain,\n  23008: EchoesOfTheCoffin,\n  23009: TheUnreachableSide,\n  23010: BeforeDawn,\n  23011: SheAlreadyShutHerEyes,\n  23012: SleepLikeTheDead,\n  23013: TimeWaitsForNoOne,\n  23014: IShallBeMyOwnSword,\n  23015: BrighterThanTheSun,\n  23016: WorrisomeBlissful,\n  23017: NightOfFright,\n  23018: AnInstantBeforeAGaze,\n  23019: PastSelfInTheMirror,\n  23020: BaptismOfPureThought,\n  23021: EarthlyEscapade,\n  23022: ReforgedRemembrance,\n  24000: OnTheFallOfAnAeon,\n  24001: CruisingInTheStellarSea,\n  24002: TextureOfMemories,\n  24003: SolitaryHealing,\n};\n\nconst fourStar = {\n  21000: PostOpConversation,\n  21001: GoodNightAndSleepWell,\n  21002: DayOneOfMyNewLife,\n  21003: OnlySilenceRemains,\n  21004: MemoriesOfThePast,\n  21005: TheMolesWelcomeYou,\n  21006: TheBirthOfTheSelf,\n  21007: SharedFeeling,\n  21008: EyesOfThePrey,\n  21009: LandausChoice,\n  21010: Swordplay,\n  21011: PlanetaryRendezvous,\n  21012: ASecretVow,\n  21013: MakeTheWorldClamor,\n  21014: PerfectTiming, // Does the ohb apply after passives?\n  21015: ResolutionShinesAsPearlsOfSweat,\n  21016: TrendOfTheUniversalMarket, // Revisit dot\n  21017: SubscribeForMore,\n  21018: DanceDanceDance,\n  21019: UnderTheBlueSky,\n  21020: GeniusesRepose,\n  21021: QuidProQuo,\n  21022: Fermata,\n  21023: WeAreWildfire,\n  21024: RiverFlowsInSpring,\n  21025: PastAndFuture,\n  21026: WoofWalkTime,\n  21027: TheSeriousnessOfBreakfast,\n  21028: WarmthShortensColdNights,\n  21029: WeWillMeetAgain, // Does this get affected by crit / dmg boosts?\n  21030: ThisIsMe, // Def scaling dmg not implemented\n  21031: ReturnToDarkness,\n  21032: CarveTheMoonWeaveTheClouds,\n  21033: NowhereToRun,\n  21034: TodayIsAnotherPeacefulDay,\n  21035: WhatIsReal,\n  21036: DreamvilleAdventure,\n  21037: FinalVictor,\n  21038: FlamesAfar,\n  21039: DestinysThreadsForewoven,\n  21040: TheDayTheCosmosFell,\n  21041: ItsShowtime,\n  21042: IndeliblePromise,\n  \n  22000: BeforeTheTutorialMissionStarts,\n  22001: HeyOverHere,\n};\n\nconst threeStar = {\n  20000: Arrows,\n  20001: Cornucopia,\n  20002: CollapsingSky,\n  20003: Amber,\n  20004: Void,\n  20005: Chorus,\n  20006: DataBank,\n  20007: DartingArrow,\n  20008: FineFruit,\n  20009: ShatteredHome,\n  20010: Defense,\n  20011: Loop,\n  20012: MeshingCogs,\n  20013: Passkey,\n  20014: Adversarial,\n  20015: Multiplication,\n  20016: MutualDemise,\n  20017: Pioneering,\n  20018: HiddenShadow,\n  20019: Mediation,\n  20020: Sagacity,\n}  \n\nconst lightConeOptionMapping = {\n  ...fiveStar,\n  ...fourStar,\n  ...threeStar\n};\n\n\nexport const LightConeConditionals = {\n  get: (request) => {\n    let lcFn = lightConeOptionMapping[request.lightCone];\n    \n    if (!lcFn) {\n      return {\n        display: () => (\n          <Flex vertical gap={5}>\n            <HeaderText>Light cone passives</HeaderText>\n          </Flex>\n        ),\n        defaults: () => ({})\n      }\n    }\n    return lcFn(request.lightConeSuperimposition - 1)\n  },\n  getDisplayLightConePassives: (id, superimposition) => {\n    if (!id || !lightConeOptionMapping[id]) {\n      return (\n        <Flex vertical gap={5}>\n          <Flex justify='space-between' align='center'>\n            <HeaderText>Light cone passives</HeaderText>\n            <TooltipImage type={Hint.lightConePassives()} lc />\n          </Flex>\n          <Typography.Text italic>Select a Light cone to view passives</Typography.Text>\n        </Flex>\n      )\n    }\n\n    let lcFn = lightConeOptionMapping[id];\n    let display = lcFn(superimposition - 1).display();\n\n    return (\n      <Flex vertical gap={5}>\n        <Flex justify='space-between' align='center'>\n          <HeaderText>Light cone passives</HeaderText>\n          <TooltipImage type={Hint.lightConePassives()} lc />\n        </Flex>\n        {display}\n      </Flex>\n    )\n  },\n}","import React from 'react';\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { ContentItem } from 'types/Conditionals';\nimport { Form } from 'types/Form';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport getContentFromLCRanks from '../getContentFromLCRank';\nimport { SuperImpositionLevel } from 'types/LightCone';\nimport { LightConeConditional, LightConeRawRank } from 'types/LightConeConditionals';\nimport { Stats } from 'lib/constants';\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValuesAtk = [0.09, 0.105, 0.12, 0.135, 0.15];\n  const sValuesDmg = [0.30, 0.35, 0.40, 0.45, 0.50];\n\n  const lcRank: LightConeRawRank = {\n    \"id\": \"23000\",\n    \"skill\": \"Meteor Swarm\",\n    \"desc\": \"For every enemy on the field, increases the wearer's ATK by #2[f1]%, up to 5 stacks.\",\n    \"params\": [[0.3, 0.09], [0.35, 0.105], [0.4, 0.12], [0.45, 0.135], [0.5, 0.15]],\n    \"properties\": [[], [], [], [], []]\n  };\n  const lcRank2: LightConeRawRank = {\n    ...lcRank,\n    desc: `When an enemy is inflicted with Weakness Break, the DMG dealt by the wearer increases by #1[i]% for 1 turn.`\n  };\n\n  const content: ContentItem[] = [{\n    lc: true,\n    id: 'enemyCountAtkBuff',\n    name: 'enemyCountAtkBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'Enemy count atk buff',\n    title: lcRank.skill,\n    content: getContentFromLCRanks(s, lcRank),\n  }, {\n    lc: true,\n    id: 'enemyWeaknessBreakDmgBuff',\n    name: 'enemyWeaknessBreakDmgBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'Enemy weakness break dmg buff',\n    title: lcRank.skill,\n    content: getContentFromLCRanks(s, lcRank2),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      enemyCountAtkBuff: true,\n      enemyWeaknessBreakDmgBuff: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals;\n\n      x[Stats.ATK_P] += (r.enemyCountAtkBuff) ? request.enemyCount * sValuesAtk[s] : 0\n      x.ELEMENTAL_DMG += (r.enemyWeaknessBreakDmgBuff) ? sValuesDmg[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from 'react';\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { ContentItem } from 'types/Conditionals';\nimport { Form } from 'types/Form';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport getContentFromLCRanks from '../getContentFromLCRank';\nimport { SuperImpositionLevel } from 'types/LightCone';\nimport { LightConeConditional, LightConeRawRank } from 'types/LightConeConditionals';\nimport { Stats } from 'lib/constants';\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValuesDmg = [0.06, 0.07, 0.08, 0.09, 0.10];\n  const sValuesCd = [0.12, 0.14, 0.16, 0.18, 0.20];\n\n  const lcRank: LightConeRawRank = {\n    \"id\": \"23001\",\n    \"skill\": \"Flowers and Butterflies\",\n    \"desc\": \"While the wearer is in battle, for every #2[i] SPD that exceeds 100, the DMG of the wearer's Basic ATK and Skill is increased by #3[i]% and the CRIT DMG of their Ultimate is increased by #4[i]%. This effect can stack up to #5[i] time(s).\",\n    \"params\": [[0.18, 10, 0.06, 0.12, 6], [0.21, 10, 0.07, 0.14, 6], [0.24, 10, 0.08, 0.16, 6], [0.27, 10, 0.09, 0.18, 6], [0.3, 10, 0.1, 0.2, 6]],\n    \"properties\": [[{\"type\": \"CriticalChanceBase\", \"value\": 0.18}], [{\"type\": \"CriticalChanceBase\", \"value\": 0.21}], [{\"type\": \"CriticalChanceBase\", \"value\": 0.24}], [{\"type\": \"CriticalChanceBase\", \"value\": 0.27}], [{\"type\": \"CriticalChanceBase\", \"value\": 0.3}]]\n  };\n\n  const content: ContentItem[] = [{\n    lc: true,\n    id: 'spdScalingBuffs',\n    name: 'spdScalingBuffs',\n    formItem: FormSwitchWithPopover,\n    text: 'Speed scaling buffs enabled',\n    title: lcRank.skill,\n    content: getContentFromLCRanks(s, lcRank),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      spdScalingBuffs: true,\n    }),\n    precomputeEffects: (/* x, request */) => {\n      // const r = request.lightConeConditionals;\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals;\n      const x = c['x'];\n\n      const stacks = Math.max(0, Math.min(6, Math.floor((x[Stats.SPD] - 100) / 10)));\n\n      x.BASIC_BOOST += (r.spdScalingBuffs) ? stacks * sValuesDmg[s] : 0\n      x.SKILL_BOOST += (r.spdScalingBuffs) ? stacks * sValuesDmg[s] : 0\n      x.ULT_CD_BOOST += (r.spdScalingBuffs) ? stacks * sValuesCd[s] : 0\n    }\n  }\n}","import React from 'react';\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { ContentItem } from 'types/Conditionals';\nimport { Form } from 'types/Form';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport getContentFromLCRanks from '../getContentFromLCRank';\nimport { SuperImpositionLevel } from 'types/LightCone';\nimport { LightConeConditional, LightConeRawRank } from 'types/LightConeConditionals';\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.24, 0.28, 0.32, 0.36, 0.40];\n\n  const lcRank: LightConeRawRank = {\n    \"id\": \"23002\",\n    \"skill\": \"Kinship\",\n    \"desc\": \"When the wearer defeats an enemy or is hit, immediately restores HP equal to #2[i]% of the wearer's ATK. At the same time, the wearer's DMG is increased by #3[i]% until the end of their next turn. This effect cannot stack and can only trigger 1 time per turn.\",\n    \"params\": [[0.24, 0.08, 0.24], [0.28, 0.09, 0.28], [0.32, 0.1, 0.32], [0.36, 0.11, 0.36], [0.4, 0.12, 0.4]],\n    \"properties\": [[{\"type\": \"AttackAddedRatio\", \"value\": 0.24}], [{\"type\": \"AttackAddedRatio\", \"value\": 0.28}], [{\"type\": \"AttackAddedRatio\", \"value\": 0.32}], [{\"type\": \"AttackAddedRatio\", \"value\": 0.36}], [{\"type\": \"AttackAddedRatio\", \"value\": 0.4}]]\n  };\n\n  const content: ContentItem[] = [{\n    lc: true,\n    id: 'dmgBuff',\n    name: 'dmgBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'Enemy defeated or self hit DMG buff',\n    title: lcRank.skill,\n    content: getContentFromLCRanks(s, lcRank),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      dmgBuff: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.dmgBuff) ? sValues[s] : 0;\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}","import React from 'react';\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { ContentItem } from 'types/Conditionals';\nimport { Form } from 'types/Form';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport getContentFromLCRanks from '../getContentFromLCRank';\nimport { SuperImpositionLevel } from 'types/LightCone';\nimport { LightConeConditional, LightConeRawRank } from 'types/LightConeConditionals';\nimport { Stats } from 'lib/constants';\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValuesErr = [0.10, 0.12, 0.14, 0.16, 0.18];\n  const sValuesDmg = [0.30, 0.35, 0.40, 0.45, 0.50];\n\n  const lcRank: LightConeRawRank = {\n    \"id\": \"23003\",\n    \"skill\": \"Heir\",\n    \"desc\": \"When the wearer uses their Skill, the next ally taking action (except the wearer) deals #2[i]% more DMG for #3[i] turn(s).\",\n    \"params\": [[0.1, 0.3, 1], [0.12, 0.35, 1], [0.14, 0.4, 1], [0.16, 0.45, 1], [0.18, 0.5, 1]],\n    \"properties\": [[{\"type\": \"SPRatioBase\", \"value\": 0.1}], [{\"type\": \"SPRatioBase\", \"value\": 0.12}], [{\"type\": \"SPRatioBase\", \"value\": 0.14}], [{\"type\": \"SPRatioBase\", \"value\": 0.16}], [{\"type\": \"SPRatioBase\", \"value\": 0.18}]]\n  };\n\n  const content: ContentItem[] = [{\n    lc: true,\n    id: 'postSkillDmgBuff',\n    name: 'postSkillDmgBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'Post skill DMG buff',\n    title: lcRank.skill,\n    content: getContentFromLCRanks(s, lcRank),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      postSkillDmgBuff: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals;\n\n      x[Stats.ERR] += sValuesErr[s]\n      x.ELEMENTAL_DMG += (r.postSkillDmgBuff) ? sValuesDmg[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from 'react';\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { ContentItem } from 'types/Conditionals';\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from 'types/LightConeConditionals';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport getContentFromLCRanks from '../getContentFromLCRank';\nimport { SuperImpositionLevel } from 'types/LightCone';\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValuesDmg = [0.24, 0.28, 0.32, 0.36, 0.40];\n\n  const lcRank ={\n    \"id\": \"23004\",\n    \"skill\": \"Inheritor\",\n    \"desc\": \"Increases the wearer's DMG to debuffed enemies by #1[i]%.\",\n    \"params\": [[0.24, 0.18, 0.24], [0.28, 0.21, 0.28], [0.32, 0.24, 0.32], [0.36, 0.27, 0.36], [0.4, 0.3, 0.4]],\n    \"properties\": [[], [], [], [], []]\n  };\n  const lcRank2 = {\n    ...lcRank,\n    desc: `When the wearer uses their Skill, the Effect Hit Rate for this attack increases by #2[i]%, and ATK increases by #3[i]%.`\n  };\n\n  const content: ContentItem[] = [{\n    lc: true,\n    id: 'enemyDebuffedDmgBoost',\n    name: 'enemyDebuffedDmgBoost',\n    formItem: FormSwitchWithPopover,\n    text: 'Enemy debuffed DMG boost',\n    title: lcRank.skill,\n    content: getContentFromLCRanks(s, lcRank),\n  }, {\n    lc: true,\n    id: 'skillAtkBoost',\n    name: 'skillAtkBoost',\n    formItem: FormSwitchWithPopover,\n    text: 'Skill ATK boost (not implemented)',\n    title: lcRank.skill,\n    content: getContentFromLCRanks(s, lcRank2),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      enemyDebuffedDmgBoost: true,\n      skillAtkBoost: false,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals;\n\n      x.ELEMENTAL_DMG += (r.enemyDebuffedDmgBoost) ? sValuesDmg[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from 'react';\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { ContentItem } from 'types/Conditionals';\nimport { Form } from 'types/Form';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport getContentFromLCRanks from '../getContentFromLCRank';\nimport { SuperImpositionLevel } from 'types/LightCone';\nimport { LightConeConditional, LightConeRawRank } from 'types/LightConeConditionals';\nimport { Stats } from 'lib/constants';\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.24, 0.28, 0.32, 0.36, 0.40];\n\n  const lcRank: LightConeRawRank = {\n    \"id\": \"23005\",\n    \"skill\": \"Verdict\",\n    \"desc\": \"Increases the chance for the wearer to be attacked by enemies. When the wearer is attacked, increase their DEF by an extra #3[i]% until the end of the wearer's turn.\",\n    \"params\": [[2, 0.24, 0.24, 0.24], [2, 0.28, 0.28, 0.28], [2, 0.32, 0.32, 0.32], [2, 0.36, 0.36, 0.36], [2, 0.4, 0.4, 0.4]],\n    \"properties\": [[{\"type\": \"DefenceAddedRatio\", \"value\": 0.24}, {\"type\": \"StatusProbabilityBase\", \"value\": 0.24}], [{\"type\": \"DefenceAddedRatio\", \"value\": 0.28}, {\"type\": \"StatusProbabilityBase\", \"value\": 0.28}], [{\"type\": \"DefenceAddedRatio\", \"value\": 0.32}, {\"type\": \"StatusProbabilityBase\", \"value\": 0.32}], [{\"type\": \"DefenceAddedRatio\", \"value\": 0.36}, {\"type\": \"StatusProbabilityBase\", \"value\": 0.36}], [{\"type\": \"DefenceAddedRatio\", \"value\": 0.4}, {\"type\": \"StatusProbabilityBase\", \"value\": 0.4}]]\n  };\n\n  const content: ContentItem[] = [{\n    lc: true,\n    id: 'selfAttackedDefBuff',\n    name: 'selfAttackedDefBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'Self attacked DEF buff',\n    title: lcRank.skill,\n    content: getContentFromLCRanks(s, lcRank),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      selfAttackedDefBuff: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x[Stats.DEF_P] += (r.selfAttackedDefBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}","import React from 'react';\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { ContentItem } from 'types/Conditionals';\nimport { Form } from 'types/Form';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport getContentFromLCRanks from '../getContentFromLCRank';\nimport { SuperImpositionLevel } from 'types/LightCone';\nimport { LightConeConditional, LightConeRawRank } from 'types/LightConeConditionals';\nimport { Stats } from 'lib/constants';\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValuesDmg = [0.24, 0.28, 0.32, 0.36, 0.40];\n  const sValuesSpd = [0.048, 0.056, 0.064, 0.072, 0.08];\n\n  const lcRank: LightConeRawRank = {\n    \"id\": \"23006\",\n    \"skill\": \"Spider Web\",\n    \"desc\": \"Increases DMG dealt by the wearer by #2[i]%.\",\n    \"params\": [[0.6, 0.24, 0.048, 3, 1], [0.7, 0.28, 0.056, 3, 1], [0.8, 0.32, 0.064, 3, 1], [0.9, 0.36, 0.072, 3, 1], [1, 0.4, 0.08, 3, 1]],\n    \"properties\": [[{\"type\": \"AllDamageTypeAddedRatio\", \"value\": 0.24}], [{\"type\": \"AllDamageTypeAddedRatio\", \"value\": 0.28}], [{\"type\": \"AllDamageTypeAddedRatio\", \"value\": 0.32}], [{\"type\": \"AllDamageTypeAddedRatio\", \"value\": 0.36}], [{\"type\": \"AllDamageTypeAddedRatio\", \"value\": 0.4}]]\n  };\n  const lcRank2: LightConeRawRank = {\n    ...lcRank,\n    desc: `After every attack launched by wearer, their SPD increases by #3[f1]%, stacking up to #4[i] times.`,\n  };\n  const lcRank3: LightConeRawRank = {\n    ...lcRank,\n    desc: `If the wearer hits an enemy target that is not afflicted by Erode, there is a 100% base chance to inflict Erode to the target. Enemies afflicted with Erode are also considered to be Shocked and will receive Lightning DoT at the start of each turn equal to #1[i]% of the wearer's ATK, lasting for #5[i] turn(s).`\n  };\n\n  const content: ContentItem[] = [{\n    lc: true,\n    id: 'spdStacks',\n    name: 'spdStacks',\n    formItem: FormSliderWithPopover,\n    text: 'SPD Stacks',\n    title: lcRank.skill,\n    content: getContentFromLCRanks(s, lcRank2),\n    min: 0,\n    max: 3,\n  }, {\n    lc: true,\n    id: 'dotEffect',\n    name: 'dotEffect',\n    formItem: FormSwitchWithPopover,\n    text: 'DoT Effect (not implemented)',\n    title: lcRank.skill,\n    content: getContentFromLCRanks(s, lcRank3),\n  }];\n\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      spdStacks: 3,\n      dotEffect: false\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals;\n\n      x[Stats.SPD_P] += r.spdStacks * sValuesSpd[s]\n      x.ELEMENTAL_DMG += sValuesDmg[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from 'react';\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { ContentItem } from 'types/Conditionals';\nimport { Form } from 'types/Form';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport getContentFromLCRanks from '../getContentFromLCRank';\nimport { SuperImpositionLevel } from 'types/LightCone';\nimport { LightConeConditional, LightConeRawRank } from 'types/LightConeConditionals';\nimport { Stats } from 'lib/constants';\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValuesCr = [0.12, 0.14, 0.16, 0.18, 0.20];\n  const sValuesDmg = [0.12, 0.14, 0.16, 0.18, 0.20];\n\n  const lcRank: LightConeRawRank = {\n    \"id\": \"23007\",\n    \"skill\": \"Mirage of Reality\",\n    \"desc\": \"When the wearer deals DMG to an enemy that currently has #4[i] or more debuffs, increases the wearer's CRIT Rate by #5[i]%.\",\n    \"params\": [[0.24, 1, 0.12, 3, 0.12], [0.28, 1, 0.14, 3, 0.14], [0.32, 1, 0.16, 3, 0.16], [0.36, 1, 0.18, 3, 0.18], [0.4, 1, 0.2, 3, 0.2]],\n    \"properties\": [[{\"type\": \"StatusProbabilityBase\", \"value\": 0.24}], [{\"type\": \"StatusProbabilityBase\", \"value\": 0.28}], [{\"type\": \"StatusProbabilityBase\", \"value\": 0.32}], [{\"type\": \"StatusProbabilityBase\", \"value\": 0.36}], [{\"type\": \"StatusProbabilityBase\", \"value\": 0.4}]]\n  };\n  const lcRank2: LightConeRawRank = {\n    ...lcRank,\n    desc: `After the wearer uses their Basic ATK, Skill, or Ultimate, there is a chance to implant Aether Code on a random hit target that does not yet have it. Targets with Aether Code receive #3[i]% increased DMG for 1 turn.`,\n  };\n\n  const content: ContentItem[] = [{\n    lc: true,\n    id: 'enemy3DebuffsCrBoost',\n    name: 'enemy3DebuffsCrBoost',\n    formItem: FormSwitchWithPopover,\n    text: 'Enemy ≤ 3 debuffs CR buff',\n    title: lcRank.skill,\n    content: getContentFromLCRanks(s, lcRank),\n  }, {\n    lc: true,\n    id: 'targetCodeDebuff',\n    name: 'targetCodeDebuff',\n    formItem: FormSwitchWithPopover,\n    text: 'Target Aether Code debuff',\n    title: lcRank.skill,\n    content: getContentFromLCRanks(s, lcRank2),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      enemy3DebuffsCrBoost: true,\n      targetCodeDebuff: true\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals;\n\n      x[Stats.CR] += (r.enemy3DebuffsCrBoost) ? sValuesCr[s] : 0\n      x.ELEMENTAL_DMG += (r.targetCodeDebuff) ? sValuesDmg[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}","import React from 'react';\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { ContentItem } from 'types/Conditionals';\nimport { Form } from 'types/Form';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport getContentFromLCRanks from '../getContentFromLCRank';\nimport { SuperImpositionLevel } from 'types/LightCone';\nimport { LightConeConditional, LightConeRawRank } from 'types/LightConeConditionals';\nimport { Stats } from 'lib/constants';\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [12, 14, 16, 18, 20];\n\n  const lcRank: LightConeRawRank = {\n    \"id\": \"23008\",\n    \"skill\": \"Thorns\",\n    \"desc\": \"After the wearer uses an attack, for each different enemy target the wearer hits, regenerates #3[f1] Energy. Each attack can regenerate Energy up to #4[i] time(s) this way. After the wearer uses their Ultimate, all allies gain #2[i] SPD for 1 turn.\",\n    \"params\": [[0.24, 12, 3, 3], [0.28, 14, 3.5, 3], [0.32, 16, 4, 3], [0.36, 18, 4.5, 3], [0.4, 20, 5, 3]],\n    \"properties\": [[{\"type\": \"AttackAddedRatio\", \"value\": 0.24}], [{\"type\": \"AttackAddedRatio\", \"value\": 0.28}], [{\"type\": \"AttackAddedRatio\", \"value\": 0.32}], [{\"type\": \"AttackAddedRatio\", \"value\": 0.36}], [{\"type\": \"AttackAddedRatio\", \"value\": 0.4}]]\n  };\n\n  const content: ContentItem[] = [{\n    lc: true,\n    id: 'postUltSpdBuff',\n    name: 'postUltSpdBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'Post ult SPD buff',\n    title: lcRank.skill,\n    content: getContentFromLCRanks(s, lcRank),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      postUltSpdBuff: false,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x[Stats.SPD] += (r.postUltSpdBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from 'react';\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { ContentItem } from 'types/Conditionals';\nimport { Form } from 'types/Form';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport getContentFromLCRanks from '../getContentFromLCRank';\nimport { SuperImpositionLevel } from 'types/LightCone';\nimport { LightConeConditional, LightConeRawRank } from 'types/LightConeConditionals';\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.24, 0.28, 0.32, 0.36, 0.40];\n\n  const lcRank: LightConeRawRank ={\n    \"id\": \"23009\",\n    \"skill\": \"Unfulfilled Yearning\",\n    \"desc\": \"When the wearer is attacked or consumes their own HP, their DMG increases by #3[i]%. This effect is removed after the wearer uses an attack.\",\n    \"params\": [[0.18, 0.18, 0.24], [0.21, 0.21, 0.28], [0.24, 0.24, 0.32], [0.27, 0.27, 0.36], [0.3, 0.3, 0.4]],\n    \"properties\": [[{\"type\": \"CriticalChanceBase\", \"value\": 0.18}, {\"type\": \"HPAddedRatio\", \"value\": 0.18}], [{\"type\": \"CriticalChanceBase\", \"value\": 0.21}, {\"type\": \"HPAddedRatio\", \"value\": 0.21}], [{\"type\": \"CriticalChanceBase\", \"value\": 0.24}, {\"type\": \"HPAddedRatio\", \"value\": 0.24}], [{\"type\": \"CriticalChanceBase\", \"value\": 0.27}, {\"type\": \"HPAddedRatio\", \"value\": 0.27}], [{\"type\": \"CriticalChanceBase\", \"value\": 0.3}, {\"type\": \"HPAddedRatio\", \"value\": 0.3}]]\n  };\n\n  const content: ContentItem[] = [{\n    lc: true,\n    id: 'dmgBuff',\n    name: 'dmgBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'HP consumed or attacked DMG buff',\n    title: lcRank.skill,\n    content: getContentFromLCRanks(s, lcRank),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      dmgBuff: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.dmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}","import React from 'react';\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { ContentItem } from 'types/Conditionals';\nimport { Form } from 'types/Form';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport getContentFromLCRanks from '../getContentFromLCRank';\nimport { SuperImpositionLevel } from 'types/LightCone';\nimport { LightConeConditional, LightConeRawRank } from 'types/LightConeConditionals';\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValuesSkillUltDmg = [0.18, 0.21, 0.24, 0.27, 0.30];\n  const sValuesFuaDmg = [0.48, 0.56, 0.64, 0.72, 0.80];\n\n  const lcRank: LightConeRawRank = {\n    \"id\": \"23010\",\n    \"skill\": \"Long Night\",\n    \"desc\": \"Increases the wearer's CRIT DMG by #1[i]%. Increases the wearer's Skill and Ultimate DMG by #2[i]%.\",\n    \"params\": [[0.36, 0.18, 0.48], [0.42, 0.21, 0.56], [0.48, 0.24, 0.64], [0.54, 0.27, 0.72], [0.6, 0.3, 0.8]],\n    \"properties\": [[{\"type\": \"CriticalDamageBase\", \"value\": 0.36}], [{\"type\": \"CriticalDamageBase\", \"value\": 0.42}], [{\"type\": \"CriticalDamageBase\", \"value\": 0.48}], [{\"type\": \"CriticalDamageBase\", \"value\": 0.54}], [{\"type\": \"CriticalDamageBase\", \"value\": 0.6}]]\n  };\n  const lcRank2: LightConeRawRank = {\n    ...lcRank,\n    desc: `After the wearer uses their Skill or Ultimate, they gain Somnus Corpus. Upon triggering a follow-up attack, Somnus Corpus will be consumed and the follow-up attack DMG increases by #3[i]%.`\n  };\n\n  const content: ContentItem[] = [{\n    lc: true,\n    id: 'fuaDmgBoost',\n    name: 'fuaDmgBoost',\n    formItem: FormSwitchWithPopover,\n    text: 'FUA DMG Boost',\n    title: lcRank.skill,\n    content: getContentFromLCRanks(s, lcRank2),\n    min: 0,\n    max: 0.8,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      fuaDmgBoost: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x.SKILL_BOOST += sValuesSkillUltDmg[s]\n      x.ULT_BOOST += sValuesSkillUltDmg[s]\n      x.FUA_BOOST += (r.fuaDmgBoost) ? sValuesFuaDmg[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from 'react';\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { ContentItem } from 'types/Conditionals';\nimport { Form } from 'types/Form';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport getContentFromLCRanks from '../getContentFromLCRank';\nimport { SuperImpositionLevel } from 'types/LightCone';\nimport { LightConeConditional, LightConeRawRank } from 'types/LightConeConditionals';\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.09, 0.105, 0.12, 0.135, 0.15];\n\n  const lcRank: LightConeRawRank = {\n    \"id\": \"23011\",\n    \"skill\": \"Visioscape\",\n    \"desc\": \"When the wearer's HP is reduced, all allies' DMG dealt increases by #2[f1]%, lasting for #5[i] turn(s).\",\n    \"params\": [[0.24, 0.09, 0.8, 0.12, 2], [0.28, 0.105, 0.85, 0.14, 2], [0.32, 0.12, 0.9, 0.16, 2], [0.36, 0.135, 0.95, 0.18, 2], [0.4, 0.15, 1, 0.2, 2]],\n    \"properties\": [[{\"type\": \"HPAddedRatio\", \"value\": 0.24}, {\"type\": \"SPRatioBase\", \"value\": 0.12}], [{\"type\": \"HPAddedRatio\", \"value\": 0.28}, {\"type\": \"SPRatioBase\", \"value\": 0.14}], [{\"type\": \"HPAddedRatio\", \"value\": 0.32}, {\"type\": \"SPRatioBase\", \"value\": 0.16}], [{\"type\": \"HPAddedRatio\", \"value\": 0.36}, {\"type\": \"SPRatioBase\", \"value\": 0.18}], [{\"type\": \"HPAddedRatio\", \"value\": 0.4}, {\"type\": \"SPRatioBase\", \"value\": 0.2}]]\n  };\n  const content: ContentItem[] = [{\n    lc: true,\n    id: 'hpLostDmgBuff',\n    name: 'hpLostDmgBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'HP lost DMG buff',\n    title: lcRank.skill,\n    content: getContentFromLCRanks(s, lcRank),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      hpLostDmgBuff: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.hpLostDmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}","import React from 'react';\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { ContentItem } from 'types/Conditionals';\nimport { Form } from 'types/Form';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport getContentFromLCRanks from '../getContentFromLCRank';\nimport { SuperImpositionLevel } from 'types/LightCone';\nimport { LightConeConditional, LightConeRawRank } from 'types/LightConeConditionals';\nimport { Stats } from 'lib/constants';\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.36, 0.42, 0.48, 0.54, 0.60];\n\n  const lcRank: LightConeRawRank = {\n    \"id\": \"23012\",\n    \"skill\": \"Sweet Dreams\",\n    \"desc\": \"When the wearer's Basic ATK or Skill does not result in a CRIT Hit, increases their CRIT Rate by #2[i]% for #3[i] turn(s). This effect can only trigger once every #4[i] turn(s).\",\n    \"params\": [[0.3, 0.36, 1, 3], [0.35, 0.42, 1, 3], [0.4, 0.48, 1, 3], [0.45, 0.54, 1, 3], [0.5, 0.6, 1, 3]],\n    \"properties\": [[{\"type\": \"CriticalDamageBase\", \"value\": 0.3}], [{\"type\": \"CriticalDamageBase\", \"value\": 0.35}], [{\"type\": \"CriticalDamageBase\", \"value\": 0.4}], [{\"type\": \"CriticalDamageBase\", \"value\": 0.45}], [{\"type\": \"CriticalDamageBase\", \"value\": 0.5}]]\n  };\n  const content: ContentItem[] = [{\n    lc: true,\n    id: 'missedCritCrBuff',\n    name: 'missedCritCrBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'Missed crit CR buff',\n    title: lcRank.skill,\n    content: getContentFromLCRanks(s, lcRank),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      missedCritCrBuff: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x[Stats.CR] += (r.missedCritCrBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from 'react';\nimport { ContentItem } from 'types/Conditionals';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport getContentFromLCRanks from '../getContentFromLCRank';\nimport { SuperImpositionLevel } from 'types/LightCone';\nimport { LightConeConditional, LightConeRawRank } from 'types/LightConeConditionals';\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const lcRank: LightConeRawRank = {\n    \"id\": \"23013\",\n    \"skill\": \"Morn, Noon, Dusk, and Night\",\n    \"desc\": \"When the wearer heals allies, record the amount of Outgoing Healing. When any ally launches an attack, a random attacked enemy takes Additional DMG equal to #3[i]% of the recorded Outgoing Healing value. The type of this Additional DMG is of the same Type as the wearer's. This Additional DMG is not affected by other buffs, and can only occur 1 time per turn.\",\n    \"params\": [[0.18, 0.12, 0.36], [0.21, 0.14, 0.42], [0.24, 0.16, 0.48], [0.27, 0.18, 0.54], [0.3, 0.2, 0.6]],\n    \"properties\": [[{\"type\": \"HPAddedRatio\", \"value\": 0.18}, {\"type\": \"HealRatioBase\", \"value\": 0.12}], [{\"type\": \"HPAddedRatio\", \"value\": 0.21}, {\"type\": \"HealRatioBase\", \"value\": 0.14}], [{\"type\": \"HPAddedRatio\", \"value\": 0.24}, {\"type\": \"HealRatioBase\", \"value\": 0.16}], [{\"type\": \"HPAddedRatio\", \"value\": 0.27}, {\"type\": \"HealRatioBase\", \"value\": 0.18}], [{\"type\": \"HPAddedRatio\", \"value\": 0.3}, {\"type\": \"HealRatioBase\", \"value\": 0.2}]]\n  };\n  const content: ContentItem[] = [{\n    lc: true,\n    id: 'healingBasedDmgProc',\n    name: 'healingBasedDmgProc',\n    formItem: FormSwitchWithPopover,\n    text: 'Healing based dmg proc (Not implemented)',\n    title: lcRank.skill,\n    content: getContentFromLCRanks(s, lcRank),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      healingBasedDmgProc: false,\n    }),\n    precomputeEffects: (/* x, request */) => {\n      // let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from 'react';\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { ContentItem } from 'types/Conditionals';\nimport { Form } from 'types/Form';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport getContentFromLCRanks from '../getContentFromLCRank';\nimport { SuperImpositionLevel } from 'types/LightCone';\nimport { ConditionalLightConeMap, LightConeConditional, LightConeRawRank } from 'types/LightConeConditionals';\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValuesStackDmg = [0.14, 0.165, 0.19, 0.215, 0.24];\n  const sValuesDefPen = [0.12, 0.14, 0.16, 0.18, 0.20];\n  const lcRank: LightConeRawRank = {\n    \"id\": \"23014\",\n    \"skill\": \"With This Evening Jade\",\n    \"desc\": \"When an ally (excluding the wearer) gets attacked or loses HP, the wearer gains 1 stack of Eclipse, up to a max of #2[i] stack(s). Each stack of Eclipse increases the DMG of the wearer's next attack by #3[f1]%.\",\n    \"params\": [[\n          0.2, 3, 0.14, 0.12\n      ],[\n          0.23, 3, 0.165, 0.14\n      ],[\n          0.26, 3, 0.19, 0.16\n      ],[\n          0.29, 3, 0.215, 0.18\n      ],[\n          0.32, 3, 0.24, 0.2\n      ]\n    ],\n    \"properties\": [[{\n        \"type\": \"CriticalDamageBase\", \"value\": 0.2\n      }],[{\n        \"type\": \"CriticalDamageBase\", \"value\": 0.23\n      }],[{\n        \"type\": \"CriticalDamageBase\", \"value\": 0.26\n      }],[{\n        \"type\": \"CriticalDamageBase\", \"value\": 0.29\n      }],[{\n        \"type\": \"CriticalDamageBase\", \"value\": 0.32\n      }]]\n  };\n  const lcRank2: LightConeRawRank = {\n    ...lcRank,\n    desc: `When #2[i] stack(s) are reached, additionally enables that attack to ignore #4[i]% of the enemy's DEF. This effect will be removed after the wearer uses an attack.`\n  };\n  \n  const content: ContentItem[] = [\n    {\n      lc: true,\n      id: 'eclipseStacks',\n      name: 'eclipseStacks',\n      formItem: FormSliderWithPopover,\n      text: 'Eclipse stacks',\n      title: lcRank.skill,\n      content: getContentFromLCRanks(s, lcRank),\n      min: 0,\n      max: 3,\n    },\n    {\n      lc: true,\n      id: 'maxStackDefPen',\n      name: 'maxStackDefPen',\n      formItem: FormSwitchWithPopover,\n      text: 'Max stack DEF pen',\n      title: lcRank.skill,\n      content: getContentFromLCRanks(s, lcRank2),\n    }\n  ];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      eclipseStacks: 3,\n      maxStackDefPen: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals as ConditionalLightConeMap;\n      x['ELEMENTAL_DMG'] += r.eclipseStacks * sValuesStackDmg[s];\n      x['DEF_SHRED'] += (r.maxStackDefPen && r.eclipseStacks == 3) ? sValuesDefPen[s] : 0;\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  };\n};\n","import React from 'react';\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { ContentItem } from 'types/Conditionals';\nimport { Form } from 'types/Form';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport getContentFromLCRanks from '../getContentFromLCRank';\nimport { SuperImpositionLevel } from 'types/LightCone';\nimport { LightConeConditional, LightConeRawRank } from 'types/LightConeConditionals';\nimport { Stats } from 'lib/constants';\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValuesAtk = [0.18, 0.21, 0.24, 0.27, 0.30];\n  const sValuesErr = [0.06, 0.07, 0.08, 0.09, 0.10];\n\n  const lcRank: LightConeRawRank = {\n    \"id\": \"23015\",\n    \"skill\": \"Defiant Till Death\",\n    \"desc\": \"When the wearer uses their Basic ATK, they will gain 1 stack of Dragon's Call, lasting for #2[i] turns. Each stack of Dragon's Call increases the wearer's ATK by #4[i]% and Energy Regeneration Rate by #5[f1]%. Dragon's Call can be stacked up to #3[i] times.\",\n    \"params\": [[0.18, 2, 2, 0.18, 0.06], [0.21, 2, 2, 0.21, 0.07], [0.24, 2, 2, 0.24, 0.08], [0.27, 2, 2, 0.27, 0.09], [0.3, 2, 2, 0.3, 0.1]],\n    \"properties\": [[{\"type\": \"CriticalChanceBase\", \"value\": 0.18}], [{\"type\": \"CriticalChanceBase\", \"value\": 0.21}], [{\"type\": \"CriticalChanceBase\", \"value\": 0.24}], [{\"type\": \"CriticalChanceBase\", \"value\": 0.27}], [{\"type\": \"CriticalChanceBase\", \"value\": 0.3}]]\n  };\n  const content: ContentItem[] = [{\n    lc: true,\n    id: 'dragonsCallStacks',\n    name: 'dragonsCallStacks',\n    formItem: FormSliderWithPopover,\n    text: \"Dragon's Call stacks\",\n    title: lcRank.skill,\n    content: getContentFromLCRanks(s, lcRank),\n    min: 0,\n    max: 2,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      dragonsCallStacks: 2,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += r.dragonsCallStacks * sValuesAtk[s]\n      x[Stats.ERR] += r.dragonsCallStacks * sValuesErr[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from 'react';\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { ContentItem } from 'types/Conditionals';\nimport { Form } from 'types/Form';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport getContentFromLCRanks from '../getContentFromLCRank';\nimport { SuperImpositionLevel } from 'types/LightCone';\nimport { LightConeConditional, LightConeRawRank } from 'types/LightConeConditionals';\nimport { Stats } from 'lib/constants';\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValuesFuaDmg = [0.30, 0.35, 0.40, 0.45, 0.50];\n  const sValuesCd = [0.12, 0.14, 0.16, 0.18, 0.20];\n  const lcRank: LightConeRawRank = {\n    \"id\": \"23016\",\n    \"skill\": \"One At A Time\",\n    \"desc\": \"Increase the wearer's CRIT Rate by #1[i]% and their follow-up attacks' DMG by #2[i]%.\",\n    \"params\": [[0.18, 0.3, 0.12, 2], [0.21, 0.35, 0.14, 2], [0.24, 0.4, 0.16, 2], [0.27, 0.45, 0.18, 2], [0.3, 0.5, 0.2, 2]],\n    \"properties\": [[{\"type\": \"CriticalChanceBase\", \"value\": 0.18}], [{\"type\": \"CriticalChanceBase\", \"value\": 0.21}], [{\"type\": \"CriticalChanceBase\", \"value\": 0.24}], [{\"type\": \"CriticalChanceBase\", \"value\": 0.27}], [{\"type\": \"CriticalChanceBase\", \"value\": 0.3}]]\n  };\n  const lcRank2: LightConeRawRank = {\n    ...lcRank,\n    desc: `After the wearer uses a follow-up attack, apply the Tame state to the target, stacking up to #4[i] stacks. When allies hit enemy targets under the Tame state, every Tame stack increases the CRIT DMG dealt by #3[i]%.`\n  };\n  const content: ContentItem[] = [{\n    lc: true,\n    id: 'targetTameStacks',\n    name: 'targetTameStacks',\n    formItem: FormSliderWithPopover,\n    text: 'Target Tame stacks',\n    title: lcRank.skill,\n    content: getContentFromLCRanks(s, lcRank2),\n    min: 0,\n    max: 2,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      targetTameStacks: 2,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x[Stats.CD] += r.targetTameStacks * sValuesCd[s];\n      x.FUA_BOOST += sValuesFuaDmg[s];\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}","import React from 'react';\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { ContentItem } from 'types/Conditionals';\nimport { Form } from 'types/Form';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport getContentFromLCRanks from '../getContentFromLCRank';\nimport { SuperImpositionLevel } from 'types/LightCone';\nimport { LightConeConditional, LightConeRawRank } from 'types/LightConeConditionals';\nimport { Stats } from 'lib/constants';\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.024, 0.028, 0.032, 0.036, 0.04];\n\n  const lcRank: LightConeRawRank = {\n    \"id\": \"23017\",\n    \"skill\": \"Deep, Deep Breaths\",\n    \"desc\": \"When the wearer provides healing for an ally, increases the healed ally's ATK by #3[f1]%. This effect can stack up to #4[i] times and lasts for #5[i] turn(s).\",\n    \"params\": [[0.12, 0.1, 0.024, 5, 2], [0.14, 0.11, 0.028, 5, 2], [0.16, 0.12, 0.032, 5, 2], [0.18, 0.13, 0.036, 5, 2], [0.2, 0.14, 0.04, 5, 2]],\n    \"properties\": [[{\"type\": \"SPRatioBase\", \"value\": 0.12}], [{\"type\": \"SPRatioBase\", \"value\": 0.14}], [{\"type\": \"SPRatioBase\", \"value\": 0.16}], [{\"type\": \"SPRatioBase\", \"value\": 0.18}], [{\"type\": \"SPRatioBase\", \"value\": 0.2}]]\n  };\n\n  const content: ContentItem[] = [{\n    lc: true,\n    id: 'atkBuffStacks',\n    name: 'atkBuffStacks',\n    formItem: FormSliderWithPopover,\n    text: 'ATK buff stacks',\n    title: lcRank.skill,\n    content: getContentFromLCRanks(s, lcRank),\n    min: 0,\n    max: 5,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      atkBuffStacks: 5,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += r.atkBuffStacks * sValues[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from 'react';\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { ContentItem } from 'types/Conditionals';\nimport { Form } from 'types/Form';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport getContentFromLCRanks from '../getContentFromLCRank';\nimport { SuperImpositionLevel } from 'types/LightCone';\nimport { LightConeConditional, LightConeRawRank } from 'types/LightConeConditionals';\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.0036, 0.0042, 0.0048, 0.0054, 0.006];\n\n  const lcRank: LightConeRawRank = {\n    \"id\": \"23018\",\n    \"skill\": \"A Knight's Pilgrimage\",\n    \"desc\": \"When the wearer uses Ultimate, increases the wearer's Ultimate DMG based on their Max Energy. Each point of Energy increases the Ultimate DMG by #2[f2]%, up to #3[i] points of Energy.\",\n    \"params\": [[0.36, 0.0036, 180], [0.42, 0.0042, 180], [0.48, 0.0048, 180], [0.54, 0.0054, 180], [0.6, 0.006, 180]],\n    \"properties\": [[{\"type\": \"CriticalDamageBase\", \"value\": 0.36}], [{\"type\": \"CriticalDamageBase\", \"value\": 0.42}], [{\"type\": \"CriticalDamageBase\", \"value\": 0.48}], [{\"type\": \"CriticalDamageBase\", \"value\": 0.54}], [{\"type\": \"CriticalDamageBase\", \"value\": 0.6}]]\n  };\n\n  const content: ContentItem[] = [{\n    lc: true,\n    id: 'maxEnergyUltDmgStacks',\n    name: 'maxEnergyUltDmgStacks',\n    formItem: FormSliderWithPopover,\n    text: 'Max Energy',\n    title: lcRank.skill,\n    content: getContentFromLCRanks(s, lcRank),\n    min: 0,\n    max: 180,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      maxEnergyUltDmgStacks: 180,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x.ULT_BOOST += r.maxEnergyUltDmgStacks * sValues[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from 'react';\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { ContentItem } from 'types/Conditionals';\nimport { Form } from 'types/Form';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport getContentFromLCRanks from '../getContentFromLCRank';\nimport { SuperImpositionLevel } from 'types/LightCone';\nimport { LightConeConditional, LightConeRawRank } from 'types/LightConeConditionals';\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.24, 0.28, 0.32, 0.36, 0.40];\n\n  const lcRank: LightConeRawRank = {\n    \"id\": \"23019\",\n    \"skill\": \"The Plum Fragrance In My Bones\",\n    \"desc\": \"When the wearer uses their Ultimate, increases all allies' DMG by #2[i]%, lasting for #3[i] turn(s).\",\n    \"params\": [\n      [0.6, 0.24, 3, 1.5, 10],\n      [0.7, 0.28, 3, 1.5, 12.5],\n      [0.8, 0.32, 3, 1.5, 15],\n      [0.9, 0.36, 3, 1.5, 17.5],\n      [1, 0.4, 3, 1.5, 20]\n    ],\n    \"properties\": [\n      [{\"type\": \"BreakDamageAddedRatioBase\", \"value\": 0.6}],\n      [{\"type\": \"BreakDamageAddedRatioBase\", \"value\": 0.7}],\n      [{\"type\": \"BreakDamageAddedRatioBase\", \"value\": 0.8}],\n      [{\"type\": \"BreakDamageAddedRatioBase\", \"value\": 0.9}],\n      [{\"type\": \"BreakDamageAddedRatioBase\", \"value\": 1}]\n    ]\n  };\n\n  const content: ContentItem[] = [{\n    lc: true,\n    id: 'postUltDmgBuff',\n    name: 'postUltDmgBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'Post ult DMG duff',\n    title: lcRank.skill,\n    content: getContentFromLCRanks(s, lcRank),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      postUltDmgBuff: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.postUltDmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from \"react\";\nimport { Stats } from 'lib/constants'\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValuesCr = [0.10, 0.11, 0.12, 0.13, 0.14];\n  const sValuesCd = [0.28, 0.35, 0.42, 0.49, 0.56];\n  const lcRanks = {\n    \"id\": \"23021\",\n    \"skill\": \"Capriciousness\",\n    \"desc\": \"At the start of the battle, the wearer gains Mask, lasting for #6[i] turn(s). While the wearer has Mask, the wearer's allies have their CRIT Rate increased by #5[i]% and their CRIT DMG increased by #2[i]%. For every 1 Skill Point the wearer recovers (including Skill Points that exceed the limit), they gain 1 stack of Radiant Flame. And when the wearer has #4[i] stacks of Radiant Flame, all the stacks are removed, and they gain Mask for #3[i] turn(s).\",\n    \"params\": [[0.32, 0.28, 4, 4, 0.1, 3], [0.39, 0.35, 4, 4, 0.11, 3], [0.46, 0.42, 4, 4, 0.12, 3], [0.53, 0.49, 4, 4, 0.13, 3], [0.6, 0.56, 4, 4, 0.14, 3]],\n    \"properties\": [[{\"type\": \"CriticalDamageBase\", \"value\": 0.32}], [{\"type\": \"CriticalDamageBase\", \"value\": 0.39}], [{\"type\": \"CriticalDamageBase\", \"value\": 0.46}], [{\"type\": \"CriticalDamageBase\", \"value\": 0.53}], [{\"type\": \"CriticalDamageBase\", \"value\": 0.6}]]\n  };\n  const content = [{\n    lc: true,\n    id: 'maskActive',\n    name: 'maskActive',\n    formItem: FormSwitchWithPopover,\n    text: 'Mask active',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      maskActive: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x[Stats.CR] += (r.maskActive) ? sValuesCr[s] : 0\n      x[Stats.CD] += (r.maskActive) ? sValuesCd[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\n","import React from \"react\";\nimport { Stats } from 'lib/constants'\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSliderWithPopover } from \"components/optimizerForm/conditionals/FormSlider\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValuesAtk = [0.05, 0.06, 0.07, 0.08, 0.09];\n  const sValuesDotPen = [0.072, 0.079, 0.086, 0.093, 0.10];\n  const lcRanks = {\n    \"id\": \"23022\",\n    \"skill\": \"Crystallize\",\n    \"desc\": \"When the wearer deals DMG to an enemy inflicted with Wind Shear, Burn, Shock, or Bleed, each respectively grants 1 stack of Prophet, stacking up to #4[i] time(s). In a single battle, only 1 stack of Prophet can be granted for each type of DoT. Every stack of Prophet increases wearer's ATK by #2[i]% and enables the DoT dealt to ignore #3[f1]% of the target's DEF.\",\n    \"params\": [[0.4, 0.05, 0.072, 4], [0.45, 0.06, 0.079, 4], [0.5, 0.07, 0.086, 4], [0.55, 0.08, 0.093, 4], [0.6, 0.09, 0.1, 4]],\n    \"properties\": [[{\"type\": \"StatusProbabilityBase\", \"value\": 0.4}], [{\"type\": \"StatusProbabilityBase\", \"value\": 0.45}], [{\"type\": \"StatusProbabilityBase\", \"value\": 0.5}], [{\"type\": \"StatusProbabilityBase\", \"value\": 0.55}], [{\"type\": \"StatusProbabilityBase\", \"value\": 0.6}]]\n  };\n  const content = [{\n    lc: true,\n    id: 'prophetStacks',\n    name: 'prophetStacks',\n    formItem: FormSliderWithPopover,\n    text: 'Prophet stacks',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n    min: 0,\n    max: 4,\n  }];\n  \n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      prophetStacks: 4,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals;\n\n      x[Stats.ATK_P] += r.prophetStacks * sValuesAtk[s]\n      x.DOT_DEF_PEN += r.prophetStacks * sValuesDotPen[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from 'react';\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { ContentItem } from 'types/Conditionals';\nimport { Form } from 'types/Form';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport getContentFromLCRanks from '../getContentFromLCRank';\nimport { SuperImpositionLevel } from 'types/LightCone';\nimport { LightConeConditional, LightConeRawRank } from 'types/LightConeConditionals';\nimport { Stats } from 'lib/constants';\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValuesAtkStacks = [0.08, 0.10, 0.12, 0.14, 0.16]\n  const sValuesDmgBuff = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  const lcRank: LightConeRawRank = {\n    \"id\": \"24000\",\n    \"skill\": \"Moth to Flames\",\n    \"desc\": \"Whenever the wearer attacks, their ATK is increased by #1[i]% in this battle. This effect can stack up to #2[i] time(s).\",\n    \"params\": [[0.08, 4, 0.12, 2], [0.1, 4, 0.15, 2], [0.12, 4, 0.18, 2], [0.14, 4, 0.21, 2], [0.16, 4, 0.24, 2]],\n    \"properties\": [[], [], [], [], []]\n  };\n  const lcRank2: LightConeRawRank = {\n    ...lcRank,\n    desc: `After a character inflicts Weakness Break on an enemy, the wearer's DMG increases by #3[i]% for #4[i] turn(s).`\n  };\n  const content: ContentItem[] = [{\n    lc: true,\n    id: 'atkBoostStacks',\n    name: 'atkBoostStacks',\n    formItem: FormSliderWithPopover,\n    text: 'ATK boost stacks',\n    title: lcRank.skill,\n    content: getContentFromLCRanks(s, lcRank),\n    min: 0,\n    max: 4,\n  }, {\n    lc: true,\n    id: 'weaknessBreakDmgBuff',\n    name: 'weaknessBreakDmgBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'Weakness break DMG buff',\n    title: lcRank.skill,\n    content: getContentFromLCRanks(s, lcRank2),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      atkBoostStacks: 4,\n      weaknessBreakDmgBuff: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += r.atkBoostStacks * sValuesAtkStacks[s]\n      x.ELEMENTAL_DMG += (r.weaknessBreakDmgBuff) ? sValuesDmgBuff[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}","import React from 'react';\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { ContentItem } from 'types/Conditionals';\nimport { Form } from 'types/Form';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport getContentFromLCRanks from '../getContentFromLCRank';\nimport { SuperImpositionLevel } from 'types/LightCone';\nimport { LightConeConditional, LightConeRawRank } from 'types/LightConeConditionals';\nimport { Stats } from 'lib/constants';\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValuesCr = [0.08, 0.10, 0.12, 0.14, 0.16];\n  const sValuesAtk = [0.20, 0.25, 0.30, 0.35, 0.40];\n\n  const lcRank: LightConeRawRank = {\n    \"id\": \"24001\",\n    \"skill\": \"Chase\",\n    \"desc\": \"Increases the wearer's CRIT rate against enemies with HP less than or equal to #2[i]% by an extra #3[i]%.\",\n    \"params\": [[0.08, 0.5, 0.08, 0.2, 2], [0.1, 0.5, 0.1, 0.25, 2], [0.12, 0.5, 0.12, 0.3, 2], [0.14, 0.5, 0.14, 0.35, 2], [0.16, 0.5, 0.16, 0.4, 2]],\n    \"properties\": [[{\"type\": \"CriticalChanceBase\", \"value\": 0.08}], [{\"type\": \"CriticalChanceBase\", \"value\": 0.1}], [{\"type\": \"CriticalChanceBase\", \"value\": 0.12}], [{\"type\": \"CriticalChanceBase\", \"value\": 0.14}], [{\"type\": \"CriticalChanceBase\", \"value\": 0.16}]]\n  };\n  const lcRank2: LightConeRawRank = {\n    ...lcRank,\n    desc: 'When the wearer defeats an enemy, their ATK is increased by #4[i]% for #5[i] turn(s).'\n  };\n\n  const content: ContentItem[] = [{\n    lc: true,\n    id: 'enemyHp50CrBoost',\n    name: 'enemyHp50CrBoost',\n    formItem: FormSwitchWithPopover,\n    text: 'Enemy HP ≤ 50% CR buff',\n    title: lcRank.skill,\n    content: getContentFromLCRanks(s, lcRank),\n  }, {\n    lc: true,\n    id: 'enemyDefeatedAtkBuff',\n    name: 'enemyDefeatedAtkBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'Enemy defeated ATK buff',\n    title: lcRank.skill,\n    content: getContentFromLCRanks(s, lcRank2),\n  }];\n\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      enemyHp50CrBoost: true,\n      enemyDefeatedAtkBuff: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x[Stats.CR] += (r.enemyHp50CrBoost && request.enemyHpPercent <= 0.50) ? sValuesCr[s] : 0\n      x[Stats.ATK_P] += (r.enemyDefeatedAtkBuff) ? sValuesAtk[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}","import React from 'react';\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { ContentItem } from 'types/Conditionals';\nimport { Form } from 'types/Form';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport getContentFromLCRanks from '../getContentFromLCRank';\nimport { SuperImpositionLevel } from 'types/LightCone';\nimport { LightConeConditional, LightConeRawRank } from 'types/LightConeConditionals';\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.12, 0.15, 0.18, 0.21, 0.24];\n\n  const lcRank: LightConeRawRank = {\n    \"id\": \"24002\",\n    \"skill\": \"Treasure\",\n    \"desc\": \"If the wearer is attacked and has no Shield, they gain a Shield equal to #2[i]% of their Max HP for #3[i] turn(s). This effect can only be triggered once every #4[i] turn(s). If the wearer has a Shield when attacked, the DMG they receive decreases by #5[i]%.\",\n    \"params\": [[0.08, 0.16, 2, 3, 0.12], [0.1, 0.2, 2, 3, 0.15], [0.12, 0.24, 2, 3, 0.18], [0.14, 0.28, 2, 3, 0.21], [0.16, 0.32, 2, 3, 0.24]],\n    \"properties\": [[{\"type\": \"StatusResistanceBase\", \"value\": 0.08}], [{\"type\": \"StatusResistanceBase\", \"value\": 0.1}], [{\"type\": \"StatusResistanceBase\", \"value\": 0.12}], [{\"type\": \"StatusResistanceBase\", \"value\": 0.14}], [{\"type\": \"StatusResistanceBase\", \"value\": 0.16}]]\n  };\n\n  const content: ContentItem[] = [{\n    lc: true,\n    id: 'activeShieldDmgDecrease',\n    name: 'activeShieldDmgDecrease',\n    formItem: FormSwitchWithPopover,\n    text: 'Active shield DMG taken decrease',\n    title: lcRank.skill,\n    content: getContentFromLCRanks(s, lcRank),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      activeShieldDmgDecrease: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x.DMG_RED_MULTI *= (r.activeShieldDmgDecrease) ? (1 - sValues[s]) : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}","import React from 'react';\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { ContentItem } from 'types/Conditionals';\nimport { Form } from 'types/Form';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport getContentFromLCRanks from '../getContentFromLCRank';\nimport { SuperImpositionLevel } from 'types/LightCone';\nimport { LightConeConditional, LightConeRawRank } from 'types/LightConeConditionals';\n\n\nexport default(s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.24, 0.30, 0.36, 0.42, 0.48];\n\n  const lcRank: LightConeRawRank ={\n  \"id\": \"24003\",\n  \"skill\": \"Chaos Elixir\",\n  \"desc\": \"When the wearer uses their Ultimate, increases DoT dealt by the wearer by #2[i]%, lasting for #3[i] turn(s).\",\n  \"params\": [[0.2, 0.24, 2, 4], [0.25, 0.3, 2, 4.5], [0.3, 0.36, 2, 5], [0.35, 0.42, 2, 5.5], [0.4, 0.48, 2, 6]],\n  \"properties\": [[{\"type\": \"BreakDamageAddedRatioBase\", \"value\": 0.2}], [{\"type\": \"BreakDamageAddedRatioBase\", \"value\": 0.25}], [{\"type\": \"BreakDamageAddedRatioBase\", \"value\": 0.3}], [{\"type\": \"BreakDamageAddedRatioBase\", \"value\": 0.35}], [{\"type\": \"BreakDamageAddedRatioBase\", \"value\": 0.4}]]\n};\n\n  const content: ContentItem[] = [{\n    lc: true,\n    id: 'postUltDotDmgBuff',\n    name: 'postUltDotDmgBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'Post ult DoT DMG buff',\n    title: lcRank.skill,\n    content: getContentFromLCRanks(s, lcRank),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      postUltDotDmgBuff: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x.DOT_BOOST += r.postUltDotDmgBuff ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.12, 0.15, 0.18, 0.21, 0.24];\n  const lcRanks ={\n    \"id\": \"21000\",\n    \"skill\": \"Mutual Healing\",\n    \"desc\": \"Increases the wearer's Outgoing Healing when they use their Ultimate by #2[i]%.\",\n    \"params\": [[0.08, 0.12], [0.1, 0.15], [0.12, 0.18], [0.14, 0.21], [0.16, 0.24]],\n    \"properties\": [[{\"type\": \"SPRatioBase\", \"value\": 0.08}], [{\"type\": \"SPRatioBase\", \"value\": 0.1}], [{\"type\": \"SPRatioBase\", \"value\": 0.12}], [{\"type\": \"SPRatioBase\", \"value\": 0.14}], [{\"type\": \"SPRatioBase\", \"value\": 0.16}]]\n  };\n  const content = [{\n    lc: true,\n    id: 'postUltHealingBoost',\n    name: 'postUltHealingBoost',\n    formItem: FormSwitchWithPopover,\n    text: 'Ult healing boost',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      postUltHealingBoost: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x[Stats.OHB] += (r.postUltHealingBoost) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from \"react\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSliderWithPopover } from \"components/optimizerForm/conditionals/FormSlider\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.12, 0.15, 0.18, 0.21, 0.24];\n  const lcRanks = {\n    \"id\": \"21001\",\n    \"skill\": \"Toiler\",\n    \"desc\": \"For every debuff the target enemy has, the DMG dealt by the wearer increases by #1[i]%, stacking up to #2[i] time(s). This effect also applies to DoT.\",\n    \"params\": [[0.12, 3], [0.15, 3], [0.18, 3], [0.21, 3], [0.24, 3]],\n    \"properties\": [[], [], [], [], []]\n  };\n  const content = [{\n    lc: true,\n    id: 'debuffStacksDmgIncrease',\n    name: 'debuffStacksDmgIncrease',\n    formItem: FormSliderWithPopover,\n    text: 'Debuff stacks DMG increase',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n    min: 0,\n    max: 3,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      debuffStacksDmgIncrease: 3,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += r.debuffStacksDmgIncrease * sValues[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}","import React from \"react\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.08, 0.09, 0.10, 0.11, 0.12];\n  const lcRanks = {\n    \"id\": \"21002\",\n    \"skill\": \"At This Very Moment\",\n    \"desc\": \"After entering battle, increases All-Type RES of all allies by #2[i]%. Effects of the same type cannot stack.\",\n    \"params\": [[0.16, 0.08], [0.18, 0.09], [0.2, 0.1], [0.22, 0.11], [0.24, 0.12]],\n    \"properties\": [[{\"type\": \"DefenceAddedRatio\", \"value\": 0.16}], [{\"type\": \"DefenceAddedRatio\", \"value\": 0.18}], [{\"type\": \"DefenceAddedRatio\", \"value\": 0.2}], [{\"type\": \"DefenceAddedRatio\", \"value\": 0.22}], [{\"type\": \"DefenceAddedRatio\", \"value\": 0.24}]]\n  };\n  const content = [{\n    lc: true,\n    id: 'dmgResBuff',\n    name: 'dmgResBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'Dmg RES buff',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      dmgResBuff: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x.DMG_RED_MULTI *= (r.dmgResBuff) ? (1 - sValues[s]) : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.12, 0.15, 0.18, 0.21, 0.24];\n  const lcRanks = {\n    \"id\": \"21003\",\n    \"skill\": \"Record\",\n    \"desc\": \"If there are 2 or fewer enemies on the field, increases wearer's CRIT Rate by #2[i]%.\",\n    \"params\": [[0.16, 0.12], [0.2, 0.15], [0.24, 0.18], [0.28, 0.21], [0.32, 0.24]],\n    \"properties\": [[{\"type\": \"AttackAddedRatio\", \"value\": 0.16}], [{\"type\": \"AttackAddedRatio\", \"value\": 0.2}], [{\"type\": \"AttackAddedRatio\", \"value\": 0.24}], [{\"type\": \"AttackAddedRatio\", \"value\": 0.28}], [{\"type\": \"AttackAddedRatio\", \"value\": 0.32}]]\n  };\n  const content = [{\n    lc: true,\n    id: 'enemies2CrBuff',\n    name: 'enemies2CrBuff',\n    formItem: FormSwitchWithPopover,\n    text: '≤ 2 enemies CR buff',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      enemies2CrBuff: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals;\n\n      x[Stats.CR] += (r.enemies2CrBuff && request.enemyCount <= 2) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from \"react\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\n\nexport default (/* s: SuperImpositionLevel */) => {\n  // const sValues = [0, 0, 0, 0, 0];\n  // const lcRank = {\n  //   \"id\": \"21004\",\n  //   \"skill\": \"Old Photo\",\n  //   \"desc\": \"Increases the wearer's Break Effect by #1[i]%. When the wearer attacks, additionally regenerates #2[i] Energy. This effect cannot be repeatedly triggered in a single turn.\",\n  //   \"params\": [\n  //     [\n  //       0.28,\n  //       4\n  //     ],\n  //     [\n  //       0.35,\n  //       5\n  //     ],\n  //     [\n  //       0.42,\n  //       6\n  //     ],\n  //     [\n  //       0.49,\n  //       7\n  //     ],\n  //     [\n  //       0.56,\n  //       8\n  //     ]\n  //   ],\n  //   \"properties\": [\n  //     [\n  //       {\n  //         \"type\": \"BreakDamageAddedRatioBase\",\n  //         \"value\": 0.28\n  //       }\n  //     ],\n  //     [\n  //       {\n  //         \"type\": \"BreakDamageAddedRatioBase\",\n  //         \"value\": 0.35\n  //       }\n  //     ],\n  //     [\n  //       {\n  //         \"type\": \"BreakDamageAddedRatioBase\",\n  //         \"value\": 0.42\n  //       }\n  //     ],\n  //     [\n  //       {\n  //         \"type\": \"BreakDamageAddedRatioBase\",\n  //         \"value\": 0.49\n  //       }\n  //     ],\n  //     [\n  //       {\n  //         \"type\": \"BreakDamageAddedRatioBase\",\n  //         \"value\": 0.56\n  //       }\n  //     ]\n  //   ]\n  // }\n\n  return {\n    display: () => <DisplayFormControl content={null} />,\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      // let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSliderWithPopover } from \"components/optimizerForm/conditionals/FormSlider\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.12, 0.15, 0.18, 0.21, 0.24];\n  const lcRanks = {\n    \"id\": \"21005\",\n    \"skill\": \"Fantastic Adventure\",\n    \"desc\": \"When the wearer uses Basic ATK, Skill, or Ultimate to attack enemies, the wearer gains one stack of Mischievous. Each stack increases the wearer's ATK by #1[i]%.\",\n    \"params\": [[0.12], [0.15], [0.18], [0.21], [0.24]],\n    \"properties\": [[], [], [], [], []]\n  };\n  const content = [{\n    lc: true,\n    id: 'atkBuffStacks',\n    name: 'atkBuffStacks',\n    formItem: FormSliderWithPopover,\n    text: 'ATK buff stacks',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n    min: 0,\n    max: 3,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      atkBuffStacks: 3,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += (r.atkBuffStacks) * sValues[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}","import React from \"react\";\n// import { Stats } from \"lib/constants\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.24, 0.30, 0.36, 0.42, 0.48];\n\n  const lcRanks = {\n    \"id\": \"21006\",\n    \"skill\": \"The Maiden in the Painting\",\n    \"desc\": \"If the current HP of the target enemy is below or equal to #2[i]%, increases DMG dealt by follow-up attacks by an extra #3[i]%.\",\n    \"params\": [[0.24, 0.5, 0.24], [0.3, 0.5, 0.3], [0.36, 0.5, 0.36], [0.42, 0.5, 0.42], [0.48, 0.5, 0.48]],\n    \"properties\": [[], [], [], [], []]\n  };\n  const content = [{\n    lc: true,\n    id: 'enemyHp50FuaBuff',\n    name: 'enemyHp50FuaBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'Enemy HP < 50% fua buff',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      enemyHp50FuaBuff: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      // x[Stats.xxxxxxxxxxxxxxxxxxxxx] += (r.name) ? sValues[s] : 0\n      x.FUA_BOOST += sValues[s]\n      x.FUA_BOOST += (r.enemyHp50FuaBuff && request.enemyHpPercent < 0.50) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}","import React from \"react\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\n\nexport default (/* s: SuperImpositionLevel */) => {\n  // const sValues = [0.10, 0.125, 0.15, 0.175, 0.20]\n  // const lcRank = {\n  //   \"id\": \"21007\",\n  //   \"skill\": \"Cure and Repair\",\n  //   \"desc\": \"Increases the wearer's Outgoing Healing by #1[i]%. When using Skill, regenerates #2[f1] Energy for all allies.\",\n  //   \"params\": [\n  //     [\n  //       0.1,\n  //       2\n  //     ],\n  //     [\n  //       0.125,\n  //       2.5\n  //     ],\n  //     [\n  //       0.15,\n  //       3\n  //     ],\n  //     [\n  //       0.175,\n  //       3.5\n  //     ],\n  //     [\n  //       0.2,\n  //       4\n  //     ]\n  //   ],\n  //   \"properties\": [\n  //     [\n  //       {\n  //         \"type\": \"HealRatioBase\",\n  //         \"value\": 0.1\n  //       }\n  //     ],\n  //     [\n  //       {\n  //         \"type\": \"HealRatioBase\",\n  //         \"value\": 0.125\n  //       }\n  //     ],\n  //     [\n  //       {\n  //         \"type\": \"HealRatioBase\",\n  //         \"value\": 0.15\n  //       }\n  //     ],\n  //     [\n  //       {\n  //         \"type\": \"HealRatioBase\",\n  //         \"value\": 0.175\n  //       }\n  //     ],\n  //     [\n  //       {\n  //         \"type\": \"HealRatioBase\",\n  //         \"value\": 0.2\n  //       }\n  //     ]\n  //   ]\n  // }\n\n  return {\n    display: () => <DisplayFormControl content={null} />,\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      // let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from \"react\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { PrecomputedCharacterConditional } from \"../../../../types/CharacterConditional\";\nimport { SuperImpositionLevel } from \"../../../../types/LightCone\";\nimport { LightConeConditional } from \"../../../../types/LightConeConditionals\";\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.24, 0.30, 0.36, 0.42, 0.48];\n\n  return {\n    display: () => <DisplayFormControl content={[]} />,\n    defaults: () => ({\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional/*, request: Form*/) => {\n      x.DOT_BOOST += sValues[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}","import React from \"react\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\n\nexport default (s: SuperImpositionLevel) => {\n  const sValues = [0.16, 0.18, 0.20, 0.22, 0.24];\n  // const lcRank = {\n  //   \"id\": \"21009\",\n  //   \"skill\": \"Time Fleets Away\",\n  //   \"desc\": \"The wearer is more likely to be attacked, and DMG taken is reduced by #2[i]%.\",\n  //   \"params\": [\n  //     [\n  //       2,\n  //       0.16\n  //     ],\n  //     [\n  //       2,\n  //       0.18\n  //     ],\n  //     [\n  //       2,\n  //       0.2\n  //     ],\n  //     [\n  //       2,\n  //       0.22\n  //     ],\n  //     [\n  //       2,\n  //       0.24\n  //     ]\n  //   ],\n  //   \"properties\": [\n  //     [],\n  //     [],\n  //     [],\n  //     [],\n  //     []\n  //   ]\n  // }\n\n  return {\n    display: () => <DisplayFormControl content={null} />,\n    defaults: () => ({\n    }),\n    precomputeEffects: (x/* , request */) => {\n      // const r = request.lightConeConditionals\n\n      x.DMG_RED_MULTI *= (1 - sValues[s])\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from \"react\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSliderWithPopover } from \"components/optimizerForm/conditionals/FormSlider\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.08, 0.10, 0.12, 0.14, 0.16];\n  const lcRanks = {\n    \"id\": \"21010\",\n    \"skill\": \"Answers of Their Own\",\n    \"desc\": \"For each time the wearer hits the same target, DMG dealt increases by #1[i]%, stacking up to #2[i] time(s). This effect will be dispelled when the wearer changes targets.\",\n    \"params\": [[0.08, 5], [0.1, 5], [0.12, 5], [0.14, 5], [0.16, 5]],\n    \"properties\": [[], [], [], [], []]\n  };\n  const content = [{\n    lc: true,\n    id: 'sameTargetHitStacks',\n    name: 'sameTargetHitStacks',\n    formItem: FormSliderWithPopover,\n    text: 'Same target hit stacks',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n    min: 0,\n    max: 5,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      sameTargetHitStacks: 5,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.sameTargetHitStacks) * sValues[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from \"react\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.12, 0.15, 0.18, 0.21, 0.24];\n  const lcRanks = {\n    \"id\": \"21011\",\n    \"skill\": \"Departure\",\n    \"desc\": \"After entering battle, if an ally deals the same DMG Type as the wearer, DMG dealt increases by #1[i]%.\",\n    \"params\": [[0.12], [0.15], [0.18], [0.21], [0.24]],\n    \"properties\": [[], [], [], [], []]\n  };\n  const content = [{\n    lc: true,\n    id: 'alliesSameElement',\n    name: 'alliesSameElement',\n    formItem: FormSwitchWithPopover,\n    text: 'Same element ally DMG boost',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      alliesSameElement: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.alliesSameElement) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from \"react\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.20, 0.25, 0.30, 0.35, 0.40];\n  const lcRanks = {\n    \"id\": \"21012\",\n    \"skill\": \"Spare No Effort\",\n    \"desc\": \"The wearer also deals an extra #2[i]% of DMG to enemies whose current HP percentage is equal to or higher than the wearer's current HP percentage.\",\n    \"params\": [[0.2, 0.2], [0.25, 0.25], [0.3, 0.3], [0.35, 0.35], [0.4, 0.4]],\n    \"properties\": [[{\"type\": \"AllDamageTypeAddedRatio\", \"value\": 0.2}], [{\"type\": \"AllDamageTypeAddedRatio\", \"value\": 0.25}], [{\"type\": \"AllDamageTypeAddedRatio\", \"value\": 0.3}], [{\"type\": \"AllDamageTypeAddedRatio\", \"value\": 0.35}], [{\"type\": \"AllDamageTypeAddedRatio\", \"value\": 0.4}]]\n  };\n  const content = [{\n    lc: true,\n    id: 'enemyHpHigherDmgBoost',\n    name: 'enemyHpHigherDmgBoost',\n    formItem: FormSwitchWithPopover,\n    text: 'Enemy HP % higher DMG boost',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      enemyHpHigherDmgBoost: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += sValues[s]\n      x.ELEMENTAL_DMG += (r.enemyHpHigherDmgBoost) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from \"react\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.32, 0.40, 0.48, 0.56, 0.64];\n  const lcRanks = {\n    \"id\": \"21013\",\n    \"skill\": \"The Power of Sound\",\n    \"desc\": \"The wearer regenerates #2[i] Energy immediately upon entering battle, and increases Ultimate DMG by #1[i]%.\",\n    \"params\": [[0.32, 20], [0.4, 23], [0.48, 26], [0.56, 29], [0.64, 32]],\n    \"properties\": [[], [], [], [], []]\n  };\n  const content = [{\n    lc: true,\n    id: 'ultDmgBuff',\n    name: 'ultDmgBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'Ult DMG buff',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      ultDmgBuff: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x.ULT_BOOST += (r.ultDmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\n// import { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\n// import { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.33, 0.36, 0.39, 0.42, 0.45];\n  const sMaxValues = [0.15, 0.18, 0.21, 0.24, 0.27];\n  const lcRanks ={\n    \"id\": \"21014\",\n    \"skill\": \"Refraction of Sightline\",\n    \"desc\": \"Increases the wearer's Outgoing Healing by an amount that is equal to #2[i]% of Effect RES. Outgoing Healing can be increased this way by up to #3[i]%.\",\n    \"params\": [[0.16, 0.33, 0.15], [0.2, 0.36, 0.18], [0.24, 0.39, 0.21], [0.28, 0.42, 0.24], [0.32, 0.45, 0.27]],\n    \"properties\": [[{\"type\": \"StatusResistanceBase\", \"value\": 0.16}], [{\"type\": \"StatusResistanceBase\", \"value\": 0.2}], [{\"type\": \"StatusResistanceBase\", \"value\": 0.24}], [{\"type\": \"StatusResistanceBase\", \"value\": 0.28}], [{\"type\": \"StatusResistanceBase\", \"value\": 0.32}]]\n  };\n  const content = [{\n    lc: true,\n    id: 'resToHealingBoost',\n    name: 'resToHealingBoost',\n    formItem: FormSwitchWithPopover,\n    text: 'RES to healing boost',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      resToHealingBoost: true,\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  const r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (c, request) => {\n      const r = request.lightConeConditionals\n      const x = c.x\n\n      const boost = Math.min(sMaxValues[s], sValues[s] * x[Stats.RES])\n      x[Stats.OHB] += (r.resToHealingBoost) ? boost : 0\n    }\n  }\n}","import React from \"react\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.12, 0.13, 0.14, 0.15, 0.16];\n  const lcRanks = {\n    \"id\": \"21015\",\n    \"skill\": \"Glance Back\",\n    \"desc\": \"When the wearer hits an enemy and if the hit enemy is not already Ensnared, then there is a chance to Ensnare the hit enemy. Ensnared enemies' DEF decreases by #2[i]% for #3[i] turn(s).\",\n    \"params\": [[0.6, 0.12, 1], [0.7, 0.13, 1], [0.8, 0.14, 1], [0.9, 0.15, 1], [1, 0.16, 1]],\n    \"properties\": [[], [], [], [], []]\n  };\n  const content = [{\n    lc: true,\n    id: 'targetEnsnared',\n    name: 'targetEnsnared',\n    formItem: FormSwitchWithPopover,\n    text: 'Target ensnared',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      targetEnsnared: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x.DEF_SHRED += (r.targetEnsnared) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\n","import React from \"react\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\n\nexport default (/* s: SuperImpositionLevel */) => {\n  // const sValues = [0, 0, 0, 0, 0];\n  // const lcRank = {\n  //   \"id\": \"21016\",\n  //   \"skill\": \"A New Round of Shuffling\",\n  //   \"desc\": \"Increases the wearer's DEF by #1[i]%. When the wearer is attacked, there is a #2[i]% base chance to Burn the enemy. For each turn, the wearer deals DoT that is equal to #3[i]% of the wearer's DEF for #4[i] turn(s).\",\n  //   \"params\": [\n  //     [\n  //       0.16,\n  //       1,\n  //       0.4,\n  //       2\n  //     ],\n  //     [\n  //       0.2,\n  //       1.05,\n  //       0.5,\n  //       2\n  //     ],\n  //     [\n  //       0.24,\n  //       1.1,\n  //       0.6,\n  //       2\n  //     ],\n  //     [\n  //       0.28,\n  //       1.15,\n  //       0.7,\n  //       2\n  //     ],\n  //     [\n  //       0.32,\n  //       1.2,\n  //       0.8,\n  //       2\n  //     ]\n  //   ],\n  //   \"properties\": [\n  //     [\n  //       {\n  //         \"type\": \"DefenceAddedRatio\",\n  //         \"value\": 0.16\n  //       }\n  //     ],\n  //     [\n  //       {\n  //         \"type\": \"DefenceAddedRatio\",\n  //         \"value\": 0.2\n  //       }\n  //     ],\n  //     [\n  //       {\n  //         \"type\": \"DefenceAddedRatio\",\n  //         \"value\": 0.24\n  //       }\n  //     ],\n  //     [\n  //       {\n  //         \"type\": \"DefenceAddedRatio\",\n  //         \"value\": 0.28\n  //       }\n  //     ],\n  //     [\n  //       {\n  //         \"type\": \"DefenceAddedRatio\",\n  //         \"value\": 0.32\n  //       }\n  //     ]\n  //   ]\n  // }\n\n  return {\n    display: () => <DisplayFormControl content={null} />,\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      // let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from \"react\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.24, 0.30, 0.36, 0.42, 0.48];\n  const lcRanks = {\n    \"id\": \"21017\",\n    \"skill\": \"Like Before You Leave!\",\n    \"desc\": \"Increases the DMG of the wearer's Basic ATK and Skill by #1[i]%. This effect increases by an extra #2[i]% when the wearer's current Energy reaches its max level.\",\n    \"params\": [[0.24, 0.24], [0.3, 0.3], [0.36, 0.36], [0.42, 0.42], [0.48, 0.48]],\n    \"properties\": [[], [], [], [], []]\n  };\n  const content = [{\n    lc: true,\n    id: 'maxEnergyDmgBoost',\n    name: 'maxEnergyDmgBoost',\n    formItem: FormSwitchWithPopover,\n    text: 'Max energy DMG boost',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      maxEnergyDmgBoost: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x.BASIC_BOOST += sValues[s]\n      x.SKILL_BOOST += sValues[s]\n      x.BASIC_BOOST += (r.maxEnergyDmgBoost) ? sValues[s] : 0\n      x.SKILL_BOOST += (r.maxEnergyDmgBoost) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}","import React from \"react\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\n\nexport default (/* s: SuperImpositionLevel */) => {\n  // const sValues = [0, 0, 0, 0, 0];\n  // const lcRank = {\n  //   \"id\": \"21018\",\n  //   \"skill\": \"Cannot Stop It!\",\n  //   \"desc\": \"When the wearer uses their Ultimate, all allies' actions are Advanced Forward by #1[i]%.\",\n  //   \"params\": [\n  //     [\n  //       0.16\n  //     ],\n  //     [\n  //       0.18\n  //     ],\n  //     [\n  //       0.2\n  //     ],\n  //     [\n  //       0.22\n  //     ],\n  //     [\n  //       0.24\n  //     ]\n  //   ],\n  //   \"properties\": [\n  //     [],\n  //     [],\n  //     [],\n  //     [],\n  //     []\n  //   ]\n  // }\n\n  return {\n    display: () => <DisplayFormControl content={null} />,\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      // let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.12, 0.15, 0.18, 0.21, 0.24];\n  const lcRanks = {\n    \"id\": \"21019\",\n    \"skill\": \"Rye Under the Sun\",\n    \"desc\": \"When the wearer defeats an enemy, the wearer's CRIT Rate increases by #2[i]% for #3[i] turn(s).\",\n    \"params\": [[0.16, 0.12, 3], [0.2, 0.15, 3], [0.24, 0.18, 3], [0.28, 0.21, 3], [0.32, 0.24, 3]],\n    \"properties\": [[{\"type\": \"AttackAddedRatio\", \"value\": 0.16}], [{\"type\": \"AttackAddedRatio\", \"value\": 0.2}], [{\"type\": \"AttackAddedRatio\", \"value\": 0.24}], [{\"type\": \"AttackAddedRatio\", \"value\": 0.28}], [{\"type\": \"AttackAddedRatio\", \"value\": 0.32}]]\n  };\n  const content = [{\n    lc: true,\n    id: 'defeatedEnemyCrBuff',\n    name: 'defeatedEnemyCrBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'Defeated enemy CR buff',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      defeatedEnemyCrBuff: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x[Stats.CR] += (r.defeatedEnemyCrBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.24, 0.30, 0.36, 0.42, 0.48];\n  const lcRanks = {\n    \"id\": \"21020\",\n    \"skill\": \"Each Now Has a Role to Play\",\n    \"desc\": \"When the wearer defeats an enemy, the wearer's CRIT DMG increases by #2[i]% for #3[i] turn(s).\",\n    \"params\": [[0.16, 0.24, 3], [0.2, 0.3, 3], [0.24, 0.36, 3], [0.28, 0.42, 3], [0.32, 0.48, 3]],\n    \"properties\": [[{\"type\": \"AttackAddedRatio\", \"value\": 0.16}], [{\"type\": \"AttackAddedRatio\", \"value\": 0.2}], [{\"type\": \"AttackAddedRatio\", \"value\": 0.24}], [{\"type\": \"AttackAddedRatio\", \"value\": 0.28}], [{\"type\": \"AttackAddedRatio\", \"value\": 0.32}]]\n  };\n  const content = [{\n    lc: true,\n    id: 'defeatedEnemyCdBuff',\n    name: 'defeatedEnemyCdBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'Defeated enemy CD buff',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      defeatedEnemyCdBuff: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x[Stats.CD] += (r.defeatedEnemyCdBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from \"react\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\n\nexport default (/* s: SuperImpositionLevel */) => {\n  // const sValues = [0, 0, 0, 0, 0];\n  // const lcRank = {\n  //   \"id\": \"21021\",\n  //   \"skill\": \"Enjoy With Rapture\",\n  //   \"desc\": \"At the start of the wearer's turn, regenerates #2[i] Energy for a randomly chosen ally (excluding the wearer) whose current Energy is lower than #1[i]%.\",\n  //   \"params\": [\n  //     [\n  //       0.5,\n  //       8\n  //     ],\n  //     [\n  //       0.5,\n  //       10\n  //     ],\n  //     [\n  //       0.5,\n  //       12\n  //     ],\n  //     [\n  //       0.5,\n  //       14\n  //     ],\n  //     [\n  //       0.5,\n  //       16\n  //     ]\n  //   ],\n  //   \"properties\": [\n  //     [],\n  //     [],\n  //     [],\n  //     [],\n  //     []\n  //   ]\n  // }\n\n  return {\n    display: () => <DisplayFormControl content={null} />,\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      // let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from \"react\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.16, 0.20, 0.24, 0.28, 0.32];\n  const lcRanks = {\n    \"id\": \"21022\",\n    \"skill\": \"Semibreve Rest\",\n    \"desc\": \"Increases the wearer's DMG to enemies afflicted with Shock or Wind Shear by #2[i]%. This also applies to DoT.\",\n    \"params\": [[0.16, 0.16], [0.2, 0.2], [0.24, 0.24], [0.28, 0.28], [0.32, 0.32]],\n    \"properties\": [[{\"type\": \"BreakDamageAddedRatioBase\", \"value\": 0.16}], [{\"type\": \"BreakDamageAddedRatioBase\", \"value\": 0.2}], [{\"type\": \"BreakDamageAddedRatioBase\", \"value\": 0.24}], [{\"type\": \"BreakDamageAddedRatioBase\", \"value\": 0.28}], [{\"type\": \"BreakDamageAddedRatioBase\", \"value\": 0.32}]]\n  };\n  const content = [{\n    lc: true,\n    id: 'enemyShockWindShear',\n    name: 'enemyShockWindShear',\n    formItem: FormSwitchWithPopover,\n    text: 'Enemy shocked / wind sheared',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      enemyShockWindShear: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.enemyShockWindShear) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}","import React from \"react\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.08, 0.10, 0.12, 0.14, 0.16];\n  const lcRanks = {\n    \"id\": \"21023\",\n    \"skill\": \"Teary-Eyed\",\n    \"desc\": \"At the start of the battle, the DMG dealt to all allies decreases by #2[i]% for #3[i] turn(s). At the same time, immediately restores HP to all allies equal to #1[i]% of the respective HP difference between the characters' Max HP and current HP.\",\n    \"params\": [[0.3, 0.08, 5], [0.35, 0.1, 5], [0.4, 0.12, 5], [0.45, 0.14, 5], [0.5, 0.16, 5]],\n    \"properties\": [[], [], [], [], []]\n  };\n  const content = [{\n    lc: true,\n    id: 'initialDmgReductionBuff',\n    name: 'initialDmgReductionBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'Initial DMG reduction buff',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      initialDmgReductionBuff: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x.DMG_RED_MULTI *= (r.initialDmgReductionBuff) ? (1 - sValues[s]) : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValuesSpd = [0.08, 0.09, 0.10, 0.11, 0.12];\n  const sValuesDmg = [0.12, 0.15, 0.18, 0.21, 0.24];\n  const lcRanks = {\n    \"id\": \"21024\",\n    \"skill\": \"Stave Off the Lingering Cold\",\n    \"desc\": \"After entering battle, increases the wearer's SPD by #1[i]% and DMG by #2[i]%. When the wearer takes DMG, this effect will disappear. This effect will resume after the end of the wearer's next turn.\",\n    \"params\": [[0.08, 0.12], [0.09, 0.15], [0.1, 0.18], [0.11, 0.21], [0.12, 0.24]],\n    \"properties\": [[], [], [], [], []]\n  };\n  const content = [{\n    lc: true,\n    id: 'spdDmgBuff',\n    name: 'spdDmgBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'SPD / DMG buff active',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      spdDmgBuff: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals;\n\n      x[Stats.SPD_P] += (r.spdDmgBuff) ? sValuesSpd[s] : 0\n      x.ELEMENTAL_DMG += (r.spdDmgBuff) ? sValuesDmg[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}","import React from \"react\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\n\nexport default (/* s: SuperImpositionLevel */) => {\n  // const sValues = [0, 0, 0, 0, 0];\n  // const lcRank = {\n  //   \"id\": \"21025\",\n  //   \"skill\": \"Kites From the Past\",\n  //   \"desc\": \"When the wearer uses their Skill, the next ally taking action (except the wearer) deals #1[i]% increased DMG for #2[i] turn(s).\",\n  //   \"params\": [[0.16, 1], [0.2, 1], [0.24, 1], [0.28, 1], [0.32, 1]],\n  //   \"properties\": [[], [], [], [], []]\n  // }\n\n  return {\n    display: () => <DisplayFormControl content={null} />,\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      // let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from \"react\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.16, 0.20, 0.24, 0.28, 0.32];\n  const lcRanks = {\n    \"id\": \"21026\",\n    \"skill\": \"Run!\",\n    \"desc\": \"Increases the wearer's DMG to enemies afflicted with Burn or Bleed by #2[i]%. This also applies to DoT.\",\n    \"params\": [[0.1, 0.16], [0.125, 0.2], [0.15, 0.24], [0.175, 0.28], [0.2, 0.32]],\n    \"properties\": [[{\"type\": \"AttackAddedRatio\", \"value\": 0.1}], [{\"type\": \"AttackAddedRatio\", \"value\": 0.125}], [{\"type\": \"AttackAddedRatio\", \"value\": 0.15}], [{\"type\": \"AttackAddedRatio\", \"value\": 0.175}], [{\"type\": \"AttackAddedRatio\", \"value\": 0.2}]]\n  };\n  const content = [{\n    lc: true,\n    id: 'atkBoost',\n    name: 'atkBoost',\n    formItem: FormSwitchWithPopover,\n    text: 'Enemy Burn/Bleed ATK boost',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      enemyBurnedBleeding: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.enemyBurnedBleeding) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n};","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { FormSliderWithPopover } from \"components/optimizerForm/conditionals/FormSlider\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValuesDmgBoost = [0.12, 0.15, 0.18, 0.21, 0.24];\n  const sValuesStacks = [0.04, 0.05, 0.06, 0.07, 0.08];\n  const lcRanks = {\n    \"id\": \"21027\",\n    \"skill\": \"Get Ready\",\n    \"desc\": \"Increases the wearer's DMG by #1[i]%.\",\n    \"params\": [[0.12, 0.04, 3], [0.15, 0.05, 3], [0.18, 0.06, 3], [0.21, 0.07, 3], [0.24, 0.08, 3]],\n    \"properties\": [[{\"type\": \"AllDamageTypeAddedRatio\", \"value\": 0.12}], [{\"type\": \"AllDamageTypeAddedRatio\", \"value\": 0.15}], [{\"type\": \"AllDamageTypeAddedRatio\", \"value\": 0.18}], [{\"type\": \"AllDamageTypeAddedRatio\", \"value\": 0.21}], [{\"type\": \"AllDamageTypeAddedRatio\", \"value\": 0.24}]]\n  };\n  const lcRanks2 = {\n    ...lcRanks,\n    desc: `For every enemy defeated by the wearer, the wearer's ATK increases by #2[i]%, stacking up to #3[i] time(s).`,\n  };\n\n  const content = [{\n    lc: true,\n    id: 'dmgBoost',\n    name: 'dmgBoost',\n    formItem: FormSwitchWithPopover,\n    text: 'DMG boost',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n  }, {\n    lc: true,\n    id: 'defeatedEnemyAtkStacks',\n    name: 'defeatedEnemyAtkStacks',\n    formItem: FormSliderWithPopover,\n    text: 'Defeated enemy ATK stacks',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks2),\n    min: 0,\n    max: 3,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      dmgBoost: true,\n      defeatedEnemyAtkStacks: 3,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals;\n\n      x[Stats.ATK_P] += r.defeatedEnemyAtkStacks * sValuesStacks[s]\n      x.ELEMENTAL_DMG += (r.dmgBoost) ? sValuesDmgBoost[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from \"react\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\n\nexport default (/* s: SuperImpositionLevel */) => {\n  // const sValues = [0, 0, 0, 0, 0];\n  // const lcRank = {\n  //   \"id\": \"21028\",\n  //   \"skill\": \"Tiny Light\",\n  //   \"desc\": \"Increases the wearer's Max HP by #1[i]%. When using Basic ATK or Skill, restores all allies' HP by an amount equal to #2[f1]% of their respective Max HP.\",\n  //   \"params\": [[0.16, 0.02], [0.2, 0.025], [0.24, 0.03], [0.28, 0.035], [0.32, 0.04]],\n  //   \"properties\": [[{\"type\": \"HPAddedRatio\", \"value\": 0.16}], [{\"type\": \"HPAddedRatio\", \"value\": 0.2}], [{\"type\": \"HPAddedRatio\", \"value\": 0.24}], [{\"type\": \"HPAddedRatio\", \"value\": 0.28}], [{\"type\": \"HPAddedRatio\", \"value\": 0.32}]]\n  // }\n\n  return {\n    display: () => <DisplayFormControl content={null} />,\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      // let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from \"react\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\n\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.48, 0.60, 0.72, 0.84, 0.96];\n  const lcRank = {\n    \"id\": \"21029\",\n    \"skill\": \"A Discourse in Arms\",\n    \"desc\": \"After the wearer uses Basic ATK or Skill, deals Additional DMG equal to #1[i]% of the wearer's ATK to a random enemy that has been attacked.\",\n    \"params\": [[0.48, 0.60, 0.72, 0.84, 0.96]],\n    \"properties\": [[],[],[],[],[]]\n  };\n  const content = [{\n    lc: true,\n    id: 'extraDmgProc',\n    name: 'extraDmgProc',\n    formItem: FormSwitchWithPopover,\n    text: 'Additional DMG proc',\n    title: lcRank.skill,\n    content: getContentFromLCRanks(s, lcRank),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      extraDmgProc: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x.BASIC_SCALING += (r.extraDmgProc) ? sValues[s] : 0\n      x.SKILL_SCALING += (r.extraDmgProc) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from \"react\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\n\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const lcRank = {\n    \"id\": \"21030\",\n    \"skill\": \"New Chapter\",\n    \"desc\": \"Increases the DMG of the wearer when they use their Ultimate by #2[i]% of the wearer's DEF. This effect only applies 1 time per enemy target during each use of the wearer's Ultimate.\",\n    \"params\": [[0.16, 0.6], [0.2, 0.75], [0.24, 0.9], [0.28, 1.05], [0.32, 1.2]],\n    \"properties\": [[{\"type\": \"DefenceAddedRatio\", \"value\": 0.16}], [{\"type\": \"DefenceAddedRatio\", \"value\": 0.2}], [{\"type\": \"DefenceAddedRatio\", \"value\": 0.24}], [{\"type\": \"DefenceAddedRatio\", \"value\": 0.28}], [{\"type\": \"DefenceAddedRatio\", \"value\": 0.32}]]\n  };\n  const content = [{\n    lc: true,\n    id: 'defScalingUltDmg',\n    name: 'defScalingUltDmg',\n    formItem: FormSwitchWithPopover,\n    text: 'DEF scaling ult DMG (Not implemented)',\n    title: lcRank.skill,\n    content: getContentFromLCRanks(s, lcRank),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      defScalingUltDmg: false,\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/*c: PrecomputedCharacterConditional, request: Form*/) => {\n      // console.warn('not implemented', c, request);\n      // let r = request.lightConeConditionals\n      // let x = c.x\n\n      // x.ULT_DEF_SCALING += (r.defScalingUltDmg) ? sValues[s] : 0\n    }\n  }\n}\n","import React from \"react\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\n\nexport default (/* s: SuperImpositionLevel */) => {\n  // const sValues = [0, 0, 0, 0, 0];\n  // const lcRank = {\n  //   \"id\": \"21031\",\n  //   \"skill\": \"Raging Waves\",\n  //   \"desc\": \"Increases the wearer's CRIT Rate by #1[i]%. After a CRIT Hit, there is a #2[i]% fixed chance to dispel 1 buff on the target enemy. This effect can only trigger 1 time per attack.\",\n  //   \"params\": [[0.12, 0.16], [0.15, 0.2], [0.18, 0.24], [0.21, 0.28], [0.24, 0.32]],\n  //   \"properties\": [[{\"type\": \"CriticalChanceBase\", \"value\": 0.12}], [{\"type\": \"CriticalChanceBase\", \"value\": 0.15}], [{\"type\": \"CriticalChanceBase\", \"value\": 0.18}], [{\"type\": \"CriticalChanceBase\", \"value\": 0.21}], [{\"type\": \"CriticalChanceBase\", \"value\": 0.24}]]\n  // }\n\n  return {\n    display: () => <DisplayFormControl content={null} />,\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      // let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\n\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValuesAtk = [0.10, 0.125, 0.15, 0.175, 0.20];\n  const sValuesCd = [0.12, 0.15, 0.18, 0.21, 0.24];\n  const lcRank = {\n    \"id\": \"21032\",\n    \"skill\": \"Secret\",\n    \"desc\": `\n      At the start of the battle and whenever the wearer's turn begins, one of the following effects is applied randomly:\n      ::BR::\n      All allies' ATK increases by #1[i]%\n      ::BR::\n      All allies' CRIT DMG increases by #2[i]%\n      ::BR::\n      All allies' Energy Regeneration Rate increases by #3[i]%.\n      ::BR::\n      The applied effect cannot be identical to the last effect applied, and will replace the previous effect. The applied effect will be removed when the wearer has been knocked down. Effects of the similar type cannot be stacked.`,\n    \"params\": [[0.1, 0.12, 0.06], [0.125, 0.15, 0.075], [0.15, 0.18, 0.09], [0.175, 0.21, 0.105], [0.2, 0.24, 0.12]],\n    \"properties\": [[], [], [], [], []]\n  };\n\n  const content = [{\n    lc: true,\n    id: 'atkBuffActive',\n    name: 'atkBuffActive',\n    formItem: FormSwitchWithPopover,\n    text: 'Atk buff active',\n    title: lcRank.skill,\n    content: getContentFromLCRanks(s, lcRank),\n  }, {\n    lc: true,\n    id: 'cdBuffActive',\n    name: 'cdBuffActive',\n    formItem: FormSwitchWithPopover,\n    text: 'CD buff active',\n    title: lcRank.skill,\n    content: getContentFromLCRanks(s, lcRank),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      atkBuffActive: true,\n      cdBuffActive: false,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals;\n\n      x[Stats.ATK_P] += (r.atkBuffActive) ? sValuesAtk[s] : 0\n      x[Stats.CD] += (r.cdBuffActive) ? sValuesCd[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from \"react\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\n\nexport default (/* s: SuperImpositionLevel */) => {\n  // const sValues = [0, 0, 0, 0, 0];\n  // const lcRank = {\n  //   \"id\": \"21033\",\n  //   \"skill\": \"Desperate Times\",\n  //   \"desc\": \"Increases the wearer's ATK by #1[i]%. Whenever the wearer defeats an enemy, they restore HP equal to #2[i]% of their ATK.\",\n  //   \"params\": [[0.24, 0.12], [0.3, 0.15], [0.36, 0.18], [0.42, 0.21], [0.48, 0.24]],\n  //   \"properties\": [[{\"type\": \"AttackAddedRatio\", \"value\": 0.24}], [{\"type\": \"AttackAddedRatio\", \"value\": 0.3}], [{\"type\": \"AttackAddedRatio\", \"value\": 0.36}], [{\"type\": \"AttackAddedRatio\", \"value\": 0.42}], [{\"type\": \"AttackAddedRatio\", \"value\": 0.48}]]\n  // }\n\n  return {\n    display: () => <DisplayFormControl content={null} />,\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      // let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from \"react\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSliderWithPopover } from \"components/optimizerForm/conditionals/FormSlider\";\n\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.002, 0.0025, 0.003, 0.0035, 0.004];\n\n  const lcRank = {\n    \"id\": \"21034\",\n    \"skill\": \"A Storm Is Coming\",\n    \"desc\": \"After entering battle, increases the wearer's DMG based on their Max Energy. DMG increases by #1[i]% per point of Energy, up to #2[i] Energy.\",\n    \"params\": [[0.002, 160], [0.0025, 160], [0.003, 160], [0.0035, 160], [0.004, 160]],\n    \"properties\": [[], [], [], [], []]\n  };\n  const content = [{\n    lc: true,\n    id: 'maxEnergyStacks',\n    name: 'maxEnergyStacks',\n    formItem: FormSliderWithPopover,\n    text: 'Max energy',\n    title: lcRank.skill,\n    content: getContentFromLCRanks(s, lcRank),\n    min: 0,\n    max: 160,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      maxEnergyStacks: 160,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += r.maxEnergyStacks * sValues[s];\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}","import React from \"react\";\n// import { Stats } from 'lib/constants'\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { LightConeConditional } from \"types/LightConeConditionals\";\n\nexport default (/* s: SuperImpositionLevel */): LightConeConditional => {\n  // const sValues = [0, 0, 0, 0, 0];\n\n  return {\n    display: () => <DisplayFormControl content={[]} />,\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      // let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from \"react\";\n// import { Stats } from 'lib/constants'\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.12, 0.14, 0.16, 0.18, 0.20];\n  const lcRanks = {\n    \"id\": \"21036\",\n    \"skill\": \"Solidarity\",\n    \"desc\": \"After the wearer uses a certain type of ability such as Basic ATK, Skill, or Ultimate, all allies gain Childishness, which increases allies' DMG for the same type of ability as used by the wearer by #1[i]%. Childishness only takes effect for the most recent type of ability the wearer used and cannot be stacked.\",\n    \"params\": [\n      [\n        0.12\n      ],\n      [\n        0.14\n      ],\n      [\n        0.16\n      ],\n      [\n        0.18\n      ],\n      [\n        0.2\n      ]\n    ],\n    \"properties\": [\n      [],\n      [],\n      [],\n      [],\n      []\n    ]\n  };\n  const content = [{\n    lc: true,\n    id: 'basicDmgBuff',\n    name: 'basicDmgBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'Basic DMG buff',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n  },\n  {\n    lc: true,\n    id: 'skillDmgBuff',\n    name: 'skillDmgBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'Skill DMG buff',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n  },\n  {\n    lc: true,\n    id: 'ultDmgBuff',\n    name: 'ultDmgBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'Ult DMG buff',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      basicDmgBuff: true,\n      skillDmgBuff: true,\n      ultDmgBuff: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x.BASIC_BOOST += (r.basicDmgBuff) ? sValues[s] : 0\n      x.SKILL_BOOST += (r.skillDmgBuff) ? sValues[s] : 0\n      x.ULT_BOOST += (r.ultDmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}","import React from \"react\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSliderWithPopover } from \"components/optimizerForm/conditionals/FormSlider\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\nimport { Stats } from \"../../../constants.ts\";\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.08, 0.09, 0.10, 0.11, 0.12];\n  const lcRanks = {\n    \"id\": \"21037\",\n    \"skill\": \"All In\",\n    \"desc\": \"When the wearer lands a CRIT hit on enemies, gains a stack of Good Fortune, stacking up to #3[i] time(s). Every stack of Good Fortune the wearer has will increase their CRIT DMG by #2[i]%. Good Fortune will be removed at the end of the wearer's turn.\",\n    \"params\": [\n      [\n        0.12,\n        0.08,\n        4\n      ],\n      [\n        0.14,\n        0.09,\n        4\n      ],\n      [\n        0.16,\n        0.1,\n        4\n      ],\n      [\n        0.18,\n        0.11,\n        4\n      ],\n      [\n        0.2,\n        0.12,\n        4\n      ]\n    ],\n    \"properties\": [\n      [\n        {\n          \"type\": \"AttackAddedRatio\",\n          \"value\": 0.12\n        }\n      ],\n      [\n        {\n          \"type\": \"AttackAddedRatio\",\n          \"value\": 0.14\n        }\n      ],\n      [\n        {\n          \"type\": \"AttackAddedRatio\",\n          \"value\": 0.16\n        }\n      ],\n      [\n        {\n          \"type\": \"AttackAddedRatio\",\n          \"value\": 0.18\n        }\n      ],\n      [\n        {\n          \"type\": \"AttackAddedRatio\",\n          \"value\": 0.2\n        }\n      ]\n    ]\n  };\n  const content = [{\n    lc: true,\n    id: 'goodFortuneStacks',\n    name: 'goodFortuneStacks',\n    formItem: FormSliderWithPopover,\n    text: 'Good Fortune stacks',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n    min: 0,\n    max: 4,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      goodFortuneStacks: 4,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x[Stats.CD] += r.goodFortuneStacks * sValues[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}","import React from \"react\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.25, 0.3125, 0.375, 0.4375, 0.50];\n  const lcRanks = {\n    \"id\": \"21038\",\n    \"skill\": \"Deflagration\",\n    \"desc\": \"When the cumulative HP loss of the wearer during a single attack exceeds #1[i]% of their Max HP, or if the amount of their own HP they consume at one time is greater than #1[i]% of their Max HP, immediately heals the wearer for #3[i]% of their Max HP, and at the same time, increases the DMG they deal by #2[i]% for #4[i] turn(s). This effect can only be triggered once every #5[i] turn(s).\",\n    \"params\": [\n      [\n        0.25,\n        0.25,\n        0.15,\n        2,\n        3\n      ],\n      [\n        0.25,\n        0.3125,\n        0.15,\n        2,\n        3\n      ],\n      [\n        0.25,\n        0.375,\n        0.15,\n        2,\n        3\n      ],\n      [\n        0.25,\n        0.4375,\n        0.15,\n        2,\n        3\n      ],\n      [\n        0.25,\n        0.5,\n        0.15,\n        2,\n        3\n      ]\n    ],\n    \"properties\": [\n      [],\n      [],\n      [],\n      [],\n      []\n    ]\n  };\n  const content = [{\n    lc: true,\n    id: 'dmgBuff',\n    name: 'dmgBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'DMG increased buff',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      dmgBuff: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.dmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from \"react\";\n// import { Stats } from 'lib/constants'\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport { PrecomputedCharacterConditional } from \"../../../../types/CharacterConditional\";\nimport { Stats } from \"../../../constants.ts\";\nimport { SuperImpositionLevel } from \"../../../../types/LightCone\";\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.008, 0.009, 0.01, 0.011, 0.012];\n  const sValuesMax = [0.32, 0.36, 0.40, 0.44, 0.48];\n\n  return {\n    display: () => <DisplayFormControl content={[]} />,\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      // let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional/*, request: Form*/) => {\n      // const r = request.lightConeConditionals;\n      const x = c['x'];\n\n      // TODO: Are these divisions ok with floats?\n      x.ELEMENTAL_DMG += Math.min(sValuesMax[s], Math.floor(x[Stats.DEF] / 100) * sValues[s])\n    }\n  }\n}\n","import React from \"react\";\n// import { Stats } from 'lib/constants'\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\nimport { Stats } from \"../../../constants.ts\";\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.20, 0.25, 0.30, 0.35, 0.40];\n  const lcRanks = {\n    \"id\": \"21040\",\n    \"skill\": \"Stratagem\",\n    \"desc\": \"When the wearer uses an attack and at least 2 attacked enemies have the corresponding Weakness, the wearer's CRIT DMG increases by #2[i]% for #3[i] turn(s).\",\n    \"params\": [\n      [\n        0.16,\n        0.2,\n        2\n      ],\n      [\n        0.18,\n        0.25,\n        2\n      ],\n      [\n        0.2,\n        0.3,\n        2\n      ],\n      [\n        0.22,\n        0.35,\n        2\n      ],\n      [\n        0.24,\n        0.4,\n        2\n      ]\n    ],\n    \"properties\": [\n      [\n        {\n          \"type\": \"AttackAddedRatio\",\n          \"value\": 0.16\n        }\n      ],\n      [\n        {\n          \"type\": \"AttackAddedRatio\",\n          \"value\": 0.18\n        }\n      ],\n      [\n        {\n          \"type\": \"AttackAddedRatio\",\n          \"value\": 0.2\n        }\n      ],\n      [\n        {\n          \"type\": \"AttackAddedRatio\",\n          \"value\": 0.22\n        }\n      ],\n      [\n        {\n          \"type\": \"AttackAddedRatio\",\n          \"value\": 0.24\n        }\n      ]\n    ]\n  };\n  const content = [{\n    lc: true,\n    id: 'cdBuffActive',\n    name: 'cdBuffActive',\n    formItem: FormSwitchWithPopover,\n    text: '≥ 2 weakness targets CD buff',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      cdBuffActive: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x[Stats.CD] += (r.cdBuffActive) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}","import React from \"react\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSliderWithPopover } from \"components/optimizerForm/conditionals/FormSlider\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\nimport { Stats } from \"../../../constants.ts\";\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValuesDmg = [0.06, 0.07, 0.08, 0.09, 0.10];\n  const sValuesAtkBuff = [0.20, 0.24, 0.28, 0.32, 0.36];\n\n  const lcRanks = {\n    \"id\": \"21041\",\n    \"skill\": \"Self-Amusement\",\n    \"desc\": \"When the wearer inflicts a debuff on an enemy, gains a stack of Trick. Every stack of Trick increases the wearer's DMG dealt by #1[i]%, stacking up to #2[i] time(s). This effect lasts for #3[i] turn(s). When the wearer's Effect Hit Rate is #4[i]% or higher, increases ATK by #5[i]%.\",\n    \"params\": [\n      [\n        0.06,\n        3,\n        1,\n        0.8,\n        0.2\n      ],\n      [\n        0.07,\n        3,\n        1,\n        0.8,\n        0.24\n      ],\n      [\n        0.08,\n        3,\n        1,\n        0.8,\n        0.28\n      ],\n      [\n        0.09,\n        3,\n        1,\n        0.8,\n        0.32\n      ],\n      [\n        0.1,\n        3,\n        1,\n        0.8,\n        0.36\n      ]\n    ],\n    \"properties\": [\n      [],\n      [],\n      [],\n      [],\n      []\n    ]\n  };\n  const content = [{\n    lc: true,\n    id: 'trickStacks',\n    name: 'trickStacks',\n    formItem: FormSliderWithPopover,\n    text: 'Trick stacks',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n    min: 0,\n    max: 3,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      trickStacks: 3,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += r.trickStacks * sValuesDmg[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (c/*, request*/) => {\n      const x = c['x'];\n\n      x[Stats.ATK] += x[Stats.EHR] >= 0.80 ? c.baseAtk * sValuesAtkBuff[s] : 0\n    }\n  }\n}","import React from \"react\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\nimport { Stats } from \"../../../constants.ts\";\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.15, 0.1875, 0.225, 0.2625, 0.3];\n  const lcRanks = {\n    \"id\": \"21042\",\n    \"skill\": \"Inheritance\",\n    \"desc\": \"Increases the wearer's Break Effect by #1[i]%. When the wearer uses their Ultimate, increases CRIT Rate by #2[i]%, lasting for #3[i] turn(s).\",\n    \"params\": [\n      [\n        0.28,\n        0.15,\n        2\n      ],\n      [\n        0.35,\n        0.1875,\n        2\n      ],\n      [\n        0.42,\n        0.225,\n        2\n      ],\n      [\n        0.49,\n        0.2625,\n        2\n      ],\n      [\n        0.56,\n        0.3,\n        2\n      ]\n    ],\n    \"properties\": [\n      [\n        {\n          \"type\": \"BreakDamageAddedRatioBase\",\n          \"value\": 0.28\n        }\n      ],\n      [\n        {\n          \"type\": \"BreakDamageAddedRatioBase\",\n          \"value\": 0.35\n        }\n      ],\n      [\n        {\n          \"type\": \"BreakDamageAddedRatioBase\",\n          \"value\": 0.42\n        }\n      ],\n      [\n        {\n          \"type\": \"BreakDamageAddedRatioBase\",\n          \"value\": 0.49\n        }\n      ],\n      [\n        {\n          \"type\": \"BreakDamageAddedRatioBase\",\n          \"value\": 0.56\n        }\n      ]\n    ]\n  };\n  const content = [{\n    lc: true,\n    id: 'crBuff',\n    name: 'crBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'Ult CR buff',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      crBuff: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x[Stats.CR] += (r.crBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from \"react\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\n\nexport default (/* s: SuperImpositionLevel */) => {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  // const lcRank = {\n  //   \"id\": \"22000\",\n  //   \"skill\": \"Quick on the Draw\",\n  //   \"desc\": \"Increases the wearer's Effect Hit Rate by #1[i]%. When the wearer attacks DEF-reduced enemies, regenerates #2[i] Energy.\",\n  //   \"params\": [[0.2, 4], [0.25, 5], [0.3, 6], [0.35, 7], [0.4, 8]],\n  //   \"properties\": [[{\"type\": \"StatusProbabilityBase\", \"value\": 0.2}], [{\"type\": \"StatusProbabilityBase\", \"value\": 0.25}], [{\"type\": \"StatusProbabilityBase\", \"value\": 0.3}], [{\"type\": \"StatusProbabilityBase\", \"value\": 0.35}], [{\"type\": \"StatusProbabilityBase\", \"value\": 0.4}]]\n  // };\n\n  // const content = [{\n  //   lc: true,\n  //   id: 'quickOnTheDraw',\n  //   name: 'quickOnTheDraw',\n  //   formItem: FormSwitchWithPopover,\n  //   text: 'Quick on the Draw',\n  //   title: lcRank.skill,\n  //   content: getContentFromLCRanks(s, lcRank),\n  // }];\n\n  return {\n    display: () => <DisplayFormControl content={null} />,\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      // let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\n\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.16, 0.19, 0.22, 0.25, 0.28];\n  const lcRank = {\n    \"id\": \"22001\",\n    \"skill\": \"I'm Not Afraid!\",\n    \"desc\": \"When the wearer uses their Skill, increases Outgoing Healing by #2[i]%, lasting for #3[i] turn(s).\",\n    \"params\": [[0.08, 0.16, 2], [0.09, 0.19, 2], [0.1, 0.22, 2], [0.11, 0.25, 2], [0.12, 0.28, 2]],\n    \"properties\": [[{\"type\": \"HPAddedRatio\", \"value\": 0.08}], [{\"type\": \"HPAddedRatio\", \"value\": 0.09}], [{\"type\": \"HPAddedRatio\", \"value\": 0.1}], [{\"type\": \"HPAddedRatio\", \"value\": 0.11}], [{\"type\": \"HPAddedRatio\", \"value\": 0.12}]]\n  };\n  const content = [{\n    lc: true,\n    id: 'postSkillHealBuff',\n    name: 'postSkillHealBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'Post skill heal buff',\n    title: lcRank.skill,\n    content: getContentFromLCRanks(s, lcRank),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      postSkillHealBuff: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x[Stats.OHB] += (r.postSkillHealBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n};","import React from \"react\";\nimport { Stats } from 'lib/constants'\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.12, 0.15, 0.18, 0.21, 0.24];\n  const lcRanks = {\n    \"id\": \"20000\",\n    \"skill\": \"Crisis\",\n    \"desc\": \"At the start of the battle, the wearer's CRIT Rate increases by #1[i]% for #2[i] turn(s).\",\n    \"params\": [\n      [\n        0.12,\n        3\n      ],\n      [\n        0.15,\n        3\n      ],\n      [\n        0.18,\n        3\n      ],\n      [\n        0.21,\n        3\n      ],\n      [\n        0.24,\n        3\n      ]\n    ],\n    \"properties\": [\n      [],\n      [],\n      [],\n      [],\n      []\n    ]\n  };\n  const content = [{\n    lc: true,\n    id: 'critBuff',\n    name: 'critBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'Initial CR buff',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      critBuff: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x[Stats.CR] += (r.critBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from \"react\";\nimport { Stats } from 'lib/constants'\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.12, 0.15, 0.18, 0.21, 0.24];\n  const lcRanks = {\n    \"id\": \"20001\",\n    \"skill\": \"Prosperity\",\n    \"desc\": \"When the wearer uses their Skill or Ultimate, their Outgoing Healing increases by #1[i]%.\",\n    \"params\": [\n      [\n        0.12\n      ],\n      [\n        0.15\n      ],\n      [\n        0.18\n      ],\n      [\n        0.21\n      ],\n      [\n        0.24\n      ]\n    ],\n    \"properties\": [\n      [],\n      [],\n      [],\n      [],\n      []\n    ]\n  };\n  const content = [{\n    lc: true,\n    id: 'healingBuff',\n    name: 'healingBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'Healing buff',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      healingBuff: true,\n    }),\n    precomputeEffects: (x:PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x[Stats.OHB] += (r.healingBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from \"react\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.20, 0.25, 0.30, 0.35, 0.40];\n  const lcRanks = {\n    \"id\": \"20002\",\n    \"skill\": \"Havoc\",\n    \"desc\": \"Increases the wearer's Basic ATK and Skill DMG by #1[i]%.\",\n    \"params\": [\n      [\n        0.2\n      ],\n      [\n        0.25\n      ],\n      [\n        0.3\n      ],\n      [\n        0.35\n      ],\n      [\n        0.4\n      ]\n    ],\n    \"properties\": [\n      [],\n      [],\n      [],\n      [],\n      []\n    ]\n  };\n  const content = [{\n    lc: true,\n    id: 'basicSkillDmgBuff',\n    name: 'basicSkillDmgBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'Basic/Skill DMG buff',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      basicSkillDmgBuff: true\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x.BASIC_BOOST += (r.basicSkillDmgBuff) ? sValues[s] : 0\n      x.SKILL_BOOST += (r.basicSkillDmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}","import React from \"react\";\nimport { Stats } from 'lib/constants'\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.16, 0.20, 0.24, 0.28, 0.32];\n  const lcRanks = {\n    \"id\": \"20003\",\n    \"skill\": \"Stasis\",\n    \"desc\": \"If the wearer's current HP is lower than #2[i]%, increases their DEF by a further #3[i]%.\",\n    \"params\": [[0.16, 0.5, 0.16], [0.2, 0.5, 0.2], [0.24, 0.5, 0.24], [0.28, 0.5, 0.28], [0.32, 0.5, 0.32]],\n    \"properties\": [[{\"type\": \"DefenceAddedRatio\", \"value\": 0.16}], [{\"type\": \"DefenceAddedRatio\", \"value\": 0.2}], [{\"type\": \"DefenceAddedRatio\", \"value\": 0.24}], [{\"type\": \"DefenceAddedRatio\", \"value\": 0.28}], [{\"type\": \"DefenceAddedRatio\", \"value\": 0.32}]]\n  };\n  const content = [{\n    lc: true,\n    id: 'hp50DefBuff',\n    name: 'hp50DefBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'HP < 50% DEF buff',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      hp50DefBuff: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x[Stats.DEF_P] += (r.hp50DefBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}","import React from \"react\";\nimport { Stats } from 'lib/constants'\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.20, 0.25, 0, 30, 0.35, 0.40];\n  const lcRanks = {\n    \"id\": \"20004\",\n    \"skill\": \"Fallen\",\n    \"desc\": \"At the start of the battle, the wearer's Effect Hit Rate increases by #1[i]% for #2[i] turn(s).\",\n    \"params\": [\n      [\n        0.2,\n        3\n      ],\n      [\n        0.25,\n        3\n      ],\n      [\n        0.3,\n        3\n      ],\n      [\n        0.35,\n        3\n      ],\n      [\n        0.4,\n        3\n      ]\n    ],\n    \"properties\": [\n      [],\n      [],\n      [],\n      [],\n      []\n    ]\n  };\n  const content = [{\n    lc: true,\n    id: 'initialEhrBuff',\n    name: 'initialEhrBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'Initial EHR buff',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      initialEhrBuff: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x[Stats.EHR] += (r.initialEhrBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}","import React from \"react\";\nimport { Stats } from 'lib/constants'\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.08, 0.09, 0.10, 0.11, 0.12];\n  const lcRanks = {\n    \"id\": \"20005\",\n    \"skill\": \"Concerted\",\n    \"desc\": \"After entering battle, increases the ATK of all allies by #1[i]%. Effects of the same type cannot stack.\",\n    \"params\": [\n      [\n        0.08\n      ],\n      [\n        0.09\n      ],\n      [\n        0.1\n      ],\n      [\n        0.11\n      ],\n      [\n        0.12\n      ]\n    ],\n    \"properties\": [\n      [],\n      [],\n      [],\n      [],\n      []\n    ]\n  };\n  const content = [{\n    lc: true,\n    id: 'inBattleAtkBuff',\n    name: 'inBattleAtkBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'Initial ATK buff',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      inBattleAtkBuff: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += (r.inBattleAtkBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}","import React from \"react\";\n// import { Stats } from 'lib/constants'\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\n\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.28, 0.35, 0.42, 0.49, 0.56];\n  const lcRanks = {\n    \"id\": \"20006\",\n    \"skill\": \"Learned\",\n    \"desc\": \"Increases the wearer's Ultimate DMG by #1[i]%.\",\n    \"params\": [\n      [\n        0.28\n      ],\n      [\n        0.35\n      ],\n      [\n        0.42\n      ],\n      [\n        0.49\n      ],\n      [\n        0.56\n      ]\n    ],\n    \"properties\": [\n      [],\n      [],\n      [],\n      [],\n      []\n    ]\n  };\n  const content = [{\n    lc: true,\n    id: 'ultDmgBuff',\n    name: 'ultDmgBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'Ult DMG buff',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      ultDmgBuff: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x.ULT_BOOST += (r.ultDmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}","import React from \"react\";\nimport { Stats } from 'lib/constants'\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.24, 0.30, 0.36, 0.42, 0.48];\n  const lcRanks = {\n    \"id\": \"20007\",\n    \"skill\": \"War Cry\",\n    \"desc\": \"When the wearer defeats an enemy, increases ATK by #1[i]% for #2[i] turn(s).\",\n    \"params\": [\n      [\n        0.24,\n        3\n      ],\n      [\n        0.3,\n        3\n      ],\n      [\n        0.36,\n        3\n      ],\n      [\n        0.42,\n        3\n      ],\n      [\n        0.48,\n        3\n      ]\n    ],\n    \"properties\": [\n      [],\n      [],\n      [],\n      [],\n      []\n    ]\n  };\n  const content = [{\n    lc: true,\n    id: 'defeatedEnemyAtkBuff',\n    name: 'defeatedEnemyAtkBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'Defeated enemy ATK buff',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      defeatedEnemyAtkBuff: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += (r.defeatedEnemyAtkBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from \"react\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { LightConeConditional } from \"types/LightConeConditionals\";\n// import { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\n// import { Form } from \"types/Form\";\n\nexport default (/* s: SuperImpositionLevel */): LightConeConditional => {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => <DisplayFormControl content={[]} />,\n    defaults: () => ({\n      name: true,\n    }),\n    precomputeEffects: (/* x: PrecomputedCharacterConditional, request: Form */) => {  },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}","import React from \"react\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.20, 0.25, 0.30, 0.35, 0.40];\n  const lcRanks = {\n    \"id\": \"20009\",\n    \"skill\": \"Eradication\",\n    \"desc\": \"The wearer deals #2[i]% more DMG to enemy targets whose HP percentage is greater than #1[i]%.\",\n    \"params\": [\n      [\n        0.5,\n        0.2\n      ],\n      [\n        0.5,\n        0.25\n      ],\n      [\n        0.5,\n        0.3\n      ],\n      [\n        0.5,\n        0.35\n      ],\n      [\n        0.5,\n        0.4\n      ]\n    ],\n    \"properties\": [\n      [],\n      [],\n      [],\n      [],\n      []\n    ]\n  };\n  const content = [{\n    lc: true,\n    id: 'enemyHp50Buff',\n    name: 'enemyHp50Buff',\n    formItem: FormSwitchWithPopover,\n    text: 'Enemy HP > 50% DMG buff',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      enemyHp50Buff: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.enemyHp50Buff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}","import React from \"react\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { LightConeConditional } from \"types/LightConeConditionals\";\n\nexport default (/* s: SuperImpositionLevel */): LightConeConditional => {\n  // const sValues = [0, 0, 0, 0, 0];\n\n  return {\n    display: () => <DisplayFormControl content={[]} />,\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      // let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from \"react\";\n// import { Stats } from 'lib/constants'\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.24, 0.30, 0.36, 0.42, 0.48];\n  const lcRanks = {\n    \"id\": \"20011\",\n    \"skill\": \"Pursuit\",\n    \"desc\": \"Increases DMG dealt from its wearer to Slowed enemies by #1[i]%.\",\n    \"params\": [\n      [\n        0.24\n      ],\n      [\n        0.3\n      ],\n      [\n        0.36\n      ],\n      [\n        0.42\n      ],\n      [\n        0.48\n      ]\n    ],\n    \"properties\": [\n      [],\n      [],\n      [],\n      [],\n      []\n    ]\n  };\n  const content = [{\n    lc: true,\n    id: 'enemySlowedDmgBuff',\n    name: 'enemySlowedDmgBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'Enemy slowed DMG buff',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      enemySlowedDmgBuff: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.enemySlowedDmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}","import React from \"react\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { LightConeConditional } from \"types/LightConeConditionals\";\n\nexport default (/* s: SuperImpositionLevel */): LightConeConditional => {\n  // const sValues = [0, 0, 0, 0, 0];\n  // const lcRanks = {\n  //   \"id\": \"20012\",\n  //   \"skill\": \"Fleet Triumph\",\n  //   \"desc\": \"After the wearer uses attacks or gets hit, additionally regenerates #1[i] Energy. This effect cannot be repeatedly triggered in a single turn.\",\n  //   \"params\": [\n  //     [\n  //       4\n  //     ],\n  //     [\n  //       5\n  //     ],\n  //     [\n  //       6\n  //     ],\n  //     [\n  //       7\n  //     ],\n  //     [\n  //       8\n  //     ]\n  //   ],\n  //   \"properties\": [\n  //     [],\n  //     [],\n  //     [],\n  //     [],\n  //     []\n  //   ]\n  // };\n  // const content = [{\n  //   lc: true,\n  //   id: 'attackEnergy',\n  //   name: 'attackEnergy',\n  //   formItem: FormSwitchWithPopover,\n  //   text: 'Attack Energy',\n  //   title: lcRanks.skill,\n  //   content: getContentFromLCRanks(s, lcRanks),\n  // }];\n\n  return {\n    display: () => <DisplayFormControl content={[]} />,\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}","import React from \"react\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { LightConeConditional } from \"types/LightConeConditionals\";\n\n\nexport default (/* s: SuperImpositionLevel */): LightConeConditional => {\n  // const sValues = [0, 0, 0, 0, 0];\n  // const lcRanks = {\n  //   \"id\": \"20013\",\n  //   \"skill\": \"Epiphany\",\n  //   \"desc\": \"After the wearer uses their Skill, additionally regenerates #1[i] Energy. This effect cannot be repeatedly triggered in a single turn.\",\n  //   \"params\": [\n  //     [\n  //       8\n  //     ],\n  //     [\n  //       9\n  //     ],\n  //     [\n  //       10\n  //     ],\n  //     [\n  //       11\n  //     ],\n  //     [\n  //       12\n  //     ]\n  //   ],\n  //   \"properties\": [\n  //     [],\n  //     [],\n  //     [],\n  //     [],\n  //     []\n  //   ]\n  // };\n  // const content = [{\n  //   lc: true,\n  //   id: 'skillEnergy',\n  //   name: 'skillEnergy',\n  //   formItem: FormSwitchWithPopover,\n  //   text: 'Skill Energy',\n  //   title: lcRanks.skill,\n  //   content: getContentFromLCRanks(s, lcRanks),\n  // }];\n\n  return {\n    display: () => <DisplayFormControl content={[]} />,\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}","import React from \"react\";\nimport { Stats } from 'lib/constants'\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.10, 0.12, 0.14, 0.16, 0.18];\n  const lcRanks = {\n    \"id\": \"20014\",\n    \"skill\": \"Alliance\",\n    \"desc\": \"When the wearer defeats an enemy, increases SPD by #1[i]% for #2[i] turn(s).\",\n    \"params\": [\n      [\n        0.1,\n        2\n      ],\n      [\n        0.12,\n        2\n      ],\n      [\n        0.14,\n        2\n      ],\n      [\n        0.16,\n        2\n      ],\n      [\n        0.18,\n        2\n      ]\n    ],\n    \"properties\": [\n      [],\n      [],\n      [],\n      [],\n      []\n    ]\n  };\n  const content = [{\n    lc: true,\n    id: 'defeatedEnemySpdBuff',\n    name: 'defeatedEnemySpdBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'Defeated enemy SPD buff',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      defeatedEnemySpdBuff: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x[Stats.SPD_P] += (r.defeatedEnemySpdBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from \"react\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { LightConeConditional } from \"types/LightConeConditionals\";\n\n\nexport default (/* s: SuperImpositionLevel */): LightConeConditional => {\n  // const sValues = [0, 0, 0, 0, 0];\n  // const lcRanks = {\n  //   \"id\": \"20015\",\n  //   \"skill\": \"Denizens of Abundance\",\n  //   \"desc\": \"After the wearer uses their Basic ATK, their next action will be Advanced Forward by #1[i]%.\",\n  //   \"params\": [\n  //     [\n  //       0.12\n  //     ],\n  //     [\n  //       0.14\n  //     ],\n  //     [\n  //       0.16\n  //     ],\n  //     [\n  //       0.18\n  //     ],\n  //     [\n  //       0.2\n  //     ]\n  //   ],\n  //   \"properties\": [\n  //     [],\n  //     [],\n  //     [],\n  //     [],\n  //     []\n  //   ]\n  // };\n  // const content = [{\n  //   lc: true,\n  //   id: 'advancedForward',\n  //   name: 'advancedForward',\n  //   formItem: FormSwitchWithPopover,\n  //   text: 'Advanced Forward',\n  //   title: lcRanks.skill,\n  //   content: getContentFromLCRanks(s, lcRanks),\n  // }];\n\n  return {\n    display: () => <DisplayFormControl content={[]} />,\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}","import React from \"react\";\nimport { Stats } from 'lib/constants'\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.12, 0.15, 0.18, 0.21, 0.24];\n  const lcRanks = {\n    \"id\": \"20016\",\n    \"skill\": \"Legion\",\n    \"desc\": \"If the wearer's current HP is lower than #1[i]%, CRIT Rate increases by #2[i]%.\",\n    \"params\": [[0.8, 0.12], [0.8, 0.15], [0.8, 0.18], [0.8, 0.21], [0.8, 0.24]],\n    \"properties\": [[], [], [], [], []]\n  };\n  const content = [{\n    lc: true,\n    id: 'selfHp80CrBuff',\n    name: 'selfHp80CrBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'Self HP < 80% CR buff',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      selfHp80CrBuff: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x[Stats.CR] += (r.selfHp80CrBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}","import React from \"react\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { LightConeConditional } from \"types/LightConeConditionals\";\n\nexport default (/* s: SuperImpositionLevel */): LightConeConditional => {\n  // const sValues = [0, 0, 0, 0, 0]\n  // const lcRanks = {\n  //   \"id\": \"20017\",\n  //   \"skill\": \"IPC\",\n  //   \"desc\": \"When the wearer Breaks an enemy's Weakness, the wearer restores HP by #1[i]% of their Max HP.\",\n  //   \"params\": [[0.12], [0.14], [0.16], [0.18], [0.2]],\n  //   \"properties\": [[], [], [], [], []]\n  // };\n  // const content = [{\n  //   lc: true,\n  //   id: 'weaknessHeal',\n  //   name: 'weaknessHeal',\n  //   formItem: FormSwitchWithPopover,\n  //   text: 'Weakness heal',\n  //   title: lcRanks.skill,\n  //   content: getContentFromLCRanks(s, lcRanks),\n  // }];\n\n  return {\n    display: () => <DisplayFormControl content={[]} />,\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}","import React from \"react\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.60, 0.75, 0.90, 1.05, 1.20];\n  const lcRanks = {\n    \"id\": \"20018\",\n    \"skill\": \"Mechanism\",\n    \"desc\": \"After using Skill, the wearer's next Basic ATK deals Additional DMG equal to #1[i]% of ATK to the target enemy.\",\n    \"params\": [[0.6], [0.75], [0.9], [1.05], [1.2]],\n    \"properties\": [[], [], [], [], []]\n  };\n  const content = [{\n    lc: true,\n    id: 'basicAtkBuff', // TODO: this isnt a basicAtkBuff its more like basicAtkExtraDmgProc?\n    name: 'basicAtkBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'Basic ATK extra DMG',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      basicAtkBuff: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x.BASIC_SCALING += (r.basicAtkBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import React from \"react\";\nimport { Stats } from 'lib/constants'\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [12, 14, 16, 18, 20];\n  const lcRanks = {\n    \"id\": \"20019\",\n    \"skill\": \"Family\",\n    \"desc\": \"Upon entering battle, increases SPD of all allies by #1[i] points for #2[i] turn(s).\",\n    \"params\": [[12, 1], [14, 1], [16, 1], [18, 1], [20, 1]],\n    \"properties\": [[], [], [], [], []]\n  };\n  const content = [{\n    lc: true,\n    id: 'initialSpdBuff',\n    name: 'initialSpdBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'Initial SPD buff',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      initialSpdBuff: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x[Stats.SPD] += (r.initialSpdBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}","import React from \"react\";\nimport { Stats } from 'lib/constants'\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { Form } from 'types/Form';\nimport { LightConeConditional } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"../getContentFromLCRank\";\n\nexport default (s: SuperImpositionLevel): LightConeConditional => {\n  const sValues = [0.24, 0.30, 0.36, 0.42, 0.48];\n  const lcRanks = {\n    \"id\": \"20020\",\n    \"skill\": \"Genius\",\n    \"desc\": \"When the wearer uses their Ultimate, increases ATK by #1[i]% for #2[i] turn(s).\",\n    \"params\": [[0.24, 2], [0.3, 2], [0.36, 2], [0.42, 2], [0.48, 2]],\n    \"properties\": [[], [], [], [], []]\n  };\n  const content = [{\n    lc: true,\n    id: 'postUltAtkBuff',\n    name: 'postUltAtkBuff',\n    formItem: FormSwitchWithPopover,\n    text: 'Post ult ATK buff',\n    title: lcRanks.skill,\n    content: getContentFromLCRanks(s, lcRanks),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      postUltAtkBuff: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += (r.postUltAtkBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n","import { Constants } from '../constants.ts'\nimport { BufferPacker } from '../bufferPacker.js'\nimport { CharacterConditionals } from \"../characterConditionals.js\";\nimport { LightConeConditionals } from \"../lightConeConditionals\";\n\nfunction sumRelicStats(headRelics, handsRelics, bodyRelics, feetRelics, planarSphereRelics, linkRopeRelics, h, g, b, f, p, l, statValues) {\n  let summedStats = {}\n  for (let stat of statValues) {\n    summedStats[stat] =\n      headRelics[h].augmentedStats[stat] +\n      handsRelics[g].augmentedStats[stat] +\n      bodyRelics[b].augmentedStats[stat] +\n      feetRelics[f].augmentedStats[stat] +\n      planarSphereRelics[p].augmentedStats[stat] +\n      linkRopeRelics[l].augmentedStats[stat]\n  }\n  summedStats.WEIGHT =\n    headRelics[h].weightScore +\n    handsRelics[g].weightScore +\n    bodyRelics[b].weightScore +\n    feetRelics[f].weightScore +\n    planarSphereRelics[p].weightScore +\n    linkRopeRelics[l].weightScore\n\n  return summedStats\n}\n\nfunction calculateFlatStat(stat, statP, baseValue, lc, trace, relicSum, setEffects) {\n  return (baseValue) * (1 + setEffects + relicSum[statP] + trace[statP] + lc[statP]) + relicSum[stat] + trace[stat]\n}\n\nfunction calculateBaseStat(stat, base, lc) {\n  return base[stat] + lc[stat]\n}\n\nfunction calculatePercentStat(stat, base, lc, trace, relicSum, setEffects) {\n  return base[stat] + lc[stat] + relicSum[stat] + trace[stat] + setEffects\n}\n\nconst pioneerSetIndexToCd = {\n  0: 0,\n  1: 0.08,\n  2: 0.12,\n  3: 0.16,\n  4: 0.24\n}\n\nself.onmessage = function (e) {\n  // console.log(\"Message received from main script\", e.data);\n  // console.log(\"Request received from main script\", JSON.stringify(e.data.request.characterConditionals, null, 4));\n\n  let data = e.data;\n  let relics = data.relics;\n  let character = data.character;\n  let Stats = Constants.Stats;\n  let statValues = Object.values(Stats)\n  let arr = new Float64Array(data.buffer)\n\n  let headRelics = relics.Head;\n  let handsRelics = relics.Hands;\n  let bodyRelics = relics.Body;\n  let feetRelics = relics.Feet;\n  let planarSphereRelics = relics.PlanarSphere;\n  let linkRopeRelics = relics.LinkRope;\n\n  let relicSetCount = Object.values(Constants.SetsRelics).length\n  let ornamentSetCount = Object.values(Constants.SetsOrnaments).length\n\n  let topRow = data.topRow\n\n  let lSize = topRow ? 1 : relics.LinkRope.length\n  let pSize = topRow ? 1 : relics.PlanarSphere.length\n  let fSize = topRow ? 1 : relics.Feet.length\n  let bSize = topRow ? 1 : relics.Body.length\n  let gSize = topRow ? 1 : relics.Hands.length\n  let hSize = topRow ? 1 : relics.Head.length\n\n  let relicSetSolutions = data.relicSetSolutions\n  let ornamentSetSolutions = data.ornamentSetSolutions\n\n  let relicSetToIndex = data.relicSetToIndex\n  let ornamentSetToIndex = data.ornamentSetToIndex\n\n  let elementalMultipliers = data.elementalMultipliers\n\n  let trace = character.traces\n  let lc = character.lightCone\n  let base = character.base\n\n  let request = data.request\n  let setConditionals = request.setConditionals\n\n  let characterConditionals = CharacterConditionals.get(request)\n  let lightConeConditionals = LightConeConditionals.get(request)\n\n  let enabledHunterOfGlacialForest = setConditionals[Constants.Sets.HunterOfGlacialForest][1] == true ? 1 : 0\n  let enabledFiresmithOfLavaForging = setConditionals[Constants.Sets.FiresmithOfLavaForging][1] == true ? 1 : 0\n  let enabledGeniusOfBrilliantStars = setConditionals[Constants.Sets.GeniusOfBrilliantStars][1] == true ? 1 : 0\n  let enabledBandOfSizzlingThunder = setConditionals[Constants.Sets.BandOfSizzlingThunder][1] == true ? 1 : 0\n  let enabledMessengerTraversingHackerspace = setConditionals[Constants.Sets.MessengerTraversingHackerspace][1] == true ? 1 : 0\n  let enabledCelestialDifferentiator = setConditionals[Constants.Sets.CelestialDifferentiator][1] == true ? 1 : 0\n  let enabledWatchmakerMasterOfDreamMachinations = setConditionals[Constants.Sets.WatchmakerMasterOfDreamMachinations][1] == true ? 1 : 0\n\n  let valueChampionOfStreetwiseBoxing = setConditionals[Constants.Sets.ChampionOfStreetwiseBoxing][1]\n  let valueWastelanderOfBanditryDesert = setConditionals[Constants.Sets.WastelanderOfBanditryDesert][1]\n  let valueLongevousDisciple = setConditionals[Constants.Sets.LongevousDisciple][1]\n  let valueTheAshblazingGrandDuke = setConditionals[Constants.Sets.TheAshblazingGrandDuke][1]\n  let valuePrisonerInDeepConfinement = setConditionals[Constants.Sets.PrisonerInDeepConfinement][1]\n  let valuePioneerDiverOfDeadWaters = setConditionals[Constants.Sets.PioneerDiverOfDeadWaters][1]\n\n  let brokenMultiplier = request.enemyWeaknessBroken ? 1 : 0.9\n  let resistance = request.enemyElementalWeak ? 0 : request.enemyResistance\n\n  let precomputedX = characterConditionals.precomputeEffects(request)\n  lightConeConditionals.precomputeEffects(precomputedX, request)\n\n  let combatDisplay = request.statDisplay == 'combat'\n  let baseDisplay = !combatDisplay\n\n  for (let col = 0; col < data.WIDTH; col++) {\n    let index = data.skip + col\n\n    if (index >= data.permutations) {\n      break;\n    }\n\n    let l = (index % lSize);\n    let p = (((index - l) / lSize) % pSize);\n    let f = (((index - p * lSize - l) / (lSize * pSize)) % fSize);\n    let b = (((index - f * pSize * lSize - p * lSize - l) / (lSize * pSize * fSize)) % bSize);\n    let g = (((index - b * fSize * pSize * lSize - f * pSize * lSize - p * lSize - l) / (lSize * pSize * fSize * bSize)) % gSize);\n    let h = (((index - g * bSize * fSize * pSize * lSize - b * fSize * pSize * lSize - f * pSize * lSize - p * lSize - l) / (lSize * pSize * fSize * bSize * gSize)) % hSize);\n\n    let setH = relicSetToIndex[relics.Head[h].set]\n    let setG = relicSetToIndex[relics.Hands[g].set]\n    let setB = relicSetToIndex[relics.Body[b].set]\n    let setF = relicSetToIndex[relics.Feet[f].set]\n\n    let setP = ornamentSetToIndex[relics.PlanarSphere[p].set]\n    let setL = ornamentSetToIndex[relics.LinkRope[l].set]\n\n    let relicSetIndex = setH + setB * relicSetCount + setG * relicSetCount * relicSetCount + setF * relicSetCount * relicSetCount * relicSetCount\n    let ornamentSetIndex = setP + setL * ornamentSetCount;\n\n    // Exit early if sets dont match unless its a topRow search\n    if (relicSetSolutions[relicSetIndex] != 1 || ornamentSetSolutions[ornamentSetIndex] != 1) {\n      if (!topRow) {\n        continue\n      }\n    }\n\n    let c = sumRelicStats(headRelics, handsRelics, bodyRelics, feetRelics, planarSphereRelics, linkRopeRelics, h, g, b, f, p, l, statValues)\n\n    c.relicSetIndex = relicSetIndex\n    c.ornamentSetIndex = ornamentSetIndex\n\n    c.sets = {}\n    let sets = c.sets\n    sets.PasserbyOfWanderingCloud = (1 >> (setH ^ 0)) + (1 >> (setG ^ 0)) + (1 >> (setB ^ 0)) + (1 >> (setF ^ 0)) // * 4p -\n    sets.MusketeerOfWildWheat = (1 >> (setH ^ 1)) + (1 >> (setG ^ 1)) + (1 >> (setB ^ 1)) + (1 >> (setF ^ 1)) // * 4p SPD 6% + basic 10%\n    sets.KnightOfPurityPalace = (1 >> (setH ^ 2)) + (1 >> (setG ^ 2)) + (1 >> (setB ^ 2)) + (1 >> (setF ^ 2)) // * 4p SHIELD\n    sets.HunterOfGlacialForest = (1 >> (setH ^ 3)) + (1 >> (setG ^ 3)) + (1 >> (setB ^ 3)) + (1 >> (setF ^ 3)) // * 4p (25% CD)\n    sets.ChampionOfStreetwiseBoxing = (1 >> (setH ^ 4)) + (1 >> (setG ^ 4)) + (1 >> (setB ^ 4)) + (1 >> (setF ^ 4)) // * 4p (5x5% ATK)\n    sets.GuardOfWutheringSnow = (1 >> (setH ^ 5)) + (1 >> (setG ^ 5)) + (1 >> (setB ^ 5)) + (1 >> (setF ^ 5)) // * 4p -\n    sets.FiresmithOfLavaForging = (1 >> (setH ^ 6)) + (1 >> (setG ^ 6)) + (1 >> (setB ^ 6)) + (1 >> (setF ^ 6)) // * 4p 12% skill + (12% Fire)\n    sets.GeniusOfBrilliantStars = (1 >> (setH ^ 7)) + (1 >> (setG ^ 7)) + (1 >> (setB ^ 7)) + (1 >> (setF ^ 7)) //   4p done\n    sets.BandOfSizzlingThunder = (1 >> (setH ^ 8)) + (1 >> (setG ^ 8)) + (1 >> (setB ^ 8)) + (1 >> (setF ^ 8)) //   4p (20% ATK)\n    sets.EagleOfTwilightLine = (1 >> (setH ^ 9)) + (1 >> (setG ^ 9)) + (1 >> (setB ^ 9)) + (1 >> (setF ^ 9)) //   4p -\n    sets.ThiefOfShootingMeteor = (1 >> (setH ^ 10)) + (1 >> (setG ^ 10)) + (1 >> (setB ^ 10)) + (1 >> (setF ^ 10)) //  4p 16% BE\n    sets.WastelanderOfBanditryDesert = (1 >> (setH ^ 11)) + (1 >> (setG ^ 11)) + (1 >> (setB ^ 11)) + (1 >> (setF ^ 11)) //  4p (10% CD) + (20% CR)\n    sets.LongevousDisciple = (1 >> (setH ^ 12)) + (1 >> (setG ^ 12)) + (1 >> (setB ^ 12)) + (1 >> (setF ^ 12)) //  4p (2x8% CR)\n    sets.MessengerTraversingHackerspace = (1 >> (setH ^ 13)) + (1 >> (setG ^ 13)) + (1 >> (setB ^ 13)) + (1 >> (setF ^ 13)) //  4p (12% SPD)\n    sets.TheAshblazingGrandDuke = (1 >> (setH ^ 14)) + (1 >> (setG ^ 14)) + (1 >> (setB ^ 14)) + (1 >> (setF ^ 14)) //  4p (8*6% ATK)\n    sets.PrisonerInDeepConfinement = (1 >> (setH ^ 15)) + (1 >> (setG ^ 15)) + (1 >> (setB ^ 15)) + (1 >> (setF ^ 15)) //  4p done\n    sets.PioneerDiverOfDeadWaters = (1 >> (setH ^ 16)) + (1 >> (setG ^ 16)) + (1 >> (setB ^ 16)) + (1 >> (setF ^ 16))\n    sets.WatchmakerMasterOfDreamMachinations = (1 >> (setH ^ 17)) + (1 >> (setG ^ 17)) + (1 >> (setB ^ 17)) + (1 >> (setF ^ 17))\n\n    sets.SpaceSealingStation = (1 >> (setP ^ 0)) + (1 >> (setL ^ 0)) // (12% ATK)\n    sets.FleetOfTheAgeless = (1 >> (setP ^ 1)) + (1 >> (setL ^ 1)) // (8% ATK)\n    sets.PanCosmicCommercialEnterprise = (1 >> (setP ^ 2)) + (1 >> (setL ^ 2)) // (25% ATK)\n    sets.BelobogOfTheArchitects = (1 >> (setP ^ 3)) + (1 >> (setL ^ 3)) // (15% DEF)\n    sets.CelestialDifferentiator = (1 >> (setP ^ 4)) + (1 >> (setL ^ 4)) // (60% CR)\n    sets.InertSalsotto = (1 >> (setP ^ 5)) + (1 >> (setL ^ 5)) // (15% ULT/FUA)\n    sets.TaliaKingdomOfBanditry = (1 >> (setP ^ 6)) + (1 >> (setL ^ 6)) // (20% BE)\n    sets.SprightlyVonwacq = (1 >> (setP ^ 7)) + (1 >> (setL ^ 7)) // -\n    sets.RutilantArena = (1 >> (setP ^ 8)) + (1 >> (setL ^ 8)) // (20% BASIC/SKILL)\n    sets.BrokenKeel = (1 >> (setP ^ 9)) + (1 >> (setL ^ 9)) // (10% CD)\n    sets.FirmamentFrontlineGlamoth = (1 >> (setP ^ 10)) + (1 >> (setL ^ 10)) // (12%/18% DMG)\n    sets.PenaconyLandOfTheDreams = (1 >> (setP ^ 11)) + (1 >> (setL ^ 11)) // -\n\n    // ************************************************************\n    // Old elemental dmg logic\n    // ************************************************************\n\n    c.ELEMENTAL_DMG = 0\n    if (elementalMultipliers[0]) c.ELEMENTAL_DMG = calculatePercentStat(Stats.Physical_DMG, base, lc, trace, c, 0.10 * p2(sets.ChampionOfStreetwiseBoxing))\n    if (elementalMultipliers[1]) c.ELEMENTAL_DMG = calculatePercentStat(Stats.Fire_DMG, base, lc, trace, c, 0.10 * p2(sets.FiresmithOfLavaForging) + 0.10 * enabledFiresmithOfLavaForging * p4(sets.FiresmithOfLavaForging))\n    if (elementalMultipliers[2]) c.ELEMENTAL_DMG = calculatePercentStat(Stats.Ice_DMG, base, lc, trace, c, 0.10 * p2(sets.HunterOfGlacialForest))\n    if (elementalMultipliers[3]) c.ELEMENTAL_DMG = calculatePercentStat(Stats.Lightning_DMG, base, lc, trace, c, 0.10 * p2(sets.BandOfSizzlingThunder))\n    if (elementalMultipliers[4]) c.ELEMENTAL_DMG = calculatePercentStat(Stats.Wind_DMG, base, lc, trace, c, 0.10 * p2(sets.EagleOfTwilightLine))\n    if (elementalMultipliers[5]) c.ELEMENTAL_DMG = calculatePercentStat(Stats.Quantum_DMG, base, lc, trace, c, 0.10 * p2(sets.GeniusOfBrilliantStars))\n    if (elementalMultipliers[6]) c.ELEMENTAL_DMG = calculatePercentStat(Stats.Imaginary_DMG, base, lc, trace, c, 0.10 * p2(sets.WastelanderOfBanditryDesert))\n\n    let crSum = c[Stats.CR]\n    let cdSum = c[Stats.CD]\n\n    // ************************************************************\n    // Calculate base stats\n    // ************************************************************\n\n    let baseHp = calculateBaseStat(Stats.HP, base, lc)\n    let baseAtk = calculateBaseStat(Stats.ATK, base, lc)\n    let baseDef = calculateBaseStat(Stats.DEF, base, lc)\n    let baseSpd = calculateBaseStat(Stats.SPD, base, lc)\n    c.baseAtk = baseAtk\n\n    // ************************************************************\n    // Calculate display stats with unconditional sets\n    // ************************************************************\n\n    c[Stats.HP] = calculateFlatStat(Stats.HP, Stats.HP_P, baseHp, lc, trace, c,\n      0.12 * p2(sets.FleetOfTheAgeless) +\n      0.12 * p2(sets.LongevousDisciple))\n\n    c[Stats.ATK] = calculateFlatStat(Stats.ATK, Stats.ATK_P, baseAtk, lc, trace, c,\n      0.12 * p2(sets.SpaceSealingStation) +\n      0.12 * p2(sets.FirmamentFrontlineGlamoth) +\n      0.12 * p2(sets.MusketeerOfWildWheat) +\n      0.12 * p2(sets.PrisonerInDeepConfinement))\n\n    c[Stats.DEF] = calculateFlatStat(Stats.DEF, Stats.DEF_P, baseDef, lc, trace, c,\n      0.15 * p2(sets.BelobogOfTheArchitects) +\n      0.15 * p2(sets.KnightOfPurityPalace))\n\n    c[Stats.SPD] = calculateFlatStat(Stats.SPD, Stats.SPD_P, baseSpd, lc, trace, c,\n      0.06 * p2(sets.MessengerTraversingHackerspace) +\n      0.06 * p4(sets.MusketeerOfWildWheat))\n\n    c[Stats.CR] = calculatePercentStat(Stats.CR, base, lc, trace, c,\n      0.08 * p2(sets.InertSalsotto) +\n      0.08 * p2(sets.RutilantArena))\n\n    c[Stats.CD] = calculatePercentStat(Stats.CD, base, lc, trace, c,\n      0.16 * p2(sets.CelestialDifferentiator))\n\n    c[Stats.EHR] = calculatePercentStat(Stats.EHR, base, lc, trace, c,\n      0.10 * p2(sets.PanCosmicCommercialEnterprise))\n\n    c[Stats.RES] = calculatePercentStat(Stats.RES, base, lc, trace, c,\n      0.10 * p2(sets.BrokenKeel))\n\n    c[Stats.BE] = calculatePercentStat(Stats.BE, base, lc, trace, c,\n      0.16 * p2(sets.TaliaKingdomOfBanditry) +\n      0.16 * p2(sets.ThiefOfShootingMeteor) +\n      0.16 * p4(sets.ThiefOfShootingMeteor))\n\n    c[Stats.ERR] = calculatePercentStat(Stats.ERR, base, lc, trace, c,\n      0.05 * p2(sets.SprightlyVonwacq) +\n      0.05 * p2(sets.PenaconyLandOfTheDreams))\n\n    c[Stats.OHB] = calculatePercentStat(Stats.OHB, base, lc, trace, c,\n      0.10 * p2(sets.PasserbyOfWanderingCloud))\n\n    // Exit early on base display filters failing unless its a topRow search\n    if (baseDisplay && !topRow) {\n      const pass =\n        c[Stats.HP] >= request.minHp && c[Stats.HP] <= request.maxHp &&\n        c[Stats.ATK] >= request.minAtk && c[Stats.ATK] <= request.maxAtk &&\n        c[Stats.DEF] >= request.minDef && c[Stats.DEF] <= request.maxDef &&\n        c[Stats.SPD] >= request.minSpd && c[Stats.SPD] <= request.maxSpd &&\n        c[Stats.CR] >= request.minCr && c[Stats.CR] <= request.maxCr &&\n        c[Stats.CD] >= request.minCd && c[Stats.CD] <= request.maxCd &&\n        c[Stats.EHR] >= request.minEhr && c[Stats.EHR] <= request.maxEhr &&\n        c[Stats.RES] >= request.minRes && c[Stats.RES] <= request.maxRes &&\n        c[Stats.BE] >= request.minBe && c[Stats.BE] <= request.maxBe &&\n        c.WEIGHT >= request.minWeight && c.WEIGHT <= request.maxWeight\n      if (!pass) {\n        continue\n      }\n    }\n\n    c.id = index\n\n    // ************************************************************\n    // Set up combat stats storage x\n    // ************************************************************\n\n    let x = Object.assign({}, precomputedX)\n    c.x = x\n\n    x[Stats.ATK] += c[Stats.ATK]\n    x[Stats.DEF] += c[Stats.DEF]\n    x[Stats.HP] += c[Stats.HP]\n    x[Stats.SPD] += c[Stats.SPD]\n    x[Stats.CD] += c[Stats.CD]\n    x[Stats.CR] += c[Stats.CR]\n    x[Stats.EHR] += c[Stats.EHR]\n    x[Stats.RES] += c[Stats.RES]\n    x[Stats.BE] += c[Stats.BE]\n    x[Stats.ERR] += c[Stats.ERR]\n    x[Stats.OHB] += c[Stats.OHB]\n    x.ELEMENTAL_DMG += c.ELEMENTAL_DMG\n\n    x[Stats.ATK] += request.buffAtk\n    x[Stats.ATK] += request.buffAtkP * baseAtk\n    x[Stats.CD] += request.buffCd\n    x[Stats.CR] += request.buffCr\n    x[Stats.SPD] += request.buffSpdP * baseSpd + request.buffSpd\n    x[Stats.BE] += request.buffBe\n    x.ELEMENTAL_DMG += request.buffDmgBoost\n\n    // ************************************************************\n    // Calculate passive effects & buffs. x stores the internally calculated character stats\n    // ************************************************************\n\n    // No longer needed\n    // characterConditionals.calculatePassives(c, request)\n    // lightConeConditionals.calculatePassives(c, request)\n\n    // ************************************************************\n    // Calculate conditional set effects\n    // ************************************************************\n\n    x[Stats.SPD_P] +=\n      0.12 * enabledMessengerTraversingHackerspace * p4(sets.MessengerTraversingHackerspace)\n    x[Stats.SPD] += x[Stats.SPD_P] * baseSpd\n\n    x[Stats.ATK_P] +=\n      0.05 * valueChampionOfStreetwiseBoxing * p4(sets.ChampionOfStreetwiseBoxing) +\n      0.20 * enabledBandOfSizzlingThunder * p4(sets.BandOfSizzlingThunder) +\n      0.06 * valueTheAshblazingGrandDuke * p4(sets.TheAshblazingGrandDuke) +\n      0.12 * (x[Stats.SPD] >= 120 ? 1 : 0) * p2(sets.SpaceSealingStation) +\n      0.08 * (x[Stats.SPD] >= 120 ? 1 : 0) * p2(sets.FleetOfTheAgeless) +\n      Math.min(0.25, 0.25 * c[Stats.EHR]) * p2(sets.PanCosmicCommercialEnterprise)\n    x[Stats.ATK] += x[Stats.ATK_P] * baseAtk\n\n    x[Stats.DEF_P] +=\n      0.15 * (c[Stats.EHR] >= 0.50 ? 1 : 0) * p2(sets.BelobogOfTheArchitects)\n    x[Stats.DEF] += x[Stats.DEF_P] * baseDef\n\n    x[Stats.HP] += x[Stats.HP_P] * baseHp\n\n    x[Stats.CR] +=\n      0.10 * (valueWastelanderOfBanditryDesert > 0 ? 1 : 0) * p4(sets.WastelanderOfBanditryDesert) +\n      0.08 * valueLongevousDisciple * p4(sets.LongevousDisciple) +\n      0.60 * enabledCelestialDifferentiator * (c[Stats.CD] >= 1.20 ? 1 : 0) * p2(sets.CelestialDifferentiator) +\n      0.04 * (valuePioneerDiverOfDeadWaters > 2 ? 1 : 0) * p4(sets.PioneerDiverOfDeadWaters)\n\n    x[Stats.CD] +=\n      0.25 * enabledHunterOfGlacialForest * p4(sets.HunterOfGlacialForest) +\n      0.10 * (valueWastelanderOfBanditryDesert == 2 ? 1 : 0) * p4(sets.WastelanderOfBanditryDesert) +\n      0.10 * (c[Stats.RES] >= 0.30 ? 1 : 0) * p2(sets.BrokenKeel) +\n      pioneerSetIndexToCd[valuePioneerDiverOfDeadWaters] * p4(sets.PioneerDiverOfDeadWaters)\n\n    x[Stats.BE] +=\n      0.20 * (c[Stats.SPD] >= 145 ? 1 : 0) * p2(sets.TaliaKingdomOfBanditry) +\n      0.30 * enabledWatchmakerMasterOfDreamMachinations * p4(sets.WatchmakerMasterOfDreamMachinations)\n\n    x.BASIC_BOOST +=\n      0.10 * p4(sets.MusketeerOfWildWheat) +\n      0.20 * (x[Stats.CR] >= 0.70 ? 1 : 0) * p2(sets.RutilantArena)\n\n    x.SKILL_BOOST +=\n      0.12 * p4(sets.FiresmithOfLavaForging) +\n      0.20 * (x[Stats.CR] >= 0.70 ? 1 : 0) * p2(sets.RutilantArena)\n\n    x.ULT_BOOST +=\n      0.15 * (x[Stats.CR] >= 0.50 ? 1 : 0) * p2(c.sets.InertSalsotto)\n\n    x.FUA_BOOST +=\n      0.15 * (x[Stats.CR] >= 0.50 ? 1 : 0) * p2(c.sets.InertSalsotto)\n\n    x.FUA_BOOST +=\n      0.20 * p2(c.sets.TheAshblazingGrandDuke)\n\n    x.DEF_SHRED += p4(c.sets.GeniusOfBrilliantStars) ? (enabledGeniusOfBrilliantStars ? 0.20 : 0.10) : 0\n\n    x.DEF_SHRED += 0.06 * valuePrisonerInDeepConfinement * p4(c.sets.PrisonerInDeepConfinement)\n\n    x.ELEMENTAL_DMG +=\n      0.12 * (x[Stats.SPD] >= 135 ? 1 : 0) * p2(sets.FirmamentFrontlineGlamoth) +\n      0.06 * (x[Stats.SPD] >= 160 ? 1 : 0) * p2(sets.FirmamentFrontlineGlamoth)\n\n    // ************************************************************\n    // Calculate skill base damage\n    // ************************************************************\n\n    characterConditionals.calculateBaseMultis(c, request)\n    lightConeConditionals.calculateBaseMultis(c, request)\n\n    // ************************************************************\n    // Calculate overall multipliers\n    // ************************************************************\n\n    let cLevel = request.characterLevel\n    let eLevel = request.enemyLevel\n    let defReduction = x.DEF_SHRED + request.buffDefShred\n    let defIgnore = 0\n\n    let dmgBoostMultiplier = 1 + x.ALL_DMG_MULTI + x.ELEMENTAL_DMG\n    let dmgReductionMultiplier = 1\n\n    let ehp = x[Stats.HP] / (1 - x[Stats.DEF] / (x[Stats.DEF] + 200 + 10 * request.enemyLevel))\n    ehp *= 1 / ((1 - 0.08 * p2(sets.GuardOfWutheringSnow)) * x.DMG_RED_MULTI)\n    c.EHP = ehp\n    let cv = 100 * (crSum * 2 + cdSum)\n    c.CV = cv\n\n    let universalMulti = dmgReductionMultiplier * brokenMultiplier\n\n    x.BASIC_DMG *= universalMulti * (dmgBoostMultiplier + x.BASIC_BOOST) * calculateDefMultiplier(cLevel, eLevel, defReduction, defIgnore, x.BASIC_DEF_PEN) * (Math.min(1, x[Stats.CR] + x.BASIC_CR_BOOST) * (1 + x[Stats.CD] + x.BASIC_CD_BOOST) + (1 - Math.min(1, x[Stats.CR] + x.BASIC_CR_BOOST))) * (1 + x.DMG_TAKEN_MULTI + x.BASIC_VULNERABILITY) * (1 - (resistance - x.RES_PEN - request.buffResPen - x.BASIC_RES_PEN))\n    x.SKILL_DMG *= universalMulti * (dmgBoostMultiplier + x.SKILL_BOOST) * calculateDefMultiplier(cLevel, eLevel, defReduction, defIgnore, x.SKILL_DEF_PEN) * (Math.min(1, x[Stats.CR] + x.SKILL_CR_BOOST) * (1 + x[Stats.CD] + x.SKILL_CD_BOOST) + (1 - Math.min(1, x[Stats.CR] + x.SKILL_CR_BOOST))) * (1 + x.DMG_TAKEN_MULTI + x.SKILL_VULNERABILITY) * (1 - (resistance - x.RES_PEN - request.buffResPen - x.SKILL_RES_PEN))\n    x.ULT_DMG *= universalMulti * (dmgBoostMultiplier + x.ULT_BOOST) * calculateDefMultiplier(cLevel, eLevel, defReduction, defIgnore, x.ULT_DEF_PEN) * (Math.min(1, x[Stats.CR] + x.ULT_CR_BOOST) * (1 + x[Stats.CD] + x.ULT_CD_BOOST) + (1 - Math.min(1, x[Stats.CR] + x.ULT_CR_BOOST))) * (1 + x.DMG_TAKEN_MULTI + x.ULT_VULNERABILITY) * (1 - (resistance - x.RES_PEN - request.buffResPen - x.ULT_RES_PEN))\n    x.FUA_DMG *= universalMulti * (dmgBoostMultiplier + x.FUA_BOOST) * calculateDefMultiplier(cLevel, eLevel, defReduction, defIgnore, x.FUA_DEF_PEN) * (Math.min(1, x[Stats.CR] + x.FUA_CR_BOOST) * (1 + x[Stats.CD] + x.FUA_CD_BOOST) + (1 - Math.min(1, x[Stats.CR] + x.FUA_CR_BOOST))) * (1 + x.DMG_TAKEN_MULTI + x.FUA_VULNERABILITY) * (1 - (resistance - x.RES_PEN - request.buffResPen - x.FUA_RES_PEN))\n    x.DOT_DMG *= universalMulti * (dmgBoostMultiplier + x.DOT_BOOST) * calculateDefMultiplier(cLevel, eLevel, defReduction, defIgnore, x.DOT_DEF_PEN) * (1 + x.DMG_TAKEN_MULTI + x.DOT_VULNERABILITY) * (1 - (resistance - x.RES_PEN - request.buffResPen - x.DOT_RES_PEN))\n\n    // ************************************************************\n    // Filter results\n    // ************************************************************\n\n    // Since we exited early on the c comparisons, we only need to check against x stats here. Ignore if top row search\n    if (combatDisplay && !topRow) {\n      const pass =\n        x[Stats.HP] >= request.minHp && x[Stats.HP] <= request.maxHp &&\n        x[Stats.ATK] >= request.minAtk && x[Stats.ATK] <= request.maxAtk &&\n        x[Stats.DEF] >= request.minDef && x[Stats.DEF] <= request.maxDef &&\n        x[Stats.SPD] >= request.minSpd && x[Stats.SPD] <= request.maxSpd &&\n        x[Stats.CR] >= request.minCr && x[Stats.CR] <= request.maxCr &&\n        x[Stats.CD] >= request.minCd && x[Stats.CD] <= request.maxCd &&\n        x[Stats.EHR] >= request.minEhr && x[Stats.EHR] <= request.maxEhr &&\n        x[Stats.RES] >= request.minRes && x[Stats.RES] <= request.maxRes &&\n        x[Stats.BE] >= request.minBe && x[Stats.BE] <= request.maxBe\n      if (!pass) {\n        continue\n      }\n    }\n\n    let result = (\n      cv >= request.minCv && cv <= request.maxCv &&\n      ehp >= request.minEhp && ehp <= request.maxEhp &&\n      x.BASIC_DMG >= request.minBasic && x.BASIC_DMG <= request.maxBasic &&\n      x.SKILL_DMG >= request.minSkill && x.SKILL_DMG <= request.maxSkill &&\n      x.ULT_DMG >= request.minUlt && x.ULT_DMG <= request.maxUlt &&\n      x.FUA_DMG >= request.minFua && x.FUA_DMG <= request.maxFua &&\n      x.DOT_DMG >= request.minDot && x.DOT_DMG <= request.maxDot\n    )\n\n    // ************************************************************\n    // Pack the passing results into the ArrayBuffer to return\n    // ************************************************************\n\n    if (topRow || result) {\n      BufferPacker.packCharacter(arr, col, c);\n    }\n  }\n\n  self.postMessage({\n    rows: [],\n    buffer: data.buffer\n  }, [data.buffer]);\n}\n\nfunction calculateDefMultiplier(cLevel, eLevel, defReduction, defIgnore, additionalPen) {\n  return (cLevel + 20) / ((eLevel + 20) * Math.max(0, 1 - defReduction - defIgnore - additionalPen) + cLevel + 20)\n}\n\nfunction p4(set) {\n  return set >> 2\n}\n\nfunction p2(set) {\n  return Math.min(1, set >> 1)\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [843], () => (__webpack_require__(7986)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"080bd62d\" + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/dreary-quibbles/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t986: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkhsr_optimizer\"] = self[\"webpackChunkhsr_optimizer\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","__webpack_require__.nc = undefined;","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(843).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["Stats","ATK_P","ATK","BE","CD","CR","DEF_P","DEF","EHR","ERR","Fire_DMG","HP_P","HP","Ice_DMG","Imaginary_DMG","Lightning_DMG","OHB","Physical_DMG","Quantum_DMG","RES","SPD_P","SPD","Wind_DMG","StatsToIndex","i","Object","values","map","x","SetsRelics","SetsOrnaments","Sets","SetsRelicsNames","SetsOrnamentsNames","OrnamentSetToIndex","length","RelicSetToIndex","Constants","BufferPacker","levelStats","push","value","label","concat","extractCharacter","arr","offset","id","ED","CV","WEIGHT","EHP","BASIC","SKILL","ULT","FUA","DOT","xHP","xATK","xDEF","xSPD","xCR","xCD","xEHR","xRES","xBE","xERR","xOHB","xELEMENTAL_DMG","relicSetIndex","ornamentSetIndex","extractArrayToResults","results","packCharacter","character","ELEMENTAL_DMG","BASIC_DMG","SKILL_DMG","ULT_DMG","FUA_DMG","DOT_DMG","cleanFloatBuffer","buffer","Float64Array","fill","createFloatBuffer","Text","Typography","HeaderText","styled","_templateObject","_taggedTemplateLiteral","ASHBLAZING_ATK_STACK","baseComputedStatsObject","DEF_SHRED","DMG_TAKEN_MULTI","ALL_DMG_MULTI","RES_PEN","DMG_RED_MULTI","BASIC_CR_BOOST","SKILL_CR_BOOST","ULT_CR_BOOST","FUA_CR_BOOST","BASIC_CD_BOOST","SKILL_CD_BOOST","ULT_CD_BOOST","FUA_CD_BOOST","BASIC_SCALING","SKILL_SCALING","ULT_SCALING","FUA_SCALING","DOT_SCALING","BASIC_BOOST","SKILL_BOOST","ULT_BOOST","FUA_BOOST","DOT_BOOST","BASIC_VULNERABILITY","SKILL_VULNERABILITY","ULT_VULNERABILITY","FUA_VULNERABILITY","DOT_VULNERABILITY","BASIC_DEF_PEN","SKILL_DEF_PEN","ULT_DEF_PEN","FUA_DEF_PEN","DOT_DEF_PEN","BASIC_RES_PEN","SKILL_RES_PEN","ULT_RES_PEN","FUA_RES_PEN","DOT_RES_PEN","precisionRound","number","precision","arguments","undefined","factor","Math","pow","round","calculateAshblazingSet","c","request","hitMulti","enabled","p4","sets","TheAshblazingGrandDuke","ashblazingAtk","setConditionals","baseAtk","ashblazingMulti","set","skill","eidolon","value1","value2","talent","ultRev","basicRev","ult","basic","skillRev","talentRev","text","color","ret","num","isNum","key","split","forEach","item","_jsx","test","style","children","_Fragment","_ref","content","passive","Item","formItem","_createElement","name","title","ColorizeNumbers","Flex","vertical","gap","WithPopover","WrappedComponent","Wrapped","props","open","setOpen","React","_jsxs","width","display","Popover","trigger","placement","onOpenChange","newOpen","cursor","displayName","conditionalType","lc","FormSwitch","justify","align","Form","valuePropName","Switch","checkedChildren","CheckOutlined","unCheckedChildren","CloseOutlined","disabled","defaultChecked","marginRight","FormSwitchWithPopover","propTypes","FormSlider","inputValue","setInputValue","useState","onChange","newValue","multiplier","percent","step","symbol","marginBottom","minWidth","InputNumber","min","max","controls","size","parser","parseFloat","formatter","addonAfter","height","Slider","marginTop","marginLeft","tooltip","textAlign","FormSliderWithPopover","e","summationStacksMax","basicScaling","skillScaling","ultScaling","fuaScaling","e2FuaRatio","procs","fuaMultiByDebuffs","join","replace","DisplayFormControl","defaults","enemyDebuffStacks","summationStacks","precomputeEffects","r","characterConditionals","assign","calculateBaseMultis","skillDamageReductionValue","basicAtkScaling","basicDefScaling","basicEnhancedAtkScaling","basicEnhancedDefScaling","ultAtkScaling","ultDefScaling","enhancedBasic","skillActive","shieldActive","e6DefStacks","Jingliu","talentCrBuff","talentHpDrainAtkBuffMax","skillEnhancedScaling","talentEnhancedState","talentHpDrainAtkBuff","e1CdBuff","e2SkillDmgBuff","enemyCount","talentAtkScalingValue","ultEnhancedScaling","ultEnhancedScaling2","enhancedUlt","talentStacks","enemyWeaknessBroken","characterOptionMapping","extraPenValue","ultExtraScaling","talentPenBuff","enemySlowed","enemyHpPercent","hitMultiByTargets","targetBurned","selfCurrentHp80Percent","e1TalentSpdBuff","e6UltExtraHits","skillExtraHitsMax","talentScaling","enemyDmgTakenDebuff","skillExtraHits","e1EnhancedState","dotScaling","e1DotDmgReceivedDebuff","skillResShredValue","skillDefShredBufValue","ultDefShredValue","skillResShredDebuff","skillDefShredDebuff","ultDefShredDebuff","targetDebuffs","talentMissingHpDmgBoostMax","selfCurrentHpPercent","ultSpdBuffValue","talentStacksAtkBuff","skillExtraDmgHitsMax","talentBuffStacks","skillExtraDmgHits","ultSpdBuff","techniqueBuff","targetFrozen","e2TalentCritStacks","e6UltAtkBuff","skillDmgBoostValue","ultAtkBoostValue","ultCdBoostValue","ultCdBoostBaseValue","battleStartDefBuff","skillBuff","ultBuff","e2SkillSpdBuff","buffedStateDmgBuff","speedBoostStacksMax","buffedState","speedBoostStacks","e6UltTargetDebuff","talentExtraDmgScaling","targetShocked","enemyDefeatedBuff","ultDefPenValue","enemyDebuffed","skillRemovedBuff","ultDefPenDebuff","e4SkillResShred","ultDmgReductionValue","ultFuaExtraScaling","hitMultiByTargetsBlast","talentEnemyMarked","e2UltAtkBuff","e4DmgReductionBuff","dotVulnerabilityValue","maxExtraHits","targetDotTakenDebuff","targetWindShear","targetBurnedExtraScaling","enhancedSkill","skillHpPercentBuff","skillHpFlatBuff","e4TalentAtkBuff","basicEnhancedHitValue","targetUltDebuffDmgTakenValue","basicEnhancedScaling","basicEnhanced","targetUltDebuffed","e1TargetBleeding","basicEnhancedExtraHits","e4TalentStacks","proofOfDebtFuaVulnerability","enhancedStateFuaScalingBoost","enhancedStateFuaCdBoost","enemyProofOfDebtDebuff","numbyEnhancedState","e1DebtorStacks","enemyElementalWeak","ashblazingFuaData","ashblazingBasicData","skillStackDmg","talentAtkBuff","basicEnhancedSpdBuff","skillDmgIncreaseStacks","skillAtkBoostMax","ultDmgBoost","skillAtkBoostScaling","skillLightningDmgBoostScaling","benedictionBuff","skillSpdBuff","ultDmgBuff","BENEDICTION_LIGHTNING_DMG","fieldActive","e6ResReduction","skillCritBuff","talentHitsPerAction","talentAttacks","e2DmgBuff","e6FuaVulnerabilityStacks","stacks","hits","stacksPerMiss","stacksPerHit","ashblazingStacks","atkBoostSum","enhancedStateDmgBoost","basicEnhancedHpScaling","ultHpScaling","ultLostHpScaling","fuaAtkScaling","fuaHpScaling","hpPercentLostTotalMax","enhancedStateActive","hpPercentLostTotal","e4MaxHpIncreaseStacks","talentSpdBuffValue","ultBuffedAtk","talentSpdBuffStacksMax","skillExtraHitScaling","ultBuffedState","e2DmgReductionBuff","skillTriggerStacks","talentSpdBuffStacks","originalSkillScaling","stanceSkillScaling","stanceScalingProportion","skillAtkBuffValue","ultCdBuffValue","ultCrBuffValue","talentAtkScaling","roaringBowstringsActive","initialSpeedBuff","roaringBowstrings","skillCrBuffValue","skillHpBuffValue","talentDmgReductionValue","e6TeamHpLostPercent","talentCdBuffValue","talentCrBuffValue","ultBuffActive","soulsteelBuffActive","critSpdBuff","e1TargetFrozen","e4CurrentHp80","talentDebuffDmgIncreaseValue","talentDebuffMax","talentDebuffStacks","enemyBurned","e2BurnMultiBoost","healingMaxHpBuff","talentDmgReductionBuff","e2UltHealingBuff","e4SkillHealingDmgBuffStacks","righteousHeartStackMax","outroarStackCdValue","righteousHeartDmgValue","basicEnhanced1Scaling","basicEnhanced2Scaling","basicEnhanced3Scaling","skillOutroarStacks","talentRighteousHeartStacks","e6ResPenStacks","ultBoostMax","hitMultiByFuaHits","enemyToughness50","toughnessReductionDmgBoost","fuaHits","e4BeBuff","ultAtkBuffValue","talentDmgBoostValue","targetBurdenActive","burdenAtkBuff","ultBuffValue","e6DmgBuff","talentMaxStacks","ultEnhancedExtraHitScaling","talentCrStackValue","ultEnhanced","ultEnhancedExtraHits","fieldResPenValue","ultFieldActive","beOver","floor","drratio","skillCdBuffScaling","skillCdBuffBase","cipherTalentStackBoost","talentBaseStackBoost","atkBoostByQuantumAllies","skillCdBuff","cipherBuff","quantumAllies","arcanaStackMultiplier","epiphanyDmgTakenBoost","defShredValue","epiphanyDebuff","defDecreaseDebuff","arcanaStacks","e1ResReduction","ultStackScaling","ultHitsOnTarget","enemyFrozen","e2DefReduction","e6UltDmgBoost","physicaltrailblazer","firetrailblazer","CharacterConditionals","characterFn","characterId","characterEidolon","getContentFromLCRanks","s","lcRank","params","desc","match","token","tokenPieces","parseInt","toString","lcRank2","fiveStar","sValuesAtk","sValuesDmg","enemyCountAtkBuff","enemyWeaknessBreakDmgBuff","lightConeConditionals","calculatePassives","sValuesCd","spdScalingBuffs","sValues","dmgBuff","sValuesErr","postSkillDmgBuff","enemyDebuffedDmgBoost","skillAtkBoost","selfAttackedDefBuff","sValuesSpd","lcRank3","spdStacks","dotEffect","sValuesCr","enemy3DebuffsCrBoost","targetCodeDebuff","postUltSpdBuff","sValuesSkillUltDmg","sValuesFuaDmg","fuaDmgBoost","hpLostDmgBuff","missedCritCrBuff","healingBasedDmgProc","sValuesStackDmg","sValuesDefPen","eclipseStacks","maxStackDefPen","dragonsCallStacks","targetTameStacks","atkBuffStacks","maxEnergyUltDmgStacks","postUltDmgBuff","sValuesFuaPen","debuffCdStacks","postUltBuff","lcRanks","maskActive","sValuesDotPen","prophetStacks","sValuesAtkStacks","sValuesDmgBuff","atkBoostStacks","weaknessBreakDmgBuff","enemyHp50CrBoost","enemyDefeatedAtkBuff","activeShieldDmgDecrease","postUltDotDmgBuff","fourStar","postUltHealingBoost","debuffStacksDmgIncrease","dmgResBuff","enemies2CrBuff","enemyHp50FuaBuff","sameTargetHitStacks","alliesSameElement","enemyHpHigherDmgBoost","sMaxValues","resToHealingBoost","boost","targetEnsnared","maxEnergyDmgBoost","defeatedEnemyCrBuff","defeatedEnemyCdBuff","enemyShockWindShear","initialDmgReductionBuff","spdDmgBuff","enemyBurnedBleeding","sValuesDmgBoost","sValuesStacks","lcRanks2","dmgBoost","defeatedEnemyAtkStacks","extraDmgProc","defScalingUltDmg","atkBuffActive","cdBuffActive","maxEnergyStacks","basicDmgBuff","skillDmgBuff","goodFortuneStacks","sValuesMax","sValuesAtkBuff","trickStacks","crBuff","postSkillHealBuff","lightConeOptionMapping","critBuff","healingBuff","basicSkillDmgBuff","hp50DefBuff","initialEhrBuff","inBattleAtkBuff","defeatedEnemyAtkBuff","enemyHp50Buff","enemySlowedDmgBuff","defeatedEnemySpdBuff","selfHp80CrBuff","basicAtkBuff","initialSpdBuff","postUltAtkBuff","LightConeConditionals","lcFn","lightCone","lightConeSuperimposition","sumRelicStats","headRelics","handsRelics","bodyRelics","feetRelics","planarSphereRelics","linkRopeRelics","h","g","b","f","p","l","statValues","summedStats","stat","augmentedStats","weightScore","calculateFlatStat","statP","baseValue","trace","relicSum","setEffects","calculateBaseStat","base","calculatePercentStat","pioneerSetIndexToCd","calculateDefMultiplier","cLevel","eLevel","defReduction","defIgnore","additionalPen","p2","self","onmessage","data","relics","Head","Hands","Body","Feet","PlanarSphere","LinkRope","relicSetCount","ornamentSetCount","topRow","lSize","pSize","fSize","bSize","gSize","hSize","relicSetSolutions","ornamentSetSolutions","relicSetToIndex","ornamentSetToIndex","elementalMultipliers","traces","enabledHunterOfGlacialForest","HunterOfGlacialForest","enabledFiresmithOfLavaForging","FiresmithOfLavaForging","enabledGeniusOfBrilliantStars","GeniusOfBrilliantStars","enabledBandOfSizzlingThunder","BandOfSizzlingThunder","enabledMessengerTraversingHackerspace","MessengerTraversingHackerspace","enabledCelestialDifferentiator","CelestialDifferentiator","enabledWatchmakerMasterOfDreamMachinations","WatchmakerMasterOfDreamMachinations","valueChampionOfStreetwiseBoxing","ChampionOfStreetwiseBoxing","valueWastelanderOfBanditryDesert","WastelanderOfBanditryDesert","valueLongevousDisciple","LongevousDisciple","valueTheAshblazingGrandDuke","valuePrisonerInDeepConfinement","PrisonerInDeepConfinement","valuePioneerDiverOfDeadWaters","PioneerDiverOfDeadWaters","brokenMultiplier","resistance","enemyResistance","precomputedX","combatDisplay","statDisplay","baseDisplay","col","WIDTH","index","skip","permutations","setH","setG","setB","setF","setP","setL","PasserbyOfWanderingCloud","MusketeerOfWildWheat","KnightOfPurityPalace","GuardOfWutheringSnow","EagleOfTwilightLine","ThiefOfShootingMeteor","SpaceSealingStation","FleetOfTheAgeless","PanCosmicCommercialEnterprise","BelobogOfTheArchitects","InertSalsotto","TaliaKingdomOfBanditry","SprightlyVonwacq","RutilantArena","BrokenKeel","FirmamentFrontlineGlamoth","PenaconyLandOfTheDreams","crSum","cdSum","baseHp","baseDef","baseSpd","minHp","maxHp","minAtk","maxAtk","minDef","maxDef","minSpd","maxSpd","minCr","maxCr","minCd","maxCd","minEhr","maxEhr","minRes","maxRes","minBe","maxBe","minWeight","maxWeight","buffAtk","buffAtkP","buffCd","buffCr","buffSpdP","buffSpd","buffBe","buffDmgBoost","characterLevel","enemyLevel","buffDefShred","dmgBoostMultiplier","dmgReductionMultiplier","ehp","cv","universalMulti","buffResPen","result","minCv","maxCv","minEhp","maxEhp","minBasic","maxBasic","minSkill","maxSkill","minUlt","maxUlt","minFua","maxFua","minDot","maxDot","postMessage","rows","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","__webpack_exports__","O","deferred","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","splice","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","then","ns","create","def","current","indexOf","getOwnPropertyNames","definition","o","defineProperty","enumerable","get","chunkId","Promise","all","reduce","promises","u","miniCssF","globalThis","Function","window","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime","pop","nc","next"],"sourceRoot":""}