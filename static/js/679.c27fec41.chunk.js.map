{"version":3,"file":"static/js/679.c27fec41.chunk.js","mappings":"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","sources":["lib/constants.ts","lib/bufferPacker.js","components/HeaderText.js","components/TooltipImage.js","lib/conditionals/constants.ts","lib/conditionals/utils.ts","components/common/ColorizeNumbers.tsx","components/optimizerForm/conditionals/DisplayFormControl.tsx","components/common/WithPopover.tsx","components/optimizerForm/conditionals/FormSwitch.tsx","components/optimizerForm/conditionals/FormSlider.tsx","lib/conditionals/character/Argenti.tsx","lib/conditionals/character/DrRatio.tsx","lib/conditionals/character/TrailblazerPreservation.tsx","lib/conditionals/character/Jingliu.tsx","lib/conditionals/character/Luocha.tsx","lib/conditionals/character/TrailblazerDestruction.tsx","lib/characterConditionals.js","lib/conditionals/character/March7th.tsx","lib/conditionals/character/DanHeng.tsx","lib/conditionals/character/Himeko.tsx","lib/conditionals/character/Welt.tsx","lib/conditionals/character/Kafka.tsx","lib/conditionals/character/SilverWolf.tsx","lib/conditionals/character/Arlan.tsx","lib/conditionals/character/Asta.tsx","lib/conditionals/character/Herta.tsx","lib/conditionals/character/Bronya.tsx","lib/conditionals/character/Seele.tsx","lib/conditionals/character/Serval.tsx","lib/conditionals/character/Gepard.tsx","lib/conditionals/character/Natasha.tsx","lib/conditionals/character/Pela.tsx","lib/conditionals/character/Clara.tsx","lib/conditionals/character/Sampo.tsx","lib/conditionals/character/Hook.tsx","lib/conditionals/character/Lynx.tsx","lib/conditionals/character/Luka.tsx","lib/conditionals/character/Topaz.tsx","lib/conditionals/character/Qingque.tsx","lib/conditionals/character/Tingyun.tsx","lib/conditionals/character/JingYuan.tsx","lib/conditionals/character/Blade.tsx","lib/conditionals/character/Sushang.tsx","lib/conditionals/character/Yukong.tsx","lib/conditionals/character/FuXuan.tsx","lib/conditionals/character/Yanqing.tsx","lib/conditionals/character/Guinaifen.tsx","lib/conditionals/character/Bailu.tsx","lib/conditionals/character/ImbibitorLunae.tsx","lib/conditionals/character/Xueyi.tsx","lib/conditionals/character/Hanya.tsx","lib/conditionals/character/Huohuo.tsx","lib/conditionals/character/RuanMei.tsx","lib/conditionals/character/Sparkle.tsx","lib/conditionals/character/BlackSwan.tsx","lib/conditionals/character/Misha.tsx","components/optimizerTab/FormConditionalInputs.js","lib/conditionals/lightcone/getContentFromLCRank.ts","lib/conditionals/lightcone/iShallBeMyOwnSword.tsx","lib/conditionals/lightcone/baptismOfPureThought.tsx","lib/lightConeConditionals.js","lib/worker/optimizerWorker.js","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/compat get default export","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/nonce","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["export const Stats = {\n  ATK_P: 'ATK%',\n  ATK: 'ATK',\n  BE: 'Break Effect',\n  CD: 'CRIT DMG',\n  CR: 'CRIT Rate',\n  DEF_P: 'DEF%',\n  DEF: 'DEF',\n  EHR: 'Effect Hit Rate',\n  ERR: 'Energy Regeneration Rate',\n  Fire_DMG: 'Fire DMG Boost',\n  HP_P: 'HP%',\n  HP: 'HP',\n  Ice_DMG: 'Ice DMG Boost',\n  Imaginary_DMG: 'Imaginary DMG Boost',\n  Lightning_DMG: 'Lightning DMG Boost',\n  OHB: 'Outgoing Healing Boost',\n  Physical_DMG: 'Physical DMG Boost',\n  Quantum_DMG: 'Quantum DMG Boost',\n  RES: 'Effect RES',\n  SPD_P: 'SPD%',\n  SPD: 'SPD',\n  Wind_DMG: 'Wind DMG Boost'\n};\nexport type StatsKeys = keyof typeof Stats;\nexport type StatsValues = (typeof Stats)[StatsKeys];\n\n\nexport const MainStats = [\n  Stats.HP_P,\n  Stats.ATK_P,\n  Stats.DEF_P,\n  Stats.HP,\n  Stats.ATK,\n  Stats.SPD,\n  Stats.CR,\n  Stats.CD,\n  Stats.EHR,\n  Stats.BE,\n  Stats.ERR,\n  Stats.OHB,\n  Stats.Physical_DMG,\n  Stats.Fire_DMG,\n  Stats.Ice_DMG,\n  Stats.Lightning_DMG,\n  Stats.Wind_DMG,\n  Stats.Quantum_DMG,\n  Stats.Imaginary_DMG,\n];\nexport type MainStats = typeof MainStats[number];\n\nexport const MainStatsValues = {\n  [Stats.HP_P]: { '5': { 'base': 6.912, 'increment': 2.4192 }, '4': { 'base': 5.5296, 'increment': 1.9354 }, '3': { 'base': 4.1472, 'increment': 1.4515 }, '2': { 'base': 2.7648, 'increment': 0.9677 } },\n  [Stats.ATK_P]: { '5': { 'base': 6.912, 'increment': 2.4192 }, '4': { 'base': 5.5296, 'increment': 1.9354 }, '3': { 'base': 4.1472, 'increment': 1.4515 }, '2': { 'base': 2.7648, 'increment': 0.9677 } },\n  [Stats.DEF_P]: { '5': { 'base': 8.64, 'increment': 3.024 }, '4': { 'base': 6.912, 'increment': 2.4192 }, '3': { 'base': 5.184, 'increment': 1.8144 }, '2': { 'base': 3.456, 'increment': 1.2096 } },\n  [Stats.HP]: { '5': { 'base': 112.896, 'increment': 39.5136 }, '4': { 'base': 90.3168, 'increment': 31.61088 }, '3': { 'base': 67.7376, 'increment': 23.70816 }, '2': { 'base': 45.1584, 'increment': 15.80544 } },\n  [Stats.ATK]: { '5': { 'base': 56.448, 'increment': 19.7568 }, '4': { 'base': 45.1584, 'increment': 15.80544 }, '3': { 'base': 33.8688, 'increment': 11.85408 }, '2': { 'base': 22.5792, 'increment': 7.90272 } },\n  [Stats.SPD]: { '5': { 'base': 4.032, 'increment': 1.4 }, '4': { 'base': 3.226, 'increment': 1.1 }, '3': { 'base': 2.419, 'increment': 1.0 }, '2': { 'base': 1.613, 'increment': 1.0 } },\n  [Stats.CR]: { '5': { 'base': 5.184, 'increment': 1.8144 }, '4': { 'base': 4.1472, 'increment': 1.4515 }, '3': { 'base': 3.1104, 'increment': 1.0886 }, '2': { 'base': 2.0736, 'increment': 0.7258 } },\n  [Stats.CD]: { '5': { 'base': 10.368, 'increment': 3.6288 }, '4': { 'base': 8.2944, 'increment': 2.9030 }, '3': { 'base': 6.2208, 'increment': 2.1773 }, '2': { 'base': 4.1472, 'increment': 1.4515 } },\n  [Stats.EHR]: { '5': { 'base': 6.912, 'increment': 2.4192 }, '4': { 'base': 5.5296, 'increment': 1.9354 }, '3': { 'base': 4.1472, 'increment': 1.4515 }, '2': { 'base': 2.7648, 'increment': 0.9677 } },\n  [Stats.BE]: { '5': { 'base': 10.3680, 'increment': 3.6288 }, '4': { 'base': 8.2944, 'increment': 2.9030 }, '3': { 'base': 6.2208, 'increment': 2.1773 }, '2': { 'base': 4.1472, 'increment': 1.4515 } },\n  [Stats.ERR]: { '5': { 'base': 3.1104, 'increment': 1.0886 }, '4': { 'base': 2.4883, 'increment': 0.8709 }, '3': { 'base': 1.8662, 'increment': 0.6532 }, '2': { 'base': 1.2442, 'increment': 0.4355 } },\n  [Stats.OHB]: { '5': { 'base': 5.5296, 'increment': 1.9354 }, '4': { 'base': 4.4237, 'increment': 1.5483 }, '3': { 'base': 3.3178, 'increment': 1.1612 }, '2': { 'base': 2.2118, 'increment': 0.7741 } },\n  [Stats.Physical_DMG]: { '5': { 'base': 6.2208, 'increment': 2.1773 }, '4': { 'base': 4.9766, 'increment': 1.7418 }, '3': { 'base': 3.7325, 'increment': 1.3064 }, '2': { 'base': 2.4883, 'increment': 0.8709 } },\n  [Stats.Fire_DMG]: { '5': { 'base': 6.2208, 'increment': 2.1773 }, '4': { 'base': 4.9766, 'increment': 1.7418 }, '3': { 'base': 3.7325, 'increment': 1.3064 }, '2': { 'base': 2.4883, 'increment': 0.8709 } },\n  [Stats.Ice_DMG]: { '5': { 'base': 6.2208, 'increment': 2.1773 }, '4': { 'base': 4.9766, 'increment': 1.7418 }, '3': { 'base': 3.7325, 'increment': 1.3064 }, '2': { 'base': 2.4883, 'increment': 0.8709 } },\n  [Stats.Lightning_DMG]: { '5': { 'base': 6.2208, 'increment': 2.1773 }, '4': { 'base': 4.9766, 'increment': 1.7418 }, '3': { 'base': 3.7325, 'increment': 1.3064 }, '2': { 'base': 2.4883, 'increment': 0.8709 } },\n  [Stats.Wind_DMG]: { '5': { 'base': 6.2208, 'increment': 2.1773 }, '4': { 'base': 4.9766, 'increment': 1.7418 }, '3': { 'base': 3.7325, 'increment': 1.3064 }, '2': { 'base': 2.4883, 'increment': 0.8709 } },\n  [Stats.Quantum_DMG]: { '5': { 'base': 6.2208, 'increment': 2.1773 }, '4': { 'base': 4.9766, 'increment': 1.7418 }, '3': { 'base': 3.7325, 'increment': 1.3064 }, '2': { 'base': 2.4883, 'increment': 0.8709 } },\n  [Stats.Imaginary_DMG]: { '5': { 'base': 6.2208, 'increment': 2.1773 }, '4': { 'base': 4.9766, 'increment': 1.7418 }, '3': { 'base': 3.7325, 'increment': 1.3064 }, '2': { 'base': 2.4883, 'increment': 0.8709 } },\n}\n\nexport const SubStats = [\n  Stats.ATK_P,\n  Stats.ATK,\n  Stats.BE,\n  Stats.CD,\n  Stats.CR,\n  Stats.DEF_P,\n  Stats.DEF,\n  Stats.EHR,\n  Stats.HP_P,\n  Stats.HP,\n  Stats.RES,\n  Stats.SPD,\n];\nexport type SubStats = typeof SubStats[number];\n\nexport const StatsToReadable = {\n  [Stats.HP_P]: 'HP %',\n  [Stats.ATK_P]: 'ATK %',\n  [Stats.DEF_P]: 'DEF %',\n  [Stats.SPD_P]: 'SPD %',\n  [Stats.HP]: 'HP',\n  [Stats.ATK]: 'ATK',\n  [Stats.DEF]: 'DEF',\n  [Stats.SPD]: 'SPD',\n  [Stats.CR]: 'CRIT Rate',\n  [Stats.CD]: 'CRIT DMG',\n  [Stats.EHR]: 'Effect Hit Rate',\n  [Stats.RES]: 'Effect RES',\n  [Stats.BE]: 'Break Effect',\n  [Stats.ERR]: 'Energy Regen',\n  [Stats.OHB]: 'Healing Boost',\n  [Stats.Physical_DMG]: 'Physical DMG',\n  [Stats.Fire_DMG]: 'Fire DMG',\n  [Stats.Ice_DMG]: 'Ice DMG',\n  [Stats.Lightning_DMG]: 'Lightning DMG',\n  [Stats.Wind_DMG]: 'Wind DMG',\n  [Stats.Quantum_DMG]: 'Quantum DMG',\n  [Stats.Imaginary_DMG]: 'Imaginary DMG'\n}\n\nexport const StatsToIndex = {\n\n}\nlet i = 0;\nObject.values(Stats).map(x => StatsToIndex[x] = i++)\n\nexport const Parts = {\n  Head: 'Head',\n  Hands: 'Hands',\n  Body: 'Body',\n  Feet: 'Feet',\n  PlanarSphere: 'PlanarSphere',\n  LinkRope: 'LinkRope'\n};\nexport type Parts = typeof Parts[keyof typeof Parts];\n\nexport const PartsToReadable = {\n  [Parts.Head]: 'Head',\n  [Parts.Hands]: 'Hands',\n  [Parts.Body]: 'Body',\n  [Parts.Feet]: 'Feet',\n  [Parts.PlanarSphere]: 'Sphere',\n  [Parts.LinkRope]: 'Rope'\n};\nexport type PartsToReadable = typeof PartsToReadable[keyof typeof PartsToReadable];\n\nexport const PartsMainStats = {\n  [Parts.Head]: [Stats.HP],\n  [Parts.Hands]: [Stats.ATK],\n  [Parts.Body]: [Stats.HP_P, Stats.ATK_P, Stats.DEF_P, Stats.CR, Stats.CD, Stats.OHB, Stats.EHR],\n  [Parts.Feet]: [Stats.HP_P, Stats.ATK_P, Stats.DEF_P, Stats.SPD],\n  [Parts.PlanarSphere]: [Stats.HP_P, Stats.ATK_P, Stats.DEF_P, Stats.Physical_DMG, Stats.Fire_DMG, Stats.Ice_DMG, Stats.Lightning_DMG, Stats.Wind_DMG, Stats.Quantum_DMG, Stats.Imaginary_DMG],\n  [Parts.LinkRope]: [Stats.HP_P, Stats.ATK_P, Stats.DEF_P, Stats.BE, Stats.ERR],\n}\n\nexport const SetsRelics = {\n  'PasserbyOfWanderingCloud': 'Passerby of Wandering Cloud',\n  'MusketeerOfWildWheat': 'Musketeer of Wild Wheat',\n  'KnightOfPurityPalace': 'Knight of Purity Palace',\n  'HunterOfGlacialForest': 'Hunter of Glacial Forest',\n  'ChampionOfStreetwiseBoxing': 'Champion of Streetwise Boxing',\n  'GuardOfWutheringSnow': 'Guard of Wuthering Snow',\n  'FiresmithOfLavaForging': 'Firesmith of Lava-Forging',\n  'GeniusOfBrilliantStars': 'Genius of Brilliant Stars',\n  'BandOfSizzlingThunder': 'Band of Sizzling Thunder',\n  'EagleOfTwilightLine': 'Eagle of Twilight Line',\n  'ThiefOfShootingMeteor': 'Thief of Shooting Meteor',\n  'WastelanderOfBanditryDesert': 'Wastelander of Banditry Desert',\n  'LongevousDisciple': 'Longevous Disciple',\n  'MessengerTraversingHackerspace': 'Messenger Traversing Hackerspace',\n  'TheAshblazingGrandDuke': 'The Ashblazing Grand Duke',\n  'PrisonerInDeepConfinement': 'Prisoner in Deep Confinement',\n};\nexport type SetsRelics = typeof SetsRelics[keyof typeof SetsRelics];\n\nexport const SetsOrnaments = {\n  'SpaceSealingStation': 'Space Sealing Station',\n  'FleetOfTheAgeless': 'Fleet of the Ageless',\n  'PanCosmicCommercialEnterprise': 'Pan-Cosmic Commercial Enterprise',\n  'BelobogOfTheArchitects': 'Belobog of the Architects',\n  'CelestialDifferentiator': 'Celestial Differentiator',\n  'InertSalsotto': 'Inert Salsotto',\n  'TaliaKingdomOfBanditry': 'Talia: Kingdom of Banditry',\n  'SprightlyVonwacq': 'Sprightly Vonwacq',\n  'RutilantArena': 'Rutilant Arena',\n  'BrokenKeel': 'Broken Keel',\n  'FirmamentFrontlineGlamoth': 'Firmament Frontline: Glamoth',\n  'PenaconyLandOfTheDreams': 'Penacony, Land of the Dreams',\n};\nexport type SetsOrnaments = typeof SetsOrnaments[keyof typeof SetsOrnaments];\n\nexport const Sets = {\n  ...SetsRelics,\n  ...SetsOrnaments\n}\nexport type Sets = typeof Sets[keyof typeof Sets];\n\nexport const SetsRelicsNames = Object.values(SetsRelics)\nexport const SetsOrnamentsNames = Object.values(SetsOrnaments)\n\nconst OrnamentSetToIndex = {}\nfor (let i = 0; i < SetsOrnamentsNames.length; i++) {\n  OrnamentSetToIndex[SetsOrnamentsNames[i]] = i\n}\n\nconst RelicSetToIndex = {}\nfor (let i = 0; i < SetsRelicsNames.length; i++) {\n  RelicSetToIndex[SetsRelicsNames[i]] = i\n}\n\nexport const Constants = {\n  Sets,\n  Parts,\n  Stats,\n  MainStats,\n  MainStatsValues,\n  SubStats,\n  StatsToIndex,\n  SetsOrnaments,\n  SetsRelics,\n  SetsRelicsNames,\n  SetsOrnamentsNames,\n  StatsToReadable,\n  PartsToReadable,\n  PartsMainStats,\n  RelicSetToIndex,\n  OrnamentSetToIndex,\n  // StatMaxes,\n  MAX_INT: 2147483647,\n  THREAD_BUFFER_LENGTH: 100000\n}\n\n\n\nexport const levelOptions = (() => {\n  const levelStats = []\n  for (let i = 80; i >= 1; i--) {\n    levelStats.push({\n      value: i,\n      label: `Lv. ${i}`\n    })\n  }\n\n  return levelStats\n})();\n\nexport const enemyLevelOptions = (() => {\n  const levelStats = []\n  for (let i = 95; i >= 1; i--) {\n    levelStats.push({\n      value: i,\n      label: `Lv. ${i}`\n    })\n  }\n\n  return levelStats\n})();\n\nexport const enemyCountOptions = (() => {\n  const levelStats = []\n  for (let i = 1; i <= 5; i += 2) {\n    levelStats.push({\n      value: i,\n      label: `${i} target${i > 1 ? 's' : ''}`\n    })\n  }\n\n  return levelStats\n})();\n\nexport const enemyResistanceOptions = (() => {\n  const levelStats = []\n  for (let i = 20; i <= 60; i += 20) {\n    levelStats.push({\n      value: i / 100,\n      label: `${i}% RES`\n    })\n  }\n\n  return levelStats\n})();\n\nexport const enemyHpPercentOptions = (() => {\n  const levelStats = []\n  for (let i = 100; i >= 1; i--) {\n    levelStats.push({\n      value: i / 100,\n      label: `${i}% HP`\n    })\n  }\n\n  return levelStats\n})();\n\nexport const superimpositionOptions = (() => {\n  return [\n    { value: 1, label: 'S1' },\n    { value: 2, label: 'S2' },\n    { value: 3, label: 'S3' },\n    { value: 4, label: 'S4' },\n    { value: 5, label: 'S5' },\n  ]\n})();\n\nexport const eidolonOptions = (() => {\n  return [\n    { value: 0, label: 'E0' },\n    { value: 1, label: 'E1' },\n    { value: 2, label: 'E2' },\n    { value: 3, label: 'E3' },\n    { value: 4, label: 'E4' },\n    { value: 5, label: 'E5' },\n    { value: 6, label: 'E6' },\n  ]\n})();\n","import { Constants, Stats } from \"./constants.ts\";\n\nconst SIZE = 35\n\n// When adding new rows, use:\n// let i = 0\n// offset + i++\n\nexport const BufferPacker = {\n  extractCharacter: (arr, offset) => { // Float32Array\n    offset = offset * SIZE\n    return {\n      id: arr[offset], // 0\n      [Constants.Stats.HP]: arr[offset + 1],\n      [Constants.Stats.ATK]: arr[offset + 2],\n      [Constants.Stats.DEF]: arr[offset + 3],\n      [Constants.Stats.SPD]: arr[offset + 4],\n      [Constants.Stats.CD]: arr[offset + 5],\n      [Constants.Stats.CR]: arr[offset + 6],\n      [Constants.Stats.EHR]: arr[offset + 7],\n      [Constants.Stats.RES]: arr[offset + 8],\n      [Constants.Stats.BE]: arr[offset + 9],\n      [Constants.Stats.ERR]: arr[offset + 10], // 10\n      [Constants.Stats.OHB]: arr[offset + 11],\n      ED: arr[offset + 12],\n      CV: arr[offset + 13],\n      WEIGHT: arr[offset + 14],\n      EHP: arr[offset + 15],\n      BASIC: arr[offset + 16],\n      SKILL: arr[offset + 17],\n      ULT: arr[offset + 18],\n      FUA: arr[offset + 19],\n      DOT: arr[offset + 20], // 20\n      xHP: arr[offset + 21],\n      xATK: arr[offset + 22],\n      xDEF: arr[offset + 23],\n      xSPD: arr[offset + 24],\n      xCR: arr[offset + 25],\n      xCD: arr[offset + 26],\n      xEHR: arr[offset + 27],\n      xRES: arr[offset + 28],\n      xBE: arr[offset + 29],\n      xERR: arr[offset + 30], // 30\n      xOHB: arr[offset + 31],\n      xELEMENTAL_DMG: arr[offset + 32],\n      relicSetIndex: arr[offset + 33],\n      ornamentSetIndex: arr[offset + 34],\n    }\n  },\n\n  extractArrayToResults: (arr, length, results) => {\n    for (let i = 0; i < length; i++) {\n      if (arr[i * SIZE + 1]) {\n        results.push(BufferPacker.extractCharacter(arr, i))\n      }\n    }\n  },\n\n  packCharacter: (arr, offset, character) => {\n    offset = offset * SIZE\n\n    // When adding new rows, use:\n    arr[offset] = character.id // 0\n    arr[offset + 1] = character[Stats.HP]\n    arr[offset + 2] = character[Stats.ATK]\n    arr[offset + 3] = character[Stats.DEF]\n    arr[offset + 4] = character[Stats.SPD]\n    arr[offset + 5] = character[Stats.CD]\n    arr[offset + 6] = character[Stats.CR]\n    arr[offset + 7] = character[Stats.EHR]\n    arr[offset + 8] = character[Stats.RES]\n    arr[offset + 9] = character[Stats.BE]\n    arr[offset + 10] = character[Stats.ERR] // 10\n    arr[offset + 11] = character[Stats.OHB]\n    arr[offset + 12] = character.ELEMENTAL_DMG\n    arr[offset + 13] = character.CV\n    arr[offset + 14] = character.WEIGHT\n    arr[offset + 15] = character.EHP\n    arr[offset + 16] = character.x.BASIC_DMG\n    arr[offset + 17] = character.x.SKILL_DMG\n    arr[offset + 18] = character.x.ULT_DMG\n    arr[offset + 19] = character.x.FUA_DMG\n    arr[offset + 20] = character.x.DOT_DMG // 20\n    arr[offset + 21] = character.x[Stats.HP]\n    arr[offset + 22] = character.x[Stats.ATK]\n    arr[offset + 23] = character.x[Stats.DEF]\n    arr[offset + 24] = character.x[Stats.SPD]\n    arr[offset + 25] = character.x[Stats.CR]\n    arr[offset + 26] = character.x[Stats.CD]\n    arr[offset + 27] = character.x[Stats.EHR]\n    arr[offset + 28] = character.x[Stats.RES]\n    arr[offset + 29] = character.x[Stats.BE]\n    arr[offset + 30] = character.x[Stats.ERR] // 30\n    arr[offset + 31] = character.x[Stats.OHB]\n    arr[offset + 32] = character.x.ELEMENTAL_DMG\n    arr[offset + 33] = character.relicSetIndex\n    arr[offset + 34] = character.ornamentSetIndex\n  },\n\n  cleanFloatBuffer: (buffer) => {\n    new Float64Array(buffer).fill(0);\n  },\n\n  createFloatBuffer: (length) => {\n    return new Float64Array(length * SIZE).buffer\n  }\n}","import { Typography, } from 'antd';\nimport styled from 'styled-components';\n\nconst { Text } = Typography;\n\nexport const HeaderText = styled(Text)`\n  text-decoration: underline;\n  text-decoration-color: #6d97ffb3;\n  text-underline-offset: 2px\n`","import React from \"react\";\nimport { Popover } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport { Assets } from \"../lib/assets\";\n\nexport const TooltipImage = (props) => (\n  <Popover\n    content={props.type.content}\n    title={props.type.title}\n    overlayStyle={{\n      width: 500\n    }}\n  >\n    <img src={Assets.getQuestion()} style={{width: 16, opacity: 0.6}}/>\n  </Popover>\n)\nTooltipImage.propTypes = {\n  type: PropTypes.object,\n}\n","import { Constants } from 'lib/constants';\nconst Stats = Constants.Stats\n\nexport const ASHBLAZING_ATK_STACK = 0.06;\n\n// TODO profile & convert to array for performance?\nexport const baseComputedStatsObject = {\n  [Stats.HP_P]: 0,\n  [Stats.ATK_P]: 0,\n  [Stats.DEF_P]: 0,\n  [Stats.SPD_P]: 0,\n  [Stats.HP]: 0,\n  [Stats.ATK]: 0,\n  [Stats.DEF]: 0,\n  [Stats.SPD]: 0,\n  [Stats.CD]: 0,\n  [Stats.CR]: 0,\n  [Stats.EHR]: 0,\n  [Stats.RES]: 0,\n  [Stats.BE]: 0,\n  [Stats.ERR]: 0,\n  [Stats.OHB]: 0,\n\n  ELEMENTAL_DMG: 0,\n  DEF_SHRED: 0,\n  DMG_TAKEN_MULTI: 0,\n  ALL_DMG_MULTI: 0,\n  RES_PEN: 0,\n  DMG_RED_MULTI: 1,\n\n  BASIC_CR_BOOST: 0,\n  SKILL_CR_BOOST: 0,\n  ULT_CR_BOOST: 0,\n  FUA_CR_BOOST: 0,\n\n  BASIC_CD_BOOST: 0,\n  SKILL_CD_BOOST: 0,\n  ULT_CD_BOOST: 0,\n  FUA_CD_BOOST: 0,\n\n  BASIC_SCALING: 0,\n  SKILL_SCALING: 0,\n  ULT_SCALING: 0,\n  FUA_SCALING: 0,\n  DOT_SCALING: 0,\n\n  BASIC_BOOST: 0,\n  SKILL_BOOST: 0,\n  ULT_BOOST: 0,\n  FUA_BOOST: 0,\n  DOT_BOOST: 0,\n\n  BASIC_VULNERABILITY: 0,\n  SKILL_VULNERABILITY: 0,\n  ULT_VULNERABILITY: 0,\n  FUA_VULNERABILITY: 0,\n  DOT_VULNERABILITY: 0,\n\n  BASIC_DMG: 0,\n  SKILL_DMG: 0,\n  ULT_DMG: 0,\n  FUA_DMG: 0,\n  DOT_DMG: 0,\n\n  BASIC_DEF_PEN: 0,\n  SKILL_DEF_PEN: 0,\n  ULT_DEF_PEN: 0,\n  FUA_DEF_PEN: 0,\n  DOT_DEF_PEN: 0,\n\n  BASIC_RES_PEN: 0,\n  SKILL_RES_PEN: 0,\n  ULT_RES_PEN: 0,\n  FUA_RES_PEN: 0,\n  DOT_RES_PEN: 0,\n};\nexport type ComputedStatsObject = typeof baseComputedStatsObject;","import { Constants } from \"lib/constants\";\n\nexport const precisionRound = (number: number, precision: number = 8): number => {\n  const factor = Math.pow(10, precision);\n  return Math.round(number * factor) / factor;\n};\n\n// Remove the ashblazing set atk bonus only when calc-ing fua attacks\nexport const calculateAshblazingSet = (c, request, hitMulti): {\n  ashblazingMulti: number,\n  ashblazingAtk: number\n} => {\n  const enabled = p4(c.sets.TheAshblazingGrandDuke);\n  const valueTheAshblazingGrandDuke = request.setConditionals[Constants.Sets.TheAshblazingGrandDuke][1];\n  const ashblazingAtk = 0.06 * valueTheAshblazingGrandDuke * enabled * c.baseAtk * enabled;\n  const ashblazingMulti = hitMulti * enabled * c.baseAtk;\n\n  return {\n    ashblazingMulti,\n    ashblazingAtk\n  }\n};\n\nexport const p4 = (set: number): number => {\n  return set >> 2\n};\n\n\n// normal: JL, Dr.Ratio\n// reversed: Topaz\nexport const skill = (eidolon: number, value1: number, value2: number): number => {\n  return eidolon >= 3 ? value2 : value1\n};\nexport const talent = skill;\nexport const ultRev = skill;\nexport const basicRev = skill;\n\nexport const ult = (eidolon: number, value1: number, value2: number): number => {\n  return eidolon >= 5 ? value2 : value1\n}\nexport const basic = ult;\nexport const skillRev = ult;\nexport const talentRev = ult;\n\n\ntype SkillLevel = 10 | 12;\nexport const getContentForCharacterSkill = (skillLevel: SkillLevel, skill: string, skillRank: unknown): string => {\n  let ret = '';\n\n  skill.match(/#(\\d+)\\[\\w+\\]/g).forEach((token) => {\n    // get params value\n    token.match(/#(\\d+)/).forEach((tokenPieces, i) => {\n      if (i > 0) {\n        // [\"#4[i]\", \"4\"]\n        let value = skillRank[parseInt(tokenPieces) - 1];\n        // change to percent\n        if (value < 1) {\n          value = Math.round(value * 100);\n        }\n        ret = ret.replace(token, value.toString());\n      }\n    });\n  });\n\n  return ret;\n};","import React from 'react';\n\n// Colorizes numbers in a string with JSX elements\nconst ColorizeNumbers = (text: string, color: string = '#ebb434') => {\n  const ret = [];\n  let num = '';\n  let isNum = false;\n  let key = 0;\n\n  if (text) {\n    text.split('::BR::').forEach((item) => {\n      if (ret.length > 0) {\n        ret.push(<br key={key++} />);\n        ret.push(<br key={key++} />);\n      }\n\n      for (let i = 0; i < item.length; i++) {\n        if (\n          (item[i] >= '0' && item[i] <= '9')\n            || item[i] === '%'\n            || (item[i] === 'A' && item[i + 1] && /[2,4,6]/.test(item[i + 1]))\n            || (item[i] === 'E' && item[i + 1] && /[0-6]/.test(item[i + 1]))\n          ) {\n          num += item[i];\n          isNum = true;\n        } else {\n          if (isNum) {\n            ret.push(<span key={key++} style={{ color: color }}>{num}</span>);\n            num = '';\n            isNum = false;\n          }\n          ret.push(item[i]);\n        }\n      }\n    \n      if (isNum) {\n        ret.push(<span key={key++} style={{ color: color }}>{num}</span>);\n      }\n    });\n\n  }\n\n  return <>{ret}</>;\n};\n\nexport default ColorizeNumbers;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Flex } from 'antd';\nimport ColorizeNumbers from 'components/common/ColorizeNumbers';\n\nconst DisplayFormControl = ({ content }): JSX.Element => {\n  const ret = [];\n  let i = 0;\n\n  // for (const key in content) {\n  content.forEach(passive => {\n    const Item = passive.formItem;\n    ret.push(\n      <Item\n        {...passive}\n        name={passive.id}\n        title={passive.title}\n        content={ColorizeNumbers(passive.content)}\n        text={passive.text}\n        key={i}\n        />\n    );\n    i++;\n  });\n\n  return (<Flex vertical gap={10}>{ret}</Flex>);\n};\nDisplayFormControl.propTypes = {\n  content: PropTypes.array,\n  eidolon: PropTypes.number,\n  ultBoostMax: PropTypes.number,\n};\n\nexport default DisplayFormControl;","import React, { FC } from \"react\";\nimport { object, string } from \"prop-types\";\nimport { Popover, Typography } from \"antd\";\nconst { Text } = Typography;\n\nconst WithPopover = (WrappedComponent: FC) => {\n  const Wrapped = (props) => {\n    const [open, setOpen] = React.useState(false);\n    const handleOpenChange = (newOpen: boolean) => { setOpen(newOpen); }\n    const content =\n      <Text style={{ width: 400, display: 'block' }}>\n        <hr />\n        {props.content}\n      </Text>;\n\n    return (\n      <Popover\n        trigger=\"hover\"\n        placement=\"left\"\n        content={content}\n        title={props.title}\n        open={open}\n        onOpenChange={handleOpenChange}\n      >\n        <span style={{ cursor: 'pointer' }}>{WrappedComponent(props)}</span>\n      </Popover>\n    );\n  };\n  Wrapped.displayName = 'WithPopoverWrapped';\n  Wrapped.propTypes = WithPopover.propTypes\n  return Wrapped;\n};\n\nWithPopover.displayName = 'WithPopover';\nWithPopover.propTypes = {\n  title: string,\n  content: object,\n};\nexport default WithPopover;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Flex, Form, Switch, Typography } from \"antd\";\nimport { CheckOutlined, CloseOutlined } from \"@ant-design/icons\";\nimport WithPopover from \"components/common/WithPopover\";\n\nconst justify = 'flex-start'\nconst align = 'center'\n\nconst Text = styled(Typography)`\n  white-space: pre-line;\n`\n\nfunction conditionalType(props) {\n  if (props.lc) {\n    return 'lightConeConditionals'\n  }\n  return 'characterConditionals'\n}\n\nexport function FormSwitch(props) {\n  return (\n\n    <Flex justify={justify} align={align}>\n      <Form.Item name={[conditionalType(props), props.name]} valuePropName='checked'>\n        <Switch\n          checkedChildren={<CheckOutlined />}\n          unCheckedChildren={<CloseOutlined />}\n          disabled={props.disabled}\n          defaultChecked={!props.disabled}\n          style={{ width: 45, marginRight: 10 }}\n        />\n      </Form.Item>\n      <Text>{props.text}</Text>\n    </Flex>\n\n  )\n}\nFormSwitch.propTypes = {\n  disabled: PropTypes.bool,\n  name: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  lc: PropTypes.bool,\n};\n\nexport const FormSwitchWithPopover = WithPopover(FormSwitch);\nFormSwitchWithPopover.propTypes = {\n  ...FormSwitch.propTypes,\n  ...WithPopover.propTypes\n};\n\nexport type FormSwitchWithPopoverProps = PropTypes.InferProps<typeof FormSwitchWithPopover.propTypes>;","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Flex, Form, InputNumber, Slider, Typography } from \"antd\";\nimport styled from \"styled-components\";\nimport WithPopover from \"components/common/WithPopover\";\n\nconst justify = 'flex-start'\nconst align = 'center'\nconst inputWidth = 75\nconst numberWidth = 65\nconst sliderWidth = 145\n\nconst Text = styled(Typography)`\n  white-space: pre-line;\n`\nfunction precisionRound(number, precision = 8) {\n  const factor = Math.pow(10, precision);\n  return Math.round(number * factor) / factor;\n}\n\nfunction conditionalType(props) {\n  if (props.lc) {\n    return 'lightConeConditionals'\n  }\n  return 'characterConditionals'\n}\n\nexport function FormSlider(props) {\n  const [inputValue, setInputValue] = useState(1);\n  const onChange = (newValue) => {\n    setInputValue(newValue);\n  };\n\n  const multiplier = (props.percent ? 100 : 1)\n  const step = props.percent ? 0.01 : 1\n  const symbol = props.percent ? '%' : ''\n\n  return (\n    <Flex vertical gap={5} style={{ marginBottom: 0 }}>\n      <Flex justify={justify} align={align}>\n        <div style={{ minWidth: inputWidth, display: 'block' }}>\n          <Form.Item name={[conditionalType(props), props.name]}>\n            <InputNumber\n              min={props.min}\n              max={props.max}\n              controls={false}\n              size='small'\n              style={{\n                width: numberWidth,\n              }}\n              parser={(value) => value == null || value == '' ? 0 : precisionRound(parseFloat(value) / multiplier)}\n              formatter={(value) => `${precisionRound(value * multiplier)}`}\n              addonAfter={symbol}\n              onChange={onChange}\n              disabled={props.disabled}\n            />\n          </Form.Item>\n        </div>\n        <Text>{props.text}</Text>\n      </Flex>\n      <Flex align='center' justify='flex-start' gap={10} style={{ height: 14 }}>\n        <Form.Item name={[conditionalType(props), props.name]}>\n          <Slider\n            min={props.min}\n            max={props.max}\n            step={step}\n            value={typeof inputValue === 'number' ? inputValue : 0}\n            style={{\n              minWidth: sliderWidth,\n              marginTop: 0,\n              marginBottom: 0,\n              marginLeft: 1\n            }}\n            tooltip={{\n              formatter: (value) => `${precisionRound(value * multiplier)}${symbol}`\n            }}\n            onChange={onChange}\n            disabled={props.disabled}\n          />\n        </Form.Item>\n        <Text style={{ minWidth: 20, marginBottom: 2, textAlign: 'center' }}>{`${precisionRound(props.max * multiplier)}${symbol}`}</Text>\n      </Flex>\n    </Flex>\n  )\n}\nFormSlider.propTypes = {\n  disabled: PropTypes.bool,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  text: PropTypes.string,\n  name: PropTypes.string,\n  percent: PropTypes.bool,\n  lc: PropTypes.bool,\n}\n\nexport const FormSliderWithPopover = WithPopover(FormSlider);\nFormSliderWithPopover.propTypes = {\n  ...FormSlider.propTypes,\n  ...WithPopover.propTypes\n}\n\nexport type FormSliderWithPopoverProps = PropTypes.InferProps<typeof FormSliderWithPopover.propTypes>","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { baseComputedStatsObject } from 'lib/conditionals/constants';\nimport { basic, precisionRound, skill, talent, ult } from 'lib/conditionals/utils';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\n\nimport { Eidolon } from 'types/Character'\nimport { Form, PrecomputedCharacterConditional } from 'types/CharacterConditional';\n\n\nexport default (e: Eidolon) => {\n  const talentMaxStacks = (e >= 4) ? 12 : 10\n\n  const basicScaling = basic(e, 1.00, 1.10)\n  const skillScaling = skill(e, 1.20, 1.32)\n  const ultScaling = ult(e, 1.60, 1.728)\n  const ultEnhancedScaling = ult(e, 2.80, 3.024)\n  const ultEnhancedExtraHitScaling = ult(e, 0.95, 1.026)\n  const talentCrStackValue = talent(e, 0.025, 0.028)\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'ultEnhanced',\n    name: 'ultEnhanced',\n    text: 'Enhanced ult',\n    title: 'Enhanced ult',\n    content: `Consumes 180 Energy and deals Physical DMG equal to ${precisionRound(ultEnhancedScaling * 100)}% of Argenti's ATK to all enemies,\n      and further deals DMG for 6 extra time(s), with each time dealing Physical DMG equal to ${precisionRound(ultEnhancedExtraHitScaling * 100)}% of Argenti's ATK to a random enemy.`,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'talentStacks',\n    name: 'talentStacks',\n    text: 'Apotheosis stacks',\n    title: 'Apotheosis stacks',\n    content: `Increases CR by ${precisionRound(talentCrStackValue * 100)}% per stack, max of ${precisionRound(talentMaxStacks)} stacks.`,\n    min: 0,\n    max: talentMaxStacks,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'ultEnhancedExtraHits',\n    name: 'ultEnhancedExtraHits',\n    text: 'Enhanced ult extra hits on target',\n    title: 'Enhanced ult extra hits on target',\n    content: `Enhanced Ult hits a random enemy for ${precisionRound(ultEnhancedExtraHitScaling * 100)}% ATK per hit.`,\n    min: 0,\n    max: 6,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e2UltAtkBuff',\n    name: 'e2UltAtkBuff',\n    text: 'E2 ult ATK buff',\n    title: 'E2 ult ATK buff',\n    content: `E2: If the number of enemies on the field equals to 3 or more, increases ATK by ${precisionRound(0.40 * 100)}% for 1 turn.`,\n    disabled: e < 2,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      ultEnhanced: true,\n      talentStacks: talentMaxStacks,\n      ultEnhancedExtraHits: 6,\n      e2UltAtkBuff: true\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Skills\n      x[Stats.CR] += (r.talentStacks) * talentCrStackValue\n\n      // Traces\n\n      // Eidolons\n      x[Stats.CD] += (e >= 1) ? (r.talentStacks) * 0.04 : 0\n      x[Stats.ATK_P] += (e >= 2 && r.e2UltAtkBuff) ? 0.40 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += (r.ultEnhanced) ? ultEnhancedScaling : ultScaling\n      x.ULT_SCALING += (r.ultEnhancedExtraHits) * ultEnhancedExtraHitScaling\n\n      // BOOST\n      x.ULT_BOOST += (request.enemyHpPercent <= 0.5) ? 0.15 : 0\n      x.ULT_DEF_PEN += (e >= 6) ? 0.30 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional) => {\n      const x = c['x'];\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.FUA_DMG += 0\n    }\n  }\n}\n","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\nimport { basic, calculateAshblazingSet, precisionRound, skill, talent, ult } from \"lib/conditionals/utils\";\nimport { ASHBLAZING_ATK_STACK, baseComputedStatsObject } from 'lib/conditionals/constants';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { Eidolon } from 'types/Character';\n\nconst DrRatio = (e: Eidolon) => {\n  const debuffStacksMax = 5\n  const summationStacksMax = (e >= 1) ? 10 : 6\n\n  const basicScaling = basic(e, 1.00, 1.10)\n  const skillScaling = skill(e, 1.50, 1.65)\n  const ultScaling = ult(e, 2.40, 2.592)\n  const fuaScaling = talent(e, 2.70, 2.97)\n\n  function e2FuaRatio(procs, fua = true) {\n    return fua\n      ? fuaScaling / (fuaScaling + 0.20 * procs) // for fua dmg\n      : 0.20 / (fuaScaling + 0.20 * procs) // for each e2 proc\n  }\n\n  const baseHitMulti = ASHBLAZING_ATK_STACK * (1 * 1 / 1)\n  const fuaMultiByDebuffs = {\n    0: ASHBLAZING_ATK_STACK * (1 * 1 / 1), // 0\n    1: ASHBLAZING_ATK_STACK * (1 * e2FuaRatio(1, true) + 2 * e2FuaRatio(1, false)), // 2\n    2: ASHBLAZING_ATK_STACK * (1 * e2FuaRatio(2, true) + 5 * e2FuaRatio(2, false)), // 2 + 3\n    3: ASHBLAZING_ATK_STACK * (1 * e2FuaRatio(3, true) + 9 * e2FuaRatio(3, false)), // 2 + 3 + 4\n    4: ASHBLAZING_ATK_STACK * (1 * e2FuaRatio(4, true) + 14 * e2FuaRatio(4, false)), // 2 + 3 + 4 + 5\n  };\n\n  // TODO: Make consistent with the other code\n  const getContentWithTalentLevel = () => {\n    const base = [\n      \"When using his Skill, Dr. Ratio has a 40% fixed chance of launching a follow-up attack against his target for 1 time,\",\n      \"dealing Imaginary DMG equal to {0}% of Dr. Ratio's ATK.\",\n      \"For each debuff the target enemy has, the fixed chance of launching follow-up attack increases by 20%.\",\n      \"If the target enemy is defeated before the follow-up attack triggers, the follow-up attack will be directed at a single random enemy instead.\",\n      \"::BR::When dealing DMG to a target that has 3 or more debuff(s), for each debuff the target has, the DMG dealt by Dr. Ratio to this target increases by 10%, up to a maximum increase of 50%.\",\n      \"::BR::E2: When his Talent's follow-up attack hits a target, for every debuff the target has, additionally deals Imaginary Additional DMG equal to 20% of Dr. Ratio's ATK. This effect can be triggered for a maximum of 4 times during each follow-up attack.\"\n    ].join(' ');\n\n    // assume max talent level\n    return base.replace('{0}', (e >= 5) ? '297' : '270')\n  }\n\n  const content = [{\n    id: 'summationStacks',\n    name: 'summationStacks',\n    formItem: FormSliderWithPopover,\n    text: 'Summation stacks',\n    title: 'Summation stacks',\n    content: `When Dr. Ratio uses his Skill, for every debuff on the target, his CRIT Rate increases by 2.5% and CRIT DMG by 5%. This effect can stack up to ${precisionRound(summationStacksMax)} time(s).`,\n    min: 0,\n    max: summationStacksMax\n  }, {\n    id: 'enemyDebuffStacks',\n    name: 'enemyDebuffStacks',\n    formItem: FormSliderWithPopover,\n    text: 'Enemy debuff stacks',\n    title: 'Talent: Cogito, Ergo Sum',\n    content: getContentWithTalentLevel(),\n    min: 0,\n    max: debuffStacksMax\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      enemyDebuffStacks: debuffStacksMax,\n      summationStacks: summationStacksMax,\n    }),\n    precomputeEffects: (request) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CR] += r.summationStacks * 0.025\n      x[Stats.CD] += r.summationStacks * 0.05\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += fuaScaling\n\n      // Boost\n      x.ELEMENTAL_DMG += (r.enemyDebuffStacks >= 3) ? Math.min(0.50, r.enemyDebuffStacks * 0.10) : 0\n      x.FUA_BOOST += (e >= 6) ? 0.50 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      const r = request.characterConditionals\n      const x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      if (e >= 2) {\n        const hitMulti = fuaMultiByDebuffs[Math.min(4, r.enemyDebuffStacks)]\n        const { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n        x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n      } else {\n        const { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, baseHitMulti)\n        x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n      }\n    }\n  }\n}\n\nexport default DrRatio;","import React from \"react\"\nimport { Stats } from \"lib/constants\"\nimport { baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basicRev, precisionRound, skillRev, ultRev } from \"lib/conditionals/utils\";\nimport { FormSliderWithPopover } from \"components/optimizerForm/conditionals/FormSlider\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\n\n// TODO: Missing E1 dmg\nconst TrailblazerPreservation = (e) => {\n  const skillDamageReductionValue = skillRev(e, 0.50, 0.52);\n\n  const basicAtkScaling = basicRev(e, 1.00, 1.10);\n  const basicDefScaling = (e >= 1) ? 0.25 : 0\n  const basicEnhancedAtkScaling = basicRev(e, 1.35, 1.463);\n  const basicEnhancedDefScaling = (e >= 1) ? 0.50 : 0\n  const skillScaling = skillRev(e, 0, 0);\n  const ultAtkScaling = ultRev(e, 1.00, 1.10);\n  const ultDefScaling = ultRev(e, 1.50, 1.65);\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'enhancedBasic',\n    name: 'enhancedBasic',\n    text: 'Enhanced basic',\n    title: `Enhanced basic`,\n    content: `Enhanced basic ATK deals Fire DMG equal to ${precisionRound(basicEnhancedAtkScaling * 100)}% of the Trailblazer's ATK to a single enemy, and reduced damage to adjacent enemies.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'skillActive',\n    name: 'skillActive',\n    text: 'Skill active',\n    title: `Skill active`,\n    content: `When the Skill is used, reduces DMG taken by ${precisionRound(skillDamageReductionValue * 100)}%. Also reduces DMG taken by all allies by 15% for 1 turn.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'shieldActive',\n    name: 'shieldActive',\n    text: 'Shield active',\n    title: 'Shield active',\n    content: `When the shield is active, increases ATK by 15%.`,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'e6DefStacks',\n    name: 'e6DefStacks',\n    text: 'E6 def stacks',\n    title: 'E6 def stacks: Increases DEF by 10%',\n    content: `E6: Increases DEF by 10% per stack.`,\n    min: 0,\n    max: 3,\n    disabled: e < 6,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      enhancedBasic: true,\n      skillActive: true,\n      shieldActive: true,\n      e6DefStacks: 3,\n    }),\n    precomputeEffects: (request) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject);\n\n      // Stats\n      x[Stats.DEF_P] += (e >= 6) ? r.e6DefStacks * 0.10 : 0\n      x[Stats.ATK_P] += (r.shieldActive) ? 0.15 : 0\n\n      // Scaling\n      x.SKILL_SCALING += skillScaling\n\n      // Boost\n      x.DMG_RED_MULTI *= (r.skillActive) ? (1 - skillDamageReductionValue) : 1\n      x.DMG_RED_MULTI *= (r.skillActive) ? (1 - 0.15) : 1\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      const r = request.characterConditionals\n      const x = c.x\n\n      if (r.enhancedBasic) {\n        x.BASIC_DMG += basicEnhancedAtkScaling * x[Stats.ATK]\n        x.BASIC_DMG += basicEnhancedDefScaling * x[Stats.DEF]\n      } else {\n        x.BASIC_DMG += basicAtkScaling * x[Stats.ATK]\n        x.BASIC_DMG += basicDefScaling * x[Stats.DEF]\n      }\n\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += ultAtkScaling * x[Stats.ATK]\n      x.ULT_DMG += ultDefScaling * x[Stats.DEF]\n    }\n  }\n}\n\nexport default TrailblazerPreservation;","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport { basic, precisionRound, skill, talent, ult } from \"lib/conditionals/utils\";\nimport { baseComputedStatsObject } from 'lib/conditionals/constants';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { Eidolon } from 'types/Character';\nimport { Unknown } from 'types/Common';\nimport { CharacterConditional, ConditionalMap, ContentItem, Form } from 'types/CharacterConditional';\nimport { FormSliderWithPopover } from \"../../../components/optimizerForm/conditionals/FormSlider.tsx\";\n\n\nconst Jingliu = (e: Eidolon): CharacterConditional => {\n  const talentCrBuff = talent(e, 0.50, 0.52);\n  let talentHpDrainAtkBuffMax = talent(e, 1.80, 1.98);\n  talentHpDrainAtkBuffMax += (e >= 4) ? 0.30 : 0;\n  const basicScaling = basic(e, 1.00, 1.10);\n  const skillScaling = skill(e, 2.00, 2.20);\n  const skillEnhancedScaling = skill(e, 2.50, 2.75);\n  const ultScaling = ult(e, 3.00, 3.24);\n\n  const content: ContentItem[] = [\n    {\n      id: 'talentEnhancedState',\n      formItem: FormSwitchWithPopover,\n      text: 'Enhanced state',\n      title: 'Crescent Transmigration',\n      content: `When Jingliu has 2 stacks of Syzygy, she enters the Spectral Transmigration state with her Action Advanced by 100% and her CRIT Rate increases by ${precisionRound(talentCrBuff)}%. \n      Then, Jingliu's Skill \"Transcendent Flash\" becomes enhanced and turns into \"Moon On Glacial River,\" and becomes the only ability she can use in battle.`,\n    },\n    {\n      id: 'talentHpDrainAtkBuff',\n      formItem: FormSliderWithPopover,\n      text: 'HP drain ATK buff',\n      title: 'Crescent Transmigration - ATK Bonus',\n      content: `When Jingliu uses an attack in the Spectral Transmigration state, she consumes HP from all other allies and Jingliu's ATK increases based on the total HP consumed from all allies in this attack, \n      capped at ${precisionRound(talentHpDrainAtkBuffMax * 100)}% of her base ATK, lasting until the current attack ends.`,\n      min: 0,\n      max: talentHpDrainAtkBuffMax,\n      percent: true,\n    },\n    {\n      id: 'e1CdBuff',\n      formItem: FormSwitchWithPopover,\n      text: 'E1 ult active',\n      title: 'E1 Moon Crashes Tianguan Gate',\n      content: `E1: When using her Ultimate or Enhanced Skill, Jingliu's CRIT DMG increases by 24% for 1 turn. If only one enemy target is attacked, the target will additionally be dealt Ice DMG equal to 100% of Jingliu's ATK.`,\n      disabled: e < 1,\n    },\n    {\n      id: 'e2SkillDmgBuff',\n      formItem: FormSwitchWithPopover,\n      text: 'E2 skill buff',\n      title: 'E2 Crescent Shadows Qixing Dipper',\n      content: `E2: After using Ultimate, increases the DMG of the next Enhanced Skill by 80%.`,\n      disabled: e < 2,\n    },\n  ];\n  \n  return {\n    display: () => <DisplayFormControl eidolon={e} content={content} />,\n    defaults: () => ({\n      talentEnhancedState: true,\n      talentHpDrainAtkBuff: talentHpDrainAtkBuffMax,\n      e1CdBuff: true,\n      e2SkillDmgBuff: true,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r: ConditionalMap = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Skills\n      x[Stats.CR] += (r.talentEnhancedState) ? talentCrBuff : 0\n      x[Stats.ATK_P] += ((r.talentEnhancedState) ? r.talentHpDrainAtkBuff : 0) as number;\n\n      // Traces\n      x[Stats.RES] += (r.talentEnhancedState) ? 0.35 : 0\n      x.ULT_BOOST += (r.talentEnhancedState) ? 0.20 : 0\n\n      // Eidolons\n      x[Stats.CD] += (e >= 1 && r.e1CdBuff) ? 0.24 : 0\n      x[Stats.CD] += (e >= 6 && r.talentEnhancedState) ? 0.50 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n\n      x.SKILL_SCALING += (r.talentEnhancedState) ? skillEnhancedScaling : skillScaling\n      x.SKILL_SCALING += (e >= 1 && r.talentEnhancedState && request.enemyCount == 1) ? 1 : 0\n\n      x.ULT_SCALING += ultScaling\n      x.ULT_SCALING += (e >= 1 && request.enemyCount == 1) ? 1 : 0\n\n      x.FUA_SCALING += 0\n\n      // BOOST\n      x.SKILL_BOOST += (e >= 2 && r.talentEnhancedState && r.e2SkillDmgBuff) ? 0.80 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c: Unknown) => {\n      const x = c['x']\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.FUA_DMG += 0\n    }\n  }\n};\nJingliu.label = 'Jingliu';\n\nexport default Jingliu;","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport { baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basicRev, skillRev, ultRev } from \"lib/conditionals/utils\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\n\nimport { Eidolon } from \"types/Character\";\n\nexport default (e: Eidolon) => {\n  const basicScaling = basicRev(e, 1.00, 1.10)\n  const skillScaling = skillRev(e, 0, 0)\n  const ultScaling = ultRev(e, 2.00, 2.16)\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'fieldActive',\n    name: 'fieldActive',\n    text: 'Field active',\n    title: 'Field active',\n    content: `\n      E1: While the Field is active, ATK of all allies increases by 20%.\n    `,\n    // disabled: e < 1, Not disabling this one since technically the field can be active at E0\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e6ResReduction',\n    name: 'e6ResReduction',\n    text: 'E6 RES reduction',\n    title: 'E6 RES reduction',\n    content: `E6: When Ultimate is used, reduces all enemies' All-Type RES by 20% for 2 turn(s).`,\n    disabled: e < 6,\n  }]\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      fieldActive: true,\n      e6ResReduction: true,\n    }),\n    precomputeEffects: (request) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (r >= 1 && r.fieldActive) ? 0.20 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.RES_PEN += (e >= 6 && r.e6ResReduction) ? 0.20 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      const x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\n","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport { baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basicRev, precisionRound, skillRev, talentRev, ultRev } from \"lib/conditionals/utils\";\nimport { Eidolon } from \"types/Character\"\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { FormSliderWithPopover } from \"components/optimizerForm/conditionals/FormSlider\";\n\nconst TrailblazerDestruction = (e: Eidolon) => {\n  const talentAtkScalingValue = talentRev(e, 0.20, 0.22);\n\n  const basicScaling = basicRev(e, 1.00, 1.10);\n  const skillScaling = skillRev(e, 1.25, 1.375);\n  const ultScaling = ultRev(e, 4.5, 4.80);\n  const ultEnhancedScaling = ultRev(e, 2.70, 2.88);\n  const ultEnhancedScaling2 = ultRev(e, 1.62, 1.728);\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'enhancedUlt',\n    name: 'Enhanced Ult',\n    text: 'AoE ult',\n    title: 'AoE ULT - Split DMG to adjacent enemies',\n    content: `Choose between two attack modes to deliver a full strike. ::BR:: Blowout: (ST) Farewell Hit deals Physical DMG equal to ${precisionRound(ultScaling * 100)}% of the Trailblazer's ATK to a single enemy. \n    ::BR::Blowout: (Blast) RIP Home Run deals Physical DMG equal to ${precisionRound(ultEnhancedScaling * 100)}% of the Trailblazer's ATK to a single enemy, and Physical DMG equal to ${precisionRound(ultEnhancedScaling2 * 100)}% of the Trailblazer's ATK to enemies adjacent to it.`,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'talentStacks',\n    name: 'Talent stacks',\n    text: 'Talent stacks',\n    title: `Talent stacks`,\n    content: `Each time after this character inflicts Weakness Break on an enemy, ATK increases by ${precisionRound(talentAtkScalingValue * 100)}% and DEF increases by 10%. This effect stacks up to 2 times.`,\n    min: 0,\n    max: 2,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      enhancedUlt: true,\n      talentStacks: 2,\n    }),\n    precomputeEffects: (request) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject);\n\n      // Stats\n      x[Stats.ATK_P] += r.talentStacks * talentAtkScalingValue\n      x[Stats.DEF_P] += r.talentStacks * 0.10\n      x[Stats.CR] += (request.enemyWeaknessBroken) ? 0.25 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += (r.enhancedUlt) ? ultEnhancedScaling : ultScaling\n\n      // Boost\n      x.SKILL_BOOST += 0.25\n      x.ULT_BOOST += (r.enhancedUlt) ? 0.25 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      const x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n};\nexport default TrailblazerDestruction;","import React from \"react\";\nimport { Flex } from \"antd\";\nimport { HeaderText } from \"components/HeaderText\";\nimport { TooltipImage } from \"components/TooltipImage\";\nimport { Hint } from \"lib/hint\";\n\nimport argenti from \"lib/conditionals/character/Argenti\";\nimport arlan from \"lib/conditionals/character/Arlan\";\nimport asta from \"lib/conditionals/character/Asta\";\nimport bailu from \"lib/conditionals/character/Bailu\";\nimport blackswan from \"lib/conditionals/character/BlackSwan\";\nimport blade from \"lib/conditionals/character/Blade\";\nimport bronya from \"lib/conditionals/character/Bronya\";\nimport clara from \"lib/conditionals/character/Clara\";\nimport danheng from \"lib/conditionals/character/DanHeng\";\nimport drratio from 'lib/conditionals/character/DrRatio';\nimport firetrailblazer from 'lib/conditionals/character/TrailblazerPreservation';\nimport fuxuan from \"lib/conditionals/character/FuXuan\";\nimport gepard from \"lib/conditionals/character/Gepard\";\nimport guinaifen from \"lib/conditionals/character/Guinaifen\";\nimport hanya from \"lib/conditionals/character/Hanya\";\nimport herta from \"lib/conditionals/character/Herta\";\nimport himeko from \"lib/conditionals/character/Himeko\";\nimport hook from \"lib/conditionals/character/Hook\";\nimport huohuo from \"lib/conditionals/character/Huohuo\";\nimport imbibitorlunae from \"lib/conditionals/character/ImbibitorLunae\";\nimport jingliu from 'lib/conditionals/character/Jingliu';\nimport jingyuan from \"lib/conditionals/character/JingYuan\";\nimport kafka from \"lib/conditionals/character/Kafka\";\nimport luka from 'lib/conditionals/character/Luka';\nimport luocha from 'lib/conditionals/character/Luocha';\nimport lynx from 'lib/conditionals/character/Lynx';\nimport march7th from 'lib/conditionals/character/March7th';\nimport misha from \"lib/conditionals/character/Misha\";\nimport natasha from 'lib/conditionals/character/Natasha';\nimport pela from 'lib/conditionals/character/Pela';\nimport physicaltrailblazer from 'lib/conditionals/character/TrailblazerDestruction';\nimport qingque from 'lib/conditionals/character/Qingque';\nimport ruanmei from 'lib/conditionals/character/RuanMei';\nimport sampo from 'lib/conditionals/character/Sampo';\nimport seele from 'lib/conditionals/character/Seele';\nimport serval from 'lib/conditionals/character/Serval';\nimport silverwolf from 'lib/conditionals/character/SilverWolf';\nimport sparkle from \"lib/conditionals/character/Sparkle\";\nimport sushang from 'lib/conditionals/character/Sushang';\nimport tingyun from 'lib/conditionals/character/Tingyun';\nimport topaz from 'lib/conditionals/character/Topaz';\nimport welt from 'lib/conditionals/character/Welt';\nimport xueyi from 'lib/conditionals/character/Xueyi';\nimport yanqing from 'lib/conditionals/character/Yanqing';\nimport yukong from 'lib/conditionals/character/Yukong';\n\nexport const characterOptionMapping = {\n  1001: march7th,\n  1002: danheng,\n  1003: himeko,\n  1004: welt,\n  1005: kafka,\n  1006: silverwolf,\n  1008: arlan,\n  1009: asta,\n  1013: herta,\n  1101: bronya,\n  1102: seele,\n  1103: serval,\n  1104: gepard,\n  1105: natasha,\n  1106: pela,\n  1107: clara,\n  1108: sampo,\n  1109: hook,\n  1110: lynx,\n  1111: luka,\n  1112: topaz,\n  1201: qingque,\n  1202: tingyun,\n  1203: luocha,\n  1204: jingyuan,\n  1205: blade,\n  1206: sushang,\n  1207: yukong,\n  1208: fuxuan,\n  1209: yanqing,\n  1210: guinaifen,\n  1211: bailu,\n  1212: jingliu,\n  1213: imbibitorlunae, // Simplified stacking logic, revisit\n  1214: xueyi,\n  1215: hanya,\n  1217: huohuo,\n  1302: argenti,\n  1303: ruanmei,\n  1305: drratio,\n  1306: sparkle,\n  1307: blackswan,\n  1312: misha,\n  8001: physicaltrailblazer,\n  8002: physicaltrailblazer,\n  8003: firetrailblazer,\n  8004: firetrailblazer,\n}\n\nexport const CharacterConditionals = {\n  get: (request) => {\n    const characterFn = characterOptionMapping[request.characterId]\n    return characterFn(request.characterEidolon)\n  },\n  getDisplayForCharacter: (id, eidolon) => {\n    console.log('getDisplayForCharacter', id)\n    if (!id || !characterOptionMapping[id]) {\n      return (\n        <Flex justify='space-between' align='center'>\n          <HeaderText>Character passives</HeaderText>\n          <TooltipImage type={Hint.characterPassives()} />\n        </Flex>\n      )\n    }\n\n    const characterFn = characterOptionMapping[id]\n    const display = characterFn(eidolon).display();\n\n    return (\n      <Flex vertical gap={5} >\n        <Flex justify='space-between' align='center'>\n          <HeaderText>Character passives</HeaderText>\n          <TooltipImage type={Hint.characterPassives()} />\n        </Flex>\n        {display}\n      </Flex>\n    )\n  },\n}","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport { ASHBLAZING_ATK_STACK, baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basic, calculateAshblazingSet, skill, talent, ult } from \"lib/conditionals/utils\";\nimport { Eidolon } from \"types/Character\";\n\nexport default (e: Eidolon) => {\n  const basicScaling = basic(e, 1.00, 1.10)\n  const skillScaling = skill(e, 0, 0)\n  const ultScaling = ult(e, 1.50, 1.62)\n  const fuaScaling = talent(e, 1.00, 1.10)\n\n  const hitMulti = ASHBLAZING_ATK_STACK * (1 * 1 / 1)\n\n  return {\n    display: () => (\n      <br />\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: () => {\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += fuaScaling\n\n      // Boost\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      const x = c.x\n\n      const { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n      x.FUA_DMG += (e >= 4) ? 0.30 * x[Stats.DEF] : 0\n    }\n  }\n}","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { baseComputedStatsObject } from 'lib/conditionals/constants';\nimport { basic, precisionRound, skill, talent, ult } from 'lib/conditionals/utils';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\n\nimport { Eidolon } from 'types/Character'\nimport { Form, PrecomputedCharacterConditional } from 'types/CharacterConditional';\n\n// TODO: missing A4 SPD buff\nexport default (e: Eidolon) => {\n  const extraPenValue = talent(e, 0.36, 0.396)\n\n  const basicScaling = basic(e, 1.00, 1.10)\n  const skillScaling = skill(e, 2.60, 2.86)\n  const ultScaling = ult(e, 4.00, 4.32)\n  const ultExtraScaling = ult(e, 1.20, 1.296)\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'talentPenBuff',\n    name: 'talentPenBuff',\n    text: 'Talent RES PEN buff',\n    title: 'Talent RES PEN buff',\n    content: `When Dan Heng is the target of an ally's Ability, his next attack's Wind RES PEN increases by ${precisionRound(extraPenValue * 100)}%.`\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'enemySlowed',\n    name: 'enemySlowed',\n    text: 'Enemy slowed',\n    title: 'Enemy slowed',\n    content: `Basic ATK deals 40% more damage to Slowed enemies.`\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      talentPenBuff: true,\n      enemySlowed: true,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CR] += (e >= 1 && request.enemyHpPercent >= 0.50) ? 0.12 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.ULT_SCALING += (r.enemySlowed) ? ultExtraScaling : 0\n\n      // Boost\n      x.BASIC_BOOST += (r.enemySlowed) ? 0.40 : 0\n      x.RES_PEN += (r.talentPenBuff) ? extraPenValue : 0\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional) => {\n      const x = c['x'];\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { ASHBLAZING_ATK_STACK, baseComputedStatsObject } from 'lib/conditionals/constants';\nimport { basicRev, calculateAshblazingSet, precisionRound, skillRev, talentRev, ultRev } from 'lib/conditionals/utils';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\n\nimport { Eidolon } from 'types/Character'\nimport { Form, PrecomputedCharacterConditional } from 'types/CharacterConditional';\n\nexport default(e: Eidolon) => {\n  const basicScaling = basicRev(e, 1.00, 1.10)\n  const skillScaling = skillRev(e, 2.00, 2.20)\n  const ultScaling = ultRev(e, 2.30, 2.484)\n  const fuaScaling = talentRev(e, 1.40, 1.54)\n  const dotScaling = 0.30\n\n  const hitMultiByTargets = {\n    1: ASHBLAZING_ATK_STACK * (1 * 0.20 + 2 * 0.20 + 3 * 0.20 + 4 * 0.40), // 0.168\n    3: ASHBLAZING_ATK_STACK * (2 * 0.20 + 5 * 0.20 + 8 * 0.20 + 8 * 0.40), // 0.372\n    5: ASHBLAZING_ATK_STACK * (3 * 0.20 + 8 * 0.20 + 8 * 0.20 + 8 * 0.40), // 0.42\n  }\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'targetBurned',\n    name: 'targetBurned',\n    text: 'Target burned',\n    title: 'Target burned',\n    content: `Skill deals 20% more DMG to enemies currently afflicted with Burn.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'selfCurrentHp80Percent',\n    name: 'selfCurrentHp80Percent',\n    text: 'Self HP ≥ 80%',\n    title: 'Self HP ≥ 80%',\n    content: `When current HP percentage is 80% or higher, CRIT Rate increases by 15%.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e1TalentSpdBuff',\n    name: 'e1TalentSpdBuff',\n    text: 'E1 SPD buff',\n    title: 'E1 SPD buff',\n    content: `E1: After Victory Rush is triggered, Himeko's SPD increases by 20% for 2 turns.`,\n    disabled: e < 1,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'e6UltExtraHits',\n    name: 'e6UltExtraHits',\n    text: 'E6 ult extra hits',\n    title: 'E6 ult extra hits',\n    content: `Ultimate deals DMG 2 extra times. Extra hits deals ${precisionRound(0.40 * 100)}% of the original DMG per hit.`,\n    min: 0,\n    max: 2,\n    disabled: e < 6,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      targetBurned: true,\n      selfCurrentHp80Percent: true,\n      e1TalentSpdBuff: true,\n      e6UltExtraHits: 2,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CR] += (r.selfCurrentHp80Percent) ? 0.15 : 0\n      x[Stats.SPD_P] += (e >= 1 && r.e1TalentSpdBuff) ? 0.20 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.ULT_SCALING += (e >= 6) ? r.e6UltExtraHits * ultScaling * 0.40 : 0\n      x.FUA_SCALING += fuaScaling\n      x.DOT_SCALING += dotScaling\n\n      // Boost\n      x.SKILL_BOOST += (r.targetBurned) ? 0.20 : 0\n      x.ELEMENTAL_DMG += (e >= 2 && request.enemyHpPercent <= 0.50) ? 0.15 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c:PrecomputedCharacterConditional, request:Form) => {\n      const x = c['x'];\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n\n      const hitMulti = hitMultiByTargets[request.enemyCount]\n      const { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n    }\n  }\n}\n","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { basicRev, precisionRound, skillRev, talentRev, ultRev } from '../utils';\nimport { baseComputedStatsObject } from '../constants';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\n\nimport { Eidolon } from 'types/Character';\nimport { Form } from 'types/CharacterConditional';\n\nconst Welt = (e: Eidolon) => {\n  const skillExtraHitsMax = (e >= 6) ? 3 : 2\n\n  const basicScaling = basicRev(e, 1.00, 1.10);\n  const skillScaling = skillRev(e, 0.72, 0.792);\n  const ultScaling = ultRev(e, 1.50, 1.62);\n  const talentScaling = talentRev(e, 0.60, 0.66);\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'enemyDmgTakenDebuff',\n    name: 'enemyDmgTakenDebuff',\n    text: 'Enemy dmg taken debuff',\n    title: 'Retribution',\n    content: 'When using Ultimate, there is a 100% base chance to increase the DMG received by the targets by 12% for 2 turn(s).',\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'enemySlowed',\n    name: 'enemySlowed',\n    text: 'Enemy slowed',\n    title: 'Time Distortion',\n    content: `When hitting an enemy that is already Slowed, Welt deals Additional Imaginary DMG equal to ${precisionRound(talentScaling * 100)}% of his ATK to the enemy.`,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'skillExtraHits',\n    name: 'skillExtraHits',\n    text: 'Skill extra hits on target',\n    title: 'Edge of the Void',\n    content: `Deals Imaginary DMG equal to ${precisionRound(skillScaling * 100)}% of Welt's ATK to a single enemy and further deals DMG 2 extra times, with each time dealing Imaginary DMG equal to ${precisionRound(skillScaling * 100)}% of Welt's ATK to a random enemy.`,\n    min: 0,\n    max: skillExtraHitsMax,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e1EnhancedState',\n    name: 'e1EnhancedState',\n    text: 'E1 enhanced state',\n    title: 'E1 Legacy of Honor',\n    content: \"E1: After Welt uses his Ultimate, his abilities are enhanced. The next 2 time(s) he uses his Basic ATK or Skill, deals Additional DMG to the target equal to 50% of his Basic ATK's DMG multiplier or 80% of his Skill's DMG multiplier respectively.\",\n    disabled: (e < 1)\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      enemySlowed: true,\n      enemyDmgTakenDebuff: true,\n      skillExtraHits: skillExtraHitsMax,\n      e1EnhancedState: true,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject);\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      x.BASIC_SCALING += (r.enemySlowed) ? talentScaling : 0\n      x.SKILL_SCALING += (r.enemySlowed) ? talentScaling : 0\n      x.ULT_SCALING += (r.enemySlowed) ? talentScaling : 0\n\n      x.BASIC_SCALING += (e >= 1 && r.e1EnhancedState) ? 0.50 * basicScaling : 0\n      x.SKILL_SCALING += (e >= 1 && r.e1EnhancedState) ? 0.80 * skillScaling : 0\n\n      x.SKILL_SCALING += r.skillExtraHits * skillScaling\n\n      // Boost\n      x.ELEMENTAL_DMG += (request.enemyWeaknessBroken) ? 0.20 : 0\n      x.DMG_TAKEN_MULTI += (r.enemyDmgTakenDebuff) ? 0.12 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      const x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\nexport default Welt;","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport { ASHBLAZING_ATK_STACK, baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basic, calculateAshblazingSet, skill, talent, ult } from \"lib/conditionals/utils\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\n\nimport { Eidolon } from \"types/Character\";\n\nexport default (e: Eidolon) => {\n  const basicScaling = basic(e, 1.00, 1.10)\n  const skillScaling = skill(e, 1.60, 1.76)\n  const ultScaling = ult(e, 0.80, 0.864)\n  const fuaScaling = talent(e, 1.40, 1.596)\n  const dotScaling = ult(e, 2.90, 3.183)\n\n  const hitMulti = ASHBLAZING_ATK_STACK *\n    (1 * 0.15 + 2 * 0.15 + 3 * 0.15 + 4 * 0.15 + 5 * 0.15 + 6 * 0.25)\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'e1DotDmgReceivedDebuff',\n    name: 'e1DotDmgReceivedDebuff',\n    text: 'E1 DoT DMG debuff',\n    title: 'E1 DoT DMG debuff',\n    content: `E1: When the Talent triggers a follow-up attack, there is a 100% base chance to increase the DoT received by the target by 30% for 2 turn(s).`,\n    disabled: e < 1,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      e1DotDmgReceivedDebuff: true,\n    }),\n    precomputeEffects: (request) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += fuaScaling\n      x.DOT_SCALING += dotScaling\n\n      // Boost\n      x.DOT_VULNERABILITY += (e >= 1 && r.e1DotDmgReceivedDebuff) ? 0.30 : 0\n      x.DOT_BOOST += (e >= 2) ? 0.25 : 0\n      x.DOT_SCALING += (e >= 6) ? 1.56 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      const x = c.x\n\n      const { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n    }\n  }\n};","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport { baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basicRev, precisionRound, skillRev, ultRev } from \"lib/conditionals/utils\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { FormSliderWithPopover } from \"components/optimizerForm/conditionals/FormSlider\";\n\nimport { Eidolon } from \"types/Character\";\nimport { Form, PrecomputedCharacterConditional } from \"types/CharacterConditional\";\n\nconst SilverWolf = (e: Eidolon) => {\n  const skillResShredValue = skillRev(e, 0.10, 0.105);\n  const skillDefShredBufValue = skillRev(e, 0.08, 0.088);\n  const ultDefShredValue = ultRev(e, 0.45, 0.468);\n\n  const basicScaling = basicRev(e, 1.00, 1.10);\n  const skillScaling = skillRev(e, 1.96, 2.156);\n  const ultScaling = ultRev(e, 3.80, 4.104);\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'skillResShredDebuff',\n    name: 'skillResShredDebuff',\n    text: 'Skill RES shred',\n    title: 'Skill: Allow Changes? RES Shred',\n    content: `Decreases the target's All-Type RES of the enemy by ${precisionRound(skillResShredValue * 100)}% for 2 turn(s).\n    ::BR::If there are 3 or more debuff(s) affecting the enemy when the Skill is used, then the Skill decreases the enemy's All-Type RES by an additional 3%.`,\n  }, {\n    // TODO: should be talent\n    formItem: FormSwitchWithPopover,\n    id: 'skillDefShredDebuff',\n    name: 'skillDefShredDebuff',\n    text: 'Bug DEF shred',\n    title: 'Talent: Awaiting System Response... DEF shred',\n    content: `Silver Wolf's bug reduces the target's DEF by ${precisionRound(skillDefShredBufValue * 100)}% for 3 turn(s).`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'ultDefShredDebuff',\n    name: 'ultDefShredDebuff',\n    text: 'Ult DEF shred',\n    title: 'Ult: User Banned DEF shred',\n    content: `Decreases the target's DEF by ${precisionRound(ultDefShredValue * 100)}% for 3 turn(s).`,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'targetDebuffs',\n    name: 'targetDebuffs',\n    text: 'Target debuffs',\n    title: 'Target debuffs',\n    content: `\n      If there are 3 or more debuff(s) affecting the enemy when the Skill is used, then the Skill decreases the enemy's All-Type RES by an additional 3%.\n      ::BR::\n      E4: After using her Ultimate to attack enemies, deals Additional Quantum DMG equal to 20% of Silver Wolf's ATK for every debuff currently on the enemy target. This effect can be triggered for a maximum of 5 time(s) during each use of her Ultimate.\n      ::BR::\n      E6: For every debuff the target enemy has, the DMG dealt by Silver Wolf increases by 20%, up to a limit of 100%.\n    `,\n    min: 0,\n    max: 5,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      skillResShredDebuff: true,\n      skillDefShredDebuff: true,\n      ultDefShredDebuff: true,\n      targetDebuffs: 5,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.ULT_SCALING += (e >= 4) ? r.targetDebuffs * 0.20 : 0\n\n      // Boost\n      x.RES_PEN += (r.skillResShredDebuff) ? skillResShredValue : 0\n      x.RES_PEN += (r.skillResShredDebuff && r.targetDebuffs >= 3) ? 0.03 : 0\n      x.DEF_SHRED += (r.skillDefShredDebuff) ? skillDefShredBufValue : 0\n      x.DEF_SHRED += (r.ultDefShredDebuff) ? ultDefShredValue : 0\n      x.ELEMENTAL_DMG += (e >= 6) ? r.targetDebuffs * 0.20 : 0\n\n      return x;\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional) => {\n      const x = c['x'];\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\n\nexport default SilverWolf;","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { baseComputedStatsObject } from 'lib/conditionals/constants';\nimport { basic, precisionRound, skill, talent, ult } from 'lib/conditionals/utils';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\n\nimport { Eidolon } from 'types/Character'\nimport { Form, PrecomputedCharacterConditional } from 'types/CharacterConditional';\n\nexport default (e: Eidolon) => {\n  const basicScaling = basic(e, 1.00, 1.10)\n  const skillScaling = skill(e, 2.40, 2.64)\n  const ultScaling = ult(e, 3.20, 3.456)\n\n  const talentMissingHpDmgBoostMax = talent(e, 0.72, 0.792)\n\n  const content = [{\n    formItem: FormSliderWithPopover,\n    id: 'selfCurrentHpPercent',\n    name: 'selfCurrentHpPercent',\n    text: 'Self current HP%',\n    title: 'Self current HP%',\n    content: `Increases Arlan's DMG for every percent of HP below his Max HP, up to a max of ${precisionRound(talentMissingHpDmgBoostMax * 100)}% more DMG.`,\n    min: 0.01,\n    max: 1.0,\n    percent: true,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      selfCurrentHpPercent: 1.00,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x.ELEMENTAL_DMG += Math.min(talentMissingHpDmgBoostMax, 1 - r.selfCurrentHpPercent)\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.SKILL_BOOST += (e >= 1 && r.selfCurrentHpPercent <= 0.50) ? 0.10 : 0\n      x.ULT_BOOST += (e >= 6 && r.selfCurrentHpPercent <= 0.50) ? 0.20 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional) => {\n      const x = c['x'];\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.FUA_DMG += 0\n    }\n  }\n}\n","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { baseComputedStatsObject } from 'lib/conditionals/constants';\nimport { basic, precisionRound, skill, talent, ult } from 'lib/conditionals/utils';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\n\nimport { Eidolon } from 'types/Character'\nimport { Form, PrecomputedCharacterConditional } from 'types/CharacterConditional';\n\n\nexport default (e: Eidolon) => {\n  const ultSpdBuffValue = ult(e, 50, 52.8)\n  const talentStacksAtkBuff = talent(e, 0.14, 0.154)\n  const talentStacksDefBuff = 0.06\n  const skillExtraDmgHitsMax = (e >= 1) ? 5 : 4\n\n  const basicScaling = basic(e, 1.0, 1.1)\n  const skillScaling = skill(e, 0.50, 0.55)\n  const ultScaling = ult(e, 0, 0)\n  const dotScaling = basic(e, 0.50, 0.55)\n\n  const content = [{\n    formItem: FormSliderWithPopover,\n    id: 'skillExtraDmgHits',\n    name: 'skillExtraDmgHits',\n    text: 'Skill extra hits',\n    title: 'Skill extra hits',\n    content: `Deals 50% ATK DMG equal to a single enemy. Deals DMG for ${precisionRound(skillExtraDmgHitsMax)} extra times to a random enemy.`,\n    min: 0,\n    max: skillExtraDmgHitsMax,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'talentBuffStacks',\n    name: 'talentBuffStacks',\n    text: 'Talent ATK buff stacks',\n    title: 'Charging ATK buff stacks',\n    content: `Increases allies' ATK by ${precisionRound(talentStacksAtkBuff * 100)}% for every stack.`,\n    min: 0,\n    max: 5,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'ultSpdBuff',\n    name: 'ultSpdBuff',\n    text: 'Ult SPD buff active',\n    title: 'Ult SPD buff active',\n    content: `Increases SPD of all allies by ${precisionRound(ultSpdBuffValue)} for 2 turn(s).`,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      talentBuffStacks: 5,\n      skillExtraDmgHits: skillExtraDmgHitsMax,\n      ultSpdBuff: true\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (r.talentBuffStacks) * talentStacksAtkBuff\n      x[Stats.DEF_P] += (r.talentBuffStacks) * talentStacksDefBuff\n      x[Stats.ERR] += (e >= 4 && r.talentBuffStacks >= 2) ? 0.15 : 0\n      x[Stats.SPD] += (r.ultSpdBuff) ? ultSpdBuffValue : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.DOT_SCALING += dotScaling\n\n      // Boost\n      x.ELEMENTAL_DMG += 0.18\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional) => {\n      const x = c['x'];\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += 0\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n    }\n  }\n}","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { ASHBLAZING_ATK_STACK, baseComputedStatsObject } from 'lib/conditionals/constants';\nimport { basicRev, calculateAshblazingSet, precisionRound, skillRev, talentRev, ultRev } from 'lib/conditionals/utils';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\n\nimport { Eidolon } from 'types/Character'\nimport { Form, PrecomputedCharacterConditional } from 'types/CharacterConditional';\n\n\nexport default (e: Eidolon) => {\n  const basicScaling = basicRev(e, 1.00, 1.10)\n  const skillScaling = skillRev(e, 1.00, 1.10)\n  const ultScaling = ultRev(e, 2.00, 2.16)\n  const fuaScaling = talentRev(e, 0.40, 0.43)\n\n  const hitMultiByTargets = {\n    1: ASHBLAZING_ATK_STACK * (1 * 1 / 1),\n    3: ASHBLAZING_ATK_STACK * (2 * 1 / 1),\n    5: ASHBLAZING_ATK_STACK * (3 * 1 / 1)\n  };\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'techniqueBuff',\n    name: 'techniqueBuff',\n    text: 'Technique buff',\n    title: 'Technique buff',\n    content: `Increases ATK by ${precisionRound(0.40 * 100)}% for 3 turns.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'targetFrozen',\n    name: 'targetFrozen',\n    text: 'Target frozen',\n    title: 'Target frozen',\n    content: `When Ultimate is used, deals ${precisionRound(0.20 * 100)}% more DMG to Frozen enemies.`,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'e2TalentCritStacks',\n    name: 'e2TalentCritStacks',\n    text: 'E2 talent CR stacks',\n    title: 'E2 talent CR stacks',\n    content: `E2: Increases CRIT Rate by 3% per stack. Stacks up to 5 times.`,\n    min: 0,\n    max: 5,\n    disabled: e < 2,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e6UltAtkBuff',\n    name: 'e6UltAtkBuff',\n    text: 'E6 ult ATK buff',\n    title: 'E6 ult ATK buff',\n    content: `E6: After Ult, increases ATK by ${precisionRound(0.25 * 100)}% for 1 turn.`,\n    disabled: e < 6,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      techniqueBuff: true,\n      targetFrozen: true,\n      e2TalentCritStacks: 5,\n      e6UltAtkBuff: true,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (r.techniqueBuff) ? 0.40 : 0\n      x[Stats.CR] += (e >= 2) ? r.e2TalentCritStacks * 0.03 : 0\n      x[Stats.ATK_P] += (e >= 6 && r.e6UltAtkBuff) ? 0.25 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.BASIC_SCALING += (e >= 1 && request.enemyHpPercent <= 0.50) ? 0.40 : 0\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += fuaScaling\n\n      x.SKILL_BOOST += (request.enemyHpPercent >= 0.50) ? 0.45 : 0\n\n      // Boost\n      x.ULT_BOOST += (r.targetFrozen) ? 0.20 : 0\n      x.FUA_BOOST += (e >= 4) ? 0.10 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional, request: Form) => {\n      const x = c['x'];\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n\n      const hitMulti = hitMultiByTargets[request.enemyCount]\n      const { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n    }\n  }\n}\n","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { ASHBLAZING_ATK_STACK, baseComputedStatsObject } from 'lib/conditionals/constants';\nimport { basicRev, calculateAshblazingSet, precisionRound, skillRev, ultRev } from 'lib/conditionals/utils';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\n\nimport { Eidolon } from 'types/Character'\nimport { Form, PrecomputedCharacterConditional } from 'types/CharacterConditional';\n\n\nexport default (e: Eidolon) => {\n  const skillDmgBoostValue = skillRev(e, 0.66, 0.726);\n  const ultAtkBoostValue = ultRev(e, 0.55, 0.594);\n  const ultCdBoostValue = ultRev(e, 0.16, 0.168);\n  const ultCdBoostBaseValue = ultRev(e, 0.20, 0.216);\n\n  const basicScaling = basicRev(e, 1.0, 1.1);\n  const fuaScaling = basicScaling * 0.80\n\n  const hitMulti = ASHBLAZING_ATK_STACK * (1 * 1 / 1);\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'techniqueBuff',\n    name: 'techniqueBuff',\n    text: 'Technique buff',\n    title: 'Technique buff',\n    content: `Increases all allies' ATK by ${precisionRound(0.15 * 100)}% for 2 turns at the start of the battle.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'battleStartDefBuff',\n    name: 'battleStartDefBuff',\n    text: 'Battle start DEF buff',\n    title: 'Battle start DEF buff',\n    content: `Increases all allies' DEF by ${precisionRound(0.20 * 100)}% for 2 turns at the start of the battle.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'skillBuff',\n    name: 'skillBuff',\n    text: 'Skill buff',\n    title: 'Skill buff',\n    content: `Increases DMG by ${precisionRound(skillDmgBoostValue * 100)}%.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'ultBuff',\n    name: 'ultBuff',\n    text: 'Ult buff',\n    title: 'Ult buff',\n    content: `Increases the ATK of all allies by ${precisionRound(ultAtkBoostValue * 100)}% and CRIT DMG by ${precisionRound(ultCdBoostValue * 100)}% of Bronya's CRIT DMG plus ${precisionRound(ultCdBoostBaseValue * 100)}% for 2 turns.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e2SkillSpdBuff',\n    name: 'e2SkillSpdBuff',\n    text: 'E2 skill SPD buff',\n    title: 'E2 skill SPD buff',\n    content: `E2: When using Skill, the target ally's SPD increases by ${precisionRound(0.30 * 100)}% after taking action, lasting for 1 turn.`,\n    disabled: e < 2,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      techniqueBuff: true,\n      battleStartDefBuff: true,\n      skillBuff: true,\n      ultBuff: true,\n      e2SkillSpdBuff: false,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.DEF_P] += (r.battleStartDefBuff) ? 0.20 : 0\n      x[Stats.SPD_P] += (r.e2SkillSpdBuff) ? 0.30 : 0\n      x[Stats.ATK_P] += (r.techniqueBuff) ? 0.15 : 0\n      x[Stats.ATK_P] += (r.ultBuff) ? ultAtkBoostValue : 0\n      x.BASIC_CR_BOOST += 1.00\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.FUA_SCALING += (e >= 4) ? fuaScaling : 0\n\n      // Boost\n      x.ELEMENTAL_DMG += 0.10\n      x.ELEMENTAL_DMG += (r.skillBuff) ? skillDmgBoostValue : 0\n\n      return x\n    },\n    calculateBaseMultis: (c:PrecomputedCharacterConditional, request:Form) => {\n      const r = request.characterConditionals\n      const x = c['x'];\n\n      // Order matters?\n      x[Stats.CD] += (r.ultBuff) ? ultCdBoostValue * x[Stats.CD] : 0\n      x[Stats.CD] += (r.ultBuff) ? ultCdBoostBaseValue : 0\n\n      const { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n    }\n  }\n}","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport { baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basicRev, precisionRound, skillRev, talentRev, ultRev } from \"lib/conditionals/utils\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { FormSliderWithPopover } from \"components/optimizerForm/conditionals/FormSlider\";\n\nimport { Eidolon } from \"types/Character\";\nimport { Form, PrecomputedCharacterConditional } from \"types/CharacterConditional\";\n\nconst Seele = (e: Eidolon) => {\n  const buffedStateDmgBuff = talentRev(e, 0.80, 0.88);\n  const speedBoostStacksMax = (e >= 2 ? 2 : 1);\n\n  const basicScaling = basicRev(e, 1.00, 1.10);\n  const skillScaling = skillRev(e, 2.20, 2.42);\n  const ultScaling = ultRev(e, 4.25, 4.59);\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'buffedState',\n    name: 'buffedState',\n    text: 'Buffed State',\n    title: 'Buffed State',\n    content: `\n      Enters the buffed state upon defeating an enemy with Basic ATK, Skill, or Ultimate, and receives an extra turn. While in the buffed state, the DMG of Seele's attacks increases by ${precisionRound(buffedStateDmgBuff * 100)}% for 1 turn(s).\n      ::BR::\n      While Seele is in the buffed state, her Quantum RES PEN increases by 20%.\n    `,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'speedBoostStacks',\n    name: 'speedBoostStacks',\n    text: 'Speed boost stacks',\n    title: 'Speed boost stacks',\n    content: `Increases SPD by 25% per stack. Stacks up to ${precisionRound(speedBoostStacksMax)} time(s).`,\n    min: 0,\n    max: speedBoostStacksMax,\n  \n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e6UltTargetDebuff',\n    name: 'e6UltTargetDebuff',\n    text: 'E6 Ult Debuff',\n    title: 'E6 Shattering Shambles',\n    content: `E6: After Seele uses her Ultimate, inflict the target enemy with Butterfly Flurry for 1 turn(s). \n    Enemies suffering from Butterfly Flurry will take Additional Quantum DMG equal to 15% of Seele's Ultimate DMG every time they are attacked.`,\n    disabled: e < 6,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      buffedState: true,\n      speedBoostStacks: speedBoostStacksMax,\n      e6UltTargetDebuff: true\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals;\n      const x = Object.assign({}, baseComputedStatsObject);\n\n      // Stats\n      x[Stats.CR] += (e >= 1 && request.enemyHpPercent <= 0.80) ? 0.15 : 0;\n      x[Stats.SPD_P] += 0.25 * r.speedBoostStacks;\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling;\n      x.SKILL_SCALING += skillScaling;\n      x.ULT_SCALING += ultScaling;\n\n      // Boost\n      x.ELEMENTAL_DMG += (r.buffedState) ? buffedStateDmgBuff : 0;\n      x.RES_PEN += (r.buffedState) ? 0.20 : 0;\n\n      return x;\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.characterConditionals;\n      const x = c['x'];\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK];\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK];\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK];\n\n      x.BASIC_DMG += (e >= 6 && r.e6UltTargetDebuff) ? 0.15 * x.ULT_DMG : 0;\n      x.SKILL_DMG += (e >= 6 && r.e6UltTargetDebuff) ? 0.15 * x.ULT_DMG : 0;\n      x.ULT_DMG += (e >= 6 && r.e6UltTargetDebuff) ? 0.15 * x.ULT_DMG : 0;\n    }\n  }\n};\nexport default Seele;","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport { baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basicRev, precisionRound, skillRev, talentRev, ultRev } from \"lib/conditionals/utils\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\n\nimport { Eidolon } from \"types/Character\";\nimport { Form, PrecomputedCharacterConditional } from \"types/CharacterConditional\";\n\nconst Serval = (e:Eidolon) => {\n  const talentExtraDmgScaling = talentRev(e, 0.72, 0.792);\n\n  const basicScaling = basicRev(e, 1.00, 1.10);\n  const skillScaling = skillRev(e, 1.40, 1.54);\n  const ultScaling = ultRev(e, 1.80, 1.944);\n  const dotScaling = skillRev(e, 1.04, 1.144);\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'targetShocked',\n    name: 'targetShocked',\n    text: 'Target shocked',\n    title: 'Target shocked',\n    content: `After Serval attacks, deals Additional Lightning DMG equal to ${precisionRound(talentExtraDmgScaling * 100)}% of Serval's ATK to all Shocked enemies.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'enemyDefeatedBuff',\n    name: 'enemyDefeatedBuff',\n    text: 'Enemy defeated buff',\n    title: 'Enemy defeated buff',\n    content: `Upon defeating an enemy, ATK increases by 20% for 2 turn(s).`,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      targetShocked: true,\n      enemyDefeatedBuff: true,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals;\n      const x = Object.assign({}, baseComputedStatsObject);\n\n      // Stats\n      x[Stats.ATK_P] += (r.enemyDefeatedBuff) ? 0.20 : 0;\n\n      // Scaling;\n      x.BASIC_SCALING += basicScaling;\n      x.SKILL_SCALING += skillScaling;\n      x.ULT_SCALING += ultScaling;\n      x.DOT_SCALING += dotScaling;\n\n      x.BASIC_SCALING += (r.targetShocked) ? talentExtraDmgScaling : 0;\n      x.SKILL_SCALING += (r.targetShocked) ? talentExtraDmgScaling : 0;\n      x.ULT_SCALING += (r.targetShocked) ? talentExtraDmgScaling : 0;\n\n      // Boost\n      x.ELEMENTAL_DMG += (e >= 6 && r.targetShocked) ? 0.30 : 0;\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional) => {\n      const x = c['x'];\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK];\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK];\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK];\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK];\n    }\n  }\n};\nexport default Serval;","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { baseComputedStatsObject } from 'lib/conditionals/constants';\nimport { basic, skill, ult } from 'lib/conditionals/utils';\nimport { Eidolon } from 'types/Character'\nimport { PrecomputedCharacterConditional } from 'types/CharacterConditional';\n\nexport default (e: Eidolon) => {\n  const basicScaling = basic(e, 1.00, 1.10)\n  const skillScaling = skill(e, 2.00, 2.20)\n  const ultScaling = ult(e, 0, 0)\n\n  return {\n    display: () => <br />,\n    defaults: () => ({\n    }),\n    precomputeEffects: () => {\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.RES] += 0.20\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional) => {\n      const x = c['x'];\n\n      x[Stats.ATK] += 0.35 * x[Stats.DEF]\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n    }\n  }\n}\n","import React from \"react\";\n// import { Flex } from \"antd\";\nimport { Stats } from \"lib/constants\";\nimport { baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basic, skill, ult } from \"lib/conditionals/utils\";\n// import DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\n// import { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\n// import { FormSliderWithPopover } from \"components/optimizerForm/conditionals/FormSlider\";\n\n// import { Eidolon } from \"types/Character\";\n// import { Form, PrecomputedCharacterConditional } from \"types/CharacterConditional\";\n\nexport default (e) => {\n  const basicScaling = basic(e, 1.00, 1.10)\n  const skillScaling = skill(e, 0, 0)\n  const ultScaling = ult(e, 0, 0)\n\n  return {\n    display: () => (\n      <br />\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: () => {\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      const x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.BASIC_DMG += (e >= 6) ? 0.40 * x[Stats.HP] : 0\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport { baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basic, precisionRound, skill, ult } from \"lib/conditionals/utils\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\n\nimport { Eidolon } from \"types/Character\";\n\nconst Pela = (e: Eidolon) => {\n  const ultDefPenValue = ult(e, 0.40, 0.42);\n\n  const basicScaling = basic(e, 1.00, 1.10);\n  const skillScaling = skill(e, 2.10, 2.31);\n  const ultScaling = ult(e, 1.00, 1.08);\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'enemyDebuffed',\n    name: 'enemyDebuffed',\n    text: 'Enemy debuffed',\n    title: 'Enemy debuffed',\n    content: `Deals 20% more DMG to debuffed enemies.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'skillRemovedBuff',\n    name: 'skillRemovedBuff',\n    text: 'Enemy buff removed skill buff',\n    title: 'Enemy buff removed skill buff',\n    content: `Using Skill to remove buff(s) increases the DMG of Pela's next attack by 20%.\n    ::BR::\n    E2: Using Skill to remove buff(s) increases SPD by 10% for 2 turn(s).`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'ultDefPenDebuff',\n    name: 'ultDefPenDebuff',\n    text: 'Ult DEF shred debuff',\n    title: 'Ult DEF shred debuff',\n    content: `When Exposed, enemies' DEF is reduced by ${precisionRound(ultDefPenValue * 100)}% for 2 turn(s).`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e4SkillResShred',\n    name: 'e4SkillResShred',\n    text: 'E4 skill RES shred',\n    title: 'E4 skill RES shred',\n    content: `E4: When using Skill, there is a 100% base chance to reduce the target enemy's Ice RES by 12% for 2 turn(s).`,\n    disabled: e < 4,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      enemyDebuffed: true,\n      skillRemovedBuff: true,\n      ultDefPenDebuff: true,\n      e4SkillResShred: true,\n    }),\n    precomputeEffects: (request) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject);\n\n      // Stats\n      x[Stats.EHR] += 0.10\n      x[Stats.SPD_P] += (e >= 2 && r.skillRemovedBuff) ? 0.10 : 0\n      x[Stats.SPD_P] += (e >= 2 && r.skillRemovedBuff) ? 0.10 : 0\n      x[Stats.SPD_P] += (e >= 2 && r.skillRemovedBuff) ? 0.10 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.BASIC_BOOST += (r.skillRemovedBuff) ? 0.20 : 0\n      x.SKILL_BOOST += (r.skillRemovedBuff) ? 0.20 : 0\n      x.ULT_BOOST += (r.skillRemovedBuff) ? 0.20 : 0\n\n      x.RES_PEN += (e >= 4 && r.e4SkillResShred) ? 0.12 : 0\n      x.DEF_SHRED += (r.ultDefPenDebuff) ? ultDefPenValue : 0\n\n      x.ELEMENTAL_DMG += (r.enemyDebuffed) ? 0.20 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      const x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n\n      x.BASIC_DMG += (e >= 6) ? 0.40 * x[Stats.ATK] : 0\n      x.SKILL_DMG += (e >= 6) ? 0.40 * x[Stats.ATK] : 0\n      x.ULT_DMG += (e >= 6) ? 0.40 * x[Stats.ATK] : 0\n    }\n  }\n};\nexport default Pela;","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { ASHBLAZING_ATK_STACK, baseComputedStatsObject } from 'lib/conditionals/constants';\nimport { basic, calculateAshblazingSet, precisionRound, skill, talent, ult } from 'lib/conditionals/utils';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\n\nimport { Eidolon } from 'types/Character'\nimport { Form, PrecomputedCharacterConditional } from 'types/CharacterConditional';\n\nexport default (e: Eidolon) => {\n  const ultDmgReductionValue = ult(e, 0.25, 0.27)\n  const ultFuaExtraScaling = ult(e, 1.60, 1.728)\n\n  const basicScaling = basic(e, 1.00, 1.10)\n  const skillScaling = skill(e, 1.20, 1.32)\n  const fuaScaling = talent(e, 1.60, 1.76)\n\n  const hitMultiByTargetsBlast = {\n    1: ASHBLAZING_ATK_STACK * (1 * 1 / 1),\n    3: ASHBLAZING_ATK_STACK * (2 * 1 / 1),\n    5: ASHBLAZING_ATK_STACK * (2 * 1 / 1) // Clara is 1 hit blast when enhanced\n  }\n\n  const hitMultiSingle = ASHBLAZING_ATK_STACK * (1 * 1 / 1);\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'ultBuff',\n    name: 'ultBuff',\n    text: 'Ult buff',\n    title: 'Ult buff',\n    content: `Increases Svarog Counter DMG by ${precisionRound(ultFuaExtraScaling * 100)}% during Ultimate. DMG dealt to Clara is reduced by an extra ${precisionRound(ultDmgReductionValue * 100)}% for 2 turns`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'talentEnemyMarked',\n    name: 'talentEnemyMarked',\n    text: 'Enemy marked',\n    title: 'Enemy marked',\n    content: `Additionally deals Physical DMG equal to ${precisionRound(skillScaling * 100)}% of Clara's ATK to enemies marked by Svarog with a Mark of Counter.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e2UltAtkBuff',\n    name: 'e2UltAtkBuff',\n    text: 'E2 ult ATK buff',\n    title: 'E2 ult ATK buff',\n    content: `E2: After using Ultimate, increases ATK by ${precisionRound(0.30 * 100)}% for 2 turns.`,\n    disabled: e < 2,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e4DmgReductionBuff',\n    name: 'e4DmgReductionBuff',\n    text: 'E4 DMG reduction buff',\n    title: 'E4 DMG reduction buff',\n    content: `E4: Decreases DMG taken by ${precisionRound(0.30 * 100)}%.`,\n    disabled: e < 4,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      ultBuff: true,\n      talentEnemyMarked: true,\n      e2UltAtkBuff: true,\n      e4DmgReductionBuff: true,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (e >= 2 && r.e2UltAtkBuff) ? 0.30 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.SKILL_SCALING += r.talentEnemyMarked ? skillScaling : 0\n\n      x.FUA_SCALING += fuaScaling\n      x.FUA_SCALING += r.ultBuff ? ultFuaExtraScaling : 0\n\n      // Boost\n      x.DMG_RED_MULTI *= (1 - 0.10)\n      x.DMG_RED_MULTI *= r.ultBuff ? (1 - ultDmgReductionValue) : 1\n      x.DMG_RED_MULTI *= (e >= 4 && r.e4DmgReductionBuff) ? (1 - 0.30) : 1\n      x.FUA_BOOST += 0.30\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.characterConditionals\n      const x = c['x'];\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n\n      // Calc ashblazing: ult buff -> blast, unbuffed -> single\n      if (r.ultBuff) {\n        const { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMultiByTargetsBlast[request.enemyCount])\n        x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n      } else {\n        const { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMultiSingle)\n        x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n      }\n    }\n  }\n}\n","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport { baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basicRev, precisionRound, skillRev, talentRev, ultRev } from \"lib/conditionals/utils\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { FormSliderWithPopover } from \"components/optimizerForm/conditionals/FormSlider\";\n\nimport { Eidolon } from \"types/Character\";\nimport { Form, PrecomputedCharacterConditional } from \"types/CharacterConditional\";\n\nconst Sampo = (e:Eidolon) => {\n  const dotVulnerabilityValue = ultRev(e, 0.30, 0.32);\n\n  const basicScaling = basicRev(e, 1.00, 1.10);\n  const skillScaling = skillRev(e, 0.56, 0.616);\n  const ultScaling = ultRev(e, 1.60, 1.728);\n  const dotScaling = talentRev(e, 0.52, 0.572);\n\n  const maxExtraHits = e < 1 ? 4 : 5;\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'targetDotTakenDebuff',\n    name: 'targetDotTakenDebuff',\n    text: 'Ult DoT taken debuff',\n    title: 'Ult Dot taken debuff',\n    content: `When debuffed by Sampo's Ultimate, increase the targets' DoT taken by ${precisionRound(dotVulnerabilityValue * 100)}% for 2 turn(s).`,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'skillExtraHits',\n    name: 'skillExtraHits',\n    text: 'Skill extra hits',\n    title: 'Skill extra hits',\n    content: `\n      Number of extra hits from Skill.\n      `,\n    min: 1,\n    max: maxExtraHits,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'targetWindShear',\n    name: 'targetWindShear',\n    text: 'Target has wind shear',\n    title: 'Target has wind shear',\n    content: `Enemies with Wind Shear effect deal 15% less damage to Sampo.`,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      targetDotTakenDebuff: true,\n      skillExtraHits: maxExtraHits,\n      targetWindShear: true\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.SKILL_SCALING += (r.skillExtraHits) * skillScaling\n      x.ULT_SCALING += ultScaling\n      x.DOT_SCALING += dotScaling\n      x.DOT_SCALING += (e >= 6) ? 0.15 : 0\n\n      // Boost\n      x.DOT_VULNERABILITY += (r.targetDotTakenDebuff) ? dotVulnerabilityValue : 0\n      x.DMG_RED_MULTI *= (r.targetWindShear) ? (1 - 0.15) : 1\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional) => {\n      const x = c['x'];\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nexport default Sampo;","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport { baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basicRev, precisionRound, skillRev, talentRev, ultRev } from \"lib/conditionals/utils\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\n\nimport { Eidolon } from \"types/Character\";\nimport { Form, PrecomputedCharacterConditional } from \"types/CharacterConditional\";\n\nexport default (e: Eidolon) => {\n  const targetBurnedExtraScaling = talentRev(e, 1.00, 1.10);\n\n  const basicScaling = basicRev(e, 1.00, 1.10);\n  const skillScaling = skillRev(e, 2.40, 2.64);\n  const skillEnhancedScaling = skillRev(e, 2.80, 3.08);\n  const ultScaling = ultRev(e, 4.00, 4.32);\n  const dotScaling = skillRev(e, 0.65, 0.715);\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'enhancedSkill',\n    name: 'enhancedSkill',\n    text: 'Enhanced skill',\n    title: 'Enhanced skill',\n    content: `After using Ultimate, the next Skill to be used is Enhanced. Enhanced Skill deals Fire DMG equal to ${precisionRound(skillEnhancedScaling * 100)}% of Hook's ATK to a single enemy and reduced DMG to adjacent enemies.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'targetBurned',\n    name: 'targetBurned',\n    text: 'Target burned',\n    title: 'Target burned',\n    content: `When attacking a target afflicted with Burn, deals Additional Fire DMG equal to ${precisionRound(targetBurnedExtraScaling * 100)}% of Hook's ATK.`,\n  }];\n\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      enhancedSkill: true,\n      targetBurned: true,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += (r.enhancedSkill) ? skillEnhancedScaling : skillScaling\n      x.ULT_SCALING += ultScaling\n      x.BASIC_SCALING += (r.targetBurned) ? targetBurnedExtraScaling : 0\n      x.SKILL_SCALING += (r.targetBurned) ? targetBurnedExtraScaling : 0\n      x.ULT_SCALING += (r.targetBurned) ? targetBurnedExtraScaling : 0\n      x.DOT_SCALING += dotScaling\n\n      // Boost\n      x.SKILL_BOOST += (e >= 1 && r.enhancedSkill) ? 0.20 : 0\n      x.ELEMENTAL_DMG += (e >= 6 && r.targetBurned) ? 0.20 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional) => {\n      const x = c['x'];\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n    }\n  }\n}","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport { baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basicRev, precisionRound, skillRev, ultRev } from \"lib/conditionals/utils\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\n\nimport { Eidolon } from \"types/Character\";\n\nexport default (e: Eidolon) => {\n  const skillHpPercentBuff = skillRev(e, 0.075, 0.08);\n  const skillHpFlatBuff = skillRev(e, 200, 223);\n\n  const basicScaling = basicRev(e, 0.50, 0.55);\n  const skillScaling = skillRev(e, 0, 0);\n  const ultScaling = ultRev(e, 0, 0);\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'skillBuff',\n    name: 'skillBuff',\n    text: 'Skill max HP buff',\n    title: 'Skill max HP buff',\n    content: `\n    Applies \"Survival Response\" to a single target ally and increases their Max HP by ${precisionRound(skillHpPercentBuff * 100)}% of Lynx's Max HP plus ${precisionRound(skillHpFlatBuff)}.\n    ::BR::E4: When \"Survival Response\" is gained, increases the target's ATK by an amount equal to 3% of Lynx's Max HP for 1 turn(s).`,\n  }]\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      skillBuff: true,\n      e4TalentAtkBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.HP_P] += (r.skillBuff) ? skillHpPercentBuff : 0\n      x[Stats.HP] += (r.skillBuff) ? skillHpFlatBuff : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      const r = request.characterConditionals\n      const x = c.x\n\n      x[Stats.HP] += (e >= 6 && r.skillBuff) ? 0.06 * x[Stats.HP] : 0\n      x[Stats.ATK] += (e >= 4 && r.skillBuff) ? 0.03 * x[Stats.HP] : 0\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.HP]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\n","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport { baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basicRev, precisionRound, skillRev, ultRev } from \"lib/conditionals/utils\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\n\nimport { Eidolon } from \"types/Character\";\nimport { FormSliderWithPopover } from \"components/optimizerForm/conditionals/FormSlider\";\n\nexport default function luka(e: Eidolon) {\n  const basicEnhancedHitValue = basicRev(e, 0.20, 0.22);\n  const targetUltDebuffDmgTakenValue = ultRev(e, 0.20, 0.216);\n\n  const basicScaling = basicRev(e, 1.00, 1.10);\n  const basicEnhancedScaling = basicRev(e, 0.20 * 3 + 0.80, 0.22 * 3 + 0.88);\n  const skillScaling = skillRev(e, 1.20, 1.32);\n  const ultScaling = ultRev(e, 3.30, 3.564);\n  const dotScaling = skillRev(e, 3.38, 3.718);\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'basicEnhanced',\n    name: 'basicEnhanced',\n    text: 'Basic enhanced',\n    title: 'Basic enhanced: Sky-Shatter Fist',\n    content: `Enhances Basic ATK to deal additional damage, and has a chance to trigger extra hits.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'targetUltDebuffed',\n    name: 'targetUltDebuffed',\n    text: 'Target ult debuffed',\n    title: 'Target ult debuffed',\n    content: `Increase the target's DMG received by ${precisionRound(targetUltDebuffDmgTakenValue * 100)}% for 3 turn(s)`,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'basicEnhancedExtraHits',\n    name: 'basicEnhancedExtraHits',\n    text: 'Enhanced basic extra hits',\n    title: 'Enhanced basic extra hits',\n    content: `Increases the number of hits of Basic Enhanced.`,\n    min: 0,\n    max: 3,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e1TargetBleeding',\n    name: 'e1TargetBleeding',\n    text: 'E1 target bleeding',\n    title: 'E1 target bleeding',\n    content: `E1: When Luka takes action, if the target enemy is Bleeding, increases DMG dealt by Luka by 15% for 2 turn(s).`,\n    disabled: e < 1,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'e4TalentStacks',\n    name: 'e4TalentStacks',\n    text: 'E4 talent stacks',\n    title: 'E4 talent stacks',\n    content: `E4: For every stack of Fighting Will obtained, increases ATK by 5%, stacking up to 4 time(s).`,\n    min: 0,\n    max: 4,\n    disabled: e < 4,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      basicEnhanced: true,\n      targetUltDebuffed: true,\n      e1TargetBleeding: true,\n      basicEnhancedExtraHits: 3,\n      e4TalentStacks: 4,\n    }),\n    precomputeEffects: (request) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (e >= 4) ? r.e4TalentStacks * 0.05 : 0\n\n      // Scaling\n      x.BASIC_SCALING += (r.basicEnhanced) ? basicEnhancedScaling : basicScaling\n      x.BASIC_SCALING += (r.basicEnhanced && r.basicEnhancedExtraHits) * basicEnhancedHitValue\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.DOT_SCALING += dotScaling\n\n      // Boost\n      x.DMG_TAKEN_MULTI += (r.targetUltDebuffed) ? targetUltDebuffDmgTakenValue : 0\n      x.ELEMENTAL_DMG += (e >= 1 && r.e1TargetBleeding) ? 0.15 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      const x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { ASHBLAZING_ATK_STACK, baseComputedStatsObject } from 'lib/conditionals/constants';\nimport { basic, calculateAshblazingSet, precisionRound, skill, talent, ult } from 'lib/conditionals/utils';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\n\nimport { Eidolon } from 'types/Character'\nimport { Form, PrecomputedCharacterConditional } from 'types/CharacterConditional';\n\nconst Topaz = (e: Eidolon) => {\n  const proofOfDebtFuaVulnerability = skill(e, 0.50, 0.55)\n  const enhancedStateFuaScalingBoost = ult(e, 1.50, 1.65)\n  const enhancedStateFuaCdBoost = ult(e, 0.25, 0.275)\n\n  const basicScaling = basic(e, 1.00, 1.10)\n  const skillScaling = skill(e, 1.50, 1.65)\n  const fuaScaling = talent(e, 1.50, 1.65)\n\n  // 0.06\n  const basicHitCountMulti = ASHBLAZING_ATK_STACK *\n    (1 * 1 / 1)\n\n  // 0.18\n  const fuaHitCountMulti = ASHBLAZING_ATK_STACK *\n    (1 * 1 / 7 + 2 * 1 / 7 + 3 * 1 / 7 + 4 * 1 / 7 + 5 * 1 / 7 + 6 * 1 / 7 + 7 * 1 / 7)\n\n  // 0.252\n  const fuaEnhancedHitCountMulti = ASHBLAZING_ATK_STACK *\n    (1 * 1 / 10 + 2 * 1 / 10 + 3 * 1 / 10 + 4 * 1 / 10 + 5 * 1 / 10 + 6 * 1 / 10 + 7 * 1 / 10 + 8 * 3 / 10)\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'enemyProofOfDebtDebuff',\n    name: 'enemyProofOfDebtDebuff',\n    text: 'Enemy proof of debt debuff',\n    title: 'Proof of Debt',\n    content: `Inflicts a single target enemy with a Proof of Debt status, increasing the DMG it takes from follow-up attacks by ${precisionRound(proofOfDebtFuaVulnerability * 100)}%.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'numbyEnhancedState',\n    name: 'numbyEnhancedState',\n    text: 'Numby enhanced state',\n    title: 'Turn a Profit!: Ult Enhanced State',\n    content: `Numby enters the Windfall Bonanza! state and its DMG multiplier increases by ${precisionRound(enhancedStateFuaScalingBoost * 100)}% and CRIT DMG increases by ${precisionRound(enhancedStateFuaCdBoost * 100)}%.`,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'e1DebtorStacks',\n    name: 'e1DebtorStacks',\n    text: 'E1 Debtor stacks',\n    title: `E1 Increases Crit DMG`,\n    content: `E1: When enemies afflicted with Proof of Debt receive follow-up attacks, they will enter the Debtor state. This can take effect only once within a single action. The Debtor state increases the CRIT DMG of follow-up attacks inflicted on the target enemies by 25%, stacking up to 2 time(s). When Proof of Debt is removed, the Debtor state is also removed.`,\n    min: 0,\n    max: 2,\n    disabled: e < 1,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      enemyProofOfDebtDebuff: true,\n      numbyEnhancedState: true,\n      e1DebtorStacks: 2,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.SKILL_SCALING += (r.numbyEnhancedState) ? enhancedStateFuaScalingBoost : 0\n      x.FUA_SCALING += fuaScaling\n      x.FUA_SCALING += (r.numbyEnhancedState) ? enhancedStateFuaScalingBoost : 0\n\n      // Boost\n      x.FUA_VULNERABILITY += (r.enemyProofOfDebtDebuff) ? proofOfDebtFuaVulnerability : 0\n      x.ELEMENTAL_DMG += (request.enemyElementalWeak) ? 0.15 : 0\n      x.FUA_CD_BOOST += (e >= 1) ? 0.25 * r.e1DebtorStacks : 0\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.characterConditionals\n      const x = c['x'];\n\n      const hitMulti = (r.numbyEnhancedState) ? fuaEnhancedHitCountMulti : fuaHitCountMulti\n      const ashblazingFuaData = calculateAshblazingSet(c, request, hitMulti)\n      const ashblazingBasicData = calculateAshblazingSet(c, request, basicHitCountMulti)\n\n\n      x.BASIC_DMG += x.BASIC_SCALING * (x[Stats.ATK] - ashblazingBasicData.ashblazingAtk + ashblazingBasicData.ashblazingMulti)\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingFuaData.ashblazingAtk + ashblazingFuaData.ashblazingMulti)\n      x.SKILL_DMG = x.FUA_DMG\n\n      // Copy fua boosts to skill/basic\n      // BOOSTS get added, while vulnerability / def pen gets replaced (?)\n      x.SKILL_BOOST += x.FUA_BOOST\n      x.SKILL_CD_BOOST += x.FUA_CD_BOOST\n      x.SKILL_CR_BOOST += x.FUA_CR_BOOST\n      x.SKILL_VULNERABILITY = x.FUA_VULNERABILITY\n      x.SKILL_DEF_PEN = x.FUA_DEF_PEN\n      x.SKILL_RES_PEN = x.FUA_RES_PEN\n\n      x.BASIC_BOOST += x.FUA_BOOST\n      x.BASIC_CD_BOOST += x.FUA_CD_BOOST\n      x.BASIC_CR_BOOST += x.FUA_CR_BOOST\n      x.BASIC_VULNERABILITY = x.FUA_VULNERABILITY\n      x.BASIC_DEF_PEN = x.FUA_DEF_PEN\n      x.BASIC_RES_PEN = x.FUA_RES_PEN\n\n      // Her ult buff only applies to the skill/fua not basic\n      x.FUA_CD_BOOST += (r.numbyEnhancedState) ? enhancedStateFuaCdBoost : 0\n      x.SKILL_CD_BOOST += (r.numbyEnhancedState) ? enhancedStateFuaCdBoost : 0\n\n      // Her e6 only applies to skill/fua not basic\n      x.SKILL_RES_PEN += (e >= 6) ? 0.10 : 0\n      x.FUA_RES_PEN += (e >= 6) ? 0.10 : 0\n    }\n  }\n}\nexport default Topaz;","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport { ASHBLAZING_ATK_STACK, baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basic, calculateAshblazingSet, precisionRound, skill, talent, ult } from \"lib/conditionals/utils\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { FormSliderWithPopover } from \"components/optimizerForm/conditionals/FormSlider\";\n\nimport { Eidolon } from \"types/Character\";\nimport { Form, PrecomputedCharacterConditional } from \"types/CharacterConditional\";\n\nconst Qingque = (e: Eidolon) => {\n  const skillStackDmg = skill(e, 0.38, 0.408);\n  const talentAtkBuff = talent(e, 0.72, 0.792);\n\n  const basicScaling = basic(e, 1.00, 1.10);\n  const basicEnhancedScaling = basic(e, 2.40, 2.64);\n  const skillScaling = skill(e, 0, 0);\n  const ultScaling = ult(e, 2.00, 2.16);\n\n  const hitMultiByTargetsBlast = {\n    1: ASHBLAZING_ATK_STACK * (1 * 1 / 1), // 0.06\n    3: ASHBLAZING_ATK_STACK * (2 * 1 / 1), // 0.12\n    5: ASHBLAZING_ATK_STACK * (2 * 1 / 1)  // 0.12\n  };\n\n  const hitMultiSingle = ASHBLAZING_ATK_STACK * (1 * 1 / 1);\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'basicEnhanced',\n    name: 'basicEnhanced',\n    text: 'Basic enhanced',\n    title: 'Basic enhanced',\n    content: `Qingque's ATK increases by ${precisionRound(talentAtkBuff * 100)}%, and her Basic ATK \"Flower Pick\" is enhanced, becoming \"Cherry on Top!\"`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'basicEnhancedSpdBuff',\n    name: 'basicEnhancedSpdBuff',\n    text: 'Basic enhanced SPD buff',\n    title: 'Basic enhanced SPD buff',\n    content: `Qingque's SPD increases by 10% for 1 turn after using the Enhanced Basic ATK.`,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'skillDmgIncreaseStacks',\n    name: 'skillDmgIncreaseStacks',\n    text: 'Skill DMG stacks',\n    title: 'Skill DMG stacks',\n    content: `Immediately draws 2 jade tile(s) and increases DMG by ${precisionRound(skillStackDmg * 100)}% until the end of the current turn. This effect can stack up to 4 time(s).`,\n    min: 0,\n    max: 4,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      basicEnhanced: true,\n      basicEnhancedSpdBuff: true,\n      skillDmgIncreaseStacks: 4,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject);\n\n      // Stats\n      x[Stats.ATK_P] += (r.basicEnhanced) ? talentAtkBuff : 0\n      x[Stats.SPD_P] += (r.basicEnhancedSpdBuff) ? 0.10 : 0\n\n      // Scaling\n      x.BASIC_SCALING += (r.basicEnhanced) ? basicEnhancedScaling : basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += (e >= 4) ? x.BASIC_SCALING : 0\n\n      // Boost\n      x.ELEMENTAL_DMG += r.skillDmgIncreaseStacks * skillStackDmg\n      x.ULT_BOOST += (e >= 1) ? 0.10 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.characterConditionals;\n      const x = c['x'];\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK];\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK];\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK];\n\n      if (r.basicEnhanced) {\n        const hitMulti = hitMultiByTargetsBlast[request.enemyCount];\n        const { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti);\n        x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti);\n      } else {\n        const { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMultiSingle);\n        x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti);\n      }\n    }\n  }\n};\nexport default Qingque;","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport { baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basic, precisionRound, skill, ult, talent } from \"lib/conditionals/utils\";\nimport { Eidolon } from \"types/Character\";\n\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { Form } from \"types/CharacterConditional\";\n\n\nconst Tingyun = (e: Eidolon) => {\n  const skillAtkBoostMax = skill(e, 0.25, 0.27);\n  const ultDmgBoost = ult(e, 0.50, 0.56);\n  const skillAtkBoostScaling = skill(e, 0.50, 0.55);\n  const skillLightningDmgBoostScaling = skill(e, 0.40, 0.44) + ((e >= 4) ? 0.20 : 0);\n  const talentScaling = talent(e, 0.60, 0.66) + ((e >= 4) ? 0.20 : 0);\n\n  const basicScaling = basic(e, 1.00, 1.10);\n  const skillScaling = skill(e, 0, 0);\n  const ultScaling = ult(e, 0, 0);\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'benedictionBuff',\n    name: 'benedictionBuff',\n    text: 'Benediction buff',\n    title: 'Benediction buff',\n    content: `Grants a single ally with Benediction to increase their ATK by ${precisionRound(skillAtkBoostScaling * 100)}%, up to ${precisionRound(skillAtkBoostMax * 100)}% of Tingyun's current ATK. When the ally with Benediction attacks, it deals lightning damage equal to ${precisionRound(skillLightningDmgBoostScaling * 100)}% of that ally's ATK. This effect lasts for 3 turns.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'skillSpdBuff',\n    name: 'skillSpdBuff',\n    text: 'Skill SPD buff',\n    title: 'Skill SPD buff',\n    content: `Tingyun's SPD increases by 20% for 1 turn after using Skill.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'ultDmgBuff',\n    name: 'ultDmgBuff',\n    text: 'Ult DMG buff',\n    title: 'Ult DMG buff',\n    content: `Regenerates 50 Energy for a single ally and increases the target's DMG by ${precisionRound(ultDmgBoost)}% for 2 turn(s).`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'ultSpdBuff',\n    name: 'ultSpdBuff',\n    text: 'E1 ult SPD buff',\n    title: 'E1 ult SPD buff',\n    content: `E1: After using their Ultimate, the ally with Benediction gains a 20% increase in SPD for 1 turn.`,\n    disabled: e < 1,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      benedictionBuff: false,\n      skillSpdBuff: false,\n      ultSpdBuff: false,\n      ultDmgBuff: false,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals;\n      const x = Object.assign({}, baseComputedStatsObject);\n\n      // Stats\n      x[Stats.SPD_P] += (e >= 1 && r.ultSpdBuff) ? 0.20 : 0\n      x[Stats.SPD_P] += (r.skillSpdBuff) ? 0.20 : 0\n      x[Stats.ATK_P] += (r.benedictionBuff) ? skillAtkBoostMax : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.BASIC_BOOST += 0.40\n      x.ELEMENTAL_DMG += (r.ultDmgBuff) ? ultDmgBoost : 0\n      x.BENEDICTION_LIGHTNING_DMG = (r.benedictionBuff) ? skillLightningDmgBoostScaling + talentScaling : 0\n\n      return x;\n    },\n    calculateBaseMultis: (c) => {\n      const x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK] + x.BENEDICTION_LIGHTNING_DMG * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\nexport default Tingyun;","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport { baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basic, calculateAshblazingSet, skill, talent, ult } from \"lib/conditionals/utils\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { FormSliderWithPopover } from \"components/optimizerForm/conditionals/FormSlider\";\n\nimport { Eidolon } from \"types/Character\";\n\nexport default (e: Eidolon) => {\n  const basicScaling = basic(e, 1.00, 1.10)\n  const skillScaling = skill(e, 1.00, 1.10)\n  const ultScaling = ult(e, 2.00, 2.16)\n  const fuaScaling = talent(e, 0.66, 0.726)\n\n  let hitMulti = 0\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'skillCritBuff',\n    name: 'skillCritBuff',\n    text: 'Skill CR buff',\n    title: 'Skill CR buff',\n    content: `After using Skill, CRIT Rate increases by 10% for 2 turns.`,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'talentHitsPerAction',\n    name: 'talentHitsPerAction',\n    text: 'Lightning Lord stacks',\n    title: 'Lightning Lord stacks',\n    content: `Lightning Lord hits-per-action stack up to 10 times.`,\n    min: 3,\n    max: 10,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'talentAttacks',\n    name: 'talentAttacks',\n    text: 'Lightning Lord hits on target',\n    title: 'Lightning Lord hits on target',\n    content: `Count of hits on target. Should usually be set to the same value as Lightning Lord Stacks.`,\n    min: 0,\n    max: 10,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e2DmgBuff',\n    name: 'e2DmgBuff',\n    text: 'E2 dmg buff',\n    title: 'E2 dmg buff',\n    content: `E2: After Lightning-Lord takes action, DMG caused by Jing Yuan's Basic ATK, Skill, and Ultimate increases by 20% for 2 turns.`,\n    disabled: e < 2,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'e6FuaVulnerabilityStacks',\n    name: 'e6FuaVulnerabilityStacks',\n    text: 'E6 vulnerable stacks',\n    title: 'E6 vulnerable stacks',\n    content: `E6: Each hit performed by the Lightning-Lord when it takes action will make the target enemy Vulnerable. While Vulnerable, enemies receive 12% more DMG until the end of the Lightning-Lord's current turn, stacking up to 3 time(s). (applies to all hits)`,\n    min: 0,\n    max: 3,\n    disabled: e < 6,\n  }];\n\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      skillCritBuff: true,\n      talentHitsPerAction: 10,\n      talentAttacks: 10,\n      e2DmgBuff: true,\n      e6FuaVulnerabilityStacks: 3\n    }),\n    precomputeEffects: (request) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      r.talentHitsPerAction = Math.max(r.talentHitsPerAction, r.talentAttacks)\n\n      // Stats\n      x[Stats.CR] += (r.skillCritBuff) ? 0.10 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += fuaScaling\n\n      // Boost\n      x.FUA_CD_BOOST += (r.talentHitsPerAction >= 6) ? 0.25 : 0\n      x.BASIC_BOOST += (e >= 2 && r.e2DmgBuff) ? 0.20 : 0\n      x.SKILL_BOOST += (e >= 2 && r.e2DmgBuff) ? 0.20 : 0\n      x.ULT_BOOST += (e >= 2 && r.e2DmgBuff) ? 0.20 : 0\n\n      x.FUA_VULNERABILITY += (e >= 6) ? r.e6FuaVulnerabilityStacks * 0.12 : 0\n\n      // Lightning lord calcs\n      const stacks = r.talentHitsPerAction\n      const hits = r.talentAttacks\n      const stacksPerMiss = (request.enemyCount >= 3) ? 2 : 0\n      const stacksPerHit = (request.enemyCount >= 3) ? 3 : 1\n      const stacksPreHit = (request.enemyCount >= 3) ? 2 : 1\n\n      // Calc stacks on miss\n      let ashblazingStacks = stacksPerMiss * (stacks - hits)\n\n      // Calc stacks on hit\n      ashblazingStacks += stacksPreHit\n      let atkBoostSum = 0\n      for (let i = 0; i < hits; i++) {\n        atkBoostSum += Math.min(8, ashblazingStacks) * (1 / hits)\n        ashblazingStacks += stacksPerHit\n      }\n\n      hitMulti = atkBoostSum * 0.06\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      const r = request.characterConditionals\n      const x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n\n      const { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n      x.FUA_DMG += x.FUA_SCALING * r.talentAttacks * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n    }\n  }\n}","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { ASHBLAZING_ATK_STACK, baseComputedStatsObject } from 'lib/conditionals/constants';\nimport { basicRev, calculateAshblazingSet, precisionRound, skillRev, talentRev, ultRev } from 'lib/conditionals/utils';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\n\nimport { Eidolon } from 'types/Character'\nimport { Form, PrecomputedCharacterConditional } from 'types/CharacterConditional';\n\n\nexport default (e: Eidolon) => {\n  const enhancedStateDmgBoost = skillRev(e, 0.40, 0.456)\n  const hpPercentLostTotalMax = 0.90\n\n  const basicScaling = basicRev(e, 1.0, 1.1)\n  const basicEnhancedAtkScaling = skillRev(e, 0.40, 0.44)\n  const basicEnhancedHpScaling = skillRev(e, 1.00, 1.10)\n  const ultAtkScaling = ultRev(e, 0.40, 0.432)\n  const ultHpScaling = ultRev(e, 1.00, 1.08)\n  const ultLostHpScaling = ultRev(e, 1.00, 1.08)\n  const fuaAtkScaling = talentRev(e, 0.44, 0.484)\n  const fuaHpScaling = talentRev(e, 1.10, 1.21)\n\n  const hitMultiByTargets = {\n    1: ASHBLAZING_ATK_STACK * (1 * 0.33 + 2 * 0.33 + 3 * 0.34),\n    3: ASHBLAZING_ATK_STACK * (2 * 0.33 + 5 * 0.33 + 8 * 0.34),\n    5: ASHBLAZING_ATK_STACK * (3 * 0.33 + 8 * 0.33 + 8 * 0.34),\n  };\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'enhancedStateActive',\n    name: 'enhancedStateActive',\n    text: 'Hellscape state',\n    title: 'Hellscape state',\n    content: `\n      Increases DMG by ${precisionRound(enhancedStateDmgBoost * 100)}% and his Basic ATK Shard Sword is enhanced to Forest of Swords for 3 turn(s).\n      ::BR::\n      E2: Increases CRIT Rate by ${precisionRound(0.15 * 100)}%.\n    `,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'hpPercentLostTotal',\n    name: 'hpPercentLostTotal',\n    text: 'HP% lost total',\n    title: 'HP% lost total',\n    content: `Ultimate DMG scales off of the tally of Blade's HP loss in the current battle. \n    The tally of Blade's HP loss in the current battle is capped at ${precisionRound(hpPercentLostTotalMax * 100)}% of his Max HP.`,\n    min: 0,\n    max: hpPercentLostTotalMax,\n    percent: true,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'e4MaxHpIncreaseStacks',\n    name: 'e4MaxHpIncreaseStacks',\n    text: 'E4 max HP stacks',\n    title: 'E4 max HP stacks',\n    content: `E4: Increases HP by ${precisionRound(0.20 * 100)}%, stacks up to 2 times.`,\n    min: 0,\n    max: 2,\n    disabled: e < 4,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      enhancedStateActive: true,\n      hpPercentLostTotal: hpPercentLostTotalMax,\n      e4MaxHpIncreaseStacks: 2,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CR] += (e >= 2 && r.enhancedStateActive) ? 0.15 : 0\n      x[Stats.HP_P] += (e >= 4) ? r.e4MaxHpIncreaseStacks * 0.20 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      // Rest of the scalings are calculated dynamically\n\n      // Boost\n      x.ELEMENTAL_DMG += r.enhancedStateActive ? enhancedStateDmgBoost : 0\n      x.FUA_BOOST += 0.20\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.characterConditionals\n      const x = c['x'];\n\n      if (r.enhancedStateActive) {\n        x.BASIC_DMG += basicEnhancedAtkScaling * x[Stats.ATK]\n        x.BASIC_DMG += basicEnhancedHpScaling * x[Stats.HP]\n      } else {\n        x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      }\n\n      x.ULT_DMG += ultAtkScaling * x[Stats.ATK]\n      x.ULT_DMG += ultHpScaling * x[Stats.HP]\n      x.ULT_DMG += ultLostHpScaling * r.hpPercentLostTotal * x[Stats.HP]\n      x.ULT_DMG += (e >= 1 && request.enemyCount == 1) ? 1.50 * r.hpPercentLostTotal * x[Stats.HP] : 0\n\n      const hitMulti = hitMultiByTargets[request.enemyCount]\n      const { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n      x.FUA_DMG += fuaAtkScaling * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n\n      x.FUA_DMG += fuaHpScaling * x[Stats.HP]\n      x.FUA_DMG += (e >= 6) ? 0.50 * x[Stats.HP] : 0\n    }\n  }\n}\n","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport { baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basic, precisionRound, skill, talent, ult } from \"lib/conditionals/utils\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { FormSliderWithPopover } from \"components/optimizerForm/conditionals/FormSlider\";\n\nimport { Eidolon } from \"types/Character\";\n\nconst Sushang = (e: Eidolon) => {\n  const talentSpdBuffValue = talent(e, 0.20, 0.21);\n  const ultBuffedAtk = ult(e, 0.30, 0.324);\n  const talentSpdBuffStacksMax = (e >= 6) ? 2 : 1\n\n  const basicScaling = basic(e, 1.00, 1.10);\n  const skillScaling = skill(e, 2.10, 2.31);\n  const skillExtraHitScaling = skill(e, 1.00, 1.10);\n  const ultScaling = ult(e, 3.20, 3.456);\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'ultBuffedState',\n    name: 'ultBuffedState',\n    text: 'Ult buffed state',\n    title: 'Ult buffed state',\n    content: `Sushang's ATK increases by ${precisionRound(ultBuffedAtk * 100)}% and using her Skill has 2 extra chances to trigger Sword Stance for 2 turn(s).\n    Sword Stance triggered from the extra chances deals 50% of the original DMG.`,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'skillExtraHits',\n    name: 'skillExtraHits',\n    text: 'Skill extra hits',\n    title: 'Skill extra hits',\n    content: `Increases the number of Sword Stance extra hits of the Skill.`,\n    min: 0,\n    max: 3,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'skillTriggerStacks',\n    name: 'skillTriggerStacks',\n    text: 'Skill trigger stacks',\n    title: 'Skill trigger stacks',\n    content: `For every Sword Stance triggered, the DMG dealt by Sword Stance increases by 2.5%. Stacks up to 10 time(s).`,\n    min: 0,\n    max: 10,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'talentSpdBuffStacks',\n    name: 'talentSpdBuffStacks',\n    text: 'Talent SPD buff stacks',\n    title: 'Talent SPD buff stacks',\n    content: `When an enemy has their Weakness Broken on the field, Sushang's SPD increases by ${precisionRound(talentSpdBuffValue * 100)}% per stack for 2 turn(s).\n    ::BR::\n    E6: Talent's SPD Boost is stackable and can stack up to 2 times.`,\n    min: 0,\n    max: talentSpdBuffStacksMax,\n  },\n  {\n    formItem: FormSwitchWithPopover,\n    id: 'e2DmgReductionBuff',\n    name: 'e2DmgReductionBuff',\n    text: 'E2 DMG reduction buff',\n    title: 'E2 DMG reduction buff',\n    content: `E2: After triggering Sword Stance, the DMG taken by Sushang is reduced by 20% for 1 turn.`,\n    disabled: e < 2,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      ultBuffedState: true,\n      e2DmgReductionBuff: true,\n      skillExtraHits: 3,\n      skillTriggerStacks: 10,\n      talentSpdBuffStacks: talentSpdBuffStacksMax,\n    }),\n    precomputeEffects: (request) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject);\n\n      // Stats\n      x[Stats.BE] += (e >= 4) ? 0.40 : 0\n      x[Stats.ATK_P] += (r.ultBuffedState) ? ultBuffedAtk : 0\n      x[Stats.SPD_P] += (r.talentSpdBuffStacks) * talentSpdBuffValue\n\n      // Scaling\n      // Trace only affects stance damage not skill damage - boost this based on proportion of stance : total skill dmg\n      const originalSkillScaling = skillScaling\n      let stanceSkillScaling = 0\n      stanceSkillScaling += (r.skillExtraHits >= 1) ? skillExtraHitScaling : 0\n      stanceSkillScaling += (r.ultBuffedState && r.skillExtraHits >= 2) ? skillExtraHitScaling * 0.5 : 0\n      stanceSkillScaling += (r.ultBuffedState && r.skillExtraHits >= 3) ? skillExtraHitScaling * 0.5 : 0\n      const stanceScalingProportion = stanceSkillScaling / (stanceSkillScaling + originalSkillScaling);\n\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += originalSkillScaling\n      x.SKILL_SCALING += stanceSkillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.SKILL_BOOST += r.skillTriggerStacks * 0.025 * stanceScalingProportion\n      x.DMG_RED_MULTI *= (e >= 2 && r.e2DmgReductionBuff) ? (1 - 0.20) : 1\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      const x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\n\nexport default Sushang;","import React from 'react';\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport { baseComputedStatsObject } from 'lib/conditionals/constants';\nimport { basicRev, precisionRound, skillRev, talentRev, ultRev } from 'lib/conditionals/utils';\nimport { Stats } from 'lib/constants';\nimport { Eidolon } from 'types/Character';\n\nconst Yukong = (e: Eidolon) => {\n  const skillAtkBuffValue = skillRev(e, 0.80, 0.88)\n  const ultCdBuffValue = skillRev(e, 0.65, 0.702)\n  const ultCrBuffValue = skillRev(e, 0.28, 0.294)\n  const talentAtkScaling = talentRev(e, 0.80, 0.88)\n\n  const basicScaling = basicRev(e, 1.00, 1.10)\n  const skillScaling = skillRev(e, 0, 0)\n  const ultScaling = ultRev(e, 3.80, 4.104)\n\n  // const skillRank = [[2, 0.4],[2, 0.44],[2, 0.48],[2, 0.52],[2, 0.56],[2, 0.6],[2, 0.65],[2, 0.7],[2, 0.75],[2, 0.8],[2, 0.84],[2, 0.88],[2, 0.92],[2, 0.96],[2, 1]];\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'roaringBowstrings',\n    name: 'roaringBowstrings',\n    text: 'Roaring Bowstrings',\n    title: `Roaring Bowstrings`,\n    content: `When \"Roaring Bowstrings\" is active, the ATK of all allies increases by ${precisionRound(skillAtkBuffValue * 100)}%.\n    ::BR::\n    When \"Roaring Bowstrings\" is active, Yukong deals 30% more DMG to enemies.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'ultBuff',\n    name: 'ultBuff',\n    text: 'Ult buff',\n    title: `Ult: Diving Kestrel`,\n    content: `If \"Roaring Bowstrings\" is active on Yukong when her Ultimate is used, additionally increases all allies' CRIT Rate by ${precisionRound(ultCrBuffValue * 100)}% and CRIT DMG by ${precisionRound(ultCdBuffValue * 100)}%. At the same time, deals Imaginary DMG equal to ${precisionRound(ultScaling * 100)}% of Yukong's ATK to a single enemy.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'initialSpeedBuff',\n    name: 'initialSpeedBuff',\n    text: 'E1 Initial speed buff',\n    title: 'E1 Initial speed buff',\n    content: `E1: At the start of battle, increases the SPD of all allies by 10% for 2 turn(s).`,\n    disabled: e < 1\n  }];\n\n  return {\n\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      roaringBowstringsActive: true,\n      ultBuff: true,\n      initialSpeedBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (r.roaringBowstrings) ? skillAtkBuffValue : 0\n      x[Stats.CR] += (r.ultBuff && r.roaringBowstrings) ? ultCrBuffValue : 0\n      x[Stats.CD] += (r.ultBuff && r.roaringBowstrings) ? ultCdBuffValue : 0\n      x[Stats.SPD_P] += (e >= 1 && r.initialSpeedBuff) ? 0.10 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.BASIC_SCALING += talentAtkScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.ELEMENTAL_DMG += 0.12\n      x.ELEMENTAL_DMG += (e >= 4 && r.roaringBowstrings) ? 0.30 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      const x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nexport default Yukong;","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { baseComputedStatsObject } from 'lib/conditionals/constants';\nimport { basicRev, precisionRound, skillRev, talentRev, ultRev } from 'lib/conditionals/utils';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\n\nimport { Eidolon } from 'types/Character'\nimport { Form, PrecomputedCharacterConditional } from 'types/CharacterConditional';\n\nexport default (e: Eidolon) => {\n  const skillCrBuffValue = skillRev(e, 0.12, 0.132);\n  const skillHpBuffValue = skillRev(e, 0.06, 0.066);\n  const talentDmgReductionValue = talentRev(e, 0.18, 0.196);\n\n  const basicScaling = basicRev(e, 0.50, 0.55);\n  const skillScaling = skillRev(e, 0, 0);\n  const ultScaling = ultRev(e, 1.00, 1.08);\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'skillActive',\n    name: 'skillActive',\n    text: 'Skill active',\n    title: 'Skill active',\n    content: `While affected by Matrix of Prescience, all team members gain the Knowledge effect, which increases their respective Max HP by ${precisionRound(skillHpBuffValue * 100)}% of Fu Xuan's Max HP, and increases CRIT Rate by ${precisionRound(skillCrBuffValue * 100)}%.`,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'e6TeamHpLostPercent',\n    name: 'e6TeamHpLostPercent',\n    text: 'E6 team HP lost',\n    title: 'E6 team HP lost',\n    content: `E6: Once Matrix of Prescience is activated, it will keep a tally of the total HP lost by all team members in the current battle. Fu Xuan's Ultimate DMG will increase by 200% of this tally of HP loss. This tally is also capped at 120% of Fu Xuan's Max HP.`,\n    min: 0,\n    max: 1.2,\n    percent: true,\n    disabled: e < 6,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      skillActive: true,\n      e6TeamHpLostPercent: 1.2,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CD] += (e >= 1) ? 0.30 : 0\n      x[Stats.CR] += (r.skillActive) ? skillCrBuffValue : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.DMG_RED_MULTI *= (1 - talentDmgReductionValue)\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.characterConditionals\n      const x = c['x'];\n\n      x[Stats.HP] += (r.skillActive) ? skillHpBuffValue * x[Stats.HP] : 0\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.HP]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.HP]\n      x.ULT_DMG += (e >= 6) ? 2.00 * r.e6TeamHpLostPercent * x[Stats.HP] : 0\n    }\n  }\n}","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport { ASHBLAZING_ATK_STACK, baseComputedStatsObject } from '../constants';\nimport { basicRev, calculateAshblazingSet, precisionRound, skillRev, talentRev, ultRev } from '../utils';\nimport { Eidolon } from 'types/Character';\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\n\nconst Yanqing = (e: Eidolon) => {\n  const ultCdBuffValue = ultRev(e, 0.50, 0.54);\n  const talentCdBuffValue = ultRev(e, 0.30, 0.33);\n  const talentCrBuffValue = ultRev(e, 0.20, 0.21);\n\n  const basicScaling = basicRev(e, 1.00, 1.10);\n  const skillScaling = skillRev(e, 2.20, 2.42);\n  const ultScaling = ultRev(e, 3.50, 3.78);\n  const fuaScaling = talentRev(e, 0.50, 0.55);\n\n  const hitMulti = ASHBLAZING_ATK_STACK * (1 * 1 / 1);\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'ultBuffActive',\n    name: 'ultBuffActive',\n    text: 'Ult buff active',\n    title: 'Ult buff active',\n    content: `Increases Yanqing's CRIT Rate by 60%. When Soulsteel Sync is active, increases Yanqing's CRIT DMG by an extra ${precisionRound(ultCdBuffValue * 100)}%.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'soulsteelBuffActive',\n    name: 'soulsteelBuffActive',\n    text: 'Soulsteel buff active',\n    title: 'Soulsteel buff active',\n    content: `When Soulsteel Sync is active, Yanqing's CRIT Rate increases by ${precisionRound(talentCrBuffValue * 100)}% and his CRIT DMG increases by ${precisionRound(talentCdBuffValue * 100)}%. \n    ::BR::\n    Before using Ultimate, when Soulsteel Sync is active, increases Yanqing's CRIT DMG by an extra ${precisionRound(ultCdBuffValue * 100)}%.\n    ::BR::\n    When Soulsteel Sync is active, Effect RES increases by 20%.\n    ::BR::\n    E2: When Soulsteel Sync is active, Energy Regeneration Rate increases by an extra 10%.\n    `,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'critSpdBuff',\n    name: 'critSpdBuff',\n    text: 'Crit spd buff',\n    title: 'Crit spd buff',\n    content: 'When a CRIT Hit is triggered, increases SPD by 10% for 2 turn(s).',\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e1TargetFrozen',\n    name: 'e1TargetFrozen',\n    text: 'E1 target frozen',\n    title: 'E1 target frozen',\n    content: 'When Yanqing attacks a Frozen enemy, he deals Additional Ice DMG equal to 60% of his ATK.',\n    disabled: (e < 1)\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e4CurrentHp80',\n    name: 'e4CurrentHp80',\n    text: 'E4 self HP ≥ 80% RES PEN buff',\n    title: 'E4 self HP ≥ 80% RES PEN buff',\n    content: 'When the current HP percentage is 80% or higher, Ice RES PEN increases by 12%.',\n    disabled: (e < 4)\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      ultBuffActive: true,\n      soulsteelBuffActive: true,\n      critSpdBuff: true,\n      e1TargetFrozen: true,\n      e4CurrentHp80: true,\n    }),\n    precomputeEffects: (request) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject);\n\n      // Stats\n      x[Stats.CR] += (r.ultBuffActive) ? 0.60 : 0\n      x[Stats.CD] += (r.ultBuffActive && r.soulsteelBuffActive) ? ultCdBuffValue : 0\n      x[Stats.CR] += (r.soulsteelBuffActive) ? talentCrBuffValue : 0\n      x[Stats.CD] += (r.soulsteelBuffActive) ? talentCdBuffValue : 0\n      x[Stats.RES] += (r.soulsteelBuffActive) ? 0.20 : 0\n      x[Stats.SPD_P] += (r.critSpdBuff) ? 0.10 : 0\n      x[Stats.ERR] += (e >= 2 && r.soulsteelBuffActive) ? 0.10 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += fuaScaling\n\n      x.BASIC_SCALING += (request.enemyElementalWeak) ? 0.30 : 0\n      x.SKILL_SCALING += (request.enemyElementalWeak) ? 0.30 : 0\n      x.ULT_SCALING += (request.enemyElementalWeak) ? 0.30 : 0\n      x.FUA_SCALING += (request.enemyElementalWeak) ? 0.30 : 0\n\n      x.BASIC_SCALING += (e >= 1 && r.e1TargetFrozen) ? 0.60 : 0\n      x.SKILL_SCALING += (e >= 1 && r.e1TargetFrozen) ? 0.60 : 0\n      x.ULT_SCALING += (e >= 1 && r.e1TargetFrozen) ? 0.60 : 0\n      x.FUA_SCALING += (e >= 1 && r.e1TargetFrozen) ? 0.60 : 0\n\n      // Boost\n      x.RES_PEN += (e >= 4 && r.e4CurrentHp80) ? 0.12 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c, request) => {\n      const x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n\n      const { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti);\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti);\n    }\n  }\n}\n\nexport default Yanqing;","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { baseComputedStatsObject } from 'lib/conditionals/constants';\nimport { basicRev, precisionRound, skillRev, talentRev, ultRev } from 'lib/conditionals/utils';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\n\nimport { Eidolon } from 'types/Character'\nimport { Form, PrecomputedCharacterConditional } from 'types/CharacterConditional';\n\nexport default (e: Eidolon) => {\n  const talentDebuffDmgIncreaseValue = talentRev(e, 0.07, 0.076);\n  const talentDebuffMax = (e >= 6) ? 4 : 3\n\n  const basicScaling = basicRev(e, 1.00, 1.10);\n  const skillScaling = skillRev(e, 1.20, 1.32);\n  const ultScaling = ultRev(e, 1.20, 1.296);\n  const dotScaling = skillRev(e, 2.182, 2.40);\n\n  const content = [{\n    formItem: FormSliderWithPopover,\n    id: 'talentDebuffStacks',\n    name: 'talentDebuffStacks',\n    text: 'Enemy Firekiss stacks',\n    title: 'Enemy Firekiss stacks',\n    content: `While inflicted with Firekiss, the enemy receives ${precisionRound(talentDebuffDmgIncreaseValue * 100)}% increased DMG, which lasts for 3 turns and can stack up to ${precisionRound(talentDebuffMax)} times.`,\n    min: 0,\n    max: talentDebuffMax,\n  },{\n    formItem: FormSwitchWithPopover,\n    id: 'enemyBurned',\n    name: 'enemyBurned',\n    text: 'Enemy burned',\n    title: 'Enemy burned',\n    content: `Increases DMG by ${precisionRound(0.20 * 100)}% against enemies affected by Burn.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e2BurnMultiBoost',\n    name: 'e2BurnMultiBoost',\n    text: 'E2 burn multi boost',\n    title: 'E2 burn multi boost',\n    content: `E2: When an enemy target is Burned, Guinaifen's Basic ATK and Skill can increase the DMG multiplier of their Burn status by 40%.`,\n    disabled: e < 2,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      talentDebuffStacks: talentDebuffMax,\n      enemyBurned: true,\n      e2BurnMultiBoost: true,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.DOT_SCALING += dotScaling\n      x.DOT_SCALING += (e >= 2 && r.e2BurnMultiBoost) ? 0.40 : 0\n\n\n      // Boost\n      x.ELEMENTAL_DMG += (r.enemyBurned) ? 0.20 : 0\n      x.DMG_TAKEN_MULTI += r.talentDebuffStacks * talentDebuffDmgIncreaseValue\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional) => {\n      const x = c['x'];\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n    }\n  }\n}","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { baseComputedStatsObject } from 'lib/conditionals/constants';\nimport { basic, precisionRound, skill, ult } from 'lib/conditionals/utils';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\n\nimport { Eidolon } from 'types/Character'\nimport { Form, PrecomputedCharacterConditional } from 'types/CharacterConditional';\n\nexport default (e: Eidolon) => {\n  const basicScaling = basic(e, 1.0, 1.1)\n  const skillScaling = skill(e, 0, 0)\n  const ultScaling = ult(e, 0, 0)\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'healingMaxHpBuff',\n    name: 'healingMaxHpBuff',\n    text: 'Healing max HP buff',\n    title: 'Healing max HP buff',\n    content: `When Bailu heals a target ally above their normal Max HP, the target's Max HP increases by ${precisionRound(0.10 * 100)}% for 2 turns.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'talentDmgReductionBuff',\n    name: 'talentDmgReductionBuff',\n    text: 'Talent DMG reduction buff',\n    title: 'Talent DMG reduction buff',\n    content: `Characters with Invigoration take ${precisionRound(0.10 * 100)}% less DMG.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e2UltHealingBuff',\n    name: 'e2UltHealingBuff',\n    text: 'E2 ult healing buff',\n    title: 'E2 ult healing buff',\n    content: `E2: Increases healing by ${precisionRound(0.15 * 100)}% after Ultimate.`,\n    disabled: e < 2,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'e4SkillHealingDmgBuffStacks',\n    name: 'e4SkillHealingDmgBuffStacks',\n    text: 'E4 skill healing DMG buff stacks',\n    title: 'E4 skill healing DMG buff stacks',\n    content: `E4: Every healing provided by Bailu's Skill makes the recipient deal ${precisionRound(0.10 * 100)}% more DMG for 2 turns. This effect can stack up to 3 times.`,\n    min: 0,\n    max: 3,\n    disabled: e < 4,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      healingMaxHpBuff: true,\n      talentDmgReductionBuff: true,\n      e2UltHealingBuff: true,\n      e4SkillHealingDmgBuffStacks: 0,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.HP_P] += (r.healingMaxHpBuff) ? 0.10 : 0\n      x[Stats.OHB] += (e >= 2 && r.e2UltHealingBuff) ? 0.15 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.DMG_RED_MULTI *= (r.talentDmgReductionBuff) ? (1 - 0.10) : 1\n      x.ALL_DMG_MULTI += (e >= 4) ? r.e4SkillHealingDmgBuffStacks * 0.10 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional) => {\n      const x = c['x'];\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += 0\n      x.ULT_DMG += 0\n      x.FUA_DMG += 0\n    }\n  }\n}","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport { baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basicRev, precisionRound, skillRev, talentRev, ultRev } from \"lib/conditionals/utils\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSliderWithPopover } from \"components/optimizerForm/conditionals/FormSlider\";\n\nimport { Eidolon } from \"types/Character\";\nimport { Form, PrecomputedCharacterConditional } from \"types/CharacterConditional\";\n\n\nexport default(e: Eidolon) => {\n  const righteousHeartStackMax = (e >= 1) ? 10 : 6\n  const outroarStackCdValue = skillRev(e, 0.12, 0.132)\n  const righteousHeartDmgValue = talentRev(e, 0.10, 0.11)\n\n  const basicScaling = basicRev(e, 1.00, 1.10)\n  const basicEnhanced1Scaling = basicRev(e, 2.60, 2.86)\n  const basicEnhanced2Scaling = basicRev(e, 3.80, 4.18)\n  const basicEnhanced3Scaling = basicRev(e, 5.00, 5.50)\n  const skillScaling = skillRev(e, 0, 0)\n  const ultScaling = ultRev(e, 3.00, 3.24)\n\n  const content = [{\n    formItem: FormSliderWithPopover,\n    id: 'basicEnhanced',\n    name: 'basicEnhanced',\n    text: 'Basic enhancements',\n    title: 'Basic enhancements',\n    content: `0 stack(s): Uses a 2-hit attack and deals Imaginary DMG equal to ${precisionRound(basicScaling * 100)}% ATK to a single enemy target.\n    ::BR::1 stack(s): Uses a 3-hit attack and deals Imaginary DMG equal to ${precisionRound(basicEnhanced1Scaling * 100)}% ATK to a single enemy target.\n    ::BR::2 stack(s): Uses a 5-hit attack and deals Imaginary DMG equal to ${precisionRound(basicEnhanced2Scaling * 100)}% ATK to a single enemy target and reduced DMG to adjacent targets.\n    ::BR::3 stack(s): Uses a 7-hit attack and deals Imaginary DMG equal to ${precisionRound(basicEnhanced3Scaling * 100)}% ATK to a single enemy target and reduced DMG to adjacent targets.`,\n    min: 0,\n    max: 3,\n  },{\n    formItem: FormSliderWithPopover,\n    id: 'skillOutroarStacks',\n    name: 'skillOutroarStacks',\n    text: 'Outroar stacks',\n    title: 'Outroar stacks',\n    content: `Divine Spear or Fulgurant Leap, starting from the fourth hit, 1 stack of Outroar is gained before every hit. \n    Each stack of Outroar increases Dan Heng • Imbibitor Lunae's CRIT DMG by ${precisionRound(outroarStackCdValue * 100)}%, for a max of 4 stacks. (applied to all hits)`,\n    min: 0,\n    max: 4,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'talentRighteousHeartStacks',\n    name: 'talentRighteousHeartStacks',\n    text: 'Righteous Heart stacks',\n    title: 'Righteous Heart stacks',\n    content: `After each hit dealt during an attack, Dan Heng • Imbibitor Lunae gains 1 stack of Righteous Heart, increasing his DMG by ${precisionRound(righteousHeartDmgValue * 100)}%. (applied to all hits)`,\n    min: 0,\n    max: righteousHeartStackMax,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'e6ResPenStacks',\n    name: 'e6ResPenStacks',\n    text: 'E6 RES PEN stacks',\n    title: 'E6 RES PEN stacks',\n    content: `E6: After any other ally uses their Ultimate, the Imaginary RES PEN of Dan Heng • Imbibitor Lunae's next Fulgurant Leap attack increases by 20%, up to 3 stacks.`,\n    min: 0,\n    max: 3,\n    disabled: e < 6,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      basicEnhanced: 3,\n      skillOutroarStacks: 4,\n      talentRighteousHeartStacks: righteousHeartStackMax,\n      e6ResPenStacks: 3,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CD] += (request.enemyElementalWeak) ? 0.24 : 0\n      x[Stats.CD] += r.skillOutroarStacks * outroarStackCdValue\n\n      // Scaling\n      x.BASIC_SCALING += {\n        0: basicScaling,\n        1: basicEnhanced1Scaling,\n        2: basicEnhanced2Scaling,\n        3: basicEnhanced3Scaling,\n      }[r.basicEnhanced]\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.ELEMENTAL_DMG += r.talentRighteousHeartStacks * righteousHeartDmgValue\n      x.BASIC_RES_PEN += (e >= 6 && r.basicEnhanced == 3) ? 0.20 * r.e6ResPenStacks : 0\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional) => {\n      const x = c['x'];\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { basic, calculateAshblazingSet, precisionRound, skill, talent, ult } from \"lib/conditionals/utils\";\nimport { ASHBLAZING_ATK_STACK, baseComputedStatsObject, ComputedStatsObject } from 'lib/conditionals/constants';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\n\nimport { CharacterConditional, ConditionalMap, ContentItem, Form } from 'types/CharacterConditional';\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { Eidolon } from 'types/Character';\nimport { Unknown } from 'types/Common';\n\n\nconst Xueyi = (e: Eidolon): CharacterConditional => {\n  const ultBoostMax = ult(e, 0.60, 0.648)\n  const basicScaling = basic(e, 1.00, 1.10)\n  const skillScaling = skill(e, 1.40, 1.54)\n  const ultScaling = ult(e, 2.50, 2.70)\n  const fuaScaling = talent(e, 0.90, 0.99)\n\n  const hitMultiByFuaHits = {\n    0: 0,\n    1: ASHBLAZING_ATK_STACK * (1 * 1 / 1), // 0.06\n    2: ASHBLAZING_ATK_STACK * (1 * 1 / 2 + 2 * 1 / 2), // 0.09\n    3: ASHBLAZING_ATK_STACK * (1 * 1 / 3 + 2 * 1 / 3 + 3 * 1 / 3) // 0.12\n  };\n\n  const content: ContentItem[] = [\n    {\n      id: 'enemyToughness50',\n      text: 'Intrepid Rollerbearings',\n      formItem: FormSwitchWithPopover,\n      title: 'Intrepid Rollerbearings',\n      content: \"If the enemy target's Toughness is equal to or higher than 50% of their Max Toughness, deals 10% more DMG when using Ultimate.\",\n    },\n    {\n      id: 'toughnessReductionDmgBoost',\n      text: 'Ultimate DMG boost',\n      formItem: FormSliderWithPopover,\n      title: 'Ultimate: Divine Castigation',\n      content: `When using Ultimate, the more Toughness is reduced, the higher the DMG will be dealt, up to a max of ${precisionRound(ultBoostMax * 100)}% increase.`,\n      min: 0,\n      max: ultBoostMax,\n      percent: true,\n    },\n    {\n      id: 'fuaHits',\n      text: 'FUA hits',\n      formItem: FormSliderWithPopover,\n      title: 'Talent: Karmic Perpetuation',\n      content: `When Karma reaches the max number of stacks, consumes all current Karma stacks and immediately launches a follow-up attack against an enemy target, \n      dealing DMG for 3 times, with each time dealing Quantum DMG equal to ${precisionRound(fuaScaling * 100)}% of Xueyi's ATK to a single random enemy.`,\n      min: 0,\n      max: 3,\n    },\n    {\n      id: 'e4BeBuff',\n      text: 'E4: Karma, Severed',\n      formItem: FormSwitchWithPopover,\n      title: 'E4 break effect buff',\n      content: \"E4: When using Ultimate, increases Break Effect by 40% for 2 turn(s).\",\n      disabled: (e < 4),\n    }\n  ];\n\n  return {\n    display: () => <DisplayFormControl ultBoostMax={ultBoostMax} eidolon={e} content={content} />,\n    defaults: () => ({\n      enemyToughness50: true,\n      toughnessReductionDmgBoost: ultBoostMax,\n      fuaHits: 3,\n      e4BeBuff: true,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r: ConditionalMap = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.BE] += (e >= 4 && r.e4BeBuff) ? 0.40 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += fuaScaling * (r.fuaHits as number);\n\n      // Boost\n      x.ULT_BOOST += (r.enemyToughness50) ? 0.10 : 0\n      x.ULT_BOOST += r.toughnessReductionDmgBoost as number;\n      x.FUA_BOOST += (e >= 1) ? 0.40 : 0\n\n      return x;\n    },\n    calculateBaseMultis: (c: Unknown, request: Form) => {\n      const r = request.characterConditionals as { [key: string]: number }\n      const x: ComputedStatsObject = c['x'];\n\n      x.ELEMENTAL_DMG += Math.min(2.40, x[Stats.BE])\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n\n      const hitMulti = hitMultiByFuaHits[r.fuaHits]\n      const { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n    }\n  }\n}\n\nexport default Xueyi;","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { baseComputedStatsObject } from 'lib/conditionals/constants';\nimport { basicRev, precisionRound, skillRev, talentRev, ultRev } from 'lib/conditionals/utils';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\n\nimport { Eidolon } from 'types/Character'\nimport { Form, PrecomputedCharacterConditional } from 'types/CharacterConditional';\n\nexport default (e: Eidolon) => {\n  const ultSpdBuffValue = ultRev(e, 0.20, 0.21)\n  const ultAtkBuffValue = ultRev(e, 0.60, 0.648)\n  let talentDmgBoostValue = talentRev(e, 0.30, 0.33)\n\n  talentDmgBoostValue += (e >= 6) ? 0.10 : 0\n\n  const basicScaling = basicRev(e, 1.00, 1.10)\n  const skillScaling = skillRev(e, 2.40, 2.64)\n  const ultScaling = ultRev(e, 0, 0)\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'ultBuff',\n    name: 'ultBuff',\n    text: 'Ult buff active',\n    title: 'Ult buff active',\n    content: `Increases the SPD of a target ally by ${precisionRound(ultSpdBuffValue * 100)}% of Hanya's SPD and increases the same target ally's ATK by ${precisionRound(ultAtkBuffValue * 100)}%.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'targetBurdenActive',\n    name: 'targetBurdenActive',\n    text: 'Target Burden debuff',\n    title: 'Target Burden debuff',\n    content: `When an ally uses a Basic ATK, Skill, or Ultimate on an enemy inflicted with Burden, the DMG dealt increases by ${precisionRound(talentDmgBoostValue * 100)}% for 2 turn(s).`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'burdenAtkBuff',\n    name: 'burdenAtkBuff',\n    text: 'Burden ATK buff',\n    title: 'Burden ATK buff',\n    content: `Allies triggering Burden's Skill Point recovery effect have their ATK increased by ${precisionRound(0.10 * 100)}% for 1 turn.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e2SkillSpdBuff',\n    name: 'e2SkillSpdBuff',\n    text: 'E2 skill SPD buff',\n    title: 'E2 skill SPD buff',\n    content: `E2: After Skill, increases SPD by ${precisionRound(0.20 * 100)}% for 1 turn.`,\n    disabled: e < 2,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      ultBuff: true,\n      targetBurdenActive: true,\n      burdenAtkBuff: true,\n      skillSpdBuff: true,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      x[Stats.ATK_P] += (r.ultBuff) ? ultAtkBuffValue : 0\n      x[Stats.ATK_P] += (r.burdenAtkBuff) ? 0.10 : 0\n      x[Stats.SPD_P] += (e >= 2 && r.e2SkillSpdBuff) ? 0.20 : 0\n\n      // Boost\n      x.ALL_DMG_MULTI = (r.targetBurdenActive) ? talentDmgBoostValue : 0\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.characterConditionals\n      const x = c['x'];\n\n      x[Stats.SPD] += (r.ultBuff) ? ultSpdBuffValue * x[Stats.SPD] : 0\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport { baseComputedStatsObject } from \"lib/conditionals/constants\";\nimport { basic, precisionRound, ult } from \"lib/conditionals/utils\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\n\nimport { Eidolon } from \"types/Character\";\n\nexport default(e: Eidolon) => {\n  const ultBuffValue = ult(e, 0.40, 0.432)\n  const basicScaling = basic(e, 0.50, 0.55)\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'ultBuff',\n    name: 'ultBuff',\n    text: 'Ult buff',\n    title: 'Ult buff',\n    content: `Increases all allies' ATK by ${precisionRound(ultBuffValue * 100)}% for 2 turns after using Ultimate.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'skillBuff',\n    name: 'skillBuff',\n    text: 'E1 skill buff',\n    title: 'E1 skill buff',\n    content: `E1: Increases all allies' SPD by 12% for 2 turns after using Skill.`,\n    disabled: e < 1,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e6DmgBuff',\n    name: 'e6DmgBuff',\n    text: 'E6 DMG buff',\n    title: 'E6 DMG buff',\n    content: `E6: When healing a target ally, increases the target ally's DMG dealt by 50% for 2 turns.`,\n    disabled: e < 6,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      ultBuff: true,\n      skillBuff: true,\n      e6DmgBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.SPD_P] += (e >= 1 && r.skillBuff) ? 0.12 : 0\n      x[Stats.ATK_P] += (r.ultBuff) ? ultBuffValue : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n\n      // Boost\n      x.ELEMENTAL_DMG += (e >= 6 && r.skillBuff) ? 0.50 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c) => {\n      const x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.HP]\n    }\n  }\n}","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport { Eidolon } from \"types/Character\";\nimport { Form } from \"types/CharacterConditional\";\n\nimport { basic, precisionRound, skill, ult } from \"../utils\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\nimport { baseComputedStatsObject } from \"../constants\";\nimport { Unknown } from \"types/Common\";\n\nconst RuanMei = (e: Eidolon) => {\n  const fieldResPenValue = ult(e, 0.25, 0.27)\n  const basicScaling = basic(e, 1.00, 1.10)\n  const skillScaling = skill(e, 0, 0)\n  const ultScaling = ult(e, 0, 0)\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'ultFieldActive',\n    name:'ultFieldActive',\n    text: 'Ult field active',\n    title: 'Ult field active',\n    content: `While inside the field, all allies' All-Type RES PEN increases by ${precisionRound(fieldResPenValue * 100)}%.\n    ::BR::\n    E1: While the Ultimate's field is deployed, the DMG dealt by all allies ignores 20% of the target's DEF.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e4BeBuff',\n    name:'e4BeBuff',\n    text: 'E4 break effect buff',\n    title: 'E4 break effect buff',\n    content: 'E4: When an enemy target\\'s Weakness is Broken, Ruan Mei\\'s Break Effect increases by 100% for 3 turn(s).',\n    disabled: (e < 4),\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      ultFieldActive: true,\n      e4BeBuff: true,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.BE] += 0.20\n      x[Stats.BE] += (e >= 4 && r.e4BeBuff) ? 1.00 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.RES_PEN += (r.ultFieldActive) ? fieldResPenValue : 0\n      x.DEF_SHRED += (e >= 1 && r.ultFieldActive) ? 0.20 : 0\n      x[Stats.ATK_P] += (e >= 2 && request.enemyWeaknessBroken) ? 0.40 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c: Unknown) => {\n      const x = c['x'];\n\n      const beOver = precisionRound((x[Stats.BE] * 100 - 120) / 10)\n      x.ELEMENTAL_DMG += Math.floor(Math.max(0, beOver)) * 0.06\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nexport default RuanMei;","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { baseComputedStatsObject } from 'lib/conditionals/constants';\nimport { basic, precisionRound, skill, ult } from 'lib/conditionals/utils';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\n\nimport { Eidolon } from 'types/Character'\nimport { Form, PrecomputedCharacterConditional } from 'types/CharacterConditional';\n\n\nexport default (e:Eidolon) => {\n  const skillCdBuffScaling = skill(e, 0.24, 0.264);\n  const skillCdBuffBase = skill(e, 0.45, 0.486);\n  const cipherTalentStackBoost = ult(e, 0.10, 0.108);\n  const talentBaseStackBoost = ult(e, 0.06, 0.066);\n\n  const basicScaling = basic(e, 1.00, 1.10);\n  const skillScaling = skill(e, 0, 0);\n  const ultScaling = ult(e, 0, 0);\n\n  const atkBoostByQuantumAllies = {\n    0: 0,\n    1: 0.05,\n    2: 0.15,\n    3: 0.30,\n  };\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'skillCdBuff',\n    name: 'skillCdBuff',\n    text: 'Skill CD buff',\n    title: 'Skill CD buff',\n    content: `Increases the CRIT DMG of a single ally by ${precisionRound(skillCdBuffScaling * 100)}% of Sparkle's CRIT DMG plus ${precisionRound(skillCdBuffBase * 100)}%, lasting for 1 turn(s).`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'cipherBuff',\n    name: 'cipherBuff',\n    text: 'Cipher buff',\n    title: 'Cipher buff',\n    content: `When allies with Cipher trigger the DMG Boost effect provided by Sparkle's Talent, each stack additionally increases its effect by ${precisionRound(cipherTalentStackBoost * 100)}%, lasting for 2 turns.`,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'talentStacks',\n    name: 'talentStacks',\n    text: 'Talent DMG stacks',\n    title: 'Talent DMG stacks',\n    content: `Whenever an ally consumes 1 Skill Point, all allies' DMG increases by ${precisionRound(talentBaseStackBoost * 100)}%. This effect lasts for 2 turn(s) and can stack up to 3 time(s).`,\n    min: 0,\n    max: 3,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'quantumAllies',\n    name: 'quantumAllies',\n    text: 'Quantum allies',\n    title: 'Quantum allies',\n    content: `When there are 1/2/3 Quantum allies in your team, Quantum-Type allies' ATK are increased by 5%/15%/30%.`,\n    min: 0,\n    max: 3,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      skillCdBuff: true,\n      cipherBuff: true,\n      talentStacks: 3,\n      quantumAllies: 3,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      x[Stats.ATK_P] += 0.15 + (atkBoostByQuantumAllies[r.quantumAllies] || 0)\n      x[Stats.ATK_P] += (e >= 1 && r.cipherBuff) ? 0.40 : 0\n\n      x.ELEMENTAL_DMG += (r.cipherBuff) ? r.talentStacks * (talentBaseStackBoost + cipherTalentStackBoost) : r.talentStacks * talentBaseStackBoost\n      x.DEF_SHRED += (e >= 2) ? 0.08 * r.talentStacks : 0\n\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.characterConditionals\n      const x = c['x'];\n\n      x[Stats.CD] += (r.skillCdBuff) ? skillCdBuffBase + skillCdBuffScaling * x[Stats.CD] : 0\n      x[Stats.CD] += (e >= 6 && r.skillCdBuff) ? 0.30 * x[Stats.CD] : 0\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { baseComputedStatsObject } from 'lib/conditionals/constants';\nimport { basic, precisionRound, skill, talent, ult } from 'lib/conditionals/utils';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\n\nimport { Eidolon } from 'types/Character'\nimport { Form, PrecomputedCharacterConditional } from 'types/CharacterConditional';\n\n\nexport default (e: Eidolon) => {\n  const arcanaStackMultiplier = talent(e, 0.12, 0.132)\n  const epiphanyDmgTakenBoost = ult(e, 0.25, 0.27)\n  const defShredValue = skill(e, 0.208, 0.22)\n\n  const basicScaling = basic(e, 0.60, 0.66)\n  const skillScaling = skill(e, 0.90, 0.99)\n  const ultScaling = ult(e, 1.20, 1.30)\n  const dotScaling = talent(e, 2.40, 2.64)\n\n  const content = [{\n    formItem: FormSwitchWithPopover,\n    id: 'epiphanyDebuff',\n    name: 'epiphanyDebuff',\n    text: 'Epiphany debuff',\n    title: 'Epiphany debuff',\n    content: `Enemies affected by Epiphany take ${precisionRound(epiphanyDmgTakenBoost * 100)}% more DMG in their turn.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'defDecreaseDebuff',\n    name: 'defDecreaseDebuff',\n    text: 'Def decrease debuff',\n    title: 'Skill def decrease debuff',\n    content: `Enemies DEF is decreased by ${precisionRound(defShredValue * 100)}%.`,\n  }, {\n    formItem: FormSliderWithPopover,\n    id: 'arcanaStacks',\n    name: 'arcanaStacks',\n    text: 'Arcana stacks',\n    title: 'Arcana stacks',\n    content: `While afflicted with Arcana, enemy targets receive Wind DoT equal to ${precisionRound(dotScaling * 100)}% of Black Swan's ATK at the start of each turn. Each stack of Arcana increases this DoT DMG multiplier by ${precisionRound(arcanaStackMultiplier * 100)}%. Arcana can stack up to 50 times. \n    ::BR::\nWhen there are 3 or more Arcana stacks, deals Wind DoT to adjacent targets. When there are 7 or more Arcana stacks, enables the current DoT dealt this time to ignore 20% of the target's and adjacent targets' DEF.`,\n    min: 0,\n    max: 50,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e1ResReduction',\n    name: 'e1ResReduction',\n    text: 'E1 RES reduction',\n    title: 'E1 RES reduction',\n    content: `E1: While Black Swan is active in battle, enemies afflicted with Wind Shear, Bleed, Burn, or Shock will have their corresponding Wind, Physical, Fire, or Lightning RES respectively reduced by 25%.`,\n    disabled: e < 1,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      epiphanyDebuff: true,\n      defDecreaseDebuff: true,\n      arcanaStacks: 7,\n      e1ResReduction: true\n    }),\n    precomputeEffects: (request: Form) => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject)\n\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.DOT_SCALING += dotScaling + arcanaStackMultiplier * r.arcanaStacks\n\n      x.DOT_DEF_PEN += (r.arcanaStacks >= 7) ? 0.20 : 0\n      x.DEF_SHRED += (r.defDecreaseDebuff) ? defShredValue : 0\n      x.DOT_VULNERABILITY += (r.epiphanyDebuff) ? epiphanyDmgTakenBoost : 0\n\n      x.RES_PEN += (e >= 1 && r.e1ResReduction) ? 0.25 : 0\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional) => {\n      const x = c['x'];\n\n      x.ELEMENTAL_DMG += Math.min(0.72, 0.60 * x[Stats.EHR])\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n","import React from 'react';\nimport { Stats } from 'lib/constants';\nimport { baseComputedStatsObject } from 'lib/conditionals/constants';\nimport { basicRev, precisionRound, skillRev, ultRev } from 'lib/conditionals/utils';\n\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\n\nimport { Eidolon } from 'types/Character'\nimport { Form, PrecomputedCharacterConditional } from 'types/CharacterConditional';\n\nexport default (e: Eidolon) => {\n  const basicScaling = basicRev(e, 1.00, 1.10);\n  const skillScaling = skillRev(e, 2.00, 2.20);\n  let ultStackScaling = ultRev(e, 0.60, 0.65);\n  ultStackScaling += (e >= 4 ? 0.06 : 0);\n\n  const content = [{\n    formItem: FormSliderWithPopover,\n    id: 'ultHitsOnTarget',\n    name: 'ultHitsOnTarget',\n    text: 'Ult hits on target',\n    title: 'Ult hits on target',\n    content: `Number of Ultimate hits on the primary target, dealing DMG equal to ${precisionRound(ultStackScaling * 100)}% ATK per hit.`,\n    min: 1,\n    max: 10,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'enemyFrozen',\n    name: 'enemyFrozen',\n    text: 'Enemy frozen',\n    title: 'Enemy frozen',\n    content: `When dealing DMG to Frozen enemies, increases CRIT DMG by 30%.`,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e2DefReduction',\n    name: 'e2DefReduction',\n    text: 'E2 DEF reduction',\n    title: 'E2 DEF reduction',\n    content: `E2: Reduces the target's DEF by 16% for 3 turn(s).`,\n    disabled: e < 2,\n  }, {\n    formItem: FormSwitchWithPopover,\n    id: 'e6UltDmgBoost',\n    name: 'e6UltDmgBoost',\n    text: 'E6 ult DMG boost',\n    title: 'E6 ult DMG boost',\n    content: `E6: When using the Ultimate, increases own DMG by 30%, lasting until the end of the turn.`,\n    disabled: e < 6,\n  }];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      ultHitsOnTarget: 10,\n      enemyFrozen: true,\n      e2DefReduction: true,\n      e6UltDmgBoost: true,\n    }),\n    precomputeEffects: (request: Form) => {\n      const r = request.characterConditionals\n      const x = Object.assign({}, baseComputedStatsObject);\n\n      x[Stats.CD] += (r.enemyFrozen) ? 0.30 : 0\n\n      x.DEF_SHRED += (e >= 2 && r.e2DefReduction) ? 0.16 : 0\n      x.ELEMENTAL_DMG += (e >= 6 && r.e6UltDmgBoost) ? 0.30 : 0\n\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultStackScaling * (r.ultHitsOnTarget);\n\n      return x\n    },\n    calculateBaseMultis: (c: PrecomputedCharacterConditional) => {\n      const x = c['x'];\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\n\n","import { Flex, Form, InputNumber, Slider, Switch, Typography } from \"antd\";\nimport { CheckOutlined, CloseOutlined } from \"@ant-design/icons\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport WithPopover from \"components/common/WithPopover\";\n\nconst justify = 'flex-start'\nconst align = 'center'\nconst inputWidth = 75\nconst numberWidth = 65\nconst sliderWidth = 145\n\nconst Text = styled(Typography)`\n  white-space: pre-line;\n`\nfunction precisionRound(number, precision = 8) {\n  const factor = Math.pow(10, precision);\n  return Math.round(number * factor) / factor;\n}\n\nexport function FormSwitch(props) {\n  return (\n\n    <Flex justify={justify} align={align}>\n      <Form.Item name={[conditionalType(props), props.name]} valuePropName='checked'>\n        <Switch\n          checkedChildren={<CheckOutlined />}\n          unCheckedChildren={<CloseOutlined />}\n          disabled={props.disabled}\n          defaultChecked={!props.disabled}\n          style={{ width: 45, marginRight: 10 }}\n        />\n      </Form.Item>\n      <Text>{props.text}</Text>\n    </Flex>\n\n  )\n}\nFormSwitch.propTypes = {\n  disabled: PropTypes.bool,\n  name: PropTypes.string,\n  text: PropTypes.string,\n}\nexport const FormSwitchWithPopover = WithPopover(FormSwitch);\nFormSwitchWithPopover.propTypes = Object.assign({}, FormSwitch.propTypes, WithPopover.propTypes);\n\n// export type FormSwitchWithPopover = \n\n\nexport function FormSlider(props) {\n  const [inputValue, setInputValue] = useState(1);\n  const onChange = (newValue) => {\n    setInputValue(newValue);\n  };\n\n  const multiplier = (props.percent ? 100 : 1)\n  const step = props.percent ? 0.01 : 1\n  const symbol = props.percent ? '%' : ''\n\n  return (\n    <Flex vertical gap={5} style={{ marginBottom: 0 }}>\n      <Flex justify={justify} align={align}>\n        <div style={{ minWidth: inputWidth, display: 'block' }}>\n          <Form.Item name={[conditionalType(props), props.name]}>\n            <InputNumber\n              min={props.min}\n              max={props.max}\n              controls={false}\n              size='small'\n              style={{\n                width: numberWidth,\n              }}\n              parser={(value) => value == null || value == '' ? 0 : precisionRound(value / multiplier)}\n              formatter={(value) => `${precisionRound(value * multiplier)}`}\n              addonAfter={symbol}\n              onChange={onChange}\n              disabled={props.disabled}\n            />\n          </Form.Item>\n        </div>\n        <Text>{props.text}</Text>\n      </Flex>\n      <Flex align='center' justify='flex-start' gap={10} style={{ height: 14 }}>\n        <Form.Item name={[conditionalType(props), props.name]}>\n          <Slider\n            min={props.min}\n            max={props.max}\n            step={step}\n            value={typeof inputValue === 'number' ? inputValue : 0}\n            style={{\n              minWidth: sliderWidth,\n              marginTop: 0,\n              marginBottom: 0,\n              marginLeft: 1\n            }}\n            tooltip={{\n              formatter: (value) => `${precisionRound(value * multiplier)}${symbol}`\n            }}\n            onChange={onChange}\n            disabled={props.disabled}\n          />\n        </Form.Item>\n        <Text style={{ minWidth: 20, marginBottom: 2, textAlign: 'center' }}>{`${precisionRound(props.max * multiplier)}${symbol}`}</Text>\n      </Flex>\n    </Flex>\n  )\n}\nFormSlider.propTypes = {\n  disabled: PropTypes.bool,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  text: PropTypes.string,\n  name: PropTypes.string,\n  percent: PropTypes.bool,\n}\n\nexport const FormSliderWithPopover = WithPopover(FormSlider);\nFormSliderWithPopover.propTypes = {\n  ...FormSlider.propTypes,\n  ...WithPopover.propTypes\n}\n\nfunction conditionalType(props) {\n  if (props.lc) {\n    return 'lightConeConditionals'\n  }\n  return 'characterConditionals'\n}","import { LightConeRawRank } from 'types/LightConeConditionals';\nimport { SuperImpositionLevel } from 'types/LightCone';\n\n/**\n * Takss a SuperImpositionLevel and a LightConeRawRank and returns a string\n * String will contain tokens in the shape of \"#1[i]\" where (#x - 1) is the index of the param.\n * SuperImpositionLevel indicates rank values to use.\n * \n * Ranks are copied/stored in src/data/en/light_cone_ranks.json; imported from Mar-7th repo.\n * \n * Exmaple rank:\n\nconst lcRank = {\n  \"id\": \"23014\",\n  \"skill\": \"With This Evening Jade\",\n  \"desc\": \"Increases the wearer's CRIT DMG by #1[i]%. When an ally (excluding the wearer) gets attacked or loses HP, the wearer gains 1 stack of Eclipse, up to a max of #2[i] stack(s). Each stack of Eclipse increases the DMG of the wearer's next attack by #3[f1]%. When #2[i] stack(s) are reached, additionally enables that attack to ignore #4[i]% of the enemy's DEF. This effect will be removed after the wearer uses an attack.\",\n  \"params\": [[\n        0.2, 3, 0.14, 0.12\n    ],[\n        0.23, 3, 0.165, 0.14\n    ],[\n        0.26, 3, 0.19, 0.16\n    ],[\n        0.29, 3, 0.215, 0.18\n    ],[\n        0.32, 3, 0.24, 0.2\n    ]\n  ],\n  \"properties\": [[{\n      \"type\": \"CriticalDamageBase\", \"value\": 0.2\n    }],[{\n      \"type\": \"CriticalDamageBase\", \"value\": 0.23\n    }],[{\n      \"type\": \"CriticalDamageBase\", \"value\": 0.26\n    }],[{\n      \"type\": \"CriticalDamageBase\", \"value\": 0.29\n    }],[{\n      \"type\": \"CriticalDamageBase\", \"value\": 0.32\n    }]]\n};\n\n * @param s \n * @param lcRank \n * @returns \n */\nconst getContentFromLCRanks = (s: SuperImpositionLevel, lcRank: LightConeRawRank): string => {\n  const params = lcRank.params[s];\n  let ret = lcRank.desc;\n\n  // on render, \n  if (params) {\n    // const properties = lcRank.properties[s];\n    lcRank.desc.match(/#(\\d+)\\[\\w+\\]/g).forEach((token) => {\n      // get params value\n      token.match(/#(\\d+)/).forEach((tokenPieces, i) => {\n        if (i > 0) {\n          // [\"#4[i]\", \"4\"]\n          let value = params[parseInt(tokenPieces) - 1];\n          // change to percent\n          if (value < 1) {\n            value = Math.round(value * 100);\n          }\n          ret = ret.replace(token, value.toString());\n        }\n      });\n    });\n  }\n\n  return ret;\n}\n\nexport default getContentFromLCRanks","import React from 'react';\nimport { ContentItem, Form, LightConeConditional, PrecomputedCharacterConditional } from 'types/CharacterConditional';\nimport { FormSwitchWithPopover } from 'components/optimizerForm/conditionals/FormSwitch';\nimport { FormSliderWithPopover } from 'components/optimizerForm/conditionals/FormSlider';\nimport DisplayFormControl from 'components/optimizerForm/conditionals/DisplayFormControl';\nimport getContentFromLCRanks from './getContentFromLCRank';\nimport { SuperImpositionLevel } from 'types/LightCone';\nimport { ConditionalLightConeMap, LightConeRawRank } from 'types/LightConeConditionals';\n\n\n\nconst lcRank: LightConeRawRank = {\n  \"id\": \"23014\",\n  \"skill\": \"With This Evening Jade\",\n  \"desc\": \"Increases the wearer's CRIT DMG by #1[i]%. When an ally (excluding the wearer) gets attacked or loses HP, the wearer gains 1 stack of Eclipse, up to a max of #2[i] stack(s). Each stack of Eclipse increases the DMG of the wearer's next attack by #3[f1]%. When #2[i] stack(s) are reached, additionally enables that attack to ignore #4[i]% of the enemy's DEF. This effect will be removed after the wearer uses an attack.\",\n  \"params\": [[\n        0.2, 3, 0.14, 0.12\n    ],[\n        0.23, 3, 0.165, 0.14\n    ],[\n        0.26, 3, 0.19, 0.16\n    ],[\n        0.29, 3, 0.215, 0.18\n    ],[\n        0.32, 3, 0.24, 0.2\n    ]\n  ],\n  \"properties\": [[{\n      \"type\": \"CriticalDamageBase\", \"value\": 0.2\n    }],[{\n      \"type\": \"CriticalDamageBase\", \"value\": 0.23\n    }],[{\n      \"type\": \"CriticalDamageBase\", \"value\": 0.26\n    }],[{\n      \"type\": \"CriticalDamageBase\", \"value\": 0.29\n    }],[{\n      \"type\": \"CriticalDamageBase\", \"value\": 0.32\n    }]]\n};\n\n\n\nconst IShallBeMyOwnSword = (s: SuperImpositionLevel): LightConeConditional => {\n  const sValuesStackDmg = [0.14, 0.165, 0.19, 0.215, 0.24];\n  const sValuesDefPen = [0.12, 0.14, 0.16, 0.18, 0.20];\n\n  const content: ContentItem[] = [\n    {\n      lc: true,\n      id: 'eclipseStacks',\n      name: 'eclipseStacks',\n      formItem: FormSliderWithPopover,\n      text: 'Eclipse stacks',\n      title: 'Eclipse stacks',\n      content: getContentFromLCRanks(s, lcRank),\n      min: 0,\n      max: 3,\n    },\n    {\n      lc: true,\n      id: 'maxStackDefPen',\n      name: 'maxStackDefPen',\n      formItem: FormSwitchWithPopover,\n      text: 'Max stack def pen',\n      title: 'Max stack def pen',\n      content: 'Whether the enemy has 3 stacks of Eclipse.',\n    }\n  ];\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      eclipseStacks: 3,\n      maxStackDefPen: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals as ConditionalLightConeMap;\n      x['ELEMENTAL_DMG'] += r.eclipseStacks * sValuesStackDmg[s];\n      x['DEF_SHRED'] += (r.maxStackDefPen && r.eclipseStacks == 3) ? sValuesDefPen[s] : 0;\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  };\n};\n\nIShallBeMyOwnSword.displayName = 'I Shall Be My Own Sword';\n\nexport default IShallBeMyOwnSword;","import React from \"react\";\nimport { Stats } from \"lib/constants\";\nimport DisplayFormControl from \"components/optimizerForm/conditionals/DisplayFormControl\";\nimport { FormSliderWithPopover } from \"components/optimizerForm/conditionals/FormSlider\";\nimport { FormSwitchWithPopover } from \"components/optimizerForm/conditionals/FormSwitch\";\n\nimport { SuperImpositionLevel } from \"types/LightCone\";\nimport { Form, PrecomputedCharacterConditional } from \"types/CharacterConditional\";\nimport { ConditionalLightConeMap } from \"types/LightConeConditionals\";\nimport getContentFromLCRanks from \"./getContentFromLCRank\";\n\n\nconst lcRank = {\n  \"id\": \"23020\",\n  \"skill\": \"Mental Training\",\n  \"desc\": \"Increases the wearer's CRIT DMG by #1[i]%. For every debuff on the enemy target, the wearer's CRIT DMG dealt against this target increases by #2[i]%, stacking up to #3[i] times. When using Ultimate to attack the enemy target, the wearer receives the Disputation effect, which increases DMG dealt by #4[i]% and enables their follow-up attacks to ignore #5[i]% of the target's DEF. This effect lasts for #6[i] turns.\",\n  \"params\": [\n      [\n          0.2,\n          0.08,\n          3,\n          0.36,\n          0.24,\n          2\n      ],\n      [\n          0.23,\n          0.09,\n          3,\n          0.42,\n          0.28,\n          2\n      ],\n      [\n          0.26,\n          0.1,\n          3,\n          0.48,\n          0.32,\n          2\n      ],\n      [\n          0.29,\n          0.11,\n          3,\n          0.54,\n          0.36,\n          2\n      ],\n      [\n          0.32,\n          0.12,\n          3,\n          0.6,\n          0.4,\n          2\n      ]\n  ],\n  \"properties\": [\n      [\n          {\n              \"type\": \"CriticalDamageBase\",\n              \"value\": 0.2\n          }\n      ],\n      [\n          {\n              \"type\": \"CriticalDamageBase\",\n              \"value\": 0.23\n          }\n      ],\n      [\n          {\n              \"type\": \"CriticalDamageBase\",\n              \"value\": 0.26\n          }\n      ],\n      [\n          {\n              \"type\": \"CriticalDamageBase\",\n              \"value\": 0.29\n          }\n      ],\n      [\n          {\n              \"type\": \"CriticalDamageBase\",\n              \"value\": 0.32\n          }\n      ]\n  ]\n}\n\nconst BaptismOfPureThought = (s: SuperImpositionLevel) => {\n  const sValuesCd = [0.08, 0.09, 0.10, 0.11, 0.12]\n  const sValuesDmg = [0.36, 0.42, 0.48, 0.54, 0.60]\n  const sValuesFuaPen = [0.24, 0.28, 0.32, 0.36, 0.40]\n\n  const content = [{\n    lc: true,\n    formItem: FormSliderWithPopover,\n    id: 'debuffCdStacks',\n    name: 'debuffCdStacks',\n    text: 'Debuff cd stacks',\n    title: lcRank.skill,\n    content: getContentFromLCRanks(s, lcRank),\n    min: 0,\n    max: 3,\n  }, {\n    lc: true,\n    formItem: FormSwitchWithPopover,\n    id: 'postUltBuff',\n    name: 'postUltBuff',\n    text: 'Disputation ult cd / fua def pen buff',\n    title: lcRank.skill,\n    content: getContentFromLCRanks(s, lcRank),\n  }]\n\n  return {\n    display: () => <DisplayFormControl content={content} />,\n    defaults: () => ({\n      debuffCdStacks: 3,\n      postUltBuff: true,\n    }),\n    precomputeEffects: (x: PrecomputedCharacterConditional, request: Form) => {\n      const r = request.lightConeConditionals as ConditionalLightConeMap;\n\n      x[Stats.CD] += r.debuffCdStacks * sValuesCd[s]\n      x.ELEMENTAL_DMG += r.postUltBuff ? sValuesDmg[s] : 0\n      x.FUA_DEF_PEN += r.postUltBuff ? sValuesFuaPen[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n};\n\nexport default BaptismOfPureThought;","/* eslint-disable no-unused-vars  */\n\nimport React from \"react\";\nimport { Flex, Typography } from \"antd\";\nimport { HeaderText } from \"components/HeaderText\";\nimport { FormSlider, FormSwitch } from \"components/optimizerTab/FormConditionalInputs\";\nimport { TooltipImage } from \"components/TooltipImage\";\nimport { Constants } from 'lib/constants.ts'\nimport { Hint } from \"lib/hint\";\n\nimport IShallBeMyOwnSword  from 'lib/conditionals/lightcone/iShallBeMyOwnSword'\nimport BaptismOfPureThought from 'lib/conditionals/lightcone/baptismOfPureThought'\n\nlet Stats = Constants.Stats\n\nlet defaultGap = 5\n\nconst lightConeOptionMapping = {\n  20000: Arrows,\n  20001: Cornucopia,\n  20002: CollapsingSky,\n  20003: Amber,\n  20004: Void,\n  20005: Chorus,\n  20006: DataBank,\n  20007: DartingArrow,\n  20008: FineFruit,\n  20009: ShatteredHome,\n  20010: Defense,\n  20011: Loop,\n  20012: MeshingCogs,\n  20013: Passkey,\n  20014: Adversarial,\n  20015: Multiplication,\n  20016: MutualDemise,\n  20017: Pioneering,\n  20018: HiddenShadow,\n  20019: Mediation,\n  20020: Sagacity,\n  21000: PostOpConversation,\n  21001: GoodNightAndSleepWell,\n  21002: DayOneOfMyNewLife,\n  21003: OnlySilenceRemains,\n  21004: MemoriesOfThePast,\n  21005: TheMolesWelcomeYou,\n  21006: TheBirthOfTheSelf,\n  21007: SharedFeeling,\n  21008: EyesOfThePrey,\n  21009: LandausChoice,\n  21010: Swordplay,\n  21011: PlanetaryRendezvous,\n  21012: ASecretVow,\n  21013: MakeTheWorldClamor,\n  21014: PerfectTiming, // Does the ohb apply after passives?\n  21015: ResolutionShinesAsPearlsOfSweat,\n  21016: TrendOfTheUniversalMarket, // Revisit dot\n  21017: SubscribeForMore,\n  21018: DanceDanceDance,\n  21019: UnderTheBlueSky,\n  21020: GeniusesRepose,\n  21021: QuidProQuo,\n  21022: Fermata,\n  21023: WeAreWildfire,\n  21024: RiverFlowsInSpring,\n  21025: PastAndFuture,\n  21026: WoofWalkTime,\n  21027: TheSeriousnessOfBreakfast,\n  21028: WarmthShortensColdNights,\n  21029: WeWillMeetAgain, // Does this get affected by crit / dmg boosts?\n  21030: ThisIsMe, // Def scaling dmg not implemented\n  21031: ReturnToDarkness,\n  21032: CarveTheMoonWeaveTheClouds,\n  21033: NowhereToRun,\n  21034: TodayIsAnotherPeacefulDay,\n  22000: BeforeTheTutorialMissionStarts,\n  22001: HeyOverHere,\n  23000: NightOnTheMilkyWay,\n  23001: InTheNight,\n  23002: SomethingIrreplaceable,\n  23003: ButTheBattleIsntOver,\n  23004: InTheNameOfTheWorld, // Skill atk buff not implemented\n  23005: MomentOfVictory,\n  23006: PatienceIsAllYouNeed, // Revisit dot\n  23007: IncessantRain,\n  23008: EchoesOfTheCoffin,\n  23009: TheUnreachableSide,\n  23010: BeforeDawn,\n  23011: SheAlreadyShutHerEyes,\n  23012: SleepLikeTheDead,\n  23013: TimeWaitsForNoOne,\n  23014: IShallBeMyOwnSword,\n  23015: BrighterThanTheSun,\n  23016: WorrisomeBlissful,\n  23017: NightOfFright,\n  23018: AnInstantBeforeAGaze,\n  23019: PastSelfInMirror,\n  23020: BaptismOfPureThought,\n  24000: OnTheFallOfAnAeon,\n  24001: CruisingInTheStellarSea,\n  24002: TextureOfMemories,\n  24003: SolitaryHealing,\n  23021: EarthlyEscapade,\n  23022: ReforgedRemembrance,\n}\n\n\nfunction PastSelfInMirror(s) {\n  const sValues = [0.24, 0.28, 0.32, 0.36, 0.40]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='postUltDmgBuff' text='Post ult dmg buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      postUltDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.postUltDmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction SolitaryHealing(s) {\n  const sValues = [0.24, 0.30, 0.36, 0.42, 0.48]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='postUltDotDmgBuff' text='Post ult dot dmg buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      postUltDotDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.DOT_BOOST += r.postUltDotDmgBuff ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction TextureOfMemories(s) {\n  const sValues = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='activeShieldDmgDecrease' text='Active shield dmg decrease' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      activeShieldDmgDecrease: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.DMG_RED_MULTI += (r.activeShieldDmgDecrease) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction CruisingInTheStellarSea(s) {\n  let sValuesCr = [0.08, 0.10, 0.12, 0.14, 0.16]\n  let sValuesAtk = [0.20, 0.25, 0.30, 0.35, 0.40]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemyHp50CrBoost' text='Enemy HP <= 50% cr boost' lc />\n        <FormSwitch name='enemyDefeatedAtkBuff' text='Enemy defeated atk buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyHp50CrBoost: true,\n      enemyDefeatedAtkBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CR] += (r.enemyHp50CrBoost && request.enemyHpPercent <= 0.50) ? sValuesCr[s] : 0\n      x[Stats.ATK_P] += (r.enemyDefeatedAtkBuff) ? sValuesAtk[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction OnTheFallOfAnAeon(s) {\n  let sValuesAtkStacks = [0.08, 0.10, 0.12, 0.14, 0.16]\n  let sValuesDmgBuff = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='atkBoostStacks' text='Atk boost stacks' min={0} max={4} lc />\n        <FormSwitch name='weaknessBreakDmgBuff' text='Weakness break dmg buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      atkBoostStacks: 4,\n      weaknessBreakDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += r.atkBoostStacks * sValuesAtkStacks[s]\n      x.ELEMENTAL_DMG += (r.weaknessBreakDmgBuff) ? sValuesDmgBuff[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction AnInstantBeforeAGaze(s) {\n  const sValues = [0.0036, 0.0042, 0.0048, 0.0054, 0.006]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='maxEnergyUltDmgStacks' text='Max energy' min={0} max={180} lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      maxEnergyUltDmgStacks: 180,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ULT_BOOST += r.maxEnergyUltDmgStacks * sValues[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction NightOfFright(s) {\n  const sValues = [0.024, 0.028, 0.032, 0.036, 0.04]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='atkBuffStacks' text=\"Atk buff stacks\" min={0} max={5} lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      atkBuffStacks: 5,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += r.atkBuffStacks * sValues[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction WorrisomeBlissful(s) {\n  let sValuesFuaDmg = [0.30, 0.35, 0.40, 0.45, 0.50]\n  let sValuesCd = [0.12, 0.14, 0.16, 0.18, 0.20]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='fuaDmgBoost' text='Fua dmg boost' lc />\n        <FormSlider name='targetTameStacks' text=\"Target tame stacks\" min={0} max={2} lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      fuaDmgBoost: true,\n      targetTameStacks: 2,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CD] += r.targetTameStacks * sValuesCd[s]\n      x.FUA_BOOST += (r.fuaDmgBoost) ? sValuesFuaDmg[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction BrighterThanTheSun(s) {\n  let sValuesAtk = [0.18, 0.21, 0.24, 0.27, 0.30]\n  let sValuesErr = [0.06, 0.07, 0.08, 0.09, 0.10]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='dragonsCallStacks' text=\"Dragon's call stacks\" min={0} max={2} lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      dragonsCallStacks: 2,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += r.dragonsCallStacks * sValuesAtk[s]\n      x[Stats.ERR] += r.dragonsCallStacks * sValuesErr[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\n// function IShallBeMyOwnSword(s) {\n//   let sValuesStackDmg = [0.14, 0.165, 0.19, 0.215, 0.24]\n//   let sValuesDefPen = [0.12, 0.14, 0.16, 0.18, 0.20]\n\n//   return {\n//     display: () => (\n//       <Flex vertical gap={defaultGap} >\n//         <FormSlider name='eclipseStacks' text='Eclipse stacks' min={0} max={3} lc />\n//         <FormSwitch name='maxStackDefPen' text='Max stack def pen' lc />\n//       </Flex>\n//     ),\n//     defaults: () => ({\n//       eclipseStacks: 3,\n//       maxStackDefPen: true,\n//     }),\n//     precomputeEffects: (x, request) => {\n//       let r = request.lightConeConditionals\n\n//       x.ELEMENTAL_DMG += r.eclipseStacks * sValuesStackDmg[s]\n//       x.DEF_SHRED += (r.maxStackDefPen && r.eclipseStacks == 3) ? sValuesDefPen[s] : 0\n//     },\n//     calculatePassives: (/*c, request */) => { },\n//     calculateBaseMultis: (/* c, request */) => { }\n//   }\n// }\n\nfunction TimeWaitsForNoOne(/* s */) {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='healingBasedDmgProc' text='Healing based dmg proc (not implemented)' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      healingBasedDmgProc: false,\n    }),\n    precomputeEffects: (/* x, request */) => {\n      // let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction SleepLikeTheDead(s) {\n  const sValues = [0.36, 0.42, 0.48, 0.54, 0.60]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='missedCritCrBuff' text='Missed crit cr buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      missedCritCrBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CR] += (r.missedCritCrBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction SheAlreadyShutHerEyes(s) {\n  const sValues = [0.09, 0.105, 0.12, 0.135, 0.15]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='hpLostDmgBuff' text='Hp lost dmg buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      hpLostDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.hpLostDmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction BeforeDawn(s) {\n  let sValuesSkillUltDmg = [0.18, 0.21, 0.24, 0.27, 0.30]\n  let sValuesFuaDmg = [0.48, 0.56, 0.64, 0.72, 0.80]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='skillUltDmgBoost' text='Skill/ult dmg boost' lc />\n        <FormSwitch name='fuaDmgBoost' text='Fua dmg boost' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      skillUltDmgBoost: true,\n      fuaDmgBoost: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.SKILL_BOOST += (r.skillUltDmgBoost) ? sValuesSkillUltDmg[s] : 0\n      x.ULT_BOOST += (r.skillUltDmgBoost) ? sValuesSkillUltDmg[s] : 0\n      x.FUA_BOOST += (r.fuaDmgBoost) ? sValuesFuaDmg[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction TheUnreachableSide(s) {\n  const sValues = [0.24, 0.28, 0.32, 0.36, 0.40]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='dmgBuff' text='Hp consumed or attacked dmg buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      dmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.dmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction EchoesOfTheCoffin(s) {\n  const sValues = [12, 14, 16, 18, 20]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='postUltSpdBuff' text='Post ult spd buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      postUltSpdBuff: false,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.SPD] += (r.postUltSpdBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction IncessantRain(s) {\n  let sValuesCr = [0.12, 0.14, 0.16, 0.18, 0.20]\n  let sValuesDmg = [0.12, 0.14, 0.16, 0.18, 0.20]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemy3DebuffsCrBoost' text='Enemy <= 3 debuffs cr boost' lc />\n        <FormSwitch name='targetCodeDebuff' text='Target code debuff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemy3DebuffsCrBoost: true,\n      targetCodeDebuff: true\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CR] += (r.enemy3DebuffsCrBoost) ? sValuesCr[s] : 0\n      x.ELEMENTAL_DMG += (r.targetCodeDebuff) ? sValuesDmg[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction PatienceIsAllYouNeed(s) {\n  let sValuesDmg = [0.24, 0.28, 0.32, 0.36, 0.40]\n  let sValuesSpd = [0.048, 0.056, 0.064, 0.072, 0.08]\n\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='dmgBoost' text='Dmg boost' lc />\n        <FormSlider name='spdStacks' text='Spd stacks' min={0} max={3} lc />\n        <FormSwitch name='dotEffect' text='Dot effect (not implemented)' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      dmgBoost: true,\n      spdStacks: 0,\n      dotEffect: false\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.SPD_P] += r.spdStacks * sValuesSpd[s]\n      x.ELEMENTAL_DMG += (r.dmgBoost) ? sValuesDmg[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction MomentOfVictory(s) {\n  const sValues = [0.24, 0.28, 0.32, 0.36, 0.40]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='selfAttackedDefBuff' text='Self attacked def buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      selfAttackedDefBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.DEF_P] += (r.selfAttackedDefBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction InTheNameOfTheWorld(s) {\n  let sValuesDmg = [0.24, 0.28, 0.32, 0.36, 0.40]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemyDebuffedDmgBoost' text='Enemy debuffed dmg boost' lc />\n        <FormSwitch name='skillAtkBoost' text='Skill atk boost (not implemented)' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyDebuffedDmgBoost: true,\n      skillAtkBoost: false,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.enemyDebuffedDmgBoost) ? sValuesDmg[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction ButTheBattleIsntOver(s) {\n  let sValuesErr = [0.10, 0.12, 0.14, 0.16, 0.18]\n  let sValuesDmg = [0.30, 0.35, 0.40, 0.45, 0.50]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='postSkillDmgBuff' text='Post skill dmg buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      postSkillDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ERR] += sValuesErr[s]\n      x.ELEMENTAL_DMG += (r.postSkillDmgBuff) ? sValuesDmg[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction SomethingIrreplaceable(s) {\n  const sValues = [0.24, 0.28, 0.32, 0.36, 0.40]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='dmgBuff' text='Enemy defeated or self hit dmg buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      dmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.dmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction InTheNight(s) {\n  let sValuesDmg = [0.06, 0.07, 0.08, 0.09, 0.10]\n  let sValuesCd = [0.12, 0.14, 0.16, 0.18, 0.20]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='spdScalingBuffs' text='Speed scaling buffs enabled' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      spdScalingBuffs: true,\n    }),\n    precomputeEffects: (/* x, request */) => {\n      // let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (c, request) => {\n      let r = request.lightConeConditionals\n      let x = c.x\n\n      let stacks = Math.max(0, Math.min(6, Math.floor((x[Stats.SPD] - 100) / 10)))\n\n      x.BASIC_BOOST += (r.spdScalingBuffs) ? stacks * sValuesDmg[s] : 0\n      x.SKILL_BOOST += (r.spdScalingBuffs) ? stacks * sValuesDmg[s] : 0\n      x.ULT_CD_BOOST += (r.spdScalingBuffs) ? stacks * sValuesCd[s] : 0\n    }\n  }\n}\n\nfunction NightOnTheMilkyWay(s) {\n  let sValuesAtk = [0.09, 0.105, 0.12, 0.135, 0.15]\n  let sValuesDmg = [0.30, 0.35, 0.40, 0.45, 0.50]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemyCountAtkBuff' text='Enemy count atk buff' lc />\n        <FormSwitch name='enemyWeaknessBreakDmgBuff' text='Enemy weakness break dmg buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyCountAtkBuff: true,\n      enemyWeaknessBreakDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += (r.enemyCountAtkBuff) ? request.enemyCount * sValuesAtk[s] : 0\n      x.ELEMENTAL_DMG += (r.enemyWeaknessBreakDmgBuff) ? sValuesDmg[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction HeyOverHere(s) {\n  const sValues = [0.16, 0.19, 0.22, 0.25, 0.28]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='postSkillHealBuff' text='Post skill heal buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      postSkillHealBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.OHB] += (r.postSkillHealBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction BeforeTheTutorialMissionStarts(/* s */) {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      // let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction TodayIsAnotherPeacefulDay(s) {\n  const sValues = [0.002, 0.0025, 0.003, 0.0035, 0.004]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='maxEnergyStacks' text='Max energy' min={0} max={160} lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      maxEnergyStacks: 160,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += r.maxEnergyStacks * sValues[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction NowhereToRun(/* s */) {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      // let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction CarveTheMoonWeaveTheClouds(s) {\n  let sValuesAtk = [0.10, 0.125, 0.15, 0.175, 0.20]\n  let sValuesCd = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='atkBuffActive' text='Atk buff active' lc />\n        <FormSwitch name='cdBuffActive' text='Cd buff active' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      atkBuffActive: true,\n      cdBuffActive: false,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += (r.atkBuffActive) ? sValuesAtk[s] : 0\n      x[Stats.CD] += (r.cdBuffActive) ? sValuesCd[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction ReturnToDarkness(/* s */) {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction ThisIsMe(/* s */) {\n  // const sValues = [0.60, 0.75, 0.90, 1.05, 1.20]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='defScalingUltDmg' text='Def scaling ult dmg (not implemented)' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      defScalingUltDmg: false,\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (c, request) => {\n      console.warn('not implemented', c, request)\n      // let r = request.lightConeConditionals\n      // let x = c.x\n\n      // x.ULT_DEF_SCALING += (r.defScalingUltDmg) ? sValues[s] : 0\n    }\n  }\n}\n\nfunction WeWillMeetAgain(s) {\n  const sValues = [0.48, 0.60, 0.72, 0.84, 0.96]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='extraDmgProc' text='Additional dmg proc' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      extraDmgProc: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.BASIC_SCALING += (r.extraDmgProc) ? sValues[s] : 0\n      x.SKILL_SCALING += (r.extraDmgProc) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction WarmthShortensColdNights(/* s */) {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction TheSeriousnessOfBreakfast(s) {\n  let sValuesDmgBoost = [0.12, 0.15, 0.18, 0.21, 0.24]\n  let sValuesStacks = [0.04, 0.05, 0.06, 0.07, 0.08]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='dmgBoost' text='Dmg boost' lc />\n        <FormSlider name='defeatedEnemyAtkStacks' text='Defeated enemy atk stacks' min={0} max={3} lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      dmgBoost: true,\n      defeatedEnemyAtkStacks: 3,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += r.defeatedEnemyAtkStacks * sValuesStacks[s]\n      x.ELEMENTAL_DMG += (r.dmgBoost) ? sValuesDmgBoost[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction WoofWalkTime(s) {\n  const sValues = [0.16, 0.20, 0.24, 0.28, 0.32]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemyBurnedBleeding' text='Enemy burned / bleeding' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyBurnedBleeding: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.enemyBurnedBleeding) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction PastAndFuture(/* s */) {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction RiverFlowsInSpring(s) {\n  let sValuesSpd = [0.08, 0.09, 0.10, 0.11, 0.12]\n  let sValuesDmg = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='spdDmgBuff' text='Spd / dmg buff active' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      spdDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.SPD_P] += (r.spdDmgBuff) ? sValuesSpd[s] : 0\n      x.ELEMENTAL_DMG += (r.spdDmgBuff) ? sValuesDmg[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction WeAreWildfire(s) {\n  const sValues = [0.08, 0.10, 0.12, 0.14, 0.16]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='initialDmgReductionBuff' text='Initial dmg reduction buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      initialDmgReductionBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.DMG_RED_MULTI += (r.initialDmgReductionBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Fermata(s) {\n  const sValues = [0.16, 0.20, 0.24, 0.28, 0.32];\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemyShockWindShear' text='Enemy shocked / wind sheared' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyShockWindShear: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.enemyShockWindShear) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction QuidProQuo(/* s */) {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction GeniusesRepose(s) {\n  const sValues = [0.24, 0.30, 0.36, 0.42, 0.48]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='defeatedEnemyCdBuff' text='Defeated enemy cd buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      defeatedEnemyCdBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CD] += (r.defeatedEnemyCdBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction UnderTheBlueSky(s) {\n  const sValues = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='defeatedEnemyCrBuff' text='Defeated enemy cr buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      defeatedEnemyCrBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CR] += (r.defeatedEnemyCrBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction DanceDanceDance(/* s */) {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction SubscribeForMore(s) {\n  const sValues = [0.24, 0.30, 0.36, 0.42, 0.48]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='maxEnergyDmgBoost' text='Max energy dmg boost' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      maxEnergyDmgBoost: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.BASIC_BOOST += sValues[s]\n      x.SKILL_BOOST += sValues[s]\n      x.BASIC_BOOST += (r.maxEnergyDmgBoost) ? sValues[s] : 0\n      x.SKILL_BOOST += (r.maxEnergyDmgBoost) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction TrendOfTheUniversalMarket(/* s */) {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction ResolutionShinesAsPearlsOfSweat(s) {\n  const sValues = [0.12, 0.13, 0.14, 0.15, 0.16]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='targetEnsnared' text='Target ensnared' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      targetEnsnared: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.DEF_SHRED += (r.targetEnsnared) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction PerfectTiming(s) {\n  const sValues = [0.33, 0.36, 0.39, 0.42, 0.45]\n  let sMaxValues = [0.15, 0.18, 0.21, 0.24, 0.27]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='resToHealingBoost' text='Res to healing boost' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      resToHealingBoost: true,\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (c, request) => {\n      let r = request.lightConeConditionals\n      let x = c.x\n\n      let boost = Math.min(sMaxValues[s], sValues[s] * x[Stats.RES])\n      x[Stats.OHB] += (r.resToHealingBoost) ? boost : 0\n    }\n  }\n}\n\nfunction MakeTheWorldClamor(s) {\n  const sValues = [0.32, 0.40, 0.48, 0.56, 0.64]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='ultDmgBuff' text='Ult dmg buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      ultDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ULT_BOOST += (r.ultDmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction ASecretVow(s) {\n  const sValues = [0.20, 0.25, 0.30, 0.35, 0.40]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemyHpHigherDmgBoost' text='Enemy HP % higher dmg boost' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyHpHigherDmgBoost: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += sValues[s]\n      x.ELEMENTAL_DMG += (r.enemyHpHigherDmgBoost) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction PlanetaryRendezvous(s) {\n  const sValues = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='alliesSameElement' text='Allies same element dmg boost' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      alliesSameElement: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.alliesSameElement) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Swordplay(s) {\n  const sValues = [0.08, 0.10, 0.12, 0.14, 0.16]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='sameTargetHitStacks' text='Same target hit stacks' min={0} max={5} lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      sameTargetHitStacks: 5,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.sameTargetHitStacks) * sValues[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction LandausChoice(s) {\n  const sValues = [0.16, 0.18, 0.20, 0.22, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (x, /* request */) => {\n      // let r = request.lightConeConditionals\n\n      x.DMG_RED_MULTI += sValues[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction EyesOfThePrey(s) {\n  const sValues = [0.24, 0.30, 0.36, 0.42, 0.48]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (x, /* request */) => {\n      // let r = request.lightConeConditionals\n\n      x.DOT_BOOST += sValues[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction SharedFeeling(s) {\n  const sValues = [0.10, 0.125, 0.15, 0.175, 0.20]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (x, /* request */) => {\n      // let r = request.lightConeConditionals\n\n      x[Stats.OHB] += sValues[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction TheBirthOfTheSelf(s) {\n  const sValues = [0.24, 0.30, 0.36, 0.42, 0.48]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemyHp50FuaBuff' text='Enemy HP < 50% fua buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyHp50FuaBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.xxxxxxxxxxxxxxxxxxxxx] += (r.name) ? sValues[s] : 0\n      x.FUA_BOOST += sValues[s]\n      x.FUA_BOOST += (r.enemyHp50FuaBuff && request.enemyHpPercent < 0.50) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction TheMolesWelcomeYou(s) {\n  const sValues = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='atkBuffStacks' text='Atk buff stacks' min={0} max={3} lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      atkBuffStacks: 3,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += (r.atkBuffStacks) * sValues[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction MemoriesOfThePast() {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction OnlySilenceRemains(s) {\n  let sValues = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemies2CrBuff' text='<= 2 enemies cr buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemies2CrBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CR] += (r.enemies2CrBuff && request.enemyCount <= 2) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction DayOneOfMyNewLife(s) {\n  const sValues = [0.16, 0.18, 0.20, 0.22, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='dmgResBuff' text='Dmg RES buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      dmgResBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.DMG_RED_MULTI += (r.dmgResBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction GoodNightAndSleepWell(s) {\n  const sValues = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='debuffStacksDmgIncrease' text='Debuff stacks dmg increase' min={0} max={3} lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      debuffStacksDmgIncrease: 3,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += r.debuffStacksDmgIncrease * sValues[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction PostOpConversation(s) {\n  const sValues = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='postUltHealingBoost' text='Post ult healing boost' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      postUltHealingBoost: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.OHB] += (r.postUltHealingBoost) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Sagacity(s) {\n  const sValues = [0.24, 0.30, 0.36, 0.42, 0.48]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='postUltAtkBuff' text='Post ult atk buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      postUltAtkBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += (r.postUltAtkBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Mediation(s) {\n  const sValues = [12, 14, 16, 18, 20]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='initialSpdBuff' text='Initial spd buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      initialSpdBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.SPD] += (r.initialSpdBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction HiddenShadow(s) {\n  const sValues = [0.60, 0.75, 0.90, 1.05, 1.20]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='basicAtkBuff' text='Basic atk buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      basicAtkBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.BASIC_BOOST += (r.basicAtkBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Pioneering() {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction MutualDemise(s) {\n  const sValues = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='selfHp80CrBuff' text='Self HP <80% cr buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      selfHp80CrBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CR] += (r.selfHp80CrBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Multiplication() {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Adversarial(s) {\n  const sValues = [0.10, 0.12, 0.14, 0.16, 0.18]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='defeatedEnemySpdBuff' text='Defeated enemy spd buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      defeatedEnemySpdBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.SPD_P] += (r.defeatedEnemySpdBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Passkey() {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction MeshingCogs() {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      //  let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Loop(s) {\n  const sValues = [0.24, 0.30, 0.36, 0.42, 0.48]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemySlowedDmgBuff' text='Enemy slowed dmg buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemySlowedDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.enemySlowedDmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Defense() {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (/* x, request */) => {\n      // let r = request.lightConeConditionals\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction ShatteredHome(s) {\n  const sValues = [0.20, 0.25, 0.30, 0.35, 0.40]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemyHp50Buff' text='Enemy HP >50% dmg buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyHp50Buff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.enemyHp50Buff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction FineFruit() {\n  // const sValues = [0, 0, 0, 0, 0]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n      name: true,\n    }),\n    precomputeEffects: (x, request) => { console.warn('not implemented', x, request) },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction DartingArrow(s) {\n  const sValues = [0.24, 0.30, 0.36, 0.42, 0.48]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='defeatedEnemyAtkBuff' text='Atk buff on kill' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      defeatedEnemyAtkBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += (r.defeatedEnemyAtkBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction DataBank(s) {\n  const sValues = [0.28, 0.35, 0.42, 0.49, 0.56]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='ultDmgBuff' text='Ult dmg buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      ultDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ULT_BOOST += (r.ultDmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Chorus(s) {\n  const sValues = [0.08, 0.09, 0.10, 0.11, 0.12]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='inBattleAtkBuff' text='In battle atk buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      inBattleAtkBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += (r.inBattleAtkBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Void(s) {\n  const sValues = [0.20, 0.25, 0, 30, 0.35, 0.40]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='initialEhrBuff' text='Initial EHR buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      initialEhrBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.EHR] += (r.initialEhrBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\n\nfunction Amber(s) {\n  const sValues = [0.16, 0.20, 0.24, 0.28, 0.32]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='hp50DefBuff' text='HP <50% def buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      hp50DefBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.DEF_P] += (r.hp50DefBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction CollapsingSky(s) {\n  const sValues = [0.20, 0.25, 0.30, 0.35, 0.40]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='basicSkillDmgBuff' text='Basic/Skill dmg buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      basicSkillDmgBuff: true\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.BASIC_BOOST += (r.basicSkillDmgBuff) ? sValues[s] : 0\n      x.SKILL_BOOST += (r.basicSkillDmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Cornucopia(s) {\n  const sValues = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='healingBuff' text='Healing buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      healingBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.OHB] += (r.healingBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction Arrows(s) {\n  const sValues = [0.12, 0.15, 0.18, 0.21, 0.24]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='critBuff' text='Initial crit buff' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      critBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CR] += (r.critBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction ReforgedRemembrance(s) {\n  let sValuesAtk = [0.05, 0.06, 0.07, 0.08, 0.09]\n  let sValuesDotPen = [0.072, 0.079, 0.086, 0.093, 0.10]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='prophetStacks' text='Prophet stacks' min={0} max={4} lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      prophetStacks: 4,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += r.prophetStacks * sValuesAtk[s]\n      x.DOT_DEF_PEN += r.prophetStacks * sValuesDotPen[s]\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\nfunction EarthlyEscapade(s) {\n  const sValuesCr = [0.10, 0.11, 0.12, 0.13, 0.14]\n  const sValuesCd = [0.28, 0.35, 0.42, 0.49, 0.56]\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='maskActive' text='Mask active' lc />\n      </Flex>\n    ),\n    defaults: () => ({\n      maskActive: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CR] += (r.maskActive) ? sValuesCr[s] : 0\n      x[Stats.CD] += (r.maskActive) ? sValuesCd[s] : 0\n    },\n    calculatePassives: (/*c, request */) => { },\n    calculateBaseMultis: (/* c, request */) => { }\n  }\n}\n\n\n\n\n\n\nexport const LightConeConditionals = {\n  get: (request) => {\n    let lcFn = lightConeOptionMapping[request.lightCone];\n    \n    if (!lcFn) {\n      return {\n        display: () => (\n          <Flex vertical gap={5}>\n            <HeaderText>Light cone passives</HeaderText>\n          </Flex>\n        ),\n        defaults: () => ({})\n      }\n    }\n    return lcFn(request.lightConeSuperimposition - 1)\n  },\n  getDisplayLightConePassives: (id, superimposition) => {\n    if (!id || !lightConeOptionMapping[id]) {\n      return (\n        <Flex vertical gap={5}>\n          <Flex justify='space-between' align='center'>\n            <HeaderText>Light cone passives</HeaderText>\n            <TooltipImage type={Hint.lightConePassives()} lc />\n          </Flex>\n          <Typography.Text italic>Select a Light cone to view passives</Typography.Text>\n        </Flex>\n      )\n    }\n\n    let lcFn = lightConeOptionMapping[id];\n    let display = lcFn(superimposition - 1).display();\n\n    return (\n      <Flex vertical gap={5}>\n        <Flex justify='space-between' align='center'>\n          <HeaderText>Light cone passives</HeaderText>\n          <TooltipImage type={Hint.lightConePassives()} lc />\n        </Flex>\n        {display}\n      </Flex>\n    )\n  },\n}","import { Constants } from '../constants.ts'\nimport { BufferPacker } from '../bufferPacker.js'\nimport { CharacterConditionals } from \"../characterConditionals.js\";\nimport { LightConeConditionals } from \"../lightConeConditionals\";\n\nfunction sumRelicStats(headRelics, handsRelics, bodyRelics, feetRelics, planarSphereRelics, linkRopeRelics, h, g, b, f, p, l, statValues) {\n  let summedStats = {}\n  for (let stat of statValues) {\n    summedStats[stat] =\n      headRelics[h].augmentedStats[stat] +\n      handsRelics[g].augmentedStats[stat] +\n      bodyRelics[b].augmentedStats[stat] +\n      feetRelics[f].augmentedStats[stat] +\n      planarSphereRelics[p].augmentedStats[stat] +\n      linkRopeRelics[l].augmentedStats[stat]\n  }\n  summedStats.WEIGHT =\n    headRelics[h].weightScore +\n    handsRelics[g].weightScore +\n    bodyRelics[b].weightScore +\n    feetRelics[f].weightScore +\n    planarSphereRelics[p].weightScore +\n    linkRopeRelics[l].weightScore\n\n  return summedStats\n}\n\nfunction calculateFlatStat(stat, statP, baseValue, lc, trace, relicSum, setEffects) {\n  return (baseValue) * (1 + setEffects + relicSum[statP] + trace[statP] + lc[statP]) + relicSum[stat] + trace[stat]\n}\n\nfunction calculateBaseStat(stat, base, lc) {\n  return base[stat] + lc[stat]\n}\n\nfunction calculatePercentStat(stat, base, lc, trace, relicSum, setEffects) {\n  return base[stat] + lc[stat] + relicSum[stat] + trace[stat] + setEffects\n}\n\nself.onmessage = function (e) {\n  // console.log(\"Message received from main script\", e.data);\n  // console.log(\"Request received from main script\", JSON.stringify(e.data.request.characterConditionals, null, 4));\n\n  let data = e.data;\n  let relics = data.relics;\n  let character = data.character;\n  let Stats = Constants.Stats;\n  let statValues = Object.values(Stats)\n  let arr = new Float64Array(data.buffer)\n\n  let headRelics = relics.Head;\n  let handsRelics = relics.Hands;\n  let bodyRelics = relics.Body;\n  let feetRelics = relics.Feet;\n  let planarSphereRelics = relics.PlanarSphere;\n  let linkRopeRelics = relics.LinkRope;\n\n  let relicSetCount = Object.values(Constants.SetsRelics).length\n  let ornamentSetCount = Object.values(Constants.SetsOrnaments).length\n\n  let topRow = data.topRow\n\n  let lSize = topRow ? 1 : relics.LinkRope.length\n  let pSize = topRow ? 1 : relics.PlanarSphere.length\n  let fSize = topRow ? 1 : relics.Feet.length\n  let bSize = topRow ? 1 : relics.Body.length\n  let gSize = topRow ? 1 : relics.Hands.length\n  let hSize = topRow ? 1 : relics.Head.length\n\n  let relicSetSolutions = data.relicSetSolutions\n  let ornamentSetSolutions = data.ornamentSetSolutions\n\n  let relicSetToIndex = data.relicSetToIndex\n  let ornamentSetToIndex = data.ornamentSetToIndex\n\n  let elementalMultipliers = data.elementalMultipliers\n\n  let trace = character.traces\n  let lc = character.lightCone\n  let base = character.base\n\n  let request = data.request\n  let setConditionals = request.setConditionals\n\n  let characterConditionals = CharacterConditionals.get(request)\n  let lightConeConditionals = LightConeConditionals.get(request)\n\n  let enabledHunterOfGlacialForest = setConditionals[Constants.Sets.HunterOfGlacialForest][1] == true ? 1 : 0\n  let enabledFiresmithOfLavaForging = setConditionals[Constants.Sets.FiresmithOfLavaForging][1] == true ? 1 : 0\n  let enabledGeniusOfBrilliantStars = setConditionals[Constants.Sets.GeniusOfBrilliantStars][1] == true ? 1 : 0\n  let enabledBandOfSizzlingThunder = setConditionals[Constants.Sets.BandOfSizzlingThunder][1] == true ? 1 : 0\n  let enabledMessengerTraversingHackerspace = setConditionals[Constants.Sets.MessengerTraversingHackerspace][1] == true ? 1 : 0\n  let enabledCelestialDifferentiator = setConditionals[Constants.Sets.CelestialDifferentiator][1] == true ? 1 : 0\n\n  let valueChampionOfStreetwiseBoxing = setConditionals[Constants.Sets.ChampionOfStreetwiseBoxing][1]\n  let valueWastelanderOfBanditryDesert = setConditionals[Constants.Sets.WastelanderOfBanditryDesert][1]\n  let valueLongevousDisciple = setConditionals[Constants.Sets.LongevousDisciple][1]\n  let valueTheAshblazingGrandDuke = setConditionals[Constants.Sets.TheAshblazingGrandDuke][1]\n  let valuePrisonerInDeepConfinement = setConditionals[Constants.Sets.PrisonerInDeepConfinement][1]\n\n  let brokenMultiplier = request.enemyWeaknessBroken ? 1 : 0.9\n  let resistance = request.enemyElementalWeak ? 0 : request.enemyResistance\n\n  let precomputedX = characterConditionals.precomputeEffects(request)\n  lightConeConditionals.precomputeEffects(precomputedX, request)\n\n  let combatDisplay = request.statDisplay == 'combat'\n  let baseDisplay = !combatDisplay\n\n  for (let col = 0; col < data.WIDTH; col++) {\n    let index = data.skip + col\n\n    if (index >= data.permutations) {\n      continue;\n    }\n\n    let l = (index % lSize);\n    let p = (((index - l) / lSize) % pSize);\n    let f = (((index - p * lSize - l) / (lSize * pSize)) % fSize);\n    let b = (((index - f * pSize * lSize - p * lSize - l) / (lSize * pSize * fSize)) % bSize);\n    let g = (((index - b * fSize * pSize * lSize - f * pSize * lSize - p * lSize - l) / (lSize * pSize * fSize * bSize)) % gSize);\n    let h = (((index - g * bSize * fSize * pSize * lSize - b * fSize * pSize * lSize - f * pSize * lSize - p * lSize - l) / (lSize * pSize * fSize * bSize * gSize)) % hSize);\n\n    let setH = relicSetToIndex[relics.Head[h].set]\n    let setG = relicSetToIndex[relics.Hands[g].set]\n    let setB = relicSetToIndex[relics.Body[b].set]\n    let setF = relicSetToIndex[relics.Feet[f].set]\n\n    let setP = ornamentSetToIndex[relics.PlanarSphere[p].set]\n    let setL = ornamentSetToIndex[relics.LinkRope[l].set]\n\n    let relicSetIndex = setH + setB * relicSetCount + setG * relicSetCount * relicSetCount + setF * relicSetCount * relicSetCount * relicSetCount\n    let ornamentSetIndex = setP + setL * ornamentSetCount;\n\n    // Exit early if sets dont match unless its a topRow search\n    if (relicSetSolutions[relicSetIndex] != 1 || ornamentSetSolutions[ornamentSetIndex] != 1) {\n      if (!topRow) {\n        continue\n      }\n    }\n\n    let c = sumRelicStats(headRelics, handsRelics, bodyRelics, feetRelics, planarSphereRelics, linkRopeRelics, h, g, b, f, p, l, statValues)\n\n    c.relicSetIndex = relicSetIndex\n    c.ornamentSetIndex = ornamentSetIndex\n\n    c.sets = {}\n    let sets = c.sets\n    sets.PasserbyOfWanderingCloud = (1 >> (setH ^ 0)) + (1 >> (setG ^ 0)) + (1 >> (setB ^ 0)) + (1 >> (setF ^ 0)) // * 4p -\n    sets.MusketeerOfWildWheat = (1 >> (setH ^ 1)) + (1 >> (setG ^ 1)) + (1 >> (setB ^ 1)) + (1 >> (setF ^ 1)) // * 4p SPD 6% + basic 10%\n    sets.KnightOfPurityPalace = (1 >> (setH ^ 2)) + (1 >> (setG ^ 2)) + (1 >> (setB ^ 2)) + (1 >> (setF ^ 2)) // * 4p SHIELD\n    sets.HunterOfGlacialForest = (1 >> (setH ^ 3)) + (1 >> (setG ^ 3)) + (1 >> (setB ^ 3)) + (1 >> (setF ^ 3)) // * 4p (25% CD)\n    sets.ChampionOfStreetwiseBoxing = (1 >> (setH ^ 4)) + (1 >> (setG ^ 4)) + (1 >> (setB ^ 4)) + (1 >> (setF ^ 4)) // * 4p (5x5% ATK)\n    sets.GuardOfWutheringSnow = (1 >> (setH ^ 5)) + (1 >> (setG ^ 5)) + (1 >> (setB ^ 5)) + (1 >> (setF ^ 5)) // * 4p -\n    sets.FiresmithOfLavaForging = (1 >> (setH ^ 6)) + (1 >> (setG ^ 6)) + (1 >> (setB ^ 6)) + (1 >> (setF ^ 6)) // * 4p 12% skill + (12% Fire)\n    sets.GeniusOfBrilliantStars = (1 >> (setH ^ 7)) + (1 >> (setG ^ 7)) + (1 >> (setB ^ 7)) + (1 >> (setF ^ 7)) //   4p done\n    sets.BandOfSizzlingThunder = (1 >> (setH ^ 8)) + (1 >> (setG ^ 8)) + (1 >> (setB ^ 8)) + (1 >> (setF ^ 8)) //   4p (20% ATK)\n    sets.EagleOfTwilightLine = (1 >> (setH ^ 9)) + (1 >> (setG ^ 9)) + (1 >> (setB ^ 9)) + (1 >> (setF ^ 9)) //   4p -\n    sets.ThiefOfShootingMeteor = (1 >> (setH ^ 10)) + (1 >> (setG ^ 10)) + (1 >> (setB ^ 10)) + (1 >> (setF ^ 10)) //  4p 16% BE\n    sets.WastelanderOfBanditryDesert = (1 >> (setH ^ 11)) + (1 >> (setG ^ 11)) + (1 >> (setB ^ 11)) + (1 >> (setF ^ 11)) //  4p (10% CD) + (20% CR)\n    sets.LongevousDisciple = (1 >> (setH ^ 12)) + (1 >> (setG ^ 12)) + (1 >> (setB ^ 12)) + (1 >> (setF ^ 12)) //  4p (2x8% CR)\n    sets.MessengerTraversingHackerspace = (1 >> (setH ^ 13)) + (1 >> (setG ^ 13)) + (1 >> (setB ^ 13)) + (1 >> (setF ^ 13)) //  4p (12% SPD)\n    sets.TheAshblazingGrandDuke = (1 >> (setH ^ 14)) + (1 >> (setG ^ 14)) + (1 >> (setB ^ 14)) + (1 >> (setF ^ 14)) //  4p (8*6% ATK)\n    sets.PrisonerInDeepConfinement = (1 >> (setH ^ 15)) + (1 >> (setG ^ 15)) + (1 >> (setB ^ 15)) + (1 >> (setF ^ 15)) //  4p done\n\n    sets.SpaceSealingStation = (1 >> (setP ^ 0)) + (1 >> (setL ^ 0)) // (12% ATK)\n    sets.FleetOfTheAgeless = (1 >> (setP ^ 1)) + (1 >> (setL ^ 1)) // (8% ATK)\n    sets.PanCosmicCommercialEnterprise = (1 >> (setP ^ 2)) + (1 >> (setL ^ 2)) // (25% ATK)\n    sets.BelobogOfTheArchitects = (1 >> (setP ^ 3)) + (1 >> (setL ^ 3)) // (15% DEF)\n    sets.CelestialDifferentiator = (1 >> (setP ^ 4)) + (1 >> (setL ^ 4)) // (60% CR)\n    sets.InertSalsotto = (1 >> (setP ^ 5)) + (1 >> (setL ^ 5)) // (15% ULT/FUA)\n    sets.TaliaKingdomOfBanditry = (1 >> (setP ^ 6)) + (1 >> (setL ^ 6)) // (20% BE)\n    sets.SprightlyVonwacq = (1 >> (setP ^ 7)) + (1 >> (setL ^ 7)) // -\n    sets.RutilantArena = (1 >> (setP ^ 8)) + (1 >> (setL ^ 8)) // (20% BASIC/SKILL)\n    sets.BrokenKeel = (1 >> (setP ^ 9)) + (1 >> (setL ^ 9)) // (10% CD)\n    sets.FirmamentFrontlineGlamoth = (1 >> (setP ^ 10)) + (1 >> (setL ^ 10)) // (12%/18% DMG)\n    sets.PenaconyLandOfTheDreams = (1 >> (setP ^ 11)) + (1 >> (setL ^ 11)) // -\n\n    // ************************************************************\n    // Old elemental dmg logic\n    // ************************************************************\n\n    c.ELEMENTAL_DMG = 0\n    if (elementalMultipliers[0]) c.ELEMENTAL_DMG = calculatePercentStat(Stats.Physical_DMG, base, lc, trace, c, 0.10 * p2(sets.ChampionOfStreetwiseBoxing))\n    if (elementalMultipliers[1]) c.ELEMENTAL_DMG = calculatePercentStat(Stats.Fire_DMG, base, lc, trace, c, 0.10 * p2(sets.FiresmithOfLavaForging) + 0.10 * enabledFiresmithOfLavaForging * p4(sets.FiresmithOfLavaForging))\n    if (elementalMultipliers[2]) c.ELEMENTAL_DMG = calculatePercentStat(Stats.Ice_DMG, base, lc, trace, c, 0.10 * p2(sets.HunterOfGlacialForest))\n    if (elementalMultipliers[3]) c.ELEMENTAL_DMG = calculatePercentStat(Stats.Lightning_DMG, base, lc, trace, c, 0.10 * p2(sets.BandOfSizzlingThunder))\n    if (elementalMultipliers[4]) c.ELEMENTAL_DMG = calculatePercentStat(Stats.Wind_DMG, base, lc, trace, c, 0.10 * p2(sets.EagleOfTwilightLine))\n    if (elementalMultipliers[5]) c.ELEMENTAL_DMG = calculatePercentStat(Stats.Quantum_DMG, base, lc, trace, c, 0.10 * p2(sets.GeniusOfBrilliantStars))\n    if (elementalMultipliers[6]) c.ELEMENTAL_DMG = calculatePercentStat(Stats.Imaginary_DMG, base, lc, trace, c, 0.10 * p2(sets.WastelanderOfBanditryDesert))\n\n    let crSum = c[Stats.CR]\n    let cdSum = c[Stats.CD]\n\n    // ************************************************************\n    // Calculate base stats\n    // ************************************************************\n\n    let baseHp = calculateBaseStat(Stats.HP, base, lc)\n    let baseAtk = calculateBaseStat(Stats.ATK, base, lc)\n    let baseDef = calculateBaseStat(Stats.DEF, base, lc)\n    let baseSpd = calculateBaseStat(Stats.SPD, base, lc)\n    c.baseAtk = baseAtk\n\n    // ************************************************************\n    // Calculate display stats with unconditional sets\n    // ************************************************************\n\n    c[Stats.HP] = calculateFlatStat(Stats.HP, Stats.HP_P, baseHp, lc, trace, c,\n      0.12 * p2(sets.FleetOfTheAgeless) +\n      0.12 * p2(sets.LongevousDisciple))\n\n    c[Stats.ATK] = calculateFlatStat(Stats.ATK, Stats.ATK_P, baseAtk, lc, trace, c,\n      0.12 * p2(sets.SpaceSealingStation) +\n      0.12 * p2(sets.FirmamentFrontlineGlamoth) +\n      0.12 * p2(sets.MusketeerOfWildWheat) +\n      0.12 * p2(sets.PrisonerInDeepConfinement))\n\n    c[Stats.DEF] = calculateFlatStat(Stats.DEF, Stats.DEF_P, baseDef, lc, trace, c,\n      0.15 * p2(sets.BelobogOfTheArchitects) +\n      0.15 * p2(sets.KnightOfPurityPalace))\n\n    c[Stats.SPD] = calculateFlatStat(Stats.SPD, Stats.SPD_P, baseSpd, lc, trace, c,\n      0.06 * p2(sets.MessengerTraversingHackerspace) +\n      0.06 * p4(sets.MusketeerOfWildWheat))\n\n    c[Stats.CR] = calculatePercentStat(Stats.CR, base, lc, trace, c,\n      0.08 * p2(sets.InertSalsotto) +\n      0.08 * p2(sets.RutilantArena))\n\n    c[Stats.CD] = calculatePercentStat(Stats.CD, base, lc, trace, c,\n      0.16 * p2(sets.CelestialDifferentiator))\n\n    c[Stats.EHR] = calculatePercentStat(Stats.EHR, base, lc, trace, c,\n      0.10 * p2(sets.PanCosmicCommercialEnterprise))\n\n    c[Stats.RES] = calculatePercentStat(Stats.RES, base, lc, trace, c,\n      0.10 * p2(sets.BrokenKeel))\n\n    c[Stats.BE] = calculatePercentStat(Stats.BE, base, lc, trace, c,\n      0.16 * p2(sets.TaliaKingdomOfBanditry) +\n      0.16 * p2(sets.ThiefOfShootingMeteor) +\n      0.16 * p4(sets.ThiefOfShootingMeteor))\n\n    c[Stats.ERR] = calculatePercentStat(Stats.ERR, base, lc, trace, c,\n      0.05 * p2(sets.SprightlyVonwacq) +\n      0.05 * p2(sets.PenaconyLandOfTheDreams))\n\n    c[Stats.OHB] = calculatePercentStat(Stats.OHB, base, lc, trace, c,\n      0.10 * p2(sets.PasserbyOfWanderingCloud))\n\n    // Exit early on base display filters failing unless its a topRow search\n    if (baseDisplay && !topRow) {\n      const pass =\n        c[Stats.HP] >= request.minHp && c[Stats.HP] <= request.maxHp &&\n        c[Stats.ATK] >= request.minAtk && c[Stats.ATK] <= request.maxAtk &&\n        c[Stats.DEF] >= request.minDef && c[Stats.DEF] <= request.maxDef &&\n        c[Stats.SPD] >= request.minSpd && c[Stats.SPD] <= request.maxSpd &&\n        c[Stats.CR] >= request.minCr && c[Stats.CR] <= request.maxCr &&\n        c[Stats.CD] >= request.minCd && c[Stats.CD] <= request.maxCd &&\n        c[Stats.EHR] >= request.minEhr && c[Stats.EHR] <= request.maxEhr &&\n        c[Stats.RES] >= request.minRes && c[Stats.RES] <= request.maxRes &&\n        c[Stats.BE] >= request.minBe && c[Stats.BE] <= request.maxBe &&\n        c.WEIGHT >= request.minWeight && c.WEIGHT <= request.maxWeight\n      if (!pass) {\n        continue\n      }\n    }\n\n    c.id = index\n\n    // ************************************************************\n    // Set up combat stats storage x\n    // ************************************************************\n\n    let x = Object.assign({}, precomputedX)\n    c.x = x\n\n    x[Stats.ATK] += c[Stats.ATK]\n    x[Stats.DEF] += c[Stats.DEF]\n    x[Stats.HP] += c[Stats.HP]\n    x[Stats.SPD] += c[Stats.SPD]\n    x[Stats.CD] += c[Stats.CD]\n    x[Stats.CR] += c[Stats.CR]\n    x[Stats.EHR] += c[Stats.EHR]\n    x[Stats.RES] += c[Stats.RES]\n    x[Stats.BE] += c[Stats.BE]\n    x[Stats.ERR] += c[Stats.ERR]\n    x[Stats.OHB] += c[Stats.OHB]\n    x.ELEMENTAL_DMG += c.ELEMENTAL_DMG\n\n    x[Stats.ATK] += request.buffAtk\n    x[Stats.ATK] += request.buffAtkP * baseAtk\n    x[Stats.CD] += request.buffCd\n    x[Stats.CR] += request.buffCr\n    x[Stats.SPD] += request.buffSpdP * baseSpd + request.buffSpd\n    x[Stats.BE] += request.buffBe\n    x.ELEMENTAL_DMG += request.buffDmgBoost\n\n    // ************************************************************\n    // Calculate passive effects & buffs. x stores the internally calculated character stats\n    // ************************************************************\n\n    // No longer needed\n    // characterConditionals.calculatePassives(c, request)\n    // lightConeConditionals.calculatePassives(c, request)\n\n    // ************************************************************\n    // Calculate conditional set effects\n    // ************************************************************\n\n    x[Stats.SPD_P] +=\n      0.12 * enabledMessengerTraversingHackerspace * p4(sets.MessengerTraversingHackerspace)\n    x[Stats.SPD] += x[Stats.SPD_P] * baseSpd\n\n    x[Stats.ATK_P] +=\n      0.05 * valueChampionOfStreetwiseBoxing * p4(sets.ChampionOfStreetwiseBoxing) +\n      0.20 * enabledBandOfSizzlingThunder * p4(sets.BandOfSizzlingThunder) +\n      0.06 * valueTheAshblazingGrandDuke * p4(sets.TheAshblazingGrandDuke) +\n      0.12 * (x[Stats.SPD] >= 120 ? 1 : 0) * p2(sets.SpaceSealingStation) +\n      0.08 * (x[Stats.SPD] >= 120 ? 1 : 0) * p2(sets.FleetOfTheAgeless) +\n      Math.min(0.25, 0.25 * c[Stats.EHR]) * p2(sets.PanCosmicCommercialEnterprise)\n    x[Stats.ATK] += x[Stats.ATK_P] * baseAtk\n\n    x[Stats.DEF_P] +=\n      0.15 * (c[Stats.EHR] >= 0.50 ? 1 : 0) * p2(sets.BelobogOfTheArchitects)\n    x[Stats.DEF] += x[Stats.DEF_P] * baseDef\n\n    x[Stats.HP] += x[Stats.HP_P] * baseHp\n\n    x[Stats.CR] +=\n      0.10 * (valueWastelanderOfBanditryDesert > 0 ? 1 : 0) * p4(sets.WastelanderOfBanditryDesert) +\n      0.08 * valueLongevousDisciple * p4(sets.LongevousDisciple) +\n      0.60 * enabledCelestialDifferentiator * (c[Stats.CD] >= 1.20 ? 1 : 0) * p2(sets.CelestialDifferentiator)\n\n    x[Stats.CD] +=\n      0.25 * enabledHunterOfGlacialForest * p4(sets.HunterOfGlacialForest) +\n      0.10 * (valueWastelanderOfBanditryDesert == 2 ? 1 : 0) * p4(sets.WastelanderOfBanditryDesert) +\n      0.10 * (c[Stats.RES] >= 0.30 ? 1 : 0) * p2(sets.BrokenKeel)\n\n    x[Stats.BE] +=\n      0.20 * (c[Stats.SPD] >= 145 ? 1 : 0) * p2(sets.TaliaKingdomOfBanditry)\n\n    x.BASIC_BOOST +=\n      0.10 * p4(sets.MusketeerOfWildWheat) +\n      0.20 * (x[Stats.CR] >= 0.70 ? 1 : 0) * p2(sets.RutilantArena)\n\n    x.SKILL_BOOST +=\n      0.12 * p4(sets.FiresmithOfLavaForging) +\n      0.20 * (x[Stats.CR] >= 0.70 ? 1 : 0) * p2(sets.RutilantArena)\n\n    x.ULT_BOOST +=\n      0.15 * (x[Stats.CR] >= 0.50 ? 1 : 0) * p2(c.sets.InertSalsotto)\n\n    x.FUA_BOOST +=\n      0.15 * (x[Stats.CR] >= 0.50 ? 1 : 0) * p2(c.sets.InertSalsotto)\n\n    x.FUA_BOOST +=\n      0.20 * p2(c.sets.TheAshblazingGrandDuke)\n\n    x.DEF_SHRED += p4(c.sets.GeniusOfBrilliantStars) ? (enabledGeniusOfBrilliantStars ? 0.20 : 0.10) : 0\n\n    x.DEF_SHRED += 0.06 * valuePrisonerInDeepConfinement * p4(c.sets.PrisonerInDeepConfinement)\n\n    x.ELEMENTAL_DMG +=\n      0.12 * (x[Stats.SPD] >= 135 ? 1 : 0) * p2(sets.FirmamentFrontlineGlamoth) +\n      0.06 * (x[Stats.SPD] >= 160 ? 1 : 0) * p2(sets.FirmamentFrontlineGlamoth)\n\n    // ************************************************************\n    // Calculate skill base damage\n    // ************************************************************\n\n    characterConditionals.calculateBaseMultis(c, request)\n    lightConeConditionals.calculateBaseMultis(c, request)\n\n    // ************************************************************\n    // Calculate overall multipliers\n    // ************************************************************\n\n    let cLevel = request.characterLevel\n    let eLevel = request.enemyLevel\n    let defReduction = x.DEF_SHRED + request.buffDefShred\n    let defIgnore = 0\n\n    let dmgBoostMultiplier = 1 + x.ALL_DMG_MULTI + x.ELEMENTAL_DMG\n    let dmgReductionMultiplier = 1\n\n    let ehp = x[Stats.HP] / (1 - x[Stats.DEF] / (x[Stats.DEF] + 200 + 10 * request.enemyLevel))\n    ehp *= 1 / ((1 - 0.08 * p2(sets.GuardOfWutheringSnow)) * x.DMG_RED_MULTI)\n    c.EHP = ehp\n    let cv = 100 * (crSum * 2 + cdSum)\n    c.CV = cv\n\n    let universalMulti = dmgReductionMultiplier * brokenMultiplier\n\n    x.BASIC_DMG *= universalMulti * (dmgBoostMultiplier + x.BASIC_BOOST) * calculateDefMultiplier(cLevel, eLevel, defReduction, defIgnore, x.BASIC_DEF_PEN) * (Math.min(1, x[Stats.CR] + x.BASIC_CR_BOOST) * (1 + x[Stats.CD] + x.BASIC_CD_BOOST) + (1 - Math.min(1, x[Stats.CR] + x.BASIC_CR_BOOST))) * (1 + x.DMG_TAKEN_MULTI + x.BASIC_VULNERABILITY) * (1 - (resistance - x.RES_PEN - request.buffResPen - x.BASIC_RES_PEN))\n    x.SKILL_DMG *= universalMulti * (dmgBoostMultiplier + x.SKILL_BOOST) * calculateDefMultiplier(cLevel, eLevel, defReduction, defIgnore, x.SKILL_DEF_PEN) * (Math.min(1, x[Stats.CR] + x.SKILL_CR_BOOST) * (1 + x[Stats.CD] + x.SKILL_CD_BOOST) + (1 - Math.min(1, x[Stats.CR] + x.SKILL_CR_BOOST))) * (1 + x.DMG_TAKEN_MULTI + x.SKILL_VULNERABILITY) * (1 - (resistance - x.RES_PEN - request.buffResPen - x.SKILL_RES_PEN))\n    x.ULT_DMG *= universalMulti * (dmgBoostMultiplier + x.ULT_BOOST) * calculateDefMultiplier(cLevel, eLevel, defReduction, defIgnore, x.ULT_DEF_PEN) * (Math.min(1, x[Stats.CR] + x.ULT_CR_BOOST) * (1 + x[Stats.CD] + x.ULT_CD_BOOST) + (1 - Math.min(1, x[Stats.CR] + x.ULT_CR_BOOST))) * (1 + x.DMG_TAKEN_MULTI + x.ULT_VULNERABILITY) * (1 - (resistance - x.RES_PEN - request.buffResPen - x.ULT_RES_PEN))\n    x.FUA_DMG *= universalMulti * (dmgBoostMultiplier + x.FUA_BOOST) * calculateDefMultiplier(cLevel, eLevel, defReduction, defIgnore, x.FUA_DEF_PEN) * (Math.min(1, x[Stats.CR] + x.FUA_CR_BOOST) * (1 + x[Stats.CD] + x.FUA_CD_BOOST) + (1 - Math.min(1, x[Stats.CR] + x.FUA_CR_BOOST))) * (1 + x.DMG_TAKEN_MULTI + x.FUA_VULNERABILITY) * (1 - (resistance - x.RES_PEN - request.buffResPen - x.FUA_RES_PEN))\n    x.DOT_DMG *= universalMulti * (dmgBoostMultiplier + x.DOT_BOOST) * calculateDefMultiplier(cLevel, eLevel, defReduction, defIgnore, x.DOT_DEF_PEN) * (1 + x.DMG_TAKEN_MULTI + x.DOT_VULNERABILITY) * (1 - (resistance - x.RES_PEN - request.buffResPen - x.DOT_RES_PEN))\n\n    // ************************************************************\n    // Filter results\n    // ************************************************************\n\n    // Since we exited early on the c comparisons, we only need to check against x stats here. Ignore if top row search\n    if (combatDisplay && !topRow) {\n      const pass =\n        x[Stats.HP] >= request.minHp && x[Stats.HP] <= request.maxHp &&\n        x[Stats.ATK] >= request.minAtk && x[Stats.ATK] <= request.maxAtk &&\n        x[Stats.DEF] >= request.minDef && x[Stats.DEF] <= request.maxDef &&\n        x[Stats.SPD] >= request.minSpd && x[Stats.SPD] <= request.maxSpd &&\n        x[Stats.CR] >= request.minCr && x[Stats.CR] <= request.maxCr &&\n        x[Stats.CD] >= request.minCd && x[Stats.CD] <= request.maxCd &&\n        x[Stats.EHR] >= request.minEhr && x[Stats.EHR] <= request.maxEhr &&\n        x[Stats.RES] >= request.minRes && x[Stats.RES] <= request.maxRes &&\n        x[Stats.BE] >= request.minBe && x[Stats.BE] <= request.maxBe\n      if (!pass) {\n        continue\n      }\n    }\n\n    let result = (\n      cv >= request.minCv && cv <= request.maxCv &&\n      ehp >= request.minEhp && ehp <= request.maxEhp &&\n      x.BASIC_DMG >= request.minBasic && x.BASIC_DMG <= request.maxBasic &&\n      x.SKILL_DMG >= request.minSkill && x.SKILL_DMG <= request.maxSkill &&\n      x.ULT_DMG >= request.minUlt && x.ULT_DMG <= request.maxUlt &&\n      x.FUA_DMG >= request.minFua && x.FUA_DMG <= request.maxFua &&\n      x.DOT_DMG >= request.minDot && x.DOT_DMG <= request.maxDot\n    )\n\n    // ************************************************************\n    // Pack the passing results into the ArrayBuffer to return\n    // ************************************************************\n\n    if (topRow || result) {\n      BufferPacker.packCharacter(arr, col, c);\n    }\n  }\n\n  self.postMessage({\n    rows: [],\n    buffer: data.buffer\n  }, [data.buffer]);\n}\n\nfunction calculateDefMultiplier(cLevel, eLevel, defReduction, defIgnore, additionalPen) {\n  return (cLevel + 20) / ((eLevel + 20) * Math.max(0, 1 - defReduction - defIgnore - additionalPen) + cLevel + 20)\n}\n\nfunction p4(set) {\n  return set >> 2\n}\n\nfunction p2(set) {\n  return Math.min(1, set >> 1)\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [843], () => (__webpack_require__(3679)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"17bf738c\" + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/dreary-quibbles/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t679: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkhsr_optimizer\"] = self[\"webpackChunkhsr_optimizer\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","__webpack_require__.nc = undefined;","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(843).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["Stats","ATK_P","ATK","BE","CD","CR","DEF_P","DEF","EHR","ERR","Fire_DMG","HP_P","HP","Ice_DMG","Imaginary_DMG","Lightning_DMG","OHB","Physical_DMG","Quantum_DMG","RES","SPD_P","SPD","Wind_DMG","StatsToIndex","i","Object","values","map","x","SetsRelics","SetsOrnaments","Sets","SetsRelicsNames","SetsOrnamentsNames","OrnamentSetToIndex","length","RelicSetToIndex","Constants","BufferPacker","levelStats","push","value","label","concat","extractCharacter","arr","offset","id","ED","CV","WEIGHT","EHP","BASIC","SKILL","ULT","FUA","DOT","xHP","xATK","xDEF","xSPD","xCR","xCD","xEHR","xRES","xBE","xERR","xOHB","xELEMENTAL_DMG","relicSetIndex","ornamentSetIndex","extractArrayToResults","results","packCharacter","character","ELEMENTAL_DMG","BASIC_DMG","SKILL_DMG","ULT_DMG","FUA_DMG","DOT_DMG","cleanFloatBuffer","buffer","Float64Array","fill","createFloatBuffer","Text","Typography","HeaderText","styled","_templateObject","_taggedTemplateLiteral","ASHBLAZING_ATK_STACK","baseComputedStatsObject","DEF_SHRED","DMG_TAKEN_MULTI","ALL_DMG_MULTI","RES_PEN","DMG_RED_MULTI","BASIC_CR_BOOST","SKILL_CR_BOOST","ULT_CR_BOOST","FUA_CR_BOOST","BASIC_CD_BOOST","SKILL_CD_BOOST","ULT_CD_BOOST","FUA_CD_BOOST","BASIC_SCALING","SKILL_SCALING","ULT_SCALING","FUA_SCALING","DOT_SCALING","BASIC_BOOST","SKILL_BOOST","ULT_BOOST","FUA_BOOST","DOT_BOOST","BASIC_VULNERABILITY","SKILL_VULNERABILITY","ULT_VULNERABILITY","FUA_VULNERABILITY","DOT_VULNERABILITY","BASIC_DEF_PEN","SKILL_DEF_PEN","ULT_DEF_PEN","FUA_DEF_PEN","DOT_DEF_PEN","BASIC_RES_PEN","SKILL_RES_PEN","ULT_RES_PEN","FUA_RES_PEN","DOT_RES_PEN","precisionRound","number","precision","arguments","undefined","factor","Math","pow","round","calculateAshblazingSet","c","request","hitMulti","enabled","p4","sets","TheAshblazingGrandDuke","ashblazingAtk","setConditionals","baseAtk","ashblazingMulti","set","skill","eidolon","value1","value2","talent","ultRev","basicRev","ult","basic","skillRev","talentRev","text","color","ret","num","isNum","key","split","forEach","item","_jsx","test","style","children","_Fragment","_ref","content","passive","Item","formItem","_createElement","name","title","ColorizeNumbers","Flex","vertical","gap","WithPopover","WrappedComponent","Wrapped","props","open","setOpen","React","_jsxs","width","display","Popover","trigger","placement","onOpenChange","newOpen","cursor","displayName","conditionalType","lc","FormSwitch","justify","align","Form","valuePropName","Switch","checkedChildren","CheckOutlined","unCheckedChildren","CloseOutlined","disabled","defaultChecked","marginRight","FormSwitchWithPopover","propTypes","FormSlider","inputValue","setInputValue","useState","onChange","newValue","multiplier","percent","step","symbol","marginBottom","minWidth","InputNumber","min","max","controls","size","parser","parseFloat","formatter","addonAfter","height","Slider","marginTop","marginLeft","tooltip","textAlign","FormSliderWithPopover","e","summationStacksMax","basicScaling","skillScaling","ultScaling","fuaScaling","e2FuaRatio","procs","fuaMultiByDebuffs","join","replace","DisplayFormControl","defaults","enemyDebuffStacks","summationStacks","precomputeEffects","r","characterConditionals","assign","calculateBaseMultis","skillDamageReductionValue","basicAtkScaling","basicDefScaling","basicEnhancedAtkScaling","basicEnhancedDefScaling","ultAtkScaling","ultDefScaling","enhancedBasic","skillActive","shieldActive","e6DefStacks","Jingliu","talentCrBuff","talentHpDrainAtkBuffMax","skillEnhancedScaling","talentEnhancedState","talentHpDrainAtkBuff","e1CdBuff","e2SkillDmgBuff","enemyCount","talentAtkScalingValue","ultEnhancedScaling","ultEnhancedScaling2","enhancedUlt","talentStacks","enemyWeaknessBroken","characterOptionMapping","extraPenValue","ultExtraScaling","talentPenBuff","enemySlowed","enemyHpPercent","hitMultiByTargets","targetBurned","selfCurrentHp80Percent","e1TalentSpdBuff","e6UltExtraHits","skillExtraHitsMax","talentScaling","enemyDmgTakenDebuff","skillExtraHits","e1EnhancedState","dotScaling","e1DotDmgReceivedDebuff","skillResShredValue","skillDefShredBufValue","ultDefShredValue","skillResShredDebuff","skillDefShredDebuff","ultDefShredDebuff","targetDebuffs","talentMissingHpDmgBoostMax","selfCurrentHpPercent","ultSpdBuffValue","talentStacksAtkBuff","skillExtraDmgHitsMax","talentBuffStacks","skillExtraDmgHits","ultSpdBuff","techniqueBuff","targetFrozen","e2TalentCritStacks","e6UltAtkBuff","skillDmgBoostValue","ultAtkBoostValue","ultCdBoostValue","ultCdBoostBaseValue","battleStartDefBuff","skillBuff","ultBuff","e2SkillSpdBuff","buffedStateDmgBuff","speedBoostStacksMax","buffedState","speedBoostStacks","e6UltTargetDebuff","talentExtraDmgScaling","targetShocked","enemyDefeatedBuff","ultDefPenValue","enemyDebuffed","skillRemovedBuff","ultDefPenDebuff","e4SkillResShred","ultDmgReductionValue","ultFuaExtraScaling","hitMultiByTargetsBlast","talentEnemyMarked","e2UltAtkBuff","e4DmgReductionBuff","dotVulnerabilityValue","maxExtraHits","targetDotTakenDebuff","targetWindShear","targetBurnedExtraScaling","enhancedSkill","skillHpPercentBuff","skillHpFlatBuff","e4TalentAtkBuff","basicEnhancedHitValue","targetUltDebuffDmgTakenValue","basicEnhancedScaling","basicEnhanced","targetUltDebuffed","e1TargetBleeding","basicEnhancedExtraHits","e4TalentStacks","proofOfDebtFuaVulnerability","enhancedStateFuaScalingBoost","enhancedStateFuaCdBoost","enemyProofOfDebtDebuff","numbyEnhancedState","e1DebtorStacks","enemyElementalWeak","ashblazingFuaData","ashblazingBasicData","skillStackDmg","talentAtkBuff","basicEnhancedSpdBuff","skillDmgIncreaseStacks","skillAtkBoostMax","ultDmgBoost","skillAtkBoostScaling","skillLightningDmgBoostScaling","benedictionBuff","skillSpdBuff","ultDmgBuff","BENEDICTION_LIGHTNING_DMG","fieldActive","e6ResReduction","skillCritBuff","talentHitsPerAction","talentAttacks","e2DmgBuff","e6FuaVulnerabilityStacks","stacks","hits","stacksPerMiss","stacksPerHit","ashblazingStacks","atkBoostSum","enhancedStateDmgBoost","basicEnhancedHpScaling","ultHpScaling","ultLostHpScaling","fuaAtkScaling","fuaHpScaling","hpPercentLostTotalMax","enhancedStateActive","hpPercentLostTotal","e4MaxHpIncreaseStacks","talentSpdBuffValue","ultBuffedAtk","talentSpdBuffStacksMax","skillExtraHitScaling","ultBuffedState","e2DmgReductionBuff","skillTriggerStacks","talentSpdBuffStacks","originalSkillScaling","stanceSkillScaling","stanceScalingProportion","skillAtkBuffValue","ultCdBuffValue","ultCrBuffValue","talentAtkScaling","roaringBowstringsActive","initialSpeedBuff","roaringBowstrings","skillCrBuffValue","skillHpBuffValue","talentDmgReductionValue","e6TeamHpLostPercent","talentCdBuffValue","talentCrBuffValue","ultBuffActive","soulsteelBuffActive","critSpdBuff","e1TargetFrozen","e4CurrentHp80","talentDebuffDmgIncreaseValue","talentDebuffMax","talentDebuffStacks","enemyBurned","e2BurnMultiBoost","healingMaxHpBuff","talentDmgReductionBuff","e2UltHealingBuff","e4SkillHealingDmgBuffStacks","righteousHeartStackMax","outroarStackCdValue","righteousHeartDmgValue","basicEnhanced1Scaling","basicEnhanced2Scaling","basicEnhanced3Scaling","skillOutroarStacks","talentRighteousHeartStacks","e6ResPenStacks","ultBoostMax","hitMultiByFuaHits","enemyToughness50","toughnessReductionDmgBoost","fuaHits","e4BeBuff","ultAtkBuffValue","talentDmgBoostValue","targetBurdenActive","burdenAtkBuff","ultBuffValue","e6DmgBuff","talentMaxStacks","ultEnhancedExtraHitScaling","talentCrStackValue","ultEnhanced","ultEnhancedExtraHits","fieldResPenValue","ultFieldActive","beOver","floor","drratio","skillCdBuffScaling","skillCdBuffBase","cipherTalentStackBoost","talentBaseStackBoost","atkBoostByQuantumAllies","skillCdBuff","cipherBuff","quantumAllies","arcanaStackMultiplier","epiphanyDmgTakenBoost","defShredValue","epiphanyDebuff","defDecreaseDebuff","arcanaStacks","e1ResReduction","ultStackScaling","ultHitsOnTarget","enemyFrozen","e2DefReduction","e6UltDmgBoost","physicaltrailblazer","firetrailblazer","CharacterConditionals","characterFn","characterId","characterEidolon","inputWidth","numberWidth","sliderWidth","getContentFromLCRanks","s","lcRank","params","desc","match","token","tokenPieces","parseInt","toString","IShallBeMyOwnSword","sValuesStackDmg","sValuesDefPen","eclipseStacks","maxStackDefPen","lightConeConditionals","calculatePassives","lightConeOptionMapping","sValues","critBuff","healingBuff","basicSkillDmgBuff","hp50DefBuff","initialEhrBuff","inBattleAtkBuff","defeatedEnemyAtkBuff","console","warn","enemyHp50Buff","enemySlowedDmgBuff","defeatedEnemySpdBuff","selfHp80CrBuff","basicAtkBuff","initialSpdBuff","postUltAtkBuff","postUltHealingBoost","debuffStacksDmgIncrease","dmgResBuff","enemies2CrBuff","atkBuffStacks","enemyHp50FuaBuff","xxxxxxxxxxxxxxxxxxxxx","sameTargetHitStacks","alliesSameElement","enemyHpHigherDmgBoost","sMaxValues","resToHealingBoost","boost","targetEnsnared","maxEnergyDmgBoost","defeatedEnemyCrBuff","defeatedEnemyCdBuff","enemyShockWindShear","initialDmgReductionBuff","sValuesSpd","sValuesDmg","spdDmgBuff","enemyBurnedBleeding","sValuesDmgBoost","sValuesStacks","dmgBoost","defeatedEnemyAtkStacks","extraDmgProc","defScalingUltDmg","sValuesAtk","sValuesCd","atkBuffActive","cdBuffActive","maxEnergyStacks","postSkillHealBuff","enemyCountAtkBuff","enemyWeaknessBreakDmgBuff","spdScalingBuffs","dmgBuff","sValuesErr","postSkillDmgBuff","enemyDebuffedDmgBoost","skillAtkBoost","selfAttackedDefBuff","spdStacks","dotEffect","sValuesCr","enemy3DebuffsCrBoost","targetCodeDebuff","postUltSpdBuff","sValuesSkillUltDmg","sValuesFuaDmg","skillUltDmgBoost","fuaDmgBoost","hpLostDmgBuff","missedCritCrBuff","healingBasedDmgProc","dragonsCallStacks","targetTameStacks","maxEnergyUltDmgStacks","postUltDmgBuff","sValuesFuaPen","debuffCdStacks","postUltBuff","sValuesAtkStacks","sValuesDmgBuff","atkBoostStacks","weaknessBreakDmgBuff","enemyHp50CrBoost","enemyDefeatedAtkBuff","activeShieldDmgDecrease","postUltDotDmgBuff","maskActive","sValuesDotPen","prophetStacks","LightConeConditionals","lcFn","lightCone","lightConeSuperimposition","sumRelicStats","headRelics","handsRelics","bodyRelics","feetRelics","planarSphereRelics","linkRopeRelics","h","g","b","f","p","l","statValues","summedStats","stat","augmentedStats","weightScore","calculateFlatStat","statP","baseValue","trace","relicSum","setEffects","calculateBaseStat","base","calculatePercentStat","calculateDefMultiplier","cLevel","eLevel","defReduction","defIgnore","additionalPen","p2","self","onmessage","data","relics","Head","Hands","Body","Feet","PlanarSphere","LinkRope","relicSetCount","ornamentSetCount","topRow","lSize","pSize","fSize","bSize","gSize","hSize","relicSetSolutions","ornamentSetSolutions","relicSetToIndex","ornamentSetToIndex","elementalMultipliers","traces","enabledHunterOfGlacialForest","HunterOfGlacialForest","enabledFiresmithOfLavaForging","FiresmithOfLavaForging","enabledGeniusOfBrilliantStars","GeniusOfBrilliantStars","enabledBandOfSizzlingThunder","BandOfSizzlingThunder","enabledMessengerTraversingHackerspace","MessengerTraversingHackerspace","enabledCelestialDifferentiator","CelestialDifferentiator","valueChampionOfStreetwiseBoxing","ChampionOfStreetwiseBoxing","valueWastelanderOfBanditryDesert","WastelanderOfBanditryDesert","valueLongevousDisciple","LongevousDisciple","valueTheAshblazingGrandDuke","valuePrisonerInDeepConfinement","PrisonerInDeepConfinement","brokenMultiplier","resistance","enemyResistance","precomputedX","combatDisplay","statDisplay","baseDisplay","col","WIDTH","index","skip","permutations","setH","setG","setB","setF","setP","setL","PasserbyOfWanderingCloud","MusketeerOfWildWheat","KnightOfPurityPalace","GuardOfWutheringSnow","EagleOfTwilightLine","ThiefOfShootingMeteor","SpaceSealingStation","FleetOfTheAgeless","PanCosmicCommercialEnterprise","BelobogOfTheArchitects","InertSalsotto","TaliaKingdomOfBanditry","SprightlyVonwacq","RutilantArena","BrokenKeel","FirmamentFrontlineGlamoth","PenaconyLandOfTheDreams","crSum","cdSum","baseHp","baseDef","baseSpd","minHp","maxHp","minAtk","maxAtk","minDef","maxDef","minSpd","maxSpd","minCr","maxCr","minCd","maxCd","minEhr","maxEhr","minRes","maxRes","minBe","maxBe","minWeight","maxWeight","buffAtk","buffAtkP","buffCd","buffCr","buffSpdP","buffSpd","buffBe","buffDmgBoost","characterLevel","enemyLevel","buffDefShred","dmgBoostMultiplier","dmgReductionMultiplier","ehp","cv","universalMulti","buffResPen","result","minCv","maxCv","minEhp","maxEhp","minBasic","maxBasic","minSkill","maxSkill","minUlt","maxUlt","minFua","maxFua","minDot","maxDot","postMessage","rows","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","__webpack_exports__","O","deferred","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","splice","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","then","ns","create","def","current","indexOf","getOwnPropertyNames","definition","o","defineProperty","enumerable","get","chunkId","Promise","all","reduce","promises","u","miniCssF","globalThis","Function","window","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime","pop","nc","next"],"sourceRoot":""}