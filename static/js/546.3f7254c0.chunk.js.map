{"version":3,"file":"static/js/546.3f7254c0.chunk.js","mappings":"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","sources":["lib/constants.js","lib/bufferPacker.js","components/HeaderText.js","components/optimizerTab/FormConditionalInputs.js","lib/characterConditionals.js","lib/lightConeConditionals.js","lib/worker/optimizerWorker.js","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/compat get default export","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/nonce","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["export const Stats = {\n  HP_P: 'HP%',\n  ATK_P: 'ATK%',\n  DEF_P: 'DEF%',\n  SPD_P: 'SPD%',\n  HP: 'HP',\n  ATK: 'ATK',\n  DEF: 'DEF',\n  SPD: 'SPD',\n  CD: 'CRIT DMG',\n  CR: 'CRIT Rate',\n  EHR: 'Effect Hit Rate',\n  RES: 'Effect RES',\n  BE: 'Break Effect',\n  ERR: 'Energy Regeneration Rate',\n  OHB: 'Outgoing Healing Boost',\n  Physical_DMG: 'Physical DMG Boost',\n  Fire_DMG: 'Fire DMG Boost',\n  Ice_DMG: 'Ice DMG Boost',\n  Lightning_DMG: 'Lightning DMG Boost',\n  Wind_DMG: 'Wind DMG Boost',\n  Quantum_DMG: 'Quantum DMG Boost',\n  Imaginary_DMG: 'Imaginary DMG Boost'\n}\n\nexport const StatsToReadable = {\n  [Stats.HP_P]: 'HP %',\n  [Stats.ATK_P]: 'ATK %',\n  [Stats.DEF_P]: 'DEF %',\n  [Stats.SPD_P]: 'SPD %',\n  [Stats.HP]: 'HP',\n  [Stats.ATK]: 'ATK',\n  [Stats.DEF]: 'DEF',\n  [Stats.SPD]: 'SPD',\n  [Stats.CD]: 'CRIT DMG',\n  [Stats.CR]: 'CRIT Rate',\n  [Stats.EHR]: 'Effect Hit Rate',\n  [Stats.RES]: 'Effect RES',\n  [Stats.BE]: 'Break Effect',\n  [Stats.ERR]: 'Energy Regen',\n  [Stats.OHB]: 'Healing Boost',\n  [Stats.Physical_DMG]: 'Physical DMG',\n  [Stats.Fire_DMG]: 'Fire DMG',\n  [Stats.Ice_DMG]: 'Ice DMG',\n  [Stats.Lightning_DMG]: 'Lightning DMG',\n  [Stats.Wind_DMG]: 'Wind DMG',\n  [Stats.Quantum_DMG]: 'Quantum DMG',\n  [Stats.Imaginary_DMG]: 'Imaginary DMG'\n}\n\nexport var StatsToIndex = {\n\n}\nlet i = 0;\nObject.values(Stats).map(x => StatsToIndex[x] = i++) \n\nexport const Parts = {\n  Head: 'Head',\n  Hands: 'Hands',\n  Body: 'Body',\n  Feet: 'Feet',\n  PlanarSphere: 'PlanarSphere',\n  LinkRope: 'LinkRope'\n};\nexport const PartsToReadable = {\n  [Parts.Head]: 'Head',\n  [Parts.Hands]: 'Hands',\n  [Parts.Body]: 'Body',\n  [Parts.Feet]: 'Feet',\n  [Parts.PlanarSphere]: 'Sphere',\n  [Parts.LinkRope]: 'Rope'\n};\n\nexport const SetsRelics = {\n  'PasserbyOfWanderingCloud': 'Passerby of Wandering Cloud',\n  'MusketeerOfWildWheat': 'Musketeer of Wild Wheat',\n  'KnightOfPurityPalace': 'Knight of Purity Palace',\n  'HunterOfGlacialForest': 'Hunter of Glacial Forest',\n  'ChampionOfStreetwiseBoxing': 'Champion of Streetwise Boxing',\n  'GuardOfWutheringSnow': 'Guard of Wuthering Snow',\n  'FiresmithOfLavaForging': 'Firesmith of Lava-Forging',\n  'GeniusOfBrilliantStars': 'Genius of Brilliant Stars',\n  'BandOfSizzlingThunder': 'Band of Sizzling Thunder',\n  'EagleOfTwilightLine': 'Eagle of Twilight Line',\n  'ThiefOfShootingMeteor': 'Thief of Shooting Meteor',\n  'WastelanderOfBanditryDesert': 'Wastelander of Banditry Desert',\n  'LongevousDisciple': 'Longevous Disciple',\n  'MessengerTraversingHackerspace': 'Messenger Traversing Hackerspace',\n  'TheAshblazingGrandDuke': 'The Ashblazing Grand Duke',\n  'PrisonerInDeepConfinement': 'Prisoner in Deep Confinement',\n}\n\nexport const SetsOrnaments = {\n  'SpaceSealingStation': 'Space Sealing Station',\n  'FleetOfTheAgeless': 'Fleet of the Ageless',\n  'PanCosmicCommercialEnterprise': 'Pan-Cosmic Commercial Enterprise',\n  'BelobogOfTheArchitects': 'Belobog of the Architects',\n  'CelestialDifferentiator': 'Celestial Differentiator',\n  'InertSalsotto': 'Inert Salsotto',\n  'TaliaKingdomOfBanditry': 'Talia: Kingdom of Banditry',\n  'SprightlyVonwacq': 'Sprightly Vonwacq',\n  'RutilantArena': 'Rutilant Arena',\n  'BrokenKeel': 'Broken Keel',\n  'FirmamentFrontlineGlamoth': 'Firmament Frontline: Glamoth',\n  'PenaconyLandOfTheDreams': 'Penacony, Land of the Dreams',\n}\n\nexport const Sets = {\n  ...SetsRelics,\n  ...SetsOrnaments\n}\n\nexport const SetsRelicsNames = Object.values(SetsRelics)\nexport const SetsOrnamentsNames = Object.values(SetsOrnaments)\n\nconst OrnamentSetToIndex = {}\nfor (let i = 0; i < SetsOrnamentsNames.length; i++) {\n  OrnamentSetToIndex[SetsOrnamentsNames[i]] = i\n}\n\nconst RelicSetToIndex = {}\nfor (let i = 0; i < SetsRelicsNames.length; i++) {\n  RelicSetToIndex[SetsRelicsNames[i]] = i\n}\n\n// let StatMaxes = {\n//   [Stats.HP_P]: 43.2,\n//   [Stats.ATK_P]: 43.2,\n//   [Stats.DEF_P]: 54,\n//   [Stats.HP]: 705,\n//   [Stats.ATK]: 352,\n//   [Stats.CR]: 32.4,\n//   [Stats.CD]: 64.8,\n//   [Stats.OHB]: 34.5,\n//   [Stats.EHR]: 43.2,\n//   [Stats.SPD]: 25,\n//   [Stats.BE]: 64.8,\n//   [Stats.ERR]: 19.4,\n//   [Stats.Physical_DMG]: 38.8,\n//   [Stats.Fire_DMG]: 38.8,\n//   [Stats.Ice_DMG]: 38.8,\n//   [Stats.Lightning_DMG]: 38.8,\n//   [Stats.Wind_DMG]: 38.8,\n//   [Stats.Quantum_DMG]: 38.8,\n//   [Stats.Imaginary_DMG]: 38.8,\n// }\n\nexport const Constants = {\n  Sets,\n  Parts,\n  Stats,\n  StatsToIndex,\n  SetsOrnaments,\n  SetsRelics,\n  SetsRelicsNames,\n  SetsOrnamentsNames,\n  StatsToReadable,\n  PartsToReadable,\n  RelicSetToIndex,\n  OrnamentSetToIndex,\n  // StatMaxes,\n  MAX_INT: 2147483647,\n}","import {Stats} from \"./constants\";\n\nconst SIZE = 33\n\n// When adding new rows, use:\n// let i = 0\n// offset + i++\n\nexport const BufferPacker = {\n  extractCharacter: (arr, offset) => { // Float32Array\n    offset = offset * SIZE\n    return {\n      id: arr[offset], // 0\n      [Constants.Stats.HP]:    arr[offset + 1],\n      [Constants.Stats.ATK]:   arr[offset + 2],\n      [Constants.Stats.DEF]:   arr[offset + 3],\n      [Constants.Stats.SPD]:   arr[offset + 4],\n      [Constants.Stats.CD]:    arr[offset + 5],\n      [Constants.Stats.CR]:    arr[offset + 6],\n      [Constants.Stats.EHR]:   arr[offset + 7],\n      [Constants.Stats.RES]:   arr[offset + 8],\n      [Constants.Stats.BE]:    arr[offset + 9],\n      [Constants.Stats.ERR]:   arr[offset + 10], // 10\n      [Constants.Stats.OHB]:   arr[offset + 11],\n      ED:     arr[offset + 12],\n      CV:     arr[offset + 13],\n      WEIGHT: arr[offset + 14],\n      EHP:    arr[offset + 15],\n      BASIC:  arr[offset + 16],\n      SKILL:  arr[offset + 17],\n      ULT:    arr[offset + 18],\n      FUA:    arr[offset + 19],\n      DOT:    arr[offset + 20], // 20\n      xHP:    arr[offset + 21],\n      xATK:   arr[offset + 22],\n      xDEF:   arr[offset + 23],\n      xSPD:   arr[offset + 24],\n      xCR:    arr[offset + 25],\n      xCD:    arr[offset + 26],\n      xEHR:   arr[offset + 27],\n      xRES:   arr[offset + 28],\n      xBE:    arr[offset + 29],\n      xERR:   arr[offset + 30], // 30\n      xOHB:   arr[offset + 31],\n      xELEMENTAL_DMG:  arr[offset + 32],\n    }\n  },\n\n  extractArrayToResults: (arr, length, results) => {\n    for (let i = 0; i < length; i++) {\n      if (arr[i * SIZE + 1]) {\n        results.push(BufferPacker.extractCharacter(arr, i))\n      }\n    }\n  },\n\n  packCharacter: (arr, offset, character) => {\n    offset = offset * SIZE\n\n    // When adding new rows, use:\n    arr[offset] = character.id // 0\n    arr[offset + 1] = character[Stats.HP]\n    arr[offset + 2] = character[Stats.ATK]\n    arr[offset + 3] = character[Stats.DEF]\n    arr[offset + 4] = character[Stats.SPD]\n    arr[offset + 5] = character[Stats.CD]\n    arr[offset + 6] = character[Stats.CR]\n    arr[offset + 7] = character[Stats.EHR]\n    arr[offset + 8] = character[Stats.RES]\n    arr[offset + 9] = character[Stats.BE]\n    arr[offset + 10] = character[Stats.ERR] // 10\n    arr[offset + 11] = character[Stats.OHB]\n    arr[offset + 12] = character.ELEMENTAL_DMG\n    arr[offset + 13] = character.CV\n    arr[offset + 14] = character.WEIGHT\n    arr[offset + 15] = character.EHP\n    arr[offset + 16] = character.x.BASIC_DMG\n    arr[offset + 17] = character.x.SKILL_DMG\n    arr[offset + 18] = character.x.ULT_DMG\n    arr[offset + 19] = character.x.FUA_DMG\n    arr[offset + 20] = character.x.DOT_DMG // 20\n    arr[offset + 21] = character.x[Stats.HP]\n    arr[offset + 22] = character.x[Stats.ATK]\n    arr[offset + 23] = character.x[Stats.DEF]\n    arr[offset + 24] = character.x[Stats.SPD]\n    arr[offset + 25] = character.x[Stats.CR]\n    arr[offset + 26] = character.x[Stats.CD]\n    arr[offset + 27] = character.x[Stats.EHR]\n    arr[offset + 28] = character.x[Stats.RES]\n    arr[offset + 29] = character.x[Stats.BE]\n    arr[offset + 30] = character.x[Stats.ERR] // 30\n    arr[offset + 31] = character.x[Stats.OHB]\n    arr[offset + 32] = character.x.ELEMENTAL_DMG\n  },\n\n  cleanFloatBuffer: (buffer) => {\n    new Float32Array(buffer).fill(0);\n  },\n\n  createFloatBuffer: (length) => {\n    return new Float32Array(length * SIZE).buffer\n  }\n}","import {\n  Typography,\n} from 'antd';\nimport styled from 'styled-components';\nconst { Text } = Typography;\n\nexport const HeaderText = styled(Text)`\n  text-decoration: underline;\n  text-decoration-color: #6d97ffb3;\n  text-underline-offset: 2px\n`","import {Flex, Form, InputNumber, Popover, Slider, Switch, Typography} from \"antd\";\nimport {CheckOutlined, CloseOutlined} from \"@ant-design/icons\";\nimport React, {useState} from \"react\";\nimport styled from \"styled-components\";\n\nlet justify = 'flex-start'\nlet align = 'center'\nlet inputWidth = 75\nlet numberWidth = 65\nlet sliderWidth = 145\n\nconst InputNumberStyled = styled(InputNumber)`\n  width: 62px\n`\nconst Text = styled(Typography)`\n  white-space: pre-line;\n`\nfunction precisionRound(number, precision = 8) {\n  let factor = Math.pow(10, precision);\n  return Math.round(number * factor) / factor;\n}\n\nexport function FormSwitch(props) {\n  return (\n    <Flex justify={justify} align={align}>\n      <div style={{minWidth: inputWidth, display: 'block'}}>\n        <Form.Item name={[conditionalType(props), props.name]} valuePropName='checked'>\n          <Switch\n            checkedChildren={<CheckOutlined />}\n            unCheckedChildren={<CloseOutlined />}\n            disabled={props.disabled}\n            defaultChecked={true}\n          />\n        </Form.Item>\n      </div>\n      <Text>{props.text}</Text>\n    </Flex>\n  )\n}\n\nexport function FormNumberPercent(props) {\n  return (\n    <div style={{minWidth: inputWidth, display: 'block'}}>\n      <Form.Item name={[conditionalType(props), props.name]}>\n        <InputNumberStyled\n          size='small'\n          controls={false}\n          formatter={(value) => `${value}%`}\n          parser={(value) => value.replace('%', '')}\n        />\n      </Form.Item>\n    </div>\n  )\n}\n\nexport function FormSlider(props) {\n  const [inputValue, setInputValue] = useState(1);\n  const onChange = (newValue) => {\n    setInputValue(newValue);\n  };\n\n  let multiplier = (props.percent ? 100 : 1)\n  let step = props.percent ? 0.01 : 1\n  let symbol = props.percent ? '%' : ''\n\n  return (\n    <Flex vertical gap={5} style={{marginBottom: 0}}>\n      <Flex justify={justify} align={align}>\n        <div style={{minWidth: inputWidth, display: 'block'}}>\n          <Form.Item name={[conditionalType(props), props.name]}>\n            <InputNumber\n              min={props.min}\n              max={props.max}\n              controls={false}\n              size='small'\n              style={{\n                width: numberWidth,\n              }}\n              parser={(value) => value == null || value == '' ? 0 : precisionRound(value / multiplier) }\n              formatter={(value) => `${precisionRound(value * multiplier)}`}\n              addonAfter={symbol}\n              onChange={onChange}\n            />\n          </Form.Item>\n        </div>\n        <Text>{props.text}</Text>\n      </Flex>\n      <Flex align='center' justify='flex-start' gap={10} style={{height: 14}}>\n        <Form.Item name={[conditionalType(props), props.name]}>\n          <Slider\n            min={props.min}\n            max={props.max}\n            step={step}\n            value={typeof inputValue === 'number' ? inputValue : 0}\n            style={{\n              minWidth: sliderWidth,\n              marginTop: 0,\n              marginBottom: 0,\n              marginLeft: 1\n            }}\n            tooltip={{\n              formatter: (value) => `${precisionRound(value * multiplier)}${symbol}`\n            }}\n            onChange={onChange}\n          />\n        </Form.Item>\n        <Text style={{minWidth: 20, marginBottom: 2, textAlign: 'center'}}>{`${precisionRound(props.max * multiplier)}${symbol}`}</Text>\n      </Flex>\n    </Flex>\n  )\n}\n\nfunction conditionalType(props) {\n  if (props.lc) {\n    return 'lightConeConditionals'\n  }\n  return 'characterConditionals'\n}","import {Flex, Form, InputNumber, Slider, Switch, Typography} from \"antd\";\nimport React from \"react\";\nimport {HeaderText} from \"../components/HeaderText\";\nimport { Constants } from './constants'\nimport {FormSlider, FormSwitch} from \"../components/optimizerTab/FormConditionalInputs\";\nimport {TooltipImage} from \"../components/TooltipImage\";\n\nlet Stats = Constants.Stats\n\nlet precisionRound = (number, precision = 8) => {\n  let factor = Math.pow(10, precision);\n  return Math.round(number * factor) / factor;\n}\n\nconst ASHBLAZING_ATK_STACK = 0.06\n// Remove the ashblazing set atk bonus only when calc-ing fua attacks\nfunction calculateAshblazingSet(c, request, hitMulti) {\n  let enabled = p4(c.sets.TheAshblazingGrandDuke)\n  let valueTheAshblazingGrandDuke = request.setConditionals[Constants.Sets.TheAshblazingGrandDuke][1]\n  let ashblazingAtk = 0.06*valueTheAshblazingGrandDuke*enabled*c.baseAtk * enabled\n  let ashblazingMulti = hitMulti * enabled * c.baseAtk\n\n  return {\n    ashblazingMulti,\n    ashblazingAtk\n  }\n}\n\nconst characterOptionMapping = {\n  1212: jingliu,\n  1302: argenti,\n  1008: arlan,\n  1009: asta,\n  1211: bailu,\n  1205: blade,\n  1101: bronya,\n  1107: clara,\n  1002: danheng,\n  1208: fuxuan,\n  1104: gepard,\n  1210: guinaifen,\n  1215: hanya,\n  1013: herta,\n  1003: himeko,\n  1109: hook,\n  1217: huohuo,\n  1213: imbibitorlunae, // Simplified stacking logic, revisit\n  1204: jingyuan,\n  1005: kafka,\n  1111: luka,\n  1203: luocha,\n  1110: lynx,\n  1001: march7th,\n  1105: natasha,\n  1106: pela,\n  1201: qingque,\n  1108: sampo,\n  1102: seele,\n  1103: serval,\n  1006: silverwolf,\n  1206: sushang,\n  1202: tingyun,\n  1112: topaz,\n  8001: physicaltrailblazer,\n  8002: physicaltrailblazer,\n  8003: firetrailblazer,\n  8004: firetrailblazer,\n  1004: welt,\n  1209: yanqing,\n  1207: yukong,\n  1303: ruanmei,\n  1305: drratio,\n  1214: xueyi,\n}\n\n// TODO profile & convert to array for performance?\nconst baseComputedStatsObject = {\n  [Stats.HP_P]: 0,\n  [Stats.ATK_P]: 0,\n  [Stats.DEF_P]: 0,\n  [Stats.SPD_P]: 0,\n  [Stats.HP]: 0,\n  [Stats.ATK]: 0,\n  [Stats.DEF]: 0,\n  [Stats.SPD]: 0,\n  [Stats.CD]: 0,\n  [Stats.CR]: 0,\n  [Stats.EHR]: 0,\n  [Stats.RES]: 0,\n  [Stats.BE]: 0,\n  [Stats.ERR]: 0,\n  [Stats.OHB]: 0,\n\n  ELEMENTAL_DMG: 0,\n  DEF_SHRED: 0,\n  DMG_TAKEN_MULTI: 0,\n  ALL_DMG_MULTI: 0,\n  RES_PEN: 0,\n  DMG_RED_MULTI: 1,\n\n  BASIC_CR_BOOST: 0,\n  SKILL_CR_BOOST: 0,\n  ULT_CR_BOOST: 0,\n  FUA_CR_BOOST: 0,\n\n  BASIC_CD_BOOST: 0,\n  SKILL_CD_BOOST: 0,\n  ULT_CD_BOOST: 0,\n  FUA_CD_BOOST: 0,\n\n  BASIC_SCALING: 0,\n  SKILL_SCALING: 0,\n  ULT_SCALING: 0,\n  FUA_SCALING: 0,\n  DOT_SCALING: 0,\n\n  BASIC_BOOST: 0,\n  SKILL_BOOST: 0,\n  ULT_BOOST: 0,\n  FUA_BOOST: 0,\n  DOT_BOOST: 0,\n\n  BASIC_VULNERABILITY: 0,\n  SKILL_VULNERABILITY: 0,\n  ULT_VULNERABILITY: 0,\n  FUA_VULNERABILITY: 0,\n  DOT_VULNERABILITY: 0,\n\n  BASIC_DMG: 0,\n  SKILL_DMG: 0,\n  ULT_DMG: 0,\n  FUA_DMG: 0,\n  DOT_DMG: 0,\n\n  BASIC_DEF_PEN: 0,\n  SKILL_DEF_PEN: 0,\n  ULT_DEF_PEN: 0,\n  FUA_DEF_PEN: 0,\n  DOT_DEF_PEN: 0,\n\n  BASIC_RES_PEN: 0,\n  SKILL_RES_PEN: 0,\n  ULT_RES_PEN: 0,\n  FUA_RES_PEN: 0,\n  DOT_RES_PEN: 0,\n}\n\nfunction xueyi(e) {\n  let ultBoostMax = ult(e, 0.60, 0.648)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.40, 1.54)\n  let ultScaling = ult(e, 2.50, 2.70)\n  let fuaScaling = talent(e, 0.90, 0.99)\n\n  let hitMultiByFuaHits = {\n    0: 0,\n    1: ASHBLAZING_ATK_STACK * (1*1/1), // 0.06\n    2: ASHBLAZING_ATK_STACK * (1*1/2 + 2*1/2), // 0.09\n    3: ASHBLAZING_ATK_STACK * (1*1/3 + 2*1/3 + 3*1/3) // 0.12\n  }\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='enemyToughness50' text='Enemy toughness >= 50%'/>\n        <FormSlider name='toughnessReductionDmgBoost' text='Ult toughness based dmg boost' min={0} max={ultBoostMax} percent />\n        <FormSlider name='fuaHits' text='Fua hits' min={0} max={3} />\n        <FormSwitch name='e2BeBuff' text='E2 break effect buff'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyToughness50: true,\n      toughnessReductionDmgBoost: ultBoostMax,\n      fuaHits: 3,\n      e2BeBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.BE] += (e >= 2 && r.e2BeBuff) ? 0.40 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += fuaScaling * r.fuaHits\n\n      // Boost\n      x.ULT_BOOST += (r.enemyToughness50) ? 0.10 : 0\n      x.ULT_BOOST += r.toughnessReductionDmgBoost\n      x.FUA_BOOST += (e >= 1) ? 0.40 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.ELEMENTAL_DMG += Math.min(2.40, x[Stats.BE])\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n\n      let hitMulti = hitMultiByFuaHits[r.fuaHits]\n      let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n    }\n  }\n}\n\nfunction drratio(e) {\n  let maxDebuffStacksMax = (e >= 1) ? 10 : 6\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.50, 1.65)\n  let ultScaling = ult(e, 2.40, 2.592)\n  let fuaScaling = talent(e, 2.70, 2.97)\n\n  function e2FuaRatio(procs, fua = true) {\n    return fua\n      ? fuaScaling / (fuaScaling + 0.20 * procs) // for fua dmg\n      : 0.20 / (fuaScaling + 0.20 * procs) // for each e2 proc\n  }\n\n  let baseHitMulti = ASHBLAZING_ATK_STACK * (1*1/1)\n  let fuaMultiByDebuffs = {\n    0: ASHBLAZING_ATK_STACK * (1*1/1), // 0\n    1: ASHBLAZING_ATK_STACK * (1*e2FuaRatio(1, true) + 2*e2FuaRatio(1, false)), // 2\n    2: ASHBLAZING_ATK_STACK * (1*e2FuaRatio(2, true) + 5*e2FuaRatio(2, false)), // 2 + 3\n    3: ASHBLAZING_ATK_STACK * (1*e2FuaRatio(3, true) + 9*e2FuaRatio(3, false)), // 2 + 3 + 4\n    4: ASHBLAZING_ATK_STACK * (1*e2FuaRatio(4, true) + 14*e2FuaRatio(4, false)), // 2 + 3 + 4 + 5\n  }\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSlider name='enemyDebuffStacks' text='Enemy debuff stacks' min={0} max={maxDebuffStacksMax} />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyDebuffStacks: maxDebuffStacksMax,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += fuaScaling\n\n      // Boost\n      x.SKILL_CR_BOOST += r.enemyDebuffStacks * 0.025\n      x.SKILL_CD_BOOST += r.enemyDebuffStacks * 0.05\n      x.ELEMENTAL_DMG += (r.enemyDebuffStacks >= 3) ? Math.min(0.50, r.enemyDebuffStacks * 0.10) : 0\n      x.FUA_BOOST += (e >= 6) ? 0.50 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      if (e >= 2) {\n        let hitMulti = fuaMultiByDebuffs[Math.min(4, r.enemyDebuffStacks)]\n        let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n        x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n      } else {\n        let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, baseHitMulti)\n        x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n      }\n    }\n  }\n}\n\nfunction ruanmei(e) {\n  let fieldResPenValue = ult(e, 0.25, 0.27)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 0, 0)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='ultFieldActive' text='Ult field active'/>\n        <FormSwitch name='e4BeBuff' text='E4 break effect buff'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      ultFieldActive: true,\n      e4BeBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.BE] += 0.20\n      x[Stats.BE] += (e >= 4 && r.e4BeBuff) ? 1.00 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.RES_PEN += (r.ultFieldActive) ? fieldResPenValue : 0\n      x.DEF_SHRED += (e >= 1 && r.ultFieldActive) ? 0.20 : 0\n      x[Stats.ATK_P] += (e >= 2 && request.enemyWeaknessBroken) ? 0.40 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      let beOver = precisionRound((x[Stats.BE] * 100 - 120) / 10)\n      x.ELEMENTAL_DMG += Math.floor(Math.max(0, beOver)) * 0.06\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction yukong(e) {\n  let skillAtkBuffValue = skill(e, 0.80, 0.88)\n  let ultCdBuffValue = skill(e, 0.65, 0.702)\n  let ultCrBuffValue = skill(e, 0.28, 0.294)\n  let talentAtkScaling = talent(e, 0.80, 0.88)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 3.80, 4.104)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='roaringBowstrings' text='Roaring bowstrings'/>\n        <FormSwitch name='ultBuff' text='Ult buff'/>\n        <FormSwitch name='initialSpeedBuff' text='Initial speed buff'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      roaringBowstringsActive: true,\n      ultBuff: true,\n      initialSpeedBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (r.roaringBowstrings) ? skillAtkBuffValue : 0\n      x[Stats.CR] += (r.ultBuff && r.roaringBowstrings) ? ultCrBuffValue : 0\n      x[Stats.CD] += (r.ultBuff && r.roaringBowstrings) ? ultCdBuffValue : 0\n      x[Stats.SPD_P] += (r.initialSpeedBuff) ? 0.10 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.BASIC_SCALING += talentAtkScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.ELEMENTAL_DMG += 0.12\n      x.ELEMENTAL_DMG += (e >= 4 && r.roaringBowstrings) ? 0.30 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction yanqing(e) {\n  let ultCdBuffValue = ult(e, 0.50, 0.54)\n  let talentCdBuffValue = ult(e, 0.30, 0.33)\n  let talentCrBuffValue = ult(e, 0.20, 0.21)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.20, 2.42)\n  let ultScaling = ult(e, 3.50, 3.78)\n  let fuaScaling = talent(e, 0.50, 0.55)\n\n  let hitMulti = ASHBLAZING_ATK_STACK * (1*1/1)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='ultBuffActive' text='Ult buff active'/>\n        <FormSwitch name='soulsteelBuffActive' text='Soulsteel buff active'/>\n        <FormSwitch name='critSpdBuff' text='Crit spd buff'/>\n        <FormSwitch name='e1TargetFrozen' text='E1 target frozen'/>\n        <FormSwitch name='e4CurrentHp80' text='E4 self HP >= 80%'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      ultBuffActive: true,\n      soulsteelBuffActive: true,\n      critSpdBuff: true,\n      e1TargetFrozen: true,\n      e4CurrentHp80: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CR] += (r.ultBuffActive) ? 0.60 : 0\n      x[Stats.CD] += (r.ultBuffActive && r.soulsteelBuffActive) ? ultCdBuffValue : 0\n      x[Stats.CR] += (r.soulsteelBuffActive) ? talentCrBuffValue : 0\n      x[Stats.CD] += (r.soulsteelBuffActive) ? talentCdBuffValue : 0\n      x[Stats.RES] += (r.soulsteelBuffActive) ? 0.20 : 0\n      x[Stats.SPD] += (r.critSpdBuff) ? 0.10 : 0\n      x[Stats.ERR] += (e >= 2 && r.soulsteelBuffActive) ? 0.10 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += fuaScaling\n\n      x.BASIC_SCALING += (request.enemyElementalWeak) ? 0.30 : 0\n      x.SKILL_SCALING += (request.enemyElementalWeak) ? 0.30 : 0\n      x.ULT_SCALING += (request.enemyElementalWeak) ? 0.30 : 0\n      x.FUA_SCALING += (request.enemyElementalWeak) ? 0.30 : 0\n\n      x.BASIC_SCALING += (e >= 1 && r.e1TargetFrozen) ? 0.60 : 0\n      x.SKILL_SCALING += (e >= 1 && r.e1TargetFrozen) ? 0.60 : 0\n      x.ULT_SCALING += (e >= 1 && r.e1TargetFrozen) ? 0.60 : 0\n      x.FUA_SCALING += (e >= 1 && r.e1TargetFrozen) ? 0.60 : 0\n\n      // Boost\n      x.RES_PEN += (e >= 4 && r.e4CurrentHp80) ? 0.12 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n\n      let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n    }\n  }\n}\n\nfunction welt(e) {\n  let skillExtraHitsMax = (e >= 6) ? 3 : 2\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 0.72, 0.792)\n  let ultScaling = ult(e, 1.50, 1.62)\n  let talentScaling = talent(e, 0.60, 0.66)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='enemyDmgTakenDebuff' text='Enemy dmg taken debuff'/>\n        <FormSwitch name='enemySlowed' text='Enemy slowed'/>\n        <FormSlider name='skillExtraHits' text='Skill extra hits' min={0} max={skillExtraHitsMax} />\n        <FormSwitch name='e1EnhancedState' text='E1 enhanced state'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      enemySlowed: true,\n      enemyDmgTakenDebuff: true,\n      skillExtraHits: skillExtraHitsMax,\n      e1EnhancedState: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      x.BASIC_SCALING += (r.enemySlowed) ? talentScaling : 0\n      x.SKILL_SCALING += (r.enemySlowed) ? talentScaling : 0\n      x.ULT_SCALING += (r.enemySlowed) ? talentScaling : 0\n\n      x.BASIC_SCALING += (e >= 1 && r.e1EnhancedState) ? 0.50 * basicScaling : 0\n      x.SKILL_SCALING += (e >= 1 && r.e1EnhancedState) ? 0.80 * skillScaling : 0\n\n      x.SKILL_SCALING += r.skillExtraHits * skillScaling\n\n      // Boost\n      x.ELEMENTAL_DMG += (request.enemyWeaknessBroken) ? 0.20 : 0\n      x.DMG_TAKEN_MULTI += (r.enemyDmgTakenDebuff) ? 0.12 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction firetrailblazer(e) {\n  let skillDamageReductionValue = skill(e, 0.50, 0.52)\n\n  let basicAtkScaling = basic(e, 1.00, 1.10)\n  let basicDefScaling = (e >= 1) ? 0.25 : 0\n  let basicEnhancedAtkScaling = basic(e, 1.35, 1.463)\n  let basicEnhancedDefScaling = (e >= 1) ? 0.50 : 0\n  let skillScaling = skill(e, 0, 0)\n  let ultAtkScaling = ult(e, 1.00, 1.10)\n  let ultDefScaling = ult(e, 1.50, 1.65)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='enhancedBasic' text='Enhanced basic'/>\n        <FormSwitch name='skillActive' text='Skill active'/>\n        <FormSwitch name='shieldActive' text='Shield active'/>\n        <FormSlider name='e6DefStacks' text='E6 def stacks' min={0} max={3}/>\n      </Flex>\n    ),\n    defaults: () => ({\n      enhancedBasic: true,\n      skillActive: true,\n      shieldActive: true,\n      e6DefStacks: 3,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.DEF_P] += (e >= 6) ? r.e6DefStacks * 0.10 : 0\n      x[Stats.ATK_P] += (r.shieldActive) ? 0.15 : 0\n\n      // Scaling\n      x.SKILL_SCALING += skillScaling\n\n      // Boost\n      x.DMG_RED_MULTI *= (r.skillActive) ? (1 - skillDamageReductionValue) : 1\n      x.DMG_RED_MULTI *= (r.skillActive) ? (1 - 0.15) : 1\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      if (r.enhancedBasic) {\n        x.BASIC_DMG += basicEnhancedAtkScaling * x[Stats.ATK]\n        x.BASIC_DMG += basicEnhancedDefScaling * x[Stats.DEF]\n      } else {\n        x.BASIC_DMG += basicAtkScaling * x[Stats.ATK]\n        x.BASIC_DMG += basicDefScaling * x[Stats.DEF]\n      }\n\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += ultAtkScaling * x[Stats.ATK]\n      x.ULT_DMG += ultDefScaling * x[Stats.DEF]\n    }\n  }\n}\n\nfunction physicaltrailblazer(e) {\n  let talentAtkScalingValue = talent(e, 0.20, 0.22)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.25, 1.375)\n  let ultScaling = ult(e, 4.5, 4.80)\n  let ultEnhancedScaling = ult(e, 2.70, 2.88)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='enhancedUlt' text='Aoe ult'/>\n        <FormSlider name='talentStacks' text='Talent stacks' min={0} max={2} />\n      </Flex>\n    ),\n    defaults: () => ({\n      enhancedUlt: true,\n      talentStacks: 2,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += r.talentStacks * talentAtkScalingValue\n      x[Stats.DEF_P] += r.talentStacks * 0.10\n      x[Stats.CR] += (request.enemyWeaknessBroken) ? 0.25 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += (r.enhancedUlt) ? ultEnhancedScaling : ultScaling\n\n      // Boost\n      x.SKILL_BOOST += 0.25\n      x.ULT_BOOST += (r.enhancedUlt) ? 0.25 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction topaz(e) {\n  let proofOfDebtFuaVulnerability = skill(e, 0.50, 0.55)\n  let enhancedStateFuaScalingBoost = ult(e, 1.50, 1.65)\n  let enhancedStateFuaCdBoost = ult(e, 0.25, 0.275)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.50, 1.65)\n  let ultScaling = ult(e, 0, 0)\n  let fuaScaling = talent(e, 1.50, 1.65)\n\n  // 0.06\n  let basicHitCountMulti = ASHBLAZING_ATK_STACK *\n    (1*1/1)\n  // 0.18\n  let fuaHitCountMulti = ASHBLAZING_ATK_STACK *\n    (1*1/7 + 2*1/7 + 3*1/7 + 4*1/7 + 5*1/7 + 6*1/7 + 7*1/7)\n  // 0.252\n  let fuaEnhancedHitCountMulti = ASHBLAZING_ATK_STACK *\n    (1*1/10 + 2*1/10 + 3*1/10 + 4*1/10 + 5*1/10 + 6*1/10 + 7*1/10 + 8*3/10)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='enemyProofOfDebtDebuff' text='Target proof of debt debuff'/>\n        <FormSwitch name='numbyEnhancedState' text='Numby enhanced state'/>\n        <FormSlider name='e1DebtorStacks' text='E1 debtor stacks' min={0} max={2} />\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyProofOfDebtDebuff: true,\n      numbyEnhancedState: true,\n      e1DebtorStacks: 2,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.SKILL_SCALING += (r.numbyEnhancedState) ? enhancedStateFuaScalingBoost : 0\n      x.FUA_SCALING += fuaScaling\n      x.FUA_SCALING += (r.numbyEnhancedState) ? enhancedStateFuaScalingBoost : 0\n\n      // Boost\n      x.FUA_VULNERABILITY += (r.enemyProofOfDebtDebuff) ? proofOfDebtFuaVulnerability : 0\n      x.ELEMENTAL_DMG += (request.enemyElementalWeak) ? 0.15 : 0\n      x.FUA_CD_BOOST += (e >= 1) ? 0.25 * r.e1DebtorStacks : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      let hitMulti = (r.numbyEnhancedState) ? fuaEnhancedHitCountMulti : fuaHitCountMulti\n      let ashblazingFuaData = calculateAshblazingSet(c, request, hitMulti)\n      let ashblazingBasicData = calculateAshblazingSet(c, request, basicHitCountMulti)\n\n\n      x.BASIC_DMG += x.BASIC_SCALING * (x[Stats.ATK] - ashblazingBasicData.ashblazingAtk + ashblazingBasicData.ashblazingMulti)\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingFuaData.ashblazingAtk + ashblazingFuaData.ashblazingMulti)\n      x.SKILL_DMG = x.FUA_DMG\n\n      // Copy fua boosts to skill/basic\n      x.SKILL_BOOST = x.FUA_BOOST\n      x.SKILL_VULNERABILITY = x.FUA_VULNERABILITY\n      x.SKILL_DEF_PEN = x.FUA_DEF_PEN\n      x.SKILL_CD_BOOST = x.FUA_CD_BOOST\n      x.SKILL_CR_BOOST = x.FUA_CR_BOOST\n\n      x.BASIC_BOOST = x.FUA_BOOST\n      x.BASIC_VULNERABILITY = x.FUA_VULNERABILITY\n      x.BASIC_DEF_PEN = x.FUA_DEF_PEN\n      x.BASIC_CD_BOOST = x.FUA_CD_BOOST\n      x.BASIC_CR_BOOST = x.FUA_CR_BOOST\n\n      // Her ult buff only applies to the skill/fua not basic\n      x.FUA_CD_BOOST += (r.numbyEnhancedState) ? enhancedStateFuaCdBoost : 0\n      x.SKILL_CD_BOOST += (r.numbyEnhancedState) ? enhancedStateFuaCdBoost : 0\n\n      // Her e6 only applies to skill/fua not basic\n      x.SKILL_RES_PEN += (e >= 6) ? 0.10 : 0\n      x.FUA_RES_PEN += (e >= 6) ? 0.10 : 0\n    }\n  }\n}\n\nfunction tingyun(e) {\n  let skillAtkBoostScaling = skill(e, 0.50, 0.55) + ((e >= 4) ? 0.20 : 0)\n  let skillAtkBoostMax = skill(e, 0.25, 0.27)\n  let ultDmgBoost = ult(e, 0.50, 0.56)\n  let talentScaling = talent(e, 0.60, 0.66) + ((e >= 4) ? 0.20 : 0)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 0, 0)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='benedictionBuff' text='Benediction buff'/>\n        <FormSwitch name='skillSpdBuff' text='Skill spd buff'/>\n        <FormSwitch name='ultSpdBuff' text='Ult spd buff'/>\n        <FormSwitch name='ultDmgBuff' text='Ult dmg buff'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      benedictionBuff: false,\n      skillSpdBuff: false,\n      ultSpdBuff: false,\n      ultDmgBuff: false,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.SPD] += (e >= 1 && r.ultSpdBuff) ? 0.20 : 0\n      x[Stats.SPD] += (r.skillSpdBuff) ? 0.20 : 0\n      x[Stats.ATK_P] += (r.benedictionBuff) ? skillAtkBoostMax : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.BASIC_BOOST += 0.40\n      x.ELEMENTAL_DMG += (r.ultDmgBuff) ? ultDmgBoost : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction sushang(e) {\n  let talentSpdBuffValue = talent(e, 0.20, 0.21)\n  let ultBuffedAtk = ult(e, 0.30, 0.324)\n  let talentSpdBuffStacksMax = (e >= 6) ? 2 : 1\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.10, 2.31)\n  let skillExtraHitScaling = skill(e, 1.00, 1.10)\n  let ultScaling = ult(e, 3.20, 3.456)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='ultBuffedState' text='Ult buffed state'/>\n        <FormSwitch name='e2DmgReductionBuff' text='E2 dmg reduction'/>\n        <FormSlider name='skillExtraHits' text='Skill extra hits' min={0} max={3} />\n        <FormSlider name='skillTriggerStacks' text='Skill trigger stacks' min={0} max={10} />\n        <FormSlider name='talentSpdBuffStacks' text='Talent spd buff stacks' min={0} max={talentSpdBuffStacksMax} />\n      </Flex>\n    ),\n    defaults: () => ({\n      ultBuffedState: true,\n      e2DmgReductionBuff: true,\n      skillExtraHits: 3,\n      skillTriggerStacks: 10,\n      talentSpdBuffStacks: talentSpdBuffStacksMax,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.BE] += (e >= 4) ? 0.40 : 0\n      x[Stats.ATK_P] += (r.ultBuffedState) ? ultBuffedAtk : 0\n      x[Stats.SPD_P] += (r.talentSpdBuffStacks) * talentSpdBuffValue\n\n      // Scaling\n      // Trace only affects stance damage not skill damage - boost this based on proportion of stance : total skill dmg\n      let originalSkillScaling = skillScaling\n      let stanceSkillScaling = 0\n      stanceSkillScaling += (r.skillExtraHits >= 1) ? skillExtraHitScaling : 0\n      stanceSkillScaling += (r.ultBuffedState && r.skillExtraHits >= 2) ? skillExtraHitScaling * 0.5 : 0\n      stanceSkillScaling += (r.ultBuffedState && r.skillExtraHits >= 3) ? skillExtraHitScaling * 0.5 : 0\n      let stanceScalingProportion = stanceSkillScaling / (stanceSkillScaling + originalSkillScaling)\n\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += originalSkillScaling\n      x.SKILL_SCALING += stanceSkillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.SKILL_BOOST += r.skillTriggerStacks * 0.025 * stanceScalingProportion\n      x.DMG_RED_MULTI *= (e >= 2 && r.e2DmgReductionBuff) ? (1 - 0.20) : 1\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction silverwolf(e) {\n  let skillResShredValue = skill(e, 0.10, 0.105)\n  let skillDefShredBufValue = skill(e, 0.08, 0.088)\n  let ultDefShredValue = ult(e, 0.45, 0.468)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.96, 2.156)\n  let ultScaling = ult(e, 3.80, 4.104)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='skillResShredDebuff' text='Skill res shred'/>\n        <FormSwitch name='skillDefShredDebuff' text='Skill def shred'/>\n        <FormSwitch name='ultDefShredDebuff' text='Ult def shred'/>\n        <FormSlider name='targetDebuffs' text='Target debuffs' min={0} max={5} />\n      </Flex>\n    ),\n    defaults: () => ({\n      skillResShredDebuff: true,\n      skillDefShredDebuff: true,\n      ultDefShredDebuff: true,\n      targetDebuffs: 5,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.ULT_SCALING += (e >= 4) ? r.targetDebuffs * 0.20 : 0\n\n      // Boost\n      x.RES_PEN += (r.skillResShredDebuff) ? skillResShredValue : 0\n      x.RES_PEN += (r.skillResShredDebuff && r.targetDebuffs >= 3 ) ? 0.03 : 0\n      x.DEF_SHRED += (r.skillDefShredDebuff) ? skillDefShredBufValue : 0\n      x.DEF_SHRED += (r.ultDefShredDebuff) ? ultDefShredValue : 0\n      x.ELEMENTAL_DMG += (e >= 6) ? r.targetDebuffs * 0.20 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction serval(e) {\n  let talentExtraDmgScaling = talent(e, 0.72, 0.792)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.40, 1.54)\n  let ultScaling = ult(e, 1.80, 1.944)\n  let dotScaling = skill(e, 1.04, 1.144)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='targetShocked' text='Target shocked'/>\n        <FormSwitch name='enemyDefeatedBuff' text='Enemy killed buff'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      targetShocked: true,\n      enemyDefeatedBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (r.enemyDefeatedBuff) ? 0.20 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.DOT_SCALING += dotScaling\n\n      x.BASIC_SCALING += (r.targetShocked) ? talentExtraDmgScaling : 0\n      x.SKILL_SCALING += (r.targetShocked) ? talentExtraDmgScaling : 0\n      x.ULT_SCALING += (r.targetShocked) ? talentExtraDmgScaling : 0\n\n      // Boost\n      x.ELEMENTAL_DMG += (e >= 6 && r.targetShocked) ? 0.30 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction seele(e) {\n  let buffedStateDmgBuff = talent(e, 0.80, 0.88)\n  let speedBoostStacksMax = (e >= 2 ? 2 : 1)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.20, 2.42)\n  let ultScaling = ult(e, 4.25, 4.59)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='buffedState' text='Buffed state'/>\n        <FormSlider name='speedBoostStacks' text='Speed boost stacks' min={0} max={speedBoostStacksMax} />\n        <FormSwitch name='e6UltTargetDebuff' text='E6 ult debuff'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      buffedState: true,\n      speedBoostStacks: speedBoostStacksMax,\n      e6UltTargetDebuff: true\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CR] += (e >= 1 && request.enemyHpPercent <= 0.80) ? 0.15 : 0\n      x[Stats.SPD_P] += 0.25 * r.speedBoostStacks\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.ELEMENTAL_DMG += (r.buffedState) ? buffedStateDmgBuff : 0\n      x.RES_PEN += (r.buffedState) ? 0.20 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n\n      x.BASIC_DMG += (e >= 6 && r.e6UltTargetDebuff) ? 0.15 * x.ULT_DMG : 0\n      x.SKILL_DMG += (e >= 6 && r.e6UltTargetDebuff) ? 0.15 * x.ULT_DMG : 0\n      x.ULT_DMG += (e >= 6 && r.e6UltTargetDebuff) ? 0.15 * x.ULT_DMG : 0\n    }\n  }\n}\n\nfunction sampo(e) {\n  let dotVulnerabilityValue = ult(e, 0.30, 0.32)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 0.56, 0.616)\n  let ultScaling = ult(e, 1.60, 1.728)\n  let dotScaling = talent(e, 0.52, 0.572)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='targetDotTakenDebuff' text='Ult dot taken debuff'/>\n        <FormSlider name='skillExtraHits' text='Skill extra hits' min={0} max={4} />\n        <FormSwitch name='targetWindShear' text='Target has wind shear'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      targetDotTakenDebuff: true,\n      skillExtraHits: 4,\n      targetWindShear: true\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.SKILL_SCALING += (r.skillExtraHits) * skillScaling\n      x.ULT_SCALING += ultScaling\n      x.DOT_SCALING += dotScaling\n      x.DOT_SCALING += (e >= 6) ? 0.15 : 0\n\n      // Boost\n      x.DOT_VULNERABILITY += (r.targetDotTakenDebuff) ? dotVulnerabilityValue : 0\n      x.DMG_RED_MULTI *= (r.targetWindShear) ? (1 - 0.15) : 1\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction qingque(e) {\n  let skillStackDmg = skill(e, 0.38, 0.408)\n  let talentAtkBuff = talent(e, 0.72, 0.792)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let basicEnhancedScaling = basic(e, 2.40, 2.64)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 2.00, 2.16)\n\n  let hitMultiByTargetsBlast = {\n    1: ASHBLAZING_ATK_STACK * (1*1/1), // 0.06\n    3: ASHBLAZING_ATK_STACK * (2*1/1), // 0.12\n    5: ASHBLAZING_ATK_STACK * (2*1/1)  // 0.12\n  }\n\n  let hitMultiSingle = ASHBLAZING_ATK_STACK * (1*1/1)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='basicEnhanced' text='Basic enhanced'/>\n        <FormSwitch name='basicEnhancedSpdBuff' text='Basic enhanced spd buff'/>\n        <FormSlider name='skillDmgIncreaseStacks' text='Skill dmg stacks' min={0} max={4} />\n      </Flex>\n    ),\n    defaults: () => ({\n      basicEnhanced: true,\n      basicEnhancedSpdBuff: true,\n      skillDmgIncreaseStacks: 4,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (r.basicEnhanced) ? talentAtkBuff : 0\n      x[Stats.SPD_P] += (r.basicEnhancedSpdBuff) ? 0.10 : 0\n\n      // Scaling\n      x.BASIC_SCALING += (r.basicEnhanced) ? basicEnhancedScaling : basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += (e >= 4) ? x.BASIC_SCALING : 0\n\n      // Boost\n      x.ELEMENTAL_DMG += r.skillDmgIncreaseStacks * skillStackDmg\n      x.ULT_BOOST += (e >= 1) ? 0.10 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n\n      if (r.basicEnhanced) {\n        let hitMulti = hitMultiByTargetsBlast[request.enemyCount]\n        let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n        x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n      } else {\n        let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMultiSingle)\n        x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n      }\n    }\n  }\n}\n\nfunction pela(e) {\n  let ultDefPenValue = ult(e, 0.40, 0.42)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.10, 2.31)\n  let ultScaling = ult(e, 1.00, 1.08)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='enemyDebuffed' text='Enemy debuffed'/>\n        <FormSwitch name='skillRemovedBuff' text='Skill removed buff'/>\n        <FormSwitch name='ultDefPenDebuff' text='Ult def pen debuff'/>\n        <FormSwitch name='e4SkillResShred' text='E4 skill res shred'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyDebuffed: true,\n      skillRemovedBuff: true,\n      ultDefPenDebuff: true,\n      e4SkillResShred: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.EHR] += 0.10\n      x[Stats.SPD_P] += (e >= 2 && r.skillRemovedBuff) ? 0.10 : 0\n      x[Stats.SPD_P] += (e >= 2 && r.skillRemovedBuff) ? 0.10 : 0\n      x[Stats.SPD_P] += (e >= 2 && r.skillRemovedBuff) ? 0.10 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.BASIC_BOOST += (r.skillRemovedBuff) ? 0.20 : 0\n      x.SKILL_BOOST += (r.skillRemovedBuff) ? 0.20 : 0\n      x.ULT_BOOST += (r.skillRemovedBuff) ? 0.20 : 0\n\n      x.RES_PEN += (e >= 4 && r.e4SkillResShred) ? 0.12 : 0\n      x.DEF_SHRED += (r.ultDefPenDebuff) ? ultDefPenValue : 0\n\n      x.ELEMENTAL_DMG += (r.enemyDebuffed) ? 0.20 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n\n      x.BASIC_DMG += (e >= 6) ? 0.40 * x[Stats.ATK] : 0\n      x.SKILL_DMG += (e >= 6) ? 0.40 * x[Stats.ATK] : 0\n      x.ULT_DMG += (e >= 6) ? 0.40 * x[Stats.ATK] : 0\n    }\n  }\n}\n\nfunction natasha(e) {\n  let value = (e >= 0) ? -1 : -1\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, -1, -1)\n  let ultScaling = ult(e, -1, -1)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.BASIC_DMG += (e >= 6) ? 0.40 * x[Stats.HP] : 0\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction march7th(e) {\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 1.50, 1.62)\n  let fuaScaling = talent(e, 1.00, 1.10)\n\n  let hitMulti = ASHBLAZING_ATK_STACK * (1*1/1)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += fuaScaling\n\n      // Boost\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n      x.FUA_DMG += (e >= 4) ? 0.30 * x[Stats.DEF] : 0\n    }\n  }\n}\n\nfunction lynx(e) {\n  let skillHpPercentBuff = skill(e, 0.075, 0.08)\n  let skillHpFlatBuff = skill(e, 200, 223)\n\n  let basicScaling = basic(e, 0.50, 0.55)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 0, 0)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='skillBuff' text='Skill buff'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      skillBuff: true,\n      e4TalentAtkBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.HP_P] += (r.skillBuff) ? skillHpPercentBuff : 0\n      x[Stats.HP] += (r.skillBuff) ? skillHpFlatBuff : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x[Stats.HP] += (e >= 6 && r.skillBuff) ? 0.06 * x[Stats.HP] : 0\n      x[Stats.ATK] += (e >= 4 && r.skillBuff) ? 0.03 * x[Stats.HP] : 0\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.HP]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction luocha(e) {\n  let value = (e >= 0) ? -1 : -1\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 2.00, 2.16)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='fieldActive' text='Field active'/>\n        <FormSwitch name='e6ResReduction' text='E6 res reduction'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      fieldActive: true,\n      e6ResReduction: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (r >= 1 && r.fieldActive) ? 0.20 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.RES_PEN += (e >= 6 && r.e6ResReduction) ? 0.20 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction luka(e) {\n  let basicEnhancedHitValue = basic(e, 0.20, 0.22)\n  let targetUltDebuffDmgTakenValue = ult(e, 0.20, 0.216)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let basicEnhancedScaling = basic(e, 0.20 * 3 + 0.80, 0.22 * 3 + 0.88)\n  let skillScaling = skill(e, 1.20, 1.32)\n  let ultScaling = ult(e, 3.30, 3.564)\n  let dotScaling = skill(e, 3.38, 3.718)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='basicEnhanced' text='Basic enhanced'/>\n        <FormSwitch name='targetUltDebuffed' text='Target ult debuffed'/>\n        <FormSlider name='basicEnhancedExtraHits' text='Basic extra hits' min={0} max={3} />\n        <FormSwitch name='e1TargetBleeding' text='E1 target bleeding'/>\n        <FormSlider name='e4TalentStacks' text='E4 talent stacks' min={0} max={4} />\n      </Flex>\n    ),\n    defaults: () => ({\n      basicEnhanced: true,\n      targetUltDebuffed: true,\n      e1TargetBleeding: true,\n      basicEnhancedExtraHits: 3,\n      e4TalentStacks: 4,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (e >= 4) ? r.e4TalentStacks * 0.05 : 0\n\n      // Scaling\n      x.BASIC_SCALING += (r.basicEnhanced) ? basicEnhancedScaling : basicScaling\n      x.BASIC_SCALING += (r.basicEnhanced && r.basicEnhancedExtraHits) * basicEnhancedHitValue\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.DOT_SCALING += dotScaling\n\n      // Boost\n      x.DMG_TAKEN_MULTI += (r.targetUltDebuffed) ? targetUltDebuffDmgTakenValue : 0\n      x.ELEMENTAL_DMG += (e >= 1 && r.e1TargetBleeding) ? 0.15 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction kafka(e) {\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.60, 1.76)\n  let ultScaling = ult(e, 0.80, 0.864)\n  let fuaScaling = talent(e, 1.40, 1.596)\n  let dotScaling = ult(e, 2.90, 3.183)\n\n  let hitMulti = ASHBLAZING_ATK_STACK *\n    (1*0.15 + 2*0.15 + 3*0.15 + 4*0.15 + 5*0.15 + 6*0.25)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='e1DotDmgReceivedDebuff' text='E1 dot dmg debuff'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      e1DotDmgReceivedDebuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += fuaScaling\n      x.DOT_SCALING += dotScaling\n\n      // Boost\n      x.DOT_VULNERABILITY += (e >= 1 && r.e1DotDmgReceivedDebuff) ? 0.30 : 0\n      x.DOT_BOOST += (e >= 2) ? 0.25 : 0\n      x.DOT_SCALING += (e >= 6) ? 1.56 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction jingyuan(e) {\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.00, 1.10)\n  let ultScaling = ult(e, 2.00, 2.16)\n  let fuaScaling = talent(e, 0.66, 0.726)\n\n  let hitMulti = 0\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='skillCritBuff' text='Skill cr buff'/>\n        <FormSlider name='talentHitsPerAction' text='Talent stacks' min={3} max={10} />\n        <FormSlider name='talentAttacks' text='Talent hit on target' min={0} max={10} />\n        <FormSwitch name='e2DmgBuff' text='E2 dmg buff'/>\n        <FormSlider name='e6FuaVulnerabilityStacks' text='E6 vulnerable stacks (applies to all hits)' min={0} max={3} />\n      </Flex>\n    ),\n    defaults: () => ({\n      skillCritBuff: true,\n      talentHitsPerAction: 10,\n      talentAttacks: 10,\n      e2DmgBuff: true,\n      e6FuaVulnerabilityStacks: 3\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      r.talentHitsPerAction = Math.max(r.talentHitsPerAction, r.talentAttacks)\n\n      // Stats\n      x[Stats.CR] += (r.skillCritBuff) ? 0.10 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += fuaScaling\n\n      // Boost\n      x.FUA_CD_BOOST += (r.talentHitsPerAction >= 6) ? 0.25 : 0\n      x.BASIC_BOOST += (e >= 2 && r.e2DmgBuff) ? 0.20 : 0\n      x.SKILL_BOOST += (e >= 2 && r.e2DmgBuff) ? 0.20 : 0\n      x.ULT_BOOST += (e >= 2 && r.e2DmgBuff) ? 0.20 : 0\n\n      x.FUA_VULNERABILITY += (e >= 6) ? r.e6FuaVulnerabilityStacks * 0.12 : 0\n\n      // Lightning lord calcs\n      let stacks = r.talentHitsPerAction\n      let hits = r.talentAttacks\n      let stacksPerMiss = (request.enemyCount >= 3) ? 2 : 0\n      let stacksPerHit = (request.enemyCount >= 3) ? 3 : 1\n      let stacksPreHit = (request.enemyCount >= 3) ? 2 : 1\n\n      // Calc stacks on miss\n      let ashblazingStacks = stacksPerMiss * (stacks - hits)\n\n      // Calc stacks on hit\n      ashblazingStacks += stacksPreHit\n      let atkBoostSum = 0\n      for (let i = 0; i < hits; i++) {\n        atkBoostSum += Math.min(8, ashblazingStacks) * (1/hits)\n        ashblazingStacks += stacksPerHit\n      }\n\n      hitMulti = atkBoostSum * 0.06\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n\n      let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n      x.FUA_DMG += x.FUA_SCALING * r.talentAttacks * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n    }\n  }\n}\n\nfunction imbibitorlunae(e) {\n  let righteousHeartStackMax = (e >= 1) ? 10 : 6\n  let outroarStackCdValue = skill(e, 0.12, 0.132)\n  let righteousHeartDmgValue = talent(e, 0.10, 0.11)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let basicEnhanced1Scaling = basic(e, 2.60, 2.86)\n  let basicEnhanced2Scaling = basic(e, 3.80, 4.18)\n  let basicEnhanced3Scaling = basic(e, 5.00, 5.50)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 3.00, 3.24)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSlider name='basicEnhancements' text='Basic enhancements' min={0} max={3} />\n        <FormSlider name='skillOutroarStacks' text='Outroar stacks (applied to all hits)' min={0} max={4} />\n        <FormSlider name='talentRighteousHeartStacks' text='Righteous Heart stacks (applied to all hits)' min={0} max={righteousHeartStackMax} />\n        <FormSlider name='e6ResPenStacks' text='E6 RES pen stacks' min={0} max={3} />\n      </Flex>\n    ),\n    defaults: () => ({\n      basicEnhancements: 3,\n      skillOutroarStacks: 4,\n      talentRighteousHeartStacks: righteousHeartStackMax,\n      e6ResPenStacks: 3,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CD] += (request.enemyElementalWeak) ? 0.24 : 0\n      x[Stats.CD] += r.skillOutroarStacks * outroarStackCdValue\n\n      // Scaling\n      x.BASIC_SCALING += {\n        0: basicScaling,\n        1: basicEnhanced1Scaling,\n        2: basicEnhanced2Scaling,\n        3: basicEnhanced3Scaling,\n      }[r.basicEnhancements]\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.ELEMENTAL_DMG += r.talentRighteousHeartStacks * righteousHeartDmgValue\n      x.BASIC_RES_PEN += (e >= 6 && r.basicEnhancements == 3) ? 0.20 * r.e6ResPenStacks : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction huohuo(e) {\n  let ultBuffValue = ult(e, 0.40, 0.432)\n\n  let basicScaling = basic(e, 0.50, 0.55)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 0, 0)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='ultBuff' text='Ult buff'/>\n        <FormSwitch name='skillBuff' text='Skill buff'/>\n        <FormSwitch name='e6DmgBuff' text='E6 dmg buff'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      ultBuff: true,\n      skillBuff: true,\n      e6DmgBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.SPD_P] += (e >= 1 && r.skillBuff) ? 0.12 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n\n      // Boost\n      x.ELEMENTAL_DMG += (e >= 6 && r.skillBuff) ? 0.50 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.HP]\n    }\n  }\n}\n\nfunction hook(e) {\n  let targetBurnedExtraScaling = talent(e, 1.00, 1.10)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.40, 2.64)\n  let skillEnhancedScaling = skill(e, 2.80, 3.08)\n  let ultScaling = ult(e, 4.00, 4.32)\n  let dotScaling = skill(e, 0.65, 0.715)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='enhancedSkill' text='Enhanced skill'/>\n        <FormSwitch name='targetBurned' text='Target burned'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      enhancedSkill: true,\n      targetBurned: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += (r.enhancedSkill) ? skillEnhancedScaling : skillScaling\n      x.ULT_SCALING += ultScaling\n      x.BASIC_SCALING += (r.targetBurned) ? targetBurnedExtraScaling : 0\n      x.SKILL_SCALING += (r.targetBurned) ? targetBurnedExtraScaling : 0\n      x.ULT_SCALING += (r.targetBurned) ? targetBurnedExtraScaling : 0\n      x.DOT_SCALING += dotScaling\n\n      // Boost\n      x.SKILL_BOOST += (e >= 1 && r.enhancedSkill) ? 0.20 : 0\n      x.ELEMENTAL_DMG += (e >= 6 && r.targetBurned) ? 0.20 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n    }\n  }\n}\nfunction himeko(e) {\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.00, 2.20)\n  let ultScaling = ult(e, 2.30, 2.484)\n  let fuaScaling = talent(e, 1.40, 1.54)\n  let dotScaling = 0.30\n\n  let hitMultiByTargets = {\n    1: ASHBLAZING_ATK_STACK * (1*0.20 + 2*0.20 + 3*0.20 + 4*0.40), // 0.168\n    3: ASHBLAZING_ATK_STACK * (2*0.20 + 5*0.20 + 8*0.20 + 8*0.40), // 0.372\n    5: ASHBLAZING_ATK_STACK * (3*0.20 + 8*0.20 + 8*0.20 + 8*0.40), // 0.42\n  }\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='targetBurned' text='Target burned'/>\n        <FormSwitch name='selfCurrentHp80Percent' text='Self HP >= 80%'/>\n        <FormSwitch name='e1TalentSpdBuff' text='E1 spd buff'/>\n        <FormSlider name='e6UltExtraHits' text='E6 ult extra hits' min={0} max={2} />\n      </Flex>\n    ),\n    defaults: () => ({\n      targetBurned: true,\n      selfCurrentHp80Percent: true,\n      e1TalentSpdBuff: true,\n      e6UltExtraHits: 2,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CR] += (r.selfCurrentHp80Percent) ? 0.15 : 0\n      x[Stats.SPD_P] += (e >= 1 && r.e1TalentSpdBuff) ? 0.20 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.ULT_SCALING += (e >= 6) ? r.e6UltExtraHits * ultScaling * 0.40 : 0\n      x.FUA_SCALING += fuaScaling\n      x.DOT_SCALING += dotScaling\n\n      // Boost\n      x.SKILL_BOOST += (r.targetBurned) ? 0.20 : 0\n      x.ELEMENTAL_DMG += (e >= 2 && request.enemyHpPercent <= 0.50) ? 0.15 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n\n      let hitMulti = hitMultiByTargets[request.enemyCount]\n      let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n    }\n  }\n}\n\nfunction herta(e) {\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.00, 1.10)\n  let ultScaling = ult(e, 2.00, 2.16)\n  let fuaScaling = talent(e, 0.40, 0.43)\n\n  let hitMultiByTargets = {\n    1: ASHBLAZING_ATK_STACK * (1*1/1),\n    3: ASHBLAZING_ATK_STACK * (2*1/1),\n    5: ASHBLAZING_ATK_STACK * (3*1/1)\n  }\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='techniqueBuff' text='Technique buff'/>\n        <FormSwitch name='targetFrozen' text='Target frozen'/>\n        <FormSlider name='e2TalentCritStacks' text='E2 talent crit stacks' min={0} max={5} />\n        <FormSwitch name='e6UltAtkBuff' text='E6 ult atk buff'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      techniqueBuff: true,\n      targetFrozen: true,\n      e2TalentCritStacks: 5,\n      e6UltAtkBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (r.techniqueBuff) ? 0.40 : 0\n      x[Stats.CR] += (e >= 2) ? r.e2TalentCritStacks * 0.03 : 0\n      x[Stats.ATK_P] += (e >= 6 && r.e6UltAtkBuff) ? 0.25 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.BASIC_SCALING += (e >= 1 && request.enemyHpPercent <= 0.50) ? 0.40 : 0\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += fuaScaling\n\n      x.SKILL_BOOST += (request.enemyHpPercent >= 0.50) ? 0.45 : 0\n\n      // Boost\n      x.ULT_BOOST += (r.targetFrozen) ? 0.20 : 0\n      x.FUA_BOOST += (e >= 4) ? 0.10 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n\n      let hitMulti = hitMultiByTargets[request.enemyCount]\n      let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n    }\n  }\n}\n\nfunction hanya(e) {\n  let ultSpdBuffValue = ult(e, 0.20, 0.21)\n  let ultAtkBuffValue = ult(e, 0.60, 0.648)\n  let talentDmgBoostValue = talent(e, 0.30, 0.33)\n\n  talentDmgBoostValue += (e >= 6) ? 0.10 : 0\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.40, 2.64)\n  let ultScaling = ult(e, 0, 0)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='ultBuff' text='Ult buff active'/>\n        <FormSwitch name='targetBurdenActive' text='Target burden active'/>\n        <FormSwitch name='burdenAtkBuff' text='Burden atk buff'/>\n        <FormSwitch name='e2SkillSpdBuff' text='E2 skill spd buff'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      ultBuff: true,\n      targetBurdenActive: true,\n      burdenAtkBuff: true,\n      skillSpdBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      x[Stats.ATK_P] += (r.ultBuff) ? ultAtkBuffValue : 0\n      x[Stats.ATK_P] += (r.burdenAtkBuff) ? 0.10 : 0\n      x[Stats.SPD_P] += (e >= 2 && r.e2SkillSpdBuff) ? 0.20 : 0\n\n      // Boost\n      x.ALL_DMG_MULTI = (r.targetBurdenActive) ? talentDmgBoostValue : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x[Stats.SPD] += (r.ultBuff) ? ultSpdBuffValue * x[Stats.SPD] : 0\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction guinaifen(e) {\n  let talentDebuffDmgIncreaseValue = talent(e, 0.07, 0.076)\n  let talentDebuffMax = (e >= 6) ? 4 : 3\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.20, 1.32)\n  let ultScaling = ult(e, 1.20, 1.296)\n  let dotScaling = skill(e, 2.182, 2.40)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSlider name='talentDebuffStacks' text='Talent debuff stacks' min={0} max={talentDebuffMax} />\n        <FormSwitch name='enemyBurned' text='Enemy burned'/>\n        <FormSwitch name='e2BurnMultiBoost' text='E2 burn multi boost'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      talentDebuffStacks: talentDebuffMax,\n      enemyBurned: true,\n      e2BurnMultiBoost: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.DOT_SCALING += dotScaling\n      x.DOT_SCALING += (e >= 2 && r.e2BurnMultiBoost) ? 0.40 : 0\n\n\n      // Boost\n      x.ELEMENTAL_DMG += (r.enemyBurned) ? 0.20 : 0\n      x.DMG_TAKEN_MULTI += r.talentDebuffStacks * talentDebuffDmgIncreaseValue\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction gepard(e) {\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.00, 2.20)\n  let ultScaling = ult(e, 0, 0)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.RES] += 0.20\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x[Stats.ATK] += 0.35 * x[Stats.DEF]\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction fuxuan(e) {\n  let skillCrBuffValue = skill(e, 0.12, 0.132)\n  let skillHpBuffValue = skill(e, 0.06, 0.066)\n  let talentDmgReductionValue = talent(e, 0.18, 0.196)\n\n  let basicScaling = basic(e, 0.50, 0.55)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 1.00, 1.08)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='skillActive' text='Skill active'/>\n        <FormSlider name='e6TeamHpLostPercent' text='E6 team hp lost' min={0} max={1.2} percent />\n      </Flex>\n    ),\n    defaults: () => ({\n      skillActive: true,\n      e6TeamHpLostPercent: 1.2,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CD] += (e >= 1) ? 0.30 : 0\n      x[Stats.CR] += (r.skillActive) ? skillCrBuffValue : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.DMG_RED_MULTI *= (1 - talentDmgReductionValue)\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x[Stats.HP] += (r.skillActive) ? skillHpBuffValue * x[Stats.HP] : 0\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.HP]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.HP]\n      x.ULT_DMG += (e >= 6) ? 2.00 * r.e6TeamHpLostPercent * x[Stats.HP] : 0\n    }\n  }\n}\nfunction danheng(e) {\n  let extraPenValue = talent(e, 0.36, 0.396)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.60, 2.86)\n  let ultScaling = ult(e, 4.00, 4.32)\n  let ultExtraScaling = ult(e, 1.20, 1.296)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='talentPenBuff' text='Talent pen buff'/>\n        <FormSwitch name='enemySlowed' text='Enemy slowed'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      talentPenBuff: true,\n      enemySlowed: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CR] += (e >= 1 && request.enemyHpPercent >= 0.50) ? 0.12 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.ULT_SCALING += (r.enemySlowed) ? ultExtraScaling : 0\n\n      // Boost\n      x.BASIC_BOOST += (r.enemySlowed) ? 0.40 : 0\n      x.RES_PEN += (r.talentPenBuff) ? extraPenValue : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction clara(e) {\n  let ultDmgReductionValue = ult(e, 0.25, 0.27)\n  let ultFuaExtraScaling = ult(e, 1.60, 1.728)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.20, 1.32)\n  let fuaScaling = talent(e, 1.60, 1.76)\n\n  let hitMultiByTargetsBlast = {\n    1: ASHBLAZING_ATK_STACK * (1*1/1),\n    3: ASHBLAZING_ATK_STACK * (2*1/1),\n    5: ASHBLAZING_ATK_STACK * (2*1/1) // Clara is 1 hit blast when enhanced\n  }\n\n  let hitMultiSingle = ASHBLAZING_ATK_STACK * (1*1/1)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='ultBuff' text='Ult buff'/>\n        <FormSwitch name='talentEnemyMarked' text='Enemy marked'/>\n        <FormSwitch name='e2UltAtkBuff' text='E2 ult ATK buff'/>\n        <FormSwitch name='e4DmgReductionBuff' text='E4 dmg reduction buff'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      ultBuff: true,\n      talentEnemyMarked: true,\n      e2UltAtkBuff: true,\n      e4DmgReductionBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (e >= 2 && r.e2UltAtkBuff) ? 0.30 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      // x.SKILL_SCALING += r.talentEnemyMarked ?\n      x.FUA_SCALING += fuaScaling\n      x.FUA_SCALING += r.ultBuff ? ultFuaExtraScaling : 0\n\n      // Boost\n      x.DMG_RED_MULTI *= (1 - 0.10)\n      x.DMG_RED_MULTI *= r.ultBuff ? (1 - ultDmgReductionValue) : 1\n      x.DMG_RED_MULTI *= (e >= 4 && r.e4DmgReductionBuff) ? (1 - 0.30) : 1\n      x.FUA_BOOST += 0.30\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n\n      // Calc ashblazing: ult buff -> blast, unbuffed -> single\n      if (r.ultBuff) {\n        let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMultiByTargetsBlast[request.enemyCount])\n        x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n      } else {\n        let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMultiSingle)\n        x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n      }\n    }\n  }\n}\n\nfunction bronya(e) {\n  let skillDmgBoostValue = skill(e, 0.66, 0.726)\n  let ultAtkBoostValue = ult(e, 0.55, 0.594)\n  let ultCdBoostValue = ult(e, 0.16, 0.168)\n  let ultCdBoostBaseValue = ult(e, 0.20, 0.216)\n\n  let basicScaling = basic(e, 1.0, 1.1)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 0, 0)\n  let fuaScaling = basicScaling * 0.80\n\n  let hitMulti = ASHBLAZING_ATK_STACK * (1*1/1)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='techniqueBuff' text='Technique buff'/>\n        <FormSwitch name='battleStartDefBuff' text='Battle start DEF buff'/>\n        <FormSwitch name='skillBuff' text='Skill buff'/>\n        <FormSwitch name='ultBuff' text='Ult buff'/>\n        <FormSwitch name='e2SkillSpdBuff' text='E2 skill SPD buff'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      techniqueBuff: true,\n      battleStartDefBuff: true,\n      skillBuff: true,\n      ultBuff: true,\n      e2SkillSpdBuff: false,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.DEF_P] += (r.battleStartDefBuff) ? 0.20 : 0\n      x[Stats.SPD_P] += (r.e2SkillSpdBuff) ? 0.30 : 0\n      x[Stats.ATK_P] += (r.techniqueBuff) ? 0.15 : 0\n      x[Stats.ATK_P] += (r.ultBuff) ? ultAtkBoostValue : 0\n      x.BASIC_CR_BOOST += 1.00\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.FUA_SCALING += (e >= 4) ? fuaScaling : 0\n\n      // Boost\n      x.ELEMENTAL_DMG += 0.10\n      x.ELEMENTAL_DMG += (r.skillBuff) ? skillDmgBoostValue : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      // Order matters?\n      x[Stats.CD] += (r.ultBuff) ? ultCdBoostValue * x[Stats.CD] : 0\n      x[Stats.CD] += (r.ultBuff) ? ultCdBoostBaseValue : 0\n\n      let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.FUA_DMG += x.FUA_SCALING * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n    }\n  }\n}\n\nfunction blade(e) {\n  let enhancedStateDmgBoost = skill(e, 0.40, 0.456)\n  let hpPercentLostTotalMax = 0.90\n\n  let basicScaling = basic(e, 1.0, 1.1)\n  let basicEnhancedAtkScaling = skill(e, 0.40, 0.44)\n  let basicEnhancedHpScaling = skill(e, 1.00, 1.10)\n  let ultAtkScaling = ult(e, 0.40, 0.432)\n  let ultHpScaling = ult(e, 1.00, 1.08)\n  let ultLostHpScaling = ult(e, 1.00, 1.08)\n  let fuaAtkScaling = talent(e, 0.44, 0.484)\n  let fuaHpScaling = talent(e, 1.10, 1.21)\n\n  let hitMultiByTargets = {\n    1: ASHBLAZING_ATK_STACK * (1*0.33 + 2*0.33 + 3*0.34),\n    3: ASHBLAZING_ATK_STACK * (2*0.33 + 5*0.33 + 8*0.34),\n    5: ASHBLAZING_ATK_STACK * (3*0.33 + 8*0.33 + 8*0.34),\n  }\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='enhancedStateActive' text='Enhanced state'/>\n        <FormSlider name='hpPercentLostTotal' text='HP% lost total' min={0} max={hpPercentLostTotalMax} percent />\n        <FormSlider name='e4MaxHpIncreaseStacks' text='E4 max HP stacks' min={0} max={2} />\n      </Flex>\n    ),\n    defaults: () => ({\n      enhancedStateActive: true,\n      hpPercentLostTotal: hpPercentLostTotalMax,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CR] += (e >= 2 && r.enhancedStateActive) ? 0.15 : 0\n      x[Stats.HP_P] += (e >= 4) ? r.e4MaxHpIncreaseStacks * 0.20 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      // Rest of the scalings are calculated dynamically\n\n      // Boost\n      x.ELEMENTAL_DMG += r.enhancedStateActive ? enhancedStateDmgBoost : 0\n      x.FUA_BOOST += 0.20\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      if (r.enhancedStateActive) {\n        x.BASIC_DMG += basicEnhancedAtkScaling * x[Stats.ATK]\n        x.BASIC_DMG += basicEnhancedHpScaling * x[Stats.HP]\n      } else {\n        x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      }\n\n      x.ULT_DMG += ultAtkScaling * x[Stats.ATK]\n      x.ULT_DMG += ultHpScaling * x[Stats.HP]\n      x.ULT_DMG += ultLostHpScaling * r.hpPercentLostTotal * x[Stats.HP]\n      x.ULT_DMG += (e >= 1 && request.enemyCount == 1) ? 1.50 * r.hpPercentLostTotal * x[Stats.HP] : 0\n\n      let hitMulti = hitMultiByTargets[request.enemyCount]\n      let { ashblazingMulti, ashblazingAtk } = calculateAshblazingSet(c, request, hitMulti)\n      x.FUA_DMG += fuaAtkScaling * (x[Stats.ATK] - ashblazingAtk + ashblazingMulti)\n\n      x.FUA_DMG += fuaHpScaling * x[Stats.HP]\n      x.FUA_DMG += (e >= 6) ? 0.50 * x[Stats.HP] : 0\n    }\n  }\n}\n\nfunction bailu(e) {\n  let value = (e >= 0) ? -1 : -1\n\n  let basicScaling = basic(e, 1.0, 1.1)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 0, 0)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='healingMaxHpBuff' text='Healing max HP buff'/>\n        <FormSwitch name='talentDmgReductionBuff' text='Talent dmg reduced'/>\n        <FormSwitch name='e2UltHealingBuff' text='E2 ult heal buff'/>\n        <FormSlider name='e4SkillHealingDmgBuffStacks' text='E4 dmg buff stacks' min={0} max={3} />\n      </Flex>\n    ),\n    defaults: () => ({\n      healingMaxHpBuff: true,\n      talentDmgReductionBuff: true,\n      e2UltHealingBuff: true,\n      e4SkillHealingDmgBuffStacks: 0,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.HP_P] += (r.healingMaxHpBuff) ? 0.10 : 0\n      x[Stats.OHB] += (e >= 2 && r.e2UltHealingBuff) ? 0.15 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.DMG_RED_MULTI *= (r.talentDmgReductionBuff) ? (1 - 0.10) : 1\n      x.ALL_DMG_MULTI += (e >= 4) ? r.e4SkillHealingDmgBuffStacks * 0.10 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += 0\n      x.ULT_DMG += 0\n      x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction asta(e) {\n  let ultSpdBuffValue = ult(e, 50, 52.8)\n  let talentStacksAtkBuff = talent(e, 0.14, 0.154)\n  let talentStacksDefBuff = 0.06\n  let skillExtraDmgHitsMax = (e >= 1) ? 5 : 4\n\n  let basicScaling = basic(e, 1.0, 1.1)\n  let skillScaling = skill(e, 0.50, 0.55)\n  let ultScaling = ult(e, 0, 0)\n  let dotScaling = basic(e, 0.50, 0.55)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSlider name='skillExtraDmgHits' text='Skill extra hits' min={0} max={skillExtraDmgHitsMax} />\n        <FormSlider name='talentBuffStacks' text='Talent ATK buff stacks' min={0} max={5} />\n        <FormSwitch name='ultSpdBuff' text='Ult SPD buff active'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      talentBuffStacks: 5,\n      skillExtraDmgHits: skillExtraDmgHitsMax,\n      ultSpdBuff: true\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (r.talentBuffStacks) * talentStacksAtkBuff\n      x[Stats.DEF_P] += (r.talentBuffStacks) * talentStacksDefBuff\n      x[Stats.ERR] += (r.talentBuffStacks >= 2) ? 0.15 : 0\n      x[Stats.SPD] += (r.ultSpdBuff) ? ultSpdBuffValue : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.DOT_SCALING += dotScaling\n\n      // Boost\n      x.ELEMENTAL_DMG += 0.18\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += 0\n      x.DOT_DMG += x.DOT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction arlan(e) {\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.40, 2.64)\n  let ultScaling = ult(e, 3.20, 3.456)\n\n  let talentMissingHpDmgBoostMax = talent(e, 0.72, 0.792)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSlider name='selfCurrentHpPercent' text='Self current HP%' min={0.01} max={1.0} percent />\n      </Flex>\n    ),\n    defaults: () => ({\n      selfCurrentHpPercent: 1.00,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x.ELEMENTAL_DMG += Math.min(talentMissingHpDmgBoostMax, 1 - r.selfCurrentHpPercent)\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.SKILL_BOOST += (e >= 1 && r.selfCurrentHpPercent <= 0.50) ? 0.10 : 0\n      x.ULT_BOOST += (e >= 6 && r.selfCurrentHpPercent <= 0.50) ? 0.20 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction argenti(e) {\n  let talentMaxStacks = (e >= 4) ? 12 : 10\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.20, 1.32)\n  let ultScaling = ult(e, 1.60, 1.728)\n  let ultEnhancedScaling = ult(e, 2.80, 3.024)\n  let ultEnhancedExtraHitScaling = ult(e, 0.95, 1.026)\n  let talentCrStackValue = talent(e, 0.025, 0.028)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='ultEnhanced' text='Enhanced ult'/>\n        <FormSlider name='talentStacks' text='Talent stacks' min={0} max={talentMaxStacks} />\n        <FormSlider name='ultEnhancedExtraHits' text='Ult extra hits' min={0} max={6} />\n        <FormSwitch name='e2UltAtkBuff' text='E2 ult ATK buff'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      ultEnhanced: true,\n      talentStacks: talentMaxStacks,\n      ultEnhancedExtraHits: 6,\n      e2UltAtkBuff: true\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Skills\n      x[Stats.CR] += (r.talentStacks) * talentCrStackValue\n\n      // Traces\n\n      // Eidolons\n      x[Stats.CD] += (e >= 1) ? (r.talentStacks) * 0.04 : 0\n      x[Stats.ATK_P] += (e >= 2 && r.e2UltAtkBuff) ? 0.40 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += (r.ultEnhanced) ? ultEnhancedScaling : ultScaling\n      x.ULT_SCALING += (r.ultEnhancedExtraHits) * ultEnhancedExtraHitScaling\n\n      // BOOST\n      x.ULT_BOOST += (request.enemyHpPercent <= 0.5) ? 0.15 : 0\n      x.ULT_DEF_PEN += (e >= 6) ? 0.30 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction jingliu(e) {\n  let talentCrBuff = talent(e, 0.50, 0.52)\n  let talentHpDrainAtkBuffMax = talent(e, 1.80, 1.98)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.00, 2.20)\n  let skillEnhancedScaling = skill(e, 2.50, 2.75)\n  let ultScaling = ult(e, 3.00, 3.24)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='talentEnhancedState' text='Enhanced state'/>\n        <FormSlider name='talentHpDrainAtkBuff' text='HP drain ATK buff' min={0} max={talentHpDrainAtkBuffMax} percent />\n        <FormSwitch name='e1CdBuff' text='E1 ult active' />\n        <FormSwitch name='e2SkillDmgBuff' text='E2 skill buff' />\n      </Flex>\n    ),\n    defaults: () => ({\n      talentEnhancedState: true,\n      talentHpDrainAtkBuff: talentHpDrainAtkBuffMax,\n      e1CdBuff: true,\n      e2SkillDmgBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Skills\n      x[Stats.CR]    += (r.talentEnhancedState) ? talentCrBuff : 0\n      x[Stats.ATK_P] += (r.talentEnhancedState) ? r.talentHpDrainAtkBuff : 0\n\n      // Traces\n      x[Stats.RES]   += (r.talentEnhancedState) ? 0.35 : 0\n      x.ULT_BOOST    += (r.talentEnhancedState) ? 0.20 : 0\n\n      // Eidolons\n      x[Stats.CD]    += (e >= 1 && r.e1CdBuff) ? 0.24 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n\n      x.SKILL_SCALING += (r.talentEnhancedState) ? skillEnhancedScaling : skillScaling\n      x.SKILL_SCALING += (e >= 1 && r.talentEnhancedState && request.enemyCount == 1) ? 1 : 0\n\n      x.ULT_SCALING += ultScaling\n      x.ULT_SCALING += (e >= 1 && request.enemyCount == 1) ? 1 : 0\n\n      x.FUA_SCALING += 0\n\n      // BOOST\n      x.SKILL_BOOST += (e >= 2 && r.talentEnhancedState && r.e2SkillDmgBuff) ? 0.80 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction skill(e, value1, value2) {\n  return e >= 3 ? value2 : value1\n}\n\nlet talent = skill\n\nfunction ult(e, value1, value2) {\n  return e >= 5 ? value2 : value1\n}\nlet basic = ult\n\nfunction p4(set) {\n  return set >> 2\n}\n\nfunction p2(set) {\n  return Math.min(1, set >> 1)\n}\n\nexport const CharacterConditionals = {\n  get: (request) => {\n    let characterFn = characterOptionMapping[request.characterId]\n    return characterFn(request.characterEidolon)\n  },\n  getDisplayForCharacter: (id, eidolon) => {\n    // console.log('getDisplayForCharacter', id)\n    if (!id || !characterOptionMapping[id]) {\n      return (\n        <Flex justify='space-between' align='center'>\n          <HeaderText>Character passives</HeaderText>\n          <TooltipImage type={Hint.characterPassives()} />\n        </Flex>\n      )\n    }\n\n    let characterFn = characterOptionMapping[id]\n    let display = characterFn(eidolon).display()\n\n    return (\n      <Flex vertical gap={5}>\n        <Flex justify='space-between' align='center'>\n          <HeaderText>Character passives</HeaderText>\n          <TooltipImage type={Hint.characterPassives()} />\n        </Flex>\n        {display}\n      </Flex>\n    )\n  },\n}","import {Flex, Form, InputNumber, Slider, Switch, Typography} from \"antd\";\nimport React, {useState} from \"react\";\nimport styled from \"styled-components\";\nimport {HeaderText} from \"../components/HeaderText\";\nimport { Constants } from './constants'\nimport {CheckOutlined, CloseOutlined} from \"@ant-design/icons\";\nimport {FormSlider, FormSwitch} from \"../components/optimizerTab/FormConditionalInputs\";\nimport {TooltipImage} from \"../components/TooltipImage\";\n\nlet Stats = Constants.Stats\nfunction precisionRound(number, precision = 8) {\n  let factor = Math.pow(10, precision);\n  return Math.round(number * factor) / factor;\n}\n\nlet defaultGap = 5\n\nconst lightConeOptionMapping = {\n  20000: Arrows,\n  20001: Cornucopia,\n  20002: CollapsingSky,\n  20003: Amber,\n  20004: Void,\n  20005: Chorus,\n  20006: DataBank,\n  20007: DartingArrow,\n  20008: FineFruit,\n  20009: ShatteredHome,\n  20010: Defense,\n  20011: Loop,\n  20012: MeshingCogs,\n  20013: Passkey,\n  20014: Adversarial,\n  20015: Multiplication,\n  20016: MutualDemise,\n  20017: Pioneering,\n  20018: HiddenShadow,\n  20019: Mediation,\n  20020: Sagacity,\n  21000: PostOpConversation,\n  21001: GoodNightAndSleepWell,\n  21002: DayOneOfMyNewLife,\n  21003: OnlySilenceRemains,\n  21004: MemoriesOfThePast,\n  21005: TheMolesWelcomeYou,\n  21006: TheBirthOfTheSelf,\n  21007: SharedFeeling,\n  21008: EyesOfThePrey,\n  21009: LandausChoice,\n  21010: Swordplay,\n  21011: PlanetaryRendezvous,\n  21012: ASecretVow,\n  21013: MakeTheWorldClamor,\n  21014: PerfectTiming, // Does the ohb apply after passives?\n  21015: ResolutionShinesAsPearlsOfSweat,\n  21016: TrendOfTheUniversalMarket, // Revisit dot\n  21017: SubscribeForMore,\n  21018: DanceDanceDance,\n  21019: UnderTheBlueSky,\n  21020: GeniusesRepose,\n  21021: QuidProQuo,\n  21022: Fermata,\n  21023: WeAreWildfire,\n  21024: RiverFlowsInSpring,\n  21025: PastAndFuture,\n  21026: WoofWalkTime,\n  21027: TheSeriousnessOfBreakfast,\n  21028: WarmthShortensColdNights,\n  21029: WeWillMeetAgain, // Does this get affected by crit / dmg boosts?\n  21030: ThisIsMe, // Def scaling dmg not implemented\n  21031: ReturnToDarkness,\n  21032: CarveTheMoonWeaveTheClouds,\n  21033: NowhereToRun,\n  21034: TodayIsAnotherPeacefulDay,\n  22000: BeforeTheTutorialMissionStarts,\n  22001: HeyOverHere,\n  23000: NightOnTheMilkyWay,\n  23001: InTheNight,\n  23002: SomethingIrreplaceable,\n  23003: ButTheBattleIsntOver,\n  23004: InTheNameOfTheWorld, // Skill atk buff not implemented\n  23005: MomentOfVictory,\n  23006: PatienceIsAllYouNeed, // Revisit dot\n  23007: IncessantRain,\n  23008: EchoesOfTheCoffin,\n  23009: TheUnreachableSide,\n  23010: BeforeDawn,\n  23011: SheAlreadyShutHerEyes,\n  23012: SleepLikeTheDead,\n  23013: TimeWaitsForNoOne,\n  23014: IShallBeMyOwnSword,\n  23015: BrighterThanTheSun,\n  23016: WorrisomeBlissful,\n  23017: NightOfFright,\n  23018: AnInstantBeforeAGaze,\n  23019: PastSelfInMirror,\n  23020: BaptismOfPureThought,\n  24000: OnTheFallOfAnAeon,\n  24001: CruisingInTheStellarSea,\n  24002: TextureOfMemories,\n  24003: SolitaryHealing,\n}\n\nfunction BaptismOfPureThought(s) {\n  let sValuesCd = [0.08, 0.09, 0.10, 0.11, 0.12]\n  let sValuesDmg = [0.36, 0.42, 0.48, 0.54, 0.60]\n  let sValuesFuaPen = [0.24, 0.28, 0.32, 0.36, 0.40]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='debuffCdStacks' text='Debuff cd stacks' min={0} max={3} lc/>\n        <FormSwitch name='postUltBuff' text='Disputation ult cd / fua def pen buff' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      debuffCdStacks: 3,\n      postUltBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CD] += r.debuffCdStacks * sValuesCd[s]\n      x.ELEMENTAL_DMG += r.postUltBuff ? sValuesDmg[s] : 0\n      x.FUA_DEF_PEN += r.postUltBuff ? sValuesFuaPen[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction PastSelfInMirror(s) {\n  let sValues = [0.24, 0.28, 0.32, 0.36, 0.40]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='postUltDmgBuff' text='Post ult dmg buff' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      postUltDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.postUltDmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction SolitaryHealing(s) {\n  let sValues = [0.24, 0.30, 0.36, 0.42, 0.48]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='postUltDotDmgBuff' text='Post ult dot dmg buff' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      postUltDotDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.DOT_BOOST += r.postUltDotDmgBuff ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction TextureOfMemories(s) {\n  let sValues = [0.12, 0.15, 0.18, 0.21, 0.24]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='activeShieldDmgDecrease' text='Active shield dmg decrease' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      activeShieldDmgDecrease: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.DMG_RED_MULTI += (r.activeShieldDmgDecrease) ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction CruisingInTheStellarSea(s) {\n  let sValuesCr = [0.08, 0.10, 0.12, 0.14, 0.16]\n  let sValuesAtk = [0.20, 0.25, 0.30, 0.35, 0.40]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemyHp50CrBoost' text='Enemy HP <= 50% cr boost' lc/>\n        <FormSwitch name='enemyDefeatedAtkBuff' text='Enemy defeated atk buff' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyHp50CrBoost: true,\n      enemyDefeatedAtkBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CR] += (r.enemyHp50CrBoost && request.enemyHpPercent <= 0.50) ? sValuesCr[s] : 0\n      x[Stats.ATK_P] += (r.enemyDefeatedAtkBuff) ? sValuesAtk[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction OnTheFallOfAnAeon(s) {\n  let sValuesAtkStacks = [0.08, 0.10, 0.12, 0.14, 0.16]\n  let sValuesDmgBuff = [0.12, 0.15, 0.18, 0.21, 0.24]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='atkBoostStacks' text='Atk boost stacks' min={0} max={4} lc/>\n        <FormSwitch name='weaknessBreakDmgBuff' text='Weakness break dmg buff' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      atkBoostStacks: 4,\n      weaknessBreakDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += r.atkBoostStacks * sValuesAtkStacks[s]\n      x.ELEMENTAL_DMG += (r.weaknessBreakDmgBuff) ? sValuesDmgBuff[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction AnInstantBeforeAGaze(s) {\n  let sValues = [0.0036, 0.0042, 0.0048, 0.0054, 0.006]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='maxEnergyUltDmgStacks' text='Max energy' min={0} max={180} lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      maxEnergyUltDmgStacks: 180,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ULT_BOOST += r.maxEnergyUltDmgStacks * sValues[s]\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction NightOfFright(s) {\n  let sValues = [0.024, 0.028, 0.032, 0.036, 0.04]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='atkBuffStacks' text=\"Atk buff stacks\" min={0} max={5} lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      atkBuffStacks: 5,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += r.atkBuffStacks * sValues[s]\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction WorrisomeBlissful(s) {\n  let sValuesFuaDmg = [0.30, 0.35, 0.40, 0.45, 0.50]\n  let sValuesCd = [0.12, 0.14, 0.16, 0.18, 0.20]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='fuaDmgBoost' text='Fua dmg boost' lc/>\n        <FormSlider name='targetTameStacks' text=\"Target tame stacks\" min={0} max={2} lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      fuaDmgBoost: true,\n      targetTameStacks: 2,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CD] += r.targetTameStacks * sValuesCd[s]\n      x.FUA_BOOST += (r.fuaDmgBoost) ? sValuesFuaDmg[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction BrighterThanTheSun(s) {\n  let sValuesAtk = [0.18, 0.21, 0.24, 0.27, 0.30]\n  let sValuesErr = [0.06, 0.07, 0.08, 0.09, 0.10]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='dragonsCallStacks' text=\"Dragon's call stacks\" min={0} max={2} lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      dragonsCallStacks: 2,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += r.dragonsCallStacks * sValuesAtk[s]\n      x[Stats.ERR] += r.dragonsCallStacks * sValuesErr[s]\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction IShallBeMyOwnSword(s) {\n  let sValuesStackDmg = [0.14, 0.165, 0.19, 0.215, 0.24]\n  let sValuesDefPen = [0.12, 0.14, 0.16, 0.18, 0.20]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='eclipseStacks' text='Eclipse stacks' min={0} max={3} lc/>\n        <FormSwitch name='maxStackDefPen' text='Max stack def pen' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      eclipseStacks: 3,\n      maxStackDefPen: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += r.eclipseStacks * sValuesStackDmg[s]\n      x.DEF_SHRED += (r.maxStackDefPen && r.eclipseStacks == 3) ? sValuesDefPen[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction TimeWaitsForNoOne(s) {\n  let sValues = [0, 0, 0, 0, 0]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='healingBasedDmgProc' text='Healing based dmg proc (not implemented)' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      healingBasedDmgProc: false,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction SleepLikeTheDead(s) {\n  let sValues = [0.36, 0.42, 0.48, 0.54, 0.60]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='missedCritCrBuff' text='Missed crit cr buff' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      missedCritCrBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CR] += (r.missedCritCrBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction SheAlreadyShutHerEyes(s) {\n  let sValues = [0.09, 0.105, 0.12, 0.135, 0.15]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='hpLostDmgBuff' text='Hp lost dmg buff' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      hpLostDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.hpLostDmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction BeforeDawn(s) {\n  let sValuesSkillUltDmg = [0.18, 0.21, 0.24, 0.27, 0.30]\n  let sValuesFuaDmg = [0.48, 0.56, 0.64, 0.72, 0.80]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='skillUltDmgBoost' text='Skill/ult dmg boost' lc/>\n        <FormSwitch name='fuaDmgBoost' text='Fua dmg boost' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      skillUltDmgBoost: true,\n      fuaDmgBoost: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.SKILL_BOOST += (r.skillUltDmgBoost) ? sValuesSkillUltDmg[s] : 0\n      x.ULT_BOOST += (r.skillUltDmgBoost) ? sValuesSkillUltDmg[s] : 0\n      x.FUA_BOOST += (r.fuaDmgBoost) ? sValuesFuaDmg[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction TheUnreachableSide(s) {\n  let sValues = [0.24, 0.28, 0.32, 0.36, 0.40]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='dmgBuff' text='Hp consumed or attacked dmg buff' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      dmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.dmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction EchoesOfTheCoffin(s) {\n  let sValues = [12, 14, 16, 18, 20]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='postUltSpdBuff' text='Post ult spd buff' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      postUltSpdBuff: false,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.SPD] += (r.postUltSpdBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction IncessantRain(s) {\n  let sValuesCr = [0.12, 0.14, 0.16, 0.18, 0.20]\n  let sValuesDmg = [0.12, 0.14, 0.16, 0.18, 0.20]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemy3DebuffsCrBoost' text='Enemy <= 3 debuffs cr boost' lc/>\n        <FormSwitch name='targetCodeDebuff' text='Target code debuff' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      enemy3DebuffsCrBoost: true,\n      targetCodeDebuff: true\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CR] += (r.enemy3DebuffsCrBoost) ? sValuesCr[s] : 0\n      x.ELEMENTAL_DMG += (r.targetCodeDebuff) ? sValuesDmg[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction PatienceIsAllYouNeed(s) {\n  let sValuesDmg = [0.24, 0.28, 0.32, 0.36, 0.40]\n  let sValuesSpd = [0.048, 0.056, 0.064, 0.072, 0.08]\n\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='dmgBoost' text='Dmg boost' lc/>\n        <FormSlider name='spdStacks' text='Spd stacks' min={0} max={3} lc/>\n        <FormSwitch name='dotEffect' text='Dot effect (not implemented)' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      dmgBoost: true,\n      spdStacks: 0,\n      dotEffect: false\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.SPD_P] += r.spdStacks * sValuesSpd[s]\n      x.ELEMENTAL_DMG += (r.dmgBoost) ? sValuesDmg[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction MomentOfVictory(s) {\n  let sValues = [0.24, 0.28, 0.32, 0.36, 0.40]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='selfAttackedDefBuff' text='Self attacked def buff' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      selfAttackedDefBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.DEF_P] += (r.selfAttackedDefBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction InTheNameOfTheWorld(s) {\n  let sValuesDmg = [0.24, 0.28, 0.32, 0.36, 0.40]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemyDebuffedDmgBoost' text='Enemy debuffed dmg boost' lc/>\n        <FormSwitch name='skillAtkBoost' text='Skill atk boost (not implemented)' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyDebuffedDmgBoost: true,\n      skillAtkBoost: false,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.enemyDebuffedDmgBoost) ? sValuesDmg[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction ButTheBattleIsntOver(s) {\n  let sValuesErr = [0.10, 0.12, 0.14, 0.16, 0.18]\n  let sValuesDmg = [0.30, 0.35, 0.40, 0.45, 0.50]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='postSkillDmgBuff' text='Post skill dmg buff' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      postSkillDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ERR] += sValuesErr[s]\n      x.ELEMENTAL_DMG += (r.postSkillDmgBuff) ? sValuesDmg[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction SomethingIrreplaceable(s) {\n  let sValues = [0.24, 0.28, 0.32, 0.36, 0.40]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='dmgBuff' text='Enemy defeated or self hit dmg buff' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      dmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.dmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction InTheNight(s) {\n  let sValuesDmg = [0.06, 0.07, 0.08, 0.09, 0.10]\n  let sValuesCd = [0.12, 0.14, 0.16, 0.18, 0.20]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='spdScalingBuffs' text='Speed scaling buffs enabled' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      spdScalingBuffs: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {\n      let r = request.lightConeConditionals\n      let x = c.x\n\n      let stacks = Math.max(0, Math.min(6, Math.floor((x[Stats.SPD] - 100) / 10)))\n\n      x.BASIC_BOOST += (r.spdScalingBuffs) ? stacks * sValuesDmg[s] : 0\n      x.SKILL_BOOST += (r.spdScalingBuffs) ? stacks * sValuesDmg[s] : 0\n      x.ULT_CD_BOOST += (r.spdScalingBuffs) ? stacks * sValuesCd[s] : 0\n    }\n  }\n}\n\nfunction NightOnTheMilkyWay(s) {\n  let sValuesAtk = [0.09, 0.105, 0.12, 0.135, 0.15]\n  let sValuesDmg = [0.30, 0.35, 0.40, 0.45, 0.50]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemyCountAtkBuff' text='Enemy count atk buff' lc/>\n        <FormSwitch name='enemyWeaknessBreakDmgBuff' text='Enemy weakness break dmg buff' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyCountAtkBuff: true,\n      enemyWeaknessBreakDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += (r.enemyCountAtkBuff) ? request.enemyCount * sValuesAtk[s] : 0\n      x.ELEMENTAL_DMG += (r.enemyWeaknessBreakDmgBuff) ? sValuesDmg[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction HeyOverHere(s) {\n  let sValues = [0.16, 0.19, 0.22, 0.25, 0.28]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='postSkillHealBuff' text='Post skill heal buff' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      postSkillHealBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.OHB] += (r.postSkillHealBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction BeforeTheTutorialMissionStarts(s) {\n  let sValues = [0, 0, 0, 0, 0]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction TodayIsAnotherPeacefulDay(s) {\n  let sValues = [0.002, 0.0025, 0.003, 0.0035, 0.004]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='maxEnergyStacks' text='Max energy' min={0} max={160} lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      maxEnergyStacks: 160,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += r.maxEnergyStacks * sValues[s]\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction NowhereToRun(s) {\n  let sValues = [0, 0, 0, 0, 0]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction CarveTheMoonWeaveTheClouds(s) {\n  let sValuesAtk = [0.10, 0.125, 0.15, 0.175, 0.20]\n  let sValuesCd = [0.12, 0.15, 0.18, 0.21, 0.24]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='atkBuffActive' text='Atk buff active' lc/>\n        <FormSwitch name='cdBuffActive' text='Cd buff active' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      atkBuffActive: true,\n      cdBuffActive: false,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += (r.atkBuffActive) ? sValuesAtk[s] : 0\n      x[Stats.CD] += (r.cdBuffActive) ? sValuesCd[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction ReturnToDarkness(s) {\n  let sValues = [0, 0, 0, 0, 0]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction ThisIsMe(s) {\n  let sValues = [0.60, 0.75, 0.90, 1.05, 1.20]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='defScalingUltDmg' text='Def scaling ult dmg (not implemented)' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      defScalingUltDmg: false,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {\n      let r = request.lightConeConditionals\n      let x = c.x\n\n      // x.ULT_DEF_SCALING += (r.defScalingUltDmg) ? sValues[s] : 0\n    }\n  }\n}\n\nfunction WeWillMeetAgain(s) {\n  let sValues = [0.48, 0.60, 0.72, 0.84, 0.96]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='extraDmgProc' text='Additional dmg proc' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      extraDmgProc: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.BASIC_SCALING += (r.extraDmgProc) ? sValues[s] : 0\n      x.SKILL_SCALING += (r.extraDmgProc) ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction WarmthShortensColdNights(s) {\n  let sValues = [0, 0, 0, 0, 0]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction TheSeriousnessOfBreakfast(s) {\n  let sValuesDmgBoost = [0.12, 0.15, 0.18, 0.21, 0.24]\n  let sValuesStacks = [0.04, 0.05, 0.06, 0.07, 0.08]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='dmgBoost' text='Dmg boost' lc/>\n        <FormSlider name='defeatedEnemyAtkStacks' text='Defeated enemy atk stacks' min={0} max={3} lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      dmgBoost: true,\n      defeatedEnemyAtkStacks: 3,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += r.defeatedEnemyAtkStacks * sValuesStacks[s]\n      x.ELEMENTAL_DMG += (r.dmgBoost) ? sValuesDmgBoost[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction WoofWalkTime(s) {\n  let sValues = [0.16, 0.20, 0.24, 0.28, 0.32]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemyBurnedBleeding' text='Enemy burned / bleeding' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyBurnedBleeding: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.enemyBurnedBleeding) ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction PastAndFuture(s) {\n  let sValues = [0, 0, 0, 0, 0]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction RiverFlowsInSpring(s) {\n  let sValuesSpd = [0.08, 0.09, 0.10, 0.11, 0.12]\n  let sValuesDmg = [0.12, 0.15, 0.18, 0.21, 0.24]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='spdDmgBuff' text='Spd / dmg buff active' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      spdDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.SPD_P] += (r.spdDmgBuff) ? sValuesSpd[s] : 0\n      x.ELEMENTAL_DMG += (r.spdDmgBuff) ? sValuesDmg[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction WeAreWildfire(s) {\n  let sValues = [0.08, 0.10, 0.12, 0.14, 0.16]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='initialDmgReductionBuff' text='Initial dmg reduction buff' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      initialDmgReductionBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.DMG_RED_MULTI += (r.initialDmgReductionBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction Fermata(s) {\n  let sValues = [0.16, 0.20, 0.24, 0.28, 0.32]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemyShockWindShear' text='Enemy shocked / wind sheared' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyShockWindShear: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.enemyShockWindShear) ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction QuidProQuo(s) {\n  let sValues = [0, 0, 0, 0, 0]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction GeniusesRepose(s) {\n  let sValues = [0.24, 0.30, 0.36, 0.42, 0.48]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='defeatedEnemyCdBuff' text='Defeated enemy cd buff' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      defeatedEnemyCdBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CD] += (r.defeatedEnemyCdBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction UnderTheBlueSky(s) {\n  let sValues = [0.12, 0.15, 0.18, 0.21, 0.24]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='defeatedEnemyCrBuff' text='Defeated enemy cr buff' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      defeatedEnemyCrBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CR] += (r.defeatedEnemyCrBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction DanceDanceDance(s) {\n  let sValues = [0, 0, 0, 0, 0]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction SubscribeForMore(s) {\n  let sValues = [0.24, 0.30, 0.36, 0.42, 0.48]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='maxEnergyDmgBoost' text='Max energy dmg boost' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      maxEnergyDmgBoost: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.BASIC_BOOST += sValues[s]\n      x.SKILL_BOOST += sValues[s]\n      x.BASIC_BOOST += (r.maxEnergyDmgBoost) ? sValues[s] : 0\n      x.SKILL_BOOST += (r.maxEnergyDmgBoost) ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction TrendOfTheUniversalMarket(s) {\n  let sValues = [0, 0, 0, 0, 0]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction ResolutionShinesAsPearlsOfSweat(s) {\n  let sValues = [0.12, 0.13, 0.14, 0.15, 0.16]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='targetEnsnared' text='Target ensnared' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      targetEnsnared: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.DEF_SHRED += (r.targetEnsnared) ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction PerfectTiming(s) {\n  let sValues = [0.33, 0.36, 0.39, 0.42, 0.45]\n  let sMaxValues = [0.15, 0.18, 0.21, 0.24, 0.27]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='resToHealingBoost' text='Res to healing boost' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      resToHealingBoost: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {\n      let r = request.lightConeConditionals\n      let x = c.x\n\n      let boost = Math.min(sMaxValues[s], sValues[s] * x[Stats.RES])\n      x[Stats.OHB] += (r.resToHealingBoost) ? boost : 0\n    }\n  }\n}\n\nfunction MakeTheWorldClamor(s) {\n  let sValues = [0.32, 0.40, 0.48, 0.56, 0.64]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='ultDmgBuff' text='Ult dmg buff' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      ultDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ULT_BOOST += (r.ultDmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction ASecretVow(s) {\n  let sValues = [0.20, 0.25, 0.30, 0.35, 0.40]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemyHpHigherDmgBoost' text='Enemy HP % higher dmg boost' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyHpHigherDmgBoost: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += sValues[s]\n      x.ELEMENTAL_DMG += (r.enemyHpHigherDmgBoost) ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction PlanetaryRendezvous(s) {\n  let sValues = [0.12, 0.15, 0.18, 0.21, 0.24]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='alliesSameElement' text='Allies same element dmg boost' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      alliesSameElement: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.alliesSameElement) ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction Swordplay(s) {\n  let sValues = [0.08, 0.10, 0.12, 0.14, 0.16]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='sameTargetHitStacks' text='Same target hit stacks' min={0} max={5} lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      sameTargetHitStacks: 5,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.sameTargetHitStacks) * sValues[s]\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction LandausChoice(s) {\n  let sValues = [0.16, 0.18, 0.20, 0.22, 0.24]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.DMG_RED_MULTI += sValues[s]\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction EyesOfThePrey(s) {\n  let sValues = [0.24, 0.30, 0.36, 0.42, 0.48]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.DOT_BOOST += sValues[s]\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction SharedFeeling(s) {\n  let sValues = [0.10, 0.125, 0.15, 0.175, 0.20]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.OHB] += sValues[s]\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction TheBirthOfTheSelf(s) {\n  let sValues = [0.24, 0.30, 0.36, 0.42, 0.48]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemyHp50FuaBuff' text='Enemy HP < 50% fua buff' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyHp50FuaBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.xxxxxxxxxxxxxxxxxxxxx] += (r.name) ? sValues[s] : 0\n      x.FUA_BOOST += sValues[s]\n      x.FUA_BOOST += (r.enemyHp50FuaBuff && request.enemyHpPercent < 0.50) ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction TheMolesWelcomeYou(s) {\n  let sValues = [0.12, 0.15, 0.18, 0.21, 0.24]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='atkBuffStacks' text='Atk buff stacks' min={0} max={3} lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      atkBuffStacks: 3,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += (r.atkBuffStacks) * sValues[s]\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction MemoriesOfThePast(s) {\n  let sValues = [0, 0, 0, 0, 0]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction OnlySilenceRemains(s) {\n  let sValues = [0.08, 0.09, 0.10, 0.11, 0.12]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemies2CrBuff' text='<= 2 enemies cr buff' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      enemies2CrBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CR] += (r.enemies2CrBuff && request.enemyCount <= 2) ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction DayOneOfMyNewLife(s) {\n  let sValues = [0.16, 0.18, 0.20, 0.22, 0.24]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='dmgResBuff' text='Dmg RES buff' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      dmgResBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.DMG_RED_MULTI += (r.dmgResBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction GoodNightAndSleepWell(s) {\n  let sValues = [0.12, 0.15, 0.18, 0.21, 0.24]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSlider name='debuffStacksDmgIncrease' text='Debuff stacks dmg increase' min={0} max={3} lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      debuffStacksDmgIncrease: 3,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += r.debuffStacksDmgIncrease * sValues[s]\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction PostOpConversation(s) {\n  let sValues = [0.12, 0.15, 0.18, 0.21, 0.24]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='postUltHealingBoost' text='Post ult healing boost' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      postUltHealingBoost: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.OHB] += (r.postUltHealingBoost) ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction Sagacity(s) {\n  let sValues = [0.24, 0.30, 0.36, 0.42, 0.48]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='postUltAtkBuff' text='Post ult atk buff' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      postUltAtkBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += (r.postUltAtkBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction Mediation(s) {\n  let sValues = [12, 14, 16, 18, 20]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='initialSpdBuff' text='Initial spd buff' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      initialSpdBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.SPD] += (r.initialSpdBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction HiddenShadow(s) {\n  let sValues = [0.60, 0.75, 0.90, 1.05, 1.20]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='basicAtkBuff' text='Basic atk buff' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      basicAtkBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.BASIC_BOOST += (r.basicAtkBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction Pioneering(s) {\n  let sValues = [0, 0, 0, 0, 0]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction MutualDemise(s) {\n  let sValues = [0.12, 0.15, 0.18, 0.21, 0.24]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='selfHp80CrBuff' text='Self HP <80% cr buff' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      selfHp80CrBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CR] += (r.selfHp80CrBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction Multiplication(s) {\n  let sValues = [0, 0, 0, 0, 0]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction Adversarial(s) {\n  let sValues = [0.10, 0.12, 0.14, 0.16, 0.18]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='defeatedEnemySpdBuff' text='Defeated enemy spd buff' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      defeatedEnemySpdBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.SPD_P] += (r.defeatedEnemySpdBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction Passkey(s) {\n  let sValues = [0, 0, 0, 0, 0]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction MeshingCogs(s) {\n  let sValues = [0, 0, 0, 0, 0]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction Loop(s) {\n  let sValues = [0.24, 0.30, 0.36, 0.42, 0.48]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemySlowedDmgBuff' text='Enemy slowed dmg buff' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      enemySlowedDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.enemySlowedDmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction Defense(s) {\n  let sValues = [0, 0, 0, 0, 0]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction ShatteredHome(s) {\n  let sValues = [0.20, 0.25, 0.30, 0.35, 0.40]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='enemyHp50Buff' text='Enemy HP >50% dmg buff' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyHp50Buff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ELEMENTAL_DMG += (r.enemyHp50Buff) ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction FineFruit(s) {\n  let sValues = [0, 0, 0, 0, 0]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n      </Flex>\n    ),\n    defaults: () => ({\n      name: true,\n    }),\n    precomputeEffects: (x, request) => {},\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction DartingArrow(s) {\n  let sValues = [0.24, 0.30, 0.36, 0.42, 0.48]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='defeatedEnemyAtkBuff' text='Atk buff on kill' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      defeatedEnemyAtkBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += (r.defeatedEnemyAtkBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction DataBank(s) {\n  let sValues = [0.28, 0.35, 0.42, 0.49, 0.56]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='ultDmgBuff' text='Ult dmg buff' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      ultDmgBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.ULT_BOOST += (r.ultDmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction Chorus(s) {\n  let sValues = [0.08, 0.09, 0.10, 0.11, 0.12]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='inBattleAtkBuff' text='In battle atk buff' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      inBattleAtkBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.ATK_P] += (r.inBattleAtkBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction Void(s) {\n  let sValues = [0.20,0.25,0,30,0.35,0.40]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='initialEhrBuff' text='Initial EHR buff' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      initialEhrBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.EHR] += (r.initialEhrBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\n\nfunction Amber(s) {\n  let sValues = [0.16,0.20,0.24,0.28,0.32]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='hp50DefBuff' text='HP <50% def buff' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      hp50DefBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.DEF_P] += (r.hp50DefBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction CollapsingSky(s) {\n  let sValues = [0.20, 0.25, 0.30, 0.35, 0.40]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='basicSkillDmgBuff' text='Basic/Skill dmg buff' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      basicSkillDmgBuff: true\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x.BASIC_BOOST += (r.basicSkillDmgBuff) ? sValues[s] : 0\n      x.SKILL_BOOST += (r.basicSkillDmgBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction Cornucopia(s) {\n  let sValues = [0.12, 0.15, 0.18, 0.21, 0.24]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='healingBuff' text='Healing buff' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      healingBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.OHB] += (r.healingBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nfunction Arrows(s) {\n  let sValues = [0.12, 0.15, 0.18, 0.21, 0.24]\n  s = s - 1\n\n  return {\n    display: () => (\n      <Flex vertical gap={defaultGap} >\n        <FormSwitch name='critBuff' text='Initial crit buff' lc/>\n      </Flex>\n    ),\n    defaults: () => ({\n      critBuff: true,\n    }),\n    precomputeEffects: (x, request) => {\n      let r = request.lightConeConditionals\n\n      x[Stats.CR] += (r.critBuff) ? sValues[s] : 0\n    },\n    calculatePassives: (c, request) => {},\n    calculateBaseMultis: (c, request) => {}\n  }\n}\n\nexport const LightConeConditionals = {\n  get: (request) => {\n    let lcFn = lightConeOptionMapping[request.lightCone]\n    if (!lcFn) {\n      return {\n        display: () => (\n          <Flex vertical gap={5}>\n            <HeaderText>Light cone passives</HeaderText>\n          </Flex>\n        ),\n        defaults: () => ({})\n      }\n    }\n    return lcFn(request.lightConeSuperimposition)\n  },\n  getDisplayForLightCone: (id, superimposition) => {\n    // console.log('getDisplayForLightCone', id)\n    if (!id || !lightConeOptionMapping[id]) {\n      return (\n        <Flex justify='space-between' align='center'>\n          <HeaderText>Light cone passives</HeaderText>\n          <TooltipImage type={Hint.lightConePassives()} />\n        </Flex>\n      )\n    }\n\n    let lcFn = lightConeOptionMapping[id]\n    let display = lcFn(superimposition).display()\n\n    return (\n      <Flex vertical gap={5}>\n        <Flex justify='space-between' align='center'>\n          <HeaderText>Light cone passives</HeaderText>\n          <TooltipImage type={Hint.lightConePassives()} />\n        </Flex>\n        {display}\n      </Flex>\n    )\n  },\n}","import {Constants, Stats} from '../constants.js'\nimport { BufferPacker } from '../bufferPacker.js'\nimport { CharacterConditionals } from \"../characterConditionals.js\";\nimport { LightConeConditionals } from \"../lightConeConditionals\";\n\nfunction sumRelicStats(headRelics, handsRelics, bodyRelics, feetRelics, planarSphereRelics, linkRopeRelics, h, g, b, f, p, l, statValues) {\n  let summedStats = {}\n  for (let stat of statValues) {\n    summedStats[stat] =\n      headRelics[h].augmentedStats[stat] +\n      handsRelics[g].augmentedStats[stat] +\n      bodyRelics[b].augmentedStats[stat] +\n      feetRelics[f].augmentedStats[stat] +\n      planarSphereRelics[p].augmentedStats[stat] +\n      linkRopeRelics[l].augmentedStats[stat]\n  }\n  summedStats.WEIGHT =\n    headRelics[h].weightScore +\n    handsRelics[g].weightScore +\n    bodyRelics[b].weightScore +\n    feetRelics[f].weightScore +\n    planarSphereRelics[p].weightScore +\n    linkRopeRelics[l].weightScore\n\n  return summedStats\n}\n\nfunction calculateFlatStat(stat, statP, baseValue, lc, trace, relicSum, setEffects) {\n  let result = (baseValue) * (1 + setEffects + relicSum[statP] + trace[statP] + lc[statP]) + relicSum[stat] + trace[stat]\n  return result\n}\n\nfunction calculateBaseStat(stat, base, lc) {\n  let result = (base[stat] + lc[stat])\n  return result\n}\n\nfunction calculatePercentStat(stat, base, lc, trace, relicSum, setEffects) {\n  return base[stat] + lc[stat] + relicSum[stat] + trace[stat] + setEffects\n}\n\nself.onmessage = function (e) {\n  console.warn(\"Message received from main script\", e.data);\n  // console.warn(\"Request received from main script\", JSON.stringify(e.data.request.characterConditionals, null, 4));\n\n  let data = e.data;\n  let relics = data.relics;\n  let character = data.character;\n  let Stats = Constants.Stats;\n  let statValues = Object.values(Stats)\n  let arr = new Float32Array(data.buffer)\n\n  let headRelics = relics.Head;\n  let handsRelics = relics.Hands;\n  let bodyRelics = relics.Body;\n  let feetRelics = relics.Feet;\n  let planarSphereRelics = relics.PlanarSphere;\n  let linkRopeRelics = relics.LinkRope;\n\n  let topRow = data.topRow\n\n  let lSize = topRow ? 1 : data.consts.lSize\n  let pSize = topRow ? 1 : data.consts.pSize\n  let fSize = topRow ? 1 : data.consts.fSize\n  let bSize = topRow ? 1 : data.consts.bSize\n  let gSize = topRow ? 1 : data.consts.gSize\n  let hSize = topRow ? 1 : data.consts.hSize\n\n  let relicSetSolutions = data.consts.relicSetSolutions\n  let ornamentSetSolutions = data.consts.ornamentSetSolutions\n\n  let relicSetToIndex = data.relicSetToIndex\n  let ornamentSetToIndex = data.ornamentSetToIndex\n\n  let elementalMultipliers = data.elementalMultipliers\n\n  let trace = character.traces\n  let lc = character.lightCone\n  let base = character.base\n\n  let bypassFilters = data.bypassFilters\n  let request = data.request\n  let setConditionals = request.setConditionals\n\n  let characterConditionals = CharacterConditionals.get(request)\n  let lightConeConditionals = LightConeConditionals.get(request)\n\n  let enabledHunterOfGlacialForest          = setConditionals[Constants.Sets.HunterOfGlacialForest][1] == true ? 1 : 0\n  let enabledFiresmithOfLavaForging         = setConditionals[Constants.Sets.FiresmithOfLavaForging][1] == true ? 1 : 0\n  let enabledGeniusOfBrilliantStars         = setConditionals[Constants.Sets.GeniusOfBrilliantStars][1] == true ? 1 : 0\n  let enabledBandOfSizzlingThunder          = setConditionals[Constants.Sets.BandOfSizzlingThunder][1] == true ? 1 : 0\n  let enabledMessengerTraversingHackerspace = setConditionals[Constants.Sets.MessengerTraversingHackerspace][1] == true ? 1 : 0\n  let enabledCelestialDifferentiator        = setConditionals[Constants.Sets.CelestialDifferentiator][1] == true ? 1 : 0\n\n  let valueChampionOfStreetwiseBoxing  = setConditionals[Constants.Sets.ChampionOfStreetwiseBoxing][1]\n  let valueWastelanderOfBanditryDesert = setConditionals[Constants.Sets.WastelanderOfBanditryDesert][1]\n  let valueLongevousDisciple           = setConditionals[Constants.Sets.LongevousDisciple][1]\n  let valueTheAshblazingGrandDuke      = setConditionals[Constants.Sets.TheAshblazingGrandDuke][1]\n  let valuePrisonerInDeepConfinement   = setConditionals[Constants.Sets.PrisonerInDeepConfinement][1]\n\n  // console.warn('!!!', request)\n  // console.warn('!!!', setConditionals)\n  // console.warn('!!!', enabledHunterOfGlacialForest)\n  // console.warn('!!!', valueChampionOfStreetwiseBoxing)\n\n  let brokenMultiplier = request.enemyWeaknessBroken ? 1 : 0.9\n  let resistance = request.enemyElementalWeak ? 0 : request.enemyResistance\n\n  let precomputedX = characterConditionals.precomputeEffects(request)\n  lightConeConditionals.precomputeEffects(precomputedX, request)\n\n  let combatDisplay = request.statDisplay == 'combat'\n\n  for (let row = 0; row < data.HEIGHT; row++) {\n    for (let col = 0; col < data.WIDTH; col++) {\n      let index = data.skip + row * data.HEIGHT + col\n\n      if (index >= data.permutations) {\n        continue;\n      }\n\n      let l = (index % lSize);\n      let p = (((index - l) / lSize) % pSize);\n      let f = (((index - p * lSize - l) / (lSize * pSize)) % fSize);\n      let b = (((index - f * pSize * lSize - p * lSize - l) / (lSize * pSize * fSize)) % bSize);\n      let g = (((index - b * fSize * pSize * lSize - f * pSize * lSize - p * lSize - l) / (lSize * pSize * fSize * bSize)) % gSize);\n      let h = (((index - g * bSize * fSize * pSize * lSize - b * fSize * pSize * lSize - f * pSize * lSize - p * lSize - l) / (lSize * pSize * fSize * bSize * gSize)) % hSize);\n\n      let c = sumRelicStats(headRelics, handsRelics, bodyRelics, feetRelics, planarSphereRelics, linkRopeRelics, h, g, b, f, p, l, statValues)\n\n      let setH = relicSetToIndex[relics.Head[h].set]\n      let setG = relicSetToIndex[relics.Hands[g].set]\n      let setB = relicSetToIndex[relics.Body[b].set]\n      let setF = relicSetToIndex[relics.Feet[f].set]\n\n      let setP = ornamentSetToIndex[relics.PlanarSphere[p].set]\n      let setL = ornamentSetToIndex[relics.LinkRope[l].set]\n\n      let relicSetCount = data.consts.relicSetCount\n      let ornamentSetCount = data.consts.ornamentSetCount\n      let relicSetIndex = setH + setB * relicSetCount + setG * relicSetCount * relicSetCount + setF * relicSetCount * relicSetCount * relicSetCount\n      let ornamentSetIndex = setP + setL * ornamentSetCount;\n\n      c.sets = {}\n      let sets = c.sets\n      sets.PasserbyOfWanderingCloud       = (1 >> (setH ^ 0))  + (1 >> (setG ^ 0))  + (1 >> (setB ^ 0))  + (1 >> (setF ^ 0)) // * 4p -\n      sets.MusketeerOfWildWheat           = (1 >> (setH ^ 1))  + (1 >> (setG ^ 1))  + (1 >> (setB ^ 1))  + (1 >> (setF ^ 1)) // * 4p SPD 6% + basic 10%\n      sets.KnightOfPurityPalace           = (1 >> (setH ^ 2))  + (1 >> (setG ^ 2))  + (1 >> (setB ^ 2))  + (1 >> (setF ^ 2)) // * 4p SHIELD\n      sets.HunterOfGlacialForest          = (1 >> (setH ^ 3))  + (1 >> (setG ^ 3))  + (1 >> (setB ^ 3))  + (1 >> (setF ^ 3)) // * 4p (25% CD)\n      sets.ChampionOfStreetwiseBoxing     = (1 >> (setH ^ 4))  + (1 >> (setG ^ 4))  + (1 >> (setB ^ 4))  + (1 >> (setF ^ 4)) // * 4p (5x5% ATK)\n      sets.GuardOfWutheringSnow           = (1 >> (setH ^ 5))  + (1 >> (setG ^ 5))  + (1 >> (setB ^ 5))  + (1 >> (setF ^ 5)) // * 4p -\n      sets.FiresmithOfLavaForging         = (1 >> (setH ^ 6))  + (1 >> (setG ^ 6))  + (1 >> (setB ^ 6))  + (1 >> (setF ^ 6)) // * 4p 12% skill + (12% Fire)\n      sets.GeniusOfBrilliantStars         = (1 >> (setH ^ 7))  + (1 >> (setG ^ 7))  + (1 >> (setB ^ 7))  + (1 >> (setF ^ 7)) //   4p done\n      sets.BandOfSizzlingThunder          = (1 >> (setH ^ 8))  + (1 >> (setG ^ 8))  + (1 >> (setB ^ 8))  + (1 >> (setF ^ 8)) //   4p (20% ATK)\n      sets.EagleOfTwilightLine            = (1 >> (setH ^ 9))  + (1 >> (setG ^ 9))  + (1 >> (setB ^ 9))  + (1 >> (setF ^ 9)) //   4p -\n      sets.ThiefOfShootingMeteor          = (1 >> (setH ^ 10)) + (1 >> (setG ^ 10)) + (1 >> (setB ^ 10)) + (1 >> (setF ^ 10)) //  4p 16% BE\n      sets.WastelanderOfBanditryDesert    = (1 >> (setH ^ 11)) + (1 >> (setG ^ 11)) + (1 >> (setB ^ 11)) + (1 >> (setF ^ 11)) //  4p (10% CD) + (20% CR)\n      sets.LongevousDisciple              = (1 >> (setH ^ 12)) + (1 >> (setG ^ 12)) + (1 >> (setB ^ 12)) + (1 >> (setF ^ 12)) //  4p (2x8% CR)\n      sets.MessengerTraversingHackerspace = (1 >> (setH ^ 13)) + (1 >> (setG ^ 13)) + (1 >> (setB ^ 13)) + (1 >> (setF ^ 13)) //  4p (12% SPD)\n      sets.TheAshblazingGrandDuke         = (1 >> (setH ^ 14)) + (1 >> (setG ^ 14)) + (1 >> (setB ^ 14)) + (1 >> (setF ^ 14)) //  4p (8*6% ATK) todo\n      sets.PrisonerInDeepConfinement      = (1 >> (setH ^ 15)) + (1 >> (setG ^ 15)) + (1 >> (setB ^ 15)) + (1 >> (setF ^ 15)) //  4p done\n\n      sets.SpaceSealingStation           = (1 >> (setP ^ 0))  + (1 >> (setL ^ 0)) // (12% ATK)\n      sets.FleetOfTheAgeless             = (1 >> (setP ^ 1))  + (1 >> (setL ^ 1)) // (8% ATK)\n      sets.PanCosmicCommercialEnterprise = (1 >> (setP ^ 2))  + (1 >> (setL ^ 2)) // (25% ATK)\n      sets.BelobogOfTheArchitects        = (1 >> (setP ^ 3))  + (1 >> (setL ^ 3)) // (15% DEF)\n      sets.CelestialDifferentiator       = (1 >> (setP ^ 4))  + (1 >> (setL ^ 4)) // (60% CR)\n      sets.InertSalsotto                 = (1 >> (setP ^ 5))  + (1 >> (setL ^ 5)) // (15% ULT/FUA)\n      sets.TaliaKingdomOfBanditry        = (1 >> (setP ^ 6))  + (1 >> (setL ^ 6)) // (20% BE)\n      sets.SprightlyVonwacq              = (1 >> (setP ^ 7))  + (1 >> (setL ^ 7)) // -\n      sets.RutilantArena                 = (1 >> (setP ^ 8))  + (1 >> (setL ^ 8)) // (20% BASIC/SKILL)\n      sets.BrokenKeel                    = (1 >> (setP ^ 9))  + (1 >> (setL ^ 9)) // (10% CD)\n      sets.FirmamentFrontlineGlamoth     = (1 >> (setP ^ 10)) + (1 >> (setL ^ 10)) // (12%/18% DMG)\n      sets.PenaconyLandOfTheDreams       = (1 >> (setP ^ 11)) + (1 >> (setL ^ 11)) // -\n\n      // ************************************************************\n      // Old elemental dmg logic\n      // ************************************************************\n\n      c.ELEMENTAL_DMG = 0\n      if (elementalMultipliers[0]) c.ELEMENTAL_DMG = calculatePercentStat(Stats.Physical_DMG,  base, lc, trace, c, 0.10 * p2(sets.ChampionOfStreetwiseBoxing))\n      if (elementalMultipliers[1]) c.ELEMENTAL_DMG = calculatePercentStat(Stats.Fire_DMG,      base, lc, trace, c, 0.10 * p2(sets.FiresmithOfLavaForging) + 0.10*enabledFiresmithOfLavaForging*p4(sets.FiresmithOfLavaForging))\n      if (elementalMultipliers[2]) c.ELEMENTAL_DMG = calculatePercentStat(Stats.Ice_DMG,       base, lc, trace, c, 0.10 * p2(sets.HunterOfGlacialForest))\n      if (elementalMultipliers[3]) c.ELEMENTAL_DMG = calculatePercentStat(Stats.Lightning_DMG, base, lc, trace, c, 0.10 * p2(sets.BandOfSizzlingThunder))\n      if (elementalMultipliers[4]) c.ELEMENTAL_DMG = calculatePercentStat(Stats.Wind_DMG,      base, lc, trace, c, 0.10 * p2(sets.EagleOfTwilightLine))\n      if (elementalMultipliers[5]) c.ELEMENTAL_DMG = calculatePercentStat(Stats.Quantum_DMG,   base, lc, trace, c, 0.10 * p2(sets.GeniusOfBrilliantStars))\n      if (elementalMultipliers[6]) c.ELEMENTAL_DMG = calculatePercentStat(Stats.Imaginary_DMG, base, lc, trace, c, 0.10 * p2(sets.WastelanderOfBanditryDesert))\n\n      let crSum = c[Stats.CR]\n      let cdSum = c[Stats.CD]\n\n      // ************************************************************\n      // Calculate base stats\n      // ************************************************************\n\n      let baseHp  = calculateBaseStat(Stats.HP, base, lc)\n      let baseAtk = calculateBaseStat(Stats.ATK, base, lc)\n      let baseDef = calculateBaseStat(Stats.DEF, base, lc)\n      let baseSpd = calculateBaseStat(Stats.SPD, base, lc)\n      c.baseAtk = baseAtk\n\n      // ************************************************************\n      // Calculate display stats with unconditional sets\n      // ************************************************************\n\n      c[Stats.HP]  = calculateFlatStat(Stats.HP,  Stats.HP_P,  baseHp,  lc, trace, c,\n        0.12*p2(sets.FleetOfTheAgeless) +\n        0.12*p2(sets.LongevousDisciple))\n\n      c[Stats.ATK] = calculateFlatStat(Stats.ATK, Stats.ATK_P, baseAtk, lc, trace, c,\n        0.12*p2(sets.SpaceSealingStation) +\n        0.12*p2(sets.FirmamentFrontlineGlamoth) +\n        0.12*p2(sets.MusketeerOfWildWheat) +\n        0.12*p2(sets.PrisonerInDeepConfinement))\n\n      c[Stats.DEF] = calculateFlatStat(Stats.DEF, Stats.DEF_P, baseDef, lc, trace, c,\n        0.15*p2(sets.BelobogOfTheArchitects) +\n        0.15*p2(sets.KnightOfPurityPalace))\n\n      c[Stats.SPD] = calculateFlatStat(Stats.SPD, Stats.SPD_P, baseSpd, lc, trace, c,\n        0.06*p2(sets.MessengerTraversingHackerspace) +\n        0.06*p4(sets.MusketeerOfWildWheat))\n\n      c[Stats.CR]  = calculatePercentStat(Stats.CR,  base, lc, trace, c,\n        0.08*p2(sets.InertSalsotto) +\n        0.08*p2(sets.RutilantArena))\n\n      c[Stats.CD]  = calculatePercentStat(Stats.CD,  base, lc, trace, c,\n        0.16*p2(sets.CelestialDifferentiator))\n\n      c[Stats.EHR] = calculatePercentStat(Stats.EHR, base, lc, trace, c,\n        0.10*p2(sets.PanCosmicCommercialEnterprise))\n\n      c[Stats.RES] = calculatePercentStat(Stats.RES, base, lc, trace, c,\n        0.10*p2(sets.BrokenKeel))\n\n      c[Stats.BE]  = calculatePercentStat(Stats.BE,  base, lc, trace, c,\n        0.16*p2(sets.TaliaKingdomOfBanditry) +\n        0.16*p2(sets.ThiefOfShootingMeteor) +\n        0.16*p4(sets.ThiefOfShootingMeteor))\n\n      c[Stats.ERR] = calculatePercentStat(Stats.ERR, base, lc, trace, c,\n        0.05*p2(sets.SprightlyVonwacq) +\n        0.05*p2(sets.PenaconyLandOfTheDreams))\n\n      c[Stats.OHB] = calculatePercentStat(Stats.OHB, base, lc, trace, c,\n        0.10*p2(sets.PasserbyOfWanderingCloud))\n\n      c.id = index\n\n      // ************************************************************\n      // Set up calculated stats storage x\n      // ************************************************************\n\n      let x = Object.assign({}, precomputedX)\n      c.x = x\n\n      x[Stats.ATK] += c[Stats.ATK]\n      x[Stats.DEF] += c[Stats.DEF]\n      x[Stats.HP]  += c[Stats.HP]\n      x[Stats.SPD] += c[Stats.SPD]\n      x[Stats.CD]  += c[Stats.CD]\n      x[Stats.CR]  += c[Stats.CR]\n      x[Stats.EHR] += c[Stats.EHR]\n      x[Stats.RES] += c[Stats.RES]\n      x[Stats.BE]  += c[Stats.BE]\n      x[Stats.ERR] += c[Stats.ERR]\n      x[Stats.OHB] += c[Stats.OHB]\n      x.ELEMENTAL_DMG += c.ELEMENTAL_DMG\n\n      x[Stats.ATK] += request.buffAtk\n      x[Stats.ATK] += request.buffAtkP * baseAtk\n      x[Stats.CD]  += request.buffCd\n      x[Stats.CR]  += request.buffCr\n      x[Stats.SPD] += request.buffSpdP * baseSpd + request.buffSpd\n      x[Stats.BE]  += request.buffBe\n\n      // ************************************************************\n      // Calculate passive effects & buffs. x stores the internally calculated character stats\n      // ************************************************************\n\n      characterConditionals.calculatePassives(c, request)\n      lightConeConditionals.calculatePassives(c, request)\n\n      // ************************************************************\n      // Calculate conditional set effects\n      // ************************************************************\n\n      x[Stats.SPD_P] +=\n        0.12*enabledMessengerTraversingHackerspace*p4(sets.MessengerTraversingHackerspace)\n\n      x[Stats.ATK_P] +=\n        0.05*valueChampionOfStreetwiseBoxing*p4(sets.ChampionOfStreetwiseBoxing) +\n        0.20*enabledBandOfSizzlingThunder*p4(sets.BandOfSizzlingThunder) +\n        0.06*valueTheAshblazingGrandDuke*p4(sets.TheAshblazingGrandDuke) +\n        0.12*(x[Stats.SPD] >= 120 ? 1 : 0)*p2(sets.SpaceSealingStation) +\n        0.08*(x[Stats.SPD] >= 120 ? 1 : 0)*p2(sets.FleetOfTheAgeless) +\n        Math.min(0.25, 0.25*c[Stats.EHR])*p2(sets.PanCosmicCommercialEnterprise)\n\n      x[Stats.DEF_P] +=\n        0.15*(c[Stats.EHR] >= 0.50 ? 1 : 0)*p2(sets.BelobogOfTheArchitects)\n\n      x[Stats.CR] +=\n        0.10*(valueWastelanderOfBanditryDesert > 0 ? 1 : 0)*p4(sets.WastelanderOfBanditryDesert) +\n        0.08*valueLongevousDisciple*p4(sets.LongevousDisciple) +\n        0.60*enabledCelestialDifferentiator*(c[Stats.CD] >= 1.20 ? 1 : 0)*p2(sets.CelestialDifferentiator)\n\n      x[Stats.CD] +=\n        0.25*enabledHunterOfGlacialForest*p4(sets.HunterOfGlacialForest) +\n        0.10*(valueWastelanderOfBanditryDesert == 2 ? 1 : 0)*p4(sets.WastelanderOfBanditryDesert) +\n        0.10*(c[Stats.RES] >= 0.30 ? 1 : 0)*p2(sets.BrokenKeel)\n\n      x[Stats.BE] +=\n        0.20*(c[Stats.SPD] >= 145 ? 1 : 0)*p2(sets.TaliaKingdomOfBanditry)\n\n      x.BASIC_BOOST +=\n        0.10*p4(sets.MusketeerOfWildWheat) +\n        0.20*(x[Stats.CR] >= 0.70 ? 1 : 0)*p2(sets.RutilantArena)\n\n      x.SKILL_BOOST +=\n        0.12*p4(sets.FiresmithOfLavaForging) +\n        0.20*(x[Stats.CR] >= 0.70 ? 1 : 0)*p2(sets.RutilantArena)\n\n      x.ULT_BOOST +=\n        0.15*(x[Stats.CR] >= 0.50 ? 1 : 0)*p2(c.sets.InertSalsotto)\n\n      x.FUA_BOOST +=\n        0.15*(x[Stats.CR] >= 0.50 ? 1 : 0)*p2(c.sets.InertSalsotto)\n\n      x.FUA_BOOST +=\n        0.20*p2(c.sets.TheAshblazingGrandDuke)\n\n      x.DEF_SHRED += p4(c.sets.GeniusOfBrilliantStars) ? (enabledGeniusOfBrilliantStars ? 0.20 : 0.10) : 0\n\n      x.DEF_SHRED += 0.06 * valuePrisonerInDeepConfinement * p4(c.sets.PrisonerInDeepConfinement)\n\n      // These stats have no conditional set effects yet\n      // x[Stats.HP_P] += 0\n      // x[Stats.EHR]  += 0\n      // x[Stats.RES]  += 0\n      // x[Stats.ERR]  += 0\n      // x[Stats.OHB]  += 0\n\n      // ************************************************************\n      // Calculate ratings\n      // ************************************************************\n\n      let damageBonus =\n        0.12*(x[Stats.SPD] >= 135 ? 1 : 0)*p2(sets.FirmamentFrontlineGlamoth) +\n        0.06*(x[Stats.SPD] >= 160 ? 1 : 0)*p2(sets.FirmamentFrontlineGlamoth)\n\n      x.ELEMENTAL_DMG += damageBonus\n\n      let cappedCrit = Math.min(x[Stats.CR] + request.buffCr, 1)\n      let cv = 100 * (crSum * 2 + cdSum)\n\n      c.CV = cv\n\n      // ************************************************************\n      // Add % sum back to the base\n      // ************************************************************\n\n      x[Stats.ATK] += x[Stats.ATK_P] * baseAtk\n      x[Stats.DEF] += x[Stats.DEF_P] * baseDef\n      x[Stats.HP]  += x[Stats.HP_P]  * baseHp\n      x[Stats.SPD] += x[Stats.SPD_P] * baseSpd\n\n      // ************************************************************\n      // Calculate skill base damage\n      // ************************************************************\n\n      characterConditionals.calculateBaseMultis(c, request)\n      lightConeConditionals.calculateBaseMultis(c, request)\n\n      // ************************************************************\n      // Calculate overall multipliers\n      // ************************************************************\n\n      let cLevel = request.characterLevel\n      let eLevel = request.enemyLevel\n      let defReduction = x.DEF_SHRED + request.buffDefShred\n      let defIgnore = 0\n\n      let dmgBoostMultiplier = 1 + x.ALL_DMG_MULTI + x.ELEMENTAL_DMG + request.buffDmgBoost\n      let dmgReductionMultiplier = 1\n\n      let ehp = x[Stats.HP] / (1 - x[Stats.DEF] / (x[Stats.DEF] + 200 + 10 * request.enemyLevel))\n      ehp *= 1 / ((1 - 0.08*p2(sets.GuardOfWutheringSnow)) * x.DMG_RED_MULTI)\n      c.EHP = ehp\n\n      let universalMulti = dmgReductionMultiplier * brokenMultiplier\n\n      x.BASIC_DMG *= universalMulti * (dmgBoostMultiplier + x.BASIC_BOOST) * calculateDefMultiplier(cLevel, eLevel, defReduction, defIgnore, x.BASIC_DEF_PEN) * (Math.min(1, x[Stats.CR] + x.BASIC_CR_BOOST) * (1 + x[Stats.CD] + x.BASIC_CD_BOOST) + (1 - Math.min(1, x[Stats.CR] + x.BASIC_CR_BOOST))) * (1 + x.DMG_TAKEN_MULTI + x.BASIC_VULNERABILITY) * (1 - (resistance - x.RES_PEN - request.buffResPen - x.BASIC_RES_PEN))\n      x.SKILL_DMG *= universalMulti * (dmgBoostMultiplier + x.SKILL_BOOST) * calculateDefMultiplier(cLevel, eLevel, defReduction, defIgnore, x.SKILL_DEF_PEN) * (Math.min(1, x[Stats.CR] + x.SKILL_CR_BOOST) * (1 + x[Stats.CD] + x.SKILL_CD_BOOST) + (1 - Math.min(1, x[Stats.CR] + x.SKILL_CR_BOOST))) * (1 + x.DMG_TAKEN_MULTI + x.SKILL_VULNERABILITY) * (1 - (resistance - x.RES_PEN - request.buffResPen - x.SKILL_RES_PEN))\n      x.ULT_DMG   *= universalMulti * (dmgBoostMultiplier + x.ULT_BOOST)   * calculateDefMultiplier(cLevel, eLevel, defReduction, defIgnore, x.ULT_DEF_PEN)   * (Math.min(1, x[Stats.CR] + x.ULT_CR_BOOST)   * (1 + x[Stats.CD] + x.ULT_CD_BOOST) + (1 - Math.min(1, x[Stats.CR] + x.ULT_CR_BOOST))) * (1 + x.DMG_TAKEN_MULTI + x.ULT_VULNERABILITY) * (1 - (resistance - x.RES_PEN - request.buffResPen - x.ULT_RES_PEN))\n      x.FUA_DMG   *= universalMulti * (dmgBoostMultiplier + x.FUA_BOOST)   * calculateDefMultiplier(cLevel, eLevel, defReduction, defIgnore, x.FUA_DEF_PEN)   * (Math.min(1, x[Stats.CR] + x.FUA_CR_BOOST)   * (1 + x[Stats.CD] + x.FUA_CD_BOOST) + (1 - Math.min(1, x[Stats.CR] + x.FUA_CR_BOOST))) * (1 + x.DMG_TAKEN_MULTI + x.FUA_VULNERABILITY) * (1 - (resistance - x.RES_PEN - request.buffResPen - x.FUA_RES_PEN))\n      x.DOT_DMG   *= universalMulti * (dmgBoostMultiplier + x.DOT_BOOST)   * calculateDefMultiplier(cLevel, eLevel, defReduction, defIgnore, x.DOT_DEF_PEN) * (1 + x.DMG_TAKEN_MULTI + x.DOT_VULNERABILITY) * (1 - (resistance - x.RES_PEN - request.buffResPen - x.DOT_RES_PEN))\n\n      // ************************************************************\n      // Filter results\n      // ************************************************************\n\n      let statCompare = combatDisplay ? x : c\n\n      let result = (\n        statCompare[Stats.HP]  >= request.minHp  && statCompare[Stats.HP]  <= request.maxHp  &&\n        statCompare[Stats.ATK] >= request.minAtk && statCompare[Stats.ATK] <= request.maxAtk &&\n        statCompare[Stats.DEF] >= request.minDef && statCompare[Stats.DEF] <= request.maxDef &&\n        statCompare[Stats.SPD] >= request.minSpd && statCompare[Stats.SPD] <= request.maxSpd &&\n        statCompare[Stats.CR]  >= request.minCr  && statCompare[Stats.CR]  <= request.maxCr  &&\n        statCompare[Stats.CD]  >= request.minCd  && statCompare[Stats.CD]  <= request.maxCd  &&\n        statCompare[Stats.EHR] >= request.minEhr && statCompare[Stats.EHR] <= request.maxEhr &&\n        statCompare[Stats.RES] >= request.minRes && statCompare[Stats.RES] <= request.maxRes &&\n        statCompare[Stats.BE]  >= request.minBe  && statCompare[Stats.BE]  <= request.maxBe  &&\n        cv  >= request.minCv  && cv  <= request.maxCv  &&\n        ehp >= request.minEhp && ehp <= request.maxEhp &&\n        c.WEIGHT  >= request.minWeight  && c.WEIGHT  <= request.maxWeight  &&\n        x.BASIC_DMG >= request.minBasic && x.BASIC_DMG <= request.maxBasic &&\n        x.SKILL_DMG >= request.minSkill && x.SKILL_DMG <= request.maxSkill &&\n        x.ULT_DMG >= request.minUlt && x.ULT_DMG <= request.maxUlt &&\n        x.FUA_DMG >= request.minFua && x.FUA_DMG <= request.maxFua &&\n        x.DOT_DMG >= request.minDot && x.DOT_DMG <= request.maxDot\n      )\n\n      // ************************************************************\n      // Pack the passing results into the ArrayBuffer to return\n      // ************************************************************\n\n      if (topRow || result && (relicSetSolutions[relicSetIndex] == 1) && (ornamentSetSolutions[ornamentSetIndex] == 1)) {\n        BufferPacker.packCharacter(arr, row * data.HEIGHT + col, c);\n      }\n    }\n  }\n\n  self.postMessage({\n    rows: [],\n    buffer: data.buffer\n  }, [data.buffer]);\n}\n\nfunction calculateDefMultiplier(cLevel, eLevel, defReduction, defIgnore, additionalPen) {\n  return (cLevel + 20) / ((eLevel + 20) * Math.max(0, 1 - defReduction - defIgnore - additionalPen) + cLevel + 20)\n}\n\nfunction p4(set) {\n  return set >> 2\n}\n\nfunction p2(set) {\n  return Math.min(1, set >> 1)\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [843], () => (__webpack_require__(77546)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"f14a7330\" + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/dreary-quibbles/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t546: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkhsr_optimizer\"] = self[\"webpackChunkhsr_optimizer\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","__webpack_require__.nc = undefined;","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(843).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["Stats","HP_P","ATK_P","DEF_P","SPD_P","HP","ATK","DEF","SPD","CD","CR","EHR","RES","BE","ERR","OHB","Physical_DMG","Fire_DMG","Ice_DMG","Lightning_DMG","Wind_DMG","Quantum_DMG","Imaginary_DMG","StatsToReadable","StatsToIndex","i","Object","values","map","x","Parts","Head","Hands","Body","Feet","PlanarSphere","LinkRope","PartsToReadable","SetsRelics","SetsOrnaments","Sets","SetsRelicsNames","SetsOrnamentsNames","OrnamentSetToIndex","length","RelicSetToIndex","Constants","MAX_INT","BufferPacker","extractCharacter","arr","offset","id","ED","CV","WEIGHT","EHP","BASIC","SKILL","ULT","FUA","DOT","xHP","xATK","xDEF","xSPD","xCR","xCD","xEHR","xRES","xBE","xERR","xOHB","xELEMENTAL_DMG","extractArrayToResults","results","push","packCharacter","character","ELEMENTAL_DMG","BASIC_DMG","SKILL_DMG","ULT_DMG","FUA_DMG","DOT_DMG","cleanFloatBuffer","buffer","Float32Array","fill","createFloatBuffer","Text","Typography","HeaderText","styled","_templateObject","_taggedTemplateLiteral","justify","align","inputWidth","numberWidth","sliderWidth","InputNumber","_templateObject2","precisionRound","number","precision","arguments","undefined","factor","Math","pow","round","FormSwitch","props","_jsxs","Flex","children","_jsx","style","minWidth","display","Form","Item","name","conditionalType","valuePropName","Switch","checkedChildren","CheckOutlined","unCheckedChildren","CloseOutlined","disabled","defaultChecked","text","FormSlider","inputValue","setInputValue","useState","onChange","newValue","multiplier","percent","step","symbol","vertical","gap","marginBottom","min","max","controls","size","width","parser","value","formatter","concat","addonAfter","height","Slider","marginTop","marginLeft","tooltip","textAlign","lc","ASHBLAZING_ATK_STACK","calculateAshblazingSet","c","request","hitMulti","enabled","sets","TheAshblazingGrandDuke","ashblazingAtk","setConditionals","baseAtk","ashblazingMulti","characterOptionMapping","e","talentCrBuff","talent","talentHpDrainAtkBuffMax","basicScaling","basic","skillScaling","skill","skillEnhancedScaling","ultScaling","ult","defaults","talentEnhancedState","talentHpDrainAtkBuff","e1CdBuff","e2SkillDmgBuff","precomputeEffects","r","characterConditionals","assign","baseComputedStatsObject","ULT_BOOST","BASIC_SCALING","SKILL_SCALING","enemyCount","ULT_SCALING","FUA_SCALING","SKILL_BOOST","calculatePassives","calculateBaseMultis","talentMaxStacks","ultEnhancedScaling","ultEnhancedExtraHitScaling","talentCrStackValue","ultEnhanced","talentStacks","ultEnhancedExtraHits","e2UltAtkBuff","enemyHpPercent","ULT_DEF_PEN","talentMissingHpDmgBoostMax","selfCurrentHpPercent","ultSpdBuffValue","talentStacksAtkBuff","skillExtraDmgHitsMax","dotScaling","talentBuffStacks","skillExtraDmgHits","ultSpdBuff","DOT_SCALING","healingMaxHpBuff","talentDmgReductionBuff","e2UltHealingBuff","e4SkillHealingDmgBuffStacks","DMG_RED_MULTI","ALL_DMG_MULTI","enhancedStateDmgBoost","basicEnhancedAtkScaling","basicEnhancedHpScaling","ultAtkScaling","ultHpScaling","ultLostHpScaling","fuaAtkScaling","fuaHpScaling","hitMultiByTargets","enhancedStateActive","hpPercentLostTotal","e4MaxHpIncreaseStacks","FUA_BOOST","skillDmgBoostValue","ultAtkBoostValue","ultCdBoostValue","ultCdBoostBaseValue","fuaScaling","techniqueBuff","battleStartDefBuff","skillBuff","ultBuff","e2SkillSpdBuff","BASIC_CR_BOOST","ultDmgReductionValue","ultFuaExtraScaling","hitMultiByTargetsBlast","talentEnemyMarked","e4DmgReductionBuff","extraPenValue","ultExtraScaling","talentPenBuff","enemySlowed","BASIC_BOOST","RES_PEN","skillCrBuffValue","skillHpBuffValue","talentDmgReductionValue","skillActive","e6TeamHpLostPercent","talentDebuffDmgIncreaseValue","talentDebuffMax","talentDebuffStacks","enemyBurned","e2BurnMultiBoost","DMG_TAKEN_MULTI","ultAtkBuffValue","talentDmgBoostValue","targetBurdenActive","burdenAtkBuff","skillSpdBuff","targetFrozen","e2TalentCritStacks","e6UltAtkBuff","targetBurned","selfCurrentHp80Percent","e1TalentSpdBuff","e6UltExtraHits","targetBurnedExtraScaling","enhancedSkill","e6DmgBuff","righteousHeartStackMax","outroarStackCdValue","righteousHeartDmgValue","basicEnhanced1Scaling","basicEnhanced2Scaling","basicEnhanced3Scaling","basicEnhancements","skillOutroarStacks","talentRighteousHeartStacks","e6ResPenStacks","enemyElementalWeak","BASIC_RES_PEN","skillCritBuff","talentHitsPerAction","talentAttacks","e2DmgBuff","e6FuaVulnerabilityStacks","FUA_CD_BOOST","FUA_VULNERABILITY","stacks","hits","stacksPerMiss","stacksPerHit","ashblazingStacks","atkBoostSum","e1DotDmgReceivedDebuff","DOT_VULNERABILITY","DOT_BOOST","basicEnhancedHitValue","targetUltDebuffDmgTakenValue","basicEnhancedScaling","basicEnhanced","targetUltDebuffed","e1TargetBleeding","basicEnhancedExtraHits","e4TalentStacks","fieldActive","e6ResReduction","skillHpPercentBuff","skillHpFlatBuff","e4TalentAtkBuff","ultDefPenValue","enemyDebuffed","skillRemovedBuff","ultDefPenDebuff","e4SkillResShred","DEF_SHRED","skillStackDmg","talentAtkBuff","basicEnhancedSpdBuff","skillDmgIncreaseStacks","dotVulnerabilityValue","targetDotTakenDebuff","skillExtraHits","targetWindShear","buffedStateDmgBuff","speedBoostStacksMax","buffedState","speedBoostStacks","e6UltTargetDebuff","talentExtraDmgScaling","targetShocked","enemyDefeatedBuff","skillResShredValue","skillDefShredBufValue","ultDefShredValue","skillResShredDebuff","skillDefShredDebuff","ultDefShredDebuff","targetDebuffs","talentSpdBuffValue","ultBuffedAtk","talentSpdBuffStacksMax","skillExtraHitScaling","ultBuffedState","e2DmgReductionBuff","skillTriggerStacks","talentSpdBuffStacks","originalSkillScaling","stanceSkillScaling","stanceScalingProportion","skillAtkBoostMax","ultDmgBoost","benedictionBuff","ultDmgBuff","proofOfDebtFuaVulnerability","enhancedStateFuaScalingBoost","enhancedStateFuaCdBoost","enemyProofOfDebtDebuff","numbyEnhancedState","e1DebtorStacks","ashblazingFuaData","ashblazingBasicData","SKILL_VULNERABILITY","SKILL_DEF_PEN","FUA_DEF_PEN","SKILL_CD_BOOST","SKILL_CR_BOOST","FUA_CR_BOOST","BASIC_VULNERABILITY","BASIC_DEF_PEN","BASIC_CD_BOOST","SKILL_RES_PEN","FUA_RES_PEN","physicaltrailblazer","firetrailblazer","skillExtraHitsMax","talentScaling","enemyDmgTakenDebuff","e1EnhancedState","enemyWeaknessBroken","ultCdBuffValue","talentCdBuffValue","talentCrBuffValue","ultBuffActive","soulsteelBuffActive","critSpdBuff","e1TargetFrozen","e4CurrentHp80","skillAtkBuffValue","ultCrBuffValue","talentAtkScaling","roaringBowstringsActive","initialSpeedBuff","roaringBowstrings","fieldResPenValue","ultFieldActive","e4BeBuff","beOver","floor","maxDebuffStacksMax","e2FuaRatio","procs","fuaMultiByDebuffs","enemyDebuffStacks","ultBoostMax","hitMultiByFuaHits","enemyToughness50","toughnessReductionDmgBoost","fuaHits","e2BeBuff","ULT_CR_BOOST","ULT_CD_BOOST","ULT_VULNERABILITY","DOT_DEF_PEN","ULT_RES_PEN","DOT_RES_PEN","skillDamageReductionValue","basicAtkScaling","basicDefScaling","basicEnhancedDefScaling","ultDefScaling","enhancedBasic","shieldActive","e6DefStacks","talentAtkScalingValue","enhancedUlt","value1","value2","CharacterConditionals","characterFn","characterId","characterEidolon","lightConeOptionMapping","s","sValues","critBuff","lightConeConditionals","healingBuff","basicSkillDmgBuff","hp50DefBuff","initialEhrBuff","inBattleAtkBuff","defeatedEnemyAtkBuff","enemyHp50Buff","enemySlowedDmgBuff","defeatedEnemySpdBuff","selfHp80CrBuff","basicAtkBuff","initialSpdBuff","postUltAtkBuff","postUltHealingBoost","debuffStacksDmgIncrease","dmgResBuff","enemies2CrBuff","atkBuffStacks","enemyHp50FuaBuff","xxxxxxxxxxxxxxxxxxxxx","sameTargetHitStacks","alliesSameElement","enemyHpHigherDmgBoost","sMaxValues","resToHealingBoost","boost","targetEnsnared","maxEnergyDmgBoost","defeatedEnemyCrBuff","defeatedEnemyCdBuff","enemyShockWindShear","initialDmgReductionBuff","sValuesSpd","sValuesDmg","spdDmgBuff","enemyBurnedBleeding","sValuesDmgBoost","sValuesStacks","dmgBoost","defeatedEnemyAtkStacks","extraDmgProc","defScalingUltDmg","sValuesAtk","sValuesCd","atkBuffActive","cdBuffActive","maxEnergyStacks","postSkillHealBuff","enemyCountAtkBuff","enemyWeaknessBreakDmgBuff","spdScalingBuffs","dmgBuff","sValuesErr","postSkillDmgBuff","enemyDebuffedDmgBoost","skillAtkBoost","selfAttackedDefBuff","spdStacks","dotEffect","sValuesCr","enemy3DebuffsCrBoost","targetCodeDebuff","postUltSpdBuff","sValuesSkillUltDmg","sValuesFuaDmg","skillUltDmgBoost","fuaDmgBoost","hpLostDmgBuff","missedCritCrBuff","healingBasedDmgProc","sValuesStackDmg","sValuesDefPen","eclipseStacks","maxStackDefPen","dragonsCallStacks","targetTameStacks","maxEnergyUltDmgStacks","postUltDmgBuff","sValuesFuaPen","debuffCdStacks","postUltBuff","sValuesAtkStacks","sValuesDmgBuff","atkBoostStacks","weaknessBreakDmgBuff","enemyHp50CrBoost","enemyDefeatedAtkBuff","activeShieldDmgDecrease","postUltDotDmgBuff","LightConeConditionals","lcFn","lightCone","lightConeSuperimposition","sumRelicStats","headRelics","handsRelics","bodyRelics","feetRelics","planarSphereRelics","linkRopeRelics","h","g","b","f","p","l","statValues","summedStats","stat","augmentedStats","weightScore","calculateFlatStat","statP","baseValue","trace","relicSum","setEffects","calculateBaseStat","base","calculatePercentStat","calculateDefMultiplier","cLevel","eLevel","defReduction","defIgnore","additionalPen","p4","set","p2","self","onmessage","console","warn","data","relics","topRow","lSize","consts","pSize","fSize","bSize","gSize","hSize","relicSetSolutions","ornamentSetSolutions","relicSetToIndex","ornamentSetToIndex","elementalMultipliers","traces","bypassFilters","enabledHunterOfGlacialForest","HunterOfGlacialForest","enabledFiresmithOfLavaForging","FiresmithOfLavaForging","enabledGeniusOfBrilliantStars","GeniusOfBrilliantStars","enabledBandOfSizzlingThunder","BandOfSizzlingThunder","enabledMessengerTraversingHackerspace","MessengerTraversingHackerspace","enabledCelestialDifferentiator","CelestialDifferentiator","valueChampionOfStreetwiseBoxing","ChampionOfStreetwiseBoxing","valueWastelanderOfBanditryDesert","WastelanderOfBanditryDesert","valueLongevousDisciple","LongevousDisciple","valueTheAshblazingGrandDuke","valuePrisonerInDeepConfinement","PrisonerInDeepConfinement","brokenMultiplier","resistance","enemyResistance","precomputedX","combatDisplay","statDisplay","row","HEIGHT","col","WIDTH","index","skip","permutations","setH","setG","setB","setF","setP","setL","relicSetCount","relicSetIndex","ornamentSetIndex","ornamentSetCount","PasserbyOfWanderingCloud","MusketeerOfWildWheat","KnightOfPurityPalace","GuardOfWutheringSnow","EagleOfTwilightLine","ThiefOfShootingMeteor","SpaceSealingStation","FleetOfTheAgeless","PanCosmicCommercialEnterprise","BelobogOfTheArchitects","InertSalsotto","TaliaKingdomOfBanditry","SprightlyVonwacq","RutilantArena","BrokenKeel","FirmamentFrontlineGlamoth","PenaconyLandOfTheDreams","crSum","cdSum","baseHp","baseDef","baseSpd","buffAtk","buffAtkP","buffCd","buffCr","buffSpdP","buffSpd","buffBe","damageBonus","cv","characterLevel","enemyLevel","buffDefShred","dmgBoostMultiplier","buffDmgBoost","dmgReductionMultiplier","ehp","universalMulti","buffResPen","statCompare","result","minHp","maxHp","minAtk","maxAtk","minDef","maxDef","minSpd","maxSpd","minCr","maxCr","minCd","maxCd","minEhr","maxEhr","minRes","maxRes","minBe","maxBe","minCv","maxCv","minEhp","maxEhp","minWeight","maxWeight","minBasic","maxBasic","minSkill","maxSkill","minUlt","maxUlt","minFua","maxFua","minDot","maxDot","postMessage","rows","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","__webpack_exports__","O","deferred","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","key","splice","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","then","ns","create","def","current","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","get","chunkId","Promise","all","reduce","promises","u","miniCssF","globalThis","Function","window","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime","pop","nc","next"],"sourceRoot":""}