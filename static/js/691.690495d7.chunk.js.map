{"version":3,"file":"static/js/691.690495d7.chunk.js","mappings":"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","sources":["lib/constants.js","lib/bufferPacker.js","components/HeaderText.js","lib/characterConditionals.js","lib/worker/optimizerWorker.js","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/compat get default export","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/nonce","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["export const Stats = {\n  HP_P: 'HP%',\n  ATK_P: 'ATK%',\n  DEF_P: 'DEF%',\n  SPD_P: 'SPD%',\n  HP: 'HP',\n  ATK: 'ATK',\n  DEF: 'DEF',\n  SPD: 'SPD',\n  CD: 'CRIT DMG',\n  CR: 'CRIT Rate',\n  EHR: 'Effect Hit Rate',\n  RES: 'Effect RES',\n  BE: 'Break Effect',\n  ERR: 'Energy Regeneration Rate',\n  OHB: 'Outgoing Healing Boost',\n  Physical_DMG: 'Physical DMG Boost',\n  Fire_DMG: 'Fire DMG Boost',\n  Ice_DMG: 'Ice DMG Boost',\n  Lightning_DMG: 'Lightning DMG Boost',\n  Wind_DMG: 'Wind DMG Boost',\n  Quantum_DMG: 'Quantum DMG Boost',\n  Imaginary_DMG: 'Imaginary DMG Boost'\n}\n\nexport const StatsToReadable = {\n  [Stats.HP_P]: 'HP %',\n  [Stats.ATK_P]: 'ATK %',\n  [Stats.DEF_P]: 'DEF %',\n  [Stats.SPD_P]: 'SPD %',\n  [Stats.HP]: 'HP',\n  [Stats.ATK]: 'ATK',\n  [Stats.DEF]: 'DEF',\n  [Stats.SPD]: 'SPD',\n  [Stats.CD]: 'CRIT DMG',\n  [Stats.CR]: 'CRIT Rate',\n  [Stats.EHR]: 'Effect Hit Rate',\n  [Stats.RES]: 'Effect RES',\n  [Stats.BE]: 'Break Effect',\n  [Stats.ERR]: 'Energy Regen',\n  [Stats.OHB]: 'Healing Boost',\n  [Stats.Physical_DMG]: 'Physical DMG',\n  [Stats.Fire_DMG]: 'Fire DMG',\n  [Stats.Ice_DMG]: 'Ice DMG',\n  [Stats.Lightning_DMG]: 'Lightning DMG',\n  [Stats.Wind_DMG]: 'Wind DMG',\n  [Stats.Quantum_DMG]: 'Quantum DMG',\n  [Stats.Imaginary_DMG]: 'Imaginary DMG'\n}\n\nexport var StatsToIndex = {\n\n}\nlet i = 0;\nObject.values(Stats).map(x => StatsToIndex[x] = i++) \n\nexport const Parts = {\n  Head: 'Head',\n  Hands: 'Hands',\n  Body: 'Body',\n  Feet: 'Feet',\n  PlanarSphere: 'PlanarSphere',\n  LinkRope: 'LinkRope'\n};\nexport const PartsToReadable = {\n  [Parts.Head]: 'Head',\n  [Parts.Hands]: 'Hands',\n  [Parts.Body]: 'Body',\n  [Parts.Feet]: 'Feet',\n  [Parts.PlanarSphere]: 'Sphere',\n  [Parts.LinkRope]: 'Rope'\n};\n\nexport const SetsRelics = {\n  'PasserbyOfWanderingCloud': 'Passerby of Wandering Cloud',\n  'MusketeerOfWildWheat': 'Musketeer of Wild Wheat',\n  'KnightOfPurityPalace': 'Knight of Purity Palace',\n  'HunterOfGlacialForest': 'Hunter of Glacial Forest',\n  'ChampionOfStreetwiseBoxing': 'Champion of Streetwise Boxing',\n  'GuardOfWutheringSnow': 'Guard of Wuthering Snow',\n  'FiresmithOfLavaForging': 'Firesmith of Lava-Forging',\n  'GeniusOfBrilliantStars': 'Genius of Brilliant Stars',\n  'BandOfSizzlingThunder': 'Band of Sizzling Thunder',\n  'EagleOfTwilightLine': 'Eagle of Twilight Line',\n  'ThiefOfShootingMeteor': 'Thief of Shooting Meteor',\n  'WastelanderOfBanditryDesert': 'Wastelander of Banditry Desert',\n  'LongevousDisciple': 'Longevous Disciple',\n  'MessengerTraversingHackerspace': 'Messenger Traversing Hackerspace',\n  'TheAshblazingGrandDuke': 'The Ashblazing Grand Duke',\n  'PrisonerInDeepConfinement': 'Prisoner in Deep Confinement',\n}\n\nexport const SetsOrnaments = {\n  'SpaceSealingStation': 'Space Sealing Station',\n  'FleetOfTheAgeless': 'Fleet of the Ageless',\n  'PanCosmicCommercialEnterprise': 'Pan-Cosmic Commercial Enterprise',\n  'BelobogOfTheArchitects': 'Belobog of the Architects',\n  'CelestialDifferentiator': 'Celestial Differentiator',\n  'InertSalsotto': 'Inert Salsotto',\n  'TaliaKingdomOfBanditry': 'Talia: Kingdom of Banditry',\n  'SprightlyVonwacq': 'Sprightly Vonwacq',\n  'RutilantArena': 'Rutilant Arena',\n  'BrokenKeel': 'Broken Keel',\n  'FirmamentFrontlineGlamoth': 'Firmament Frontline: Glamoth',\n  'PenaconyLandOfTheDreams': 'Penacony, Land of the Dreams',\n}\n\nexport const Sets = {\n  ...SetsRelics,\n  ...SetsOrnaments\n}\n\nexport const SetsRelicsNames = Object.values(SetsRelics)\nexport const SetsOrnamentsNames = Object.values(SetsOrnaments)\n\nconst OrnamentSetToIndex = {}\nfor (let i = 0; i < SetsOrnamentsNames.length; i++) {\n  OrnamentSetToIndex[SetsOrnamentsNames[i]] = i\n}\n\nconst RelicSetToIndex = {}\nfor (let i = 0; i < SetsRelicsNames.length; i++) {\n  RelicSetToIndex[SetsRelicsNames[i]] = i\n}\n\n// let StatMaxes = {\n//   [Stats.HP_P]: 43.2,\n//   [Stats.ATK_P]: 43.2,\n//   [Stats.DEF_P]: 54,\n//   [Stats.HP]: 705,\n//   [Stats.ATK]: 352,\n//   [Stats.CR]: 32.4,\n//   [Stats.CD]: 64.8,\n//   [Stats.OHB]: 34.5,\n//   [Stats.EHR]: 43.2,\n//   [Stats.SPD]: 25,\n//   [Stats.BE]: 64.8,\n//   [Stats.ERR]: 19.4,\n//   [Stats.Physical_DMG]: 38.8,\n//   [Stats.Fire_DMG]: 38.8,\n//   [Stats.Ice_DMG]: 38.8,\n//   [Stats.Lightning_DMG]: 38.8,\n//   [Stats.Wind_DMG]: 38.8,\n//   [Stats.Quantum_DMG]: 38.8,\n//   [Stats.Imaginary_DMG]: 38.8,\n// }\n\nexport const Constants = {\n  Sets,\n  Parts,\n  Stats,\n  StatsToIndex,\n  SetsOrnaments,\n  SetsRelics,\n  SetsRelicsNames,\n  SetsOrnamentsNames,\n  StatsToReadable,\n  PartsToReadable,\n  RelicSetToIndex,\n  OrnamentSetToIndex,\n  // StatMaxes,\n  MAX_INT: 2147483647,\n}","import {Stats} from \"./constants\";\n\nconst SIZE = 43\n\nexport const BufferPacker = {\n  extractCharacter: (arr, offset) => { // Float32Array\n    let i = 0\n    offset = offset * SIZE\n    return {\n      id: arr[offset + i++], // 0\n      [Constants.Stats.HP]:    arr[offset + i++],\n      [Constants.Stats.ATK]:   arr[offset + i++],\n      [Constants.Stats.DEF]:   arr[offset + i++],\n      [Constants.Stats.SPD]:   arr[offset + i++],\n      [Constants.Stats.CD]:    arr[offset + i++],\n      [Constants.Stats.CR]:    arr[offset + i++],\n      [Constants.Stats.EHR]:   arr[offset + i++],\n      [Constants.Stats.RES]:   arr[offset + i++],\n      [Constants.Stats.BE]:    arr[offset + i++],\n      [Constants.Stats.ERR]:   arr[offset + i++],\n      [Constants.Stats.OHB]:   arr[offset + i++],\n      ED:    arr[offset + i++],\n      CV:    arr[offset + i++],\n      DMG:   arr[offset + i++],\n      MCD:   arr[offset + i++],\n      EHP:   arr[offset + i++],\n      BASIC: arr[offset + i++],\n      SKILL: arr[offset + i++],\n      ULT:   arr[offset + i++],\n      FUA:   arr[offset + i++], // 20\n      xHP:  arr[offset + i++],\n      xATK: arr[offset + i++],\n      xDEF: arr[offset + i++],\n      xSPD: arr[offset + i++],\n      xCR:  arr[offset + i++],\n      xCD:  arr[offset + i++],\n      xEHR: arr[offset + i++],\n      xRES: arr[offset + i++],\n      xBE:  arr[offset + i++],\n      xERR: arr[offset + i++],\n      xOHB: arr[offset + i++],\n      xED:  arr[offset + i++], // 32\n    }\n  },\n\n  extractArrayToResults: (arr, length, results) => {\n    for (let i = 0; i < length; i++) {\n      if (arr[i * SIZE + 1]) {\n        results.push(BufferPacker.extractCharacter(arr, i))\n      }\n    }\n  },\n\n  packCharacter: (arr, offset, character) => {\n    let i = 0\n    arr[offset * SIZE + i++] = character.id\n    arr[offset * SIZE + i++] = character[Stats.HP]\n    arr[offset * SIZE + i++] = character[Stats.ATK]\n    arr[offset * SIZE + i++] = character[Stats.DEF]\n    arr[offset * SIZE + i++] = character[Stats.SPD]\n    arr[offset * SIZE + i++] = character[Stats.CD]\n    arr[offset * SIZE + i++] = character[Stats.CR]\n    arr[offset * SIZE + i++] = character[Stats.EHR]\n    arr[offset * SIZE + i++] = character[Stats.RES]\n    arr[offset * SIZE + i++] = character[Stats.BE]\n    arr[offset * SIZE + i++] = character[Stats.ERR]\n    arr[offset * SIZE + i++] = character[Stats.OHB]\n    arr[offset * SIZE + i++] = character.ELEMENTAL_DMG\n    arr[offset * SIZE + i++] = character.CV\n    arr[offset * SIZE + i++] = character.DMG\n    arr[offset * SIZE + i++] = character.MCD\n    arr[offset * SIZE + i++] = character.EHP\n    arr[offset * SIZE + i++] = character.x.BASIC_DMG\n    arr[offset * SIZE + i++] = character.x.SKILL_DMG\n    arr[offset * SIZE + i++] = character.x.ULT_DMG\n    arr[offset * SIZE + i++] = character.x.FUA_DMG\n    arr[offset * SIZE + i++] = character.x[Stats.HP]\n    arr[offset * SIZE + i++] = character.x[Stats.ATK]\n    arr[offset * SIZE + i++] = character.x[Stats.DEF]\n    arr[offset * SIZE + i++] = character.x[Stats.SPD]\n    arr[offset * SIZE + i++] = character.x[Stats.CR]\n    arr[offset * SIZE + i++] = character.x[Stats.CD]\n    arr[offset * SIZE + i++] = character.x[Stats.EHR]\n    arr[offset * SIZE + i++] = character.x[Stats.RES]\n    arr[offset * SIZE + i++] = character.x[Stats.BE]\n    arr[offset * SIZE + i++] = character.x[Stats.ERR]\n    arr[offset * SIZE + i++] = character.x[Stats.OHB]\n    arr[offset * SIZE + i++] = character.x.ED\n  }\n}","import {\n  Typography,\n} from 'antd';\nimport styled from 'styled-components';\nconst { Text } = Typography;\n\nexport const HeaderText = styled(Text)`\n  text-decoration: underline;\n  text-decoration-color: #6d97ffb3;\n  text-underline-offset: 2px\n`","import {Flex, Form, InputNumber, Slider, Switch, Typography} from \"antd\";\nimport React, {useState} from \"react\";\nimport styled from \"styled-components\";\nimport {HeaderText} from \"../components/HeaderText\";\nimport { Constants } from './constants'\nimport {CheckOutlined, CloseOutlined} from \"@ant-design/icons\";\n\nlet Stats = Constants.Stats\nconst InputNumberStyled = styled(InputNumber)`\n  width: 62px\n`\nconst Text = styled(Typography)`\n  white-space: pre-line;\n`\n\nlet justify = 'flex-start'\nlet align = 'center'\nlet inputWidth = 75\nlet numberWidth = 65\nlet sliderWidth = 140\n\nfunction FormSwitch(props) {\n  return (\n    <Flex justify={justify} align={align}>\n      <div style={{minWidth: inputWidth, display: 'block'}}>\n        <Form.Item name={['characterConditionals', props.name]} valuePropName='checked'>\n          <Switch\n            checkedChildren={<CheckOutlined />}\n            unCheckedChildren={<CloseOutlined />}\n          />\n        </Form.Item>\n      </div>\n      <Text>{props.text}</Text>\n    </Flex>\n  )\n}\n\nfunction FormNumberPercent(props) {\n  return (\n    <div style={{minWidth: inputWidth, display: 'block'}}>\n      <Form.Item name={['characterConditionals', props.name]}>\n        <InputNumberStyled\n          size='small'\n          controls={false}\n          formatter={(value) => `${value}%`}\n          parser={(value) => value.replace('%', '')}\n        />\n      </Form.Item>\n    </div>\n  )\n}\n\nfunction FormSlider(props) {\n  const [inputValue, setInputValue] = useState(1);\n  const onChange = (newValue) => {\n    setInputValue(newValue);\n  };\n\n  let multiplier = (props.percent ? 100 : 1)\n  let step = props.percent ? 0.01 : 1\n  let symbol = props.percent ? '%' : ''\n\n  return (\n    <Flex vertical gap={5} style={{marginBottom: 0}}>\n      <Flex justify={justify} align={align}>\n        <div style={{minWidth: inputWidth, display: 'block'}}>\n          <Form.Item name={['characterConditionals', props.name]}>\n            <InputNumber\n              min={props.min}\n              max={props.max}\n              controls={false}\n              size='small'\n              style={{\n                width: numberWidth,\n              }}\n              parser={(value) => value == null || value == '' ? 0 : precisionRound(value / multiplier) }\n              formatter={(value) => `${precisionRound(value * multiplier)}`}\n              addonAfter={symbol}\n              onChange={onChange}\n            />\n          </Form.Item>\n        </div>\n        <Text>{props.text}</Text>\n      </Flex>\n      <Flex align='center' justify='flex-start' gap={10}>\n        <Form.Item name={['characterConditionals', props.name]}>\n          <Slider\n            min={props.min}\n            max={props.max}\n            step={step}\n            value={typeof inputValue === 'number' ? inputValue : 0}\n            style={{\n              minWidth: sliderWidth,\n              marginTop: 0,\n              marginBottom: 0,\n              marginLeft: 1\n            }}\n            tooltip={{\n              formatter: (value) => `${precisionRound(value * multiplier)}${symbol}`\n            }}\n            onChange={onChange}\n          />\n        </Form.Item>\n        <Text style={{minWidth: 20, marginBottom: 2, textAlign: 'center'}}>{`${precisionRound(props.max * multiplier)}${symbol}`}</Text>\n      </Flex>\n    </Flex>\n  )\n}\n\nfunction precisionRound(number, precision = 8) {\n  let factor = Math.pow(10, precision);\n  return Math.round(number * factor) / factor;\n}\n\nconst characterOptionMapping = {\n  1212: jingliu,\n  1302: argenti,\n  1008: arlan,\n  1009: asta,\n  1211: bailu,\n  1205: blade, // Verify E6 FUA dmg\n  1101: bronya, // Does E4 FUA benefit from 100% crit?\n  1107: clara, // Revisit\n  1002: danheng, // Check numbers\n  1208: fuxuan, // Check numbers\n  1104: gepard,\n  1210: guinaifen, // All wrong\n  1215: hanya,\n  1013: herta, // Kinda complicated with hp% buffs\n  1003: himeko,\n  1109: hook,\n  1217: huohuo,\n  1213: imbibitorlunae, // Kinda complicated with hit stacking dmg, revisit\n  1204: jingyuan, // E6 not implemented\n  1005: kafka, // idk man\n  1111: luka,\n  1203: luocha,\n  1110: lynx,\n  1001: march7th,\n  1105: natasha,\n  1106: pela,\n  1201: qingque,\n  1108: sampo, // Revisit dots\n  1102: seele,\n  1103: serval, // Revisit dots\n  1006: silverwolf,\n  1206: sushang,\n  1202: tingyun, // Revisit buff scaling\n  1112: topaz, // Revisit with fua\n  8001: physicaltrailblazer,\n  8002: physicaltrailblazer,\n  8003: firetrailblazer,\n  8004: firetrailblazer,\n  1004: welt,\n  1209: yanqing,\n  1207: yukong,\n}\n\n// TODO profile & convert to array for performance?\nconst baseComputedStatsObject = {\n  [Stats.HP_P]: 0,\n  [Stats.ATK_P]: 0,\n  [Stats.DEF_P]: 0,\n  [Stats.SPD_P]: 0,\n  [Stats.HP]: 0,\n  [Stats.ATK]: 0,\n  [Stats.DEF]: 0,\n  [Stats.SPD]: 0,\n  [Stats.CD]: 0,\n  [Stats.CR]: 0,\n  [Stats.EHR]: 0,\n  [Stats.RES]: 0,\n  [Stats.BE]: 0,\n  [Stats.ERR]: 0,\n  [Stats.OHB]: 0,\n\n  ELEMENTAL_DMG: 0,\n  DEF_SHRED: 0,\n  DMG_TAKEN_MULTI: 0,\n  ALL_DMG_MULTI: 0,\n  RES_PEN: 0,\n  DMG_RED_MULTI: 0, // TODO should be multiplicative\n\n  BASIC_CR_BOOST: 0,\n  SKILL_CR_BOOST: 0,\n  ULT_CR_BOOST: 0,\n  FUA_CR_BOOST: 0,\n\n  BASIC_CD_BOOST: 0,\n  SKILL_CD_BOOST: 0,\n  ULT_CD_BOOST: 0,\n  FUA_CD_BOOST: 0,\n\n  BASIC_SCALING: 0,\n  SKILL_SCALING: 0,\n  ULT_SCALING: 0,\n  FUA_SCALING: 0,\n\n  BASIC_BOOST: 0,\n  SKILL_BOOST: 0,\n  ULT_BOOST: 0,\n  FUA_BOOST: 0,\n\n  BASIC_DMG: 0,\n  SKILL_DMG: 0,\n  ULT_DMG: 0,\n  FUA_DMG: 0,\n\n  BASIC_DEF_PEN: 0,\n  SKILL_DEF_PEN: 0,\n  ULT_DEF_PEN: 0,\n  FUA_DEF_PEN: 0,\n}\n\nfunction yukong(e) {\n  let skillAtkBuffValue = skill(e, 0.80, 0.88)\n  let ultCdBuffValue = skill(e, 0.65, 0.702)\n  let ultCrBuffValue = skill(e, 0.28, 0.294)\n  let talentAtkScaling = talent(e, 0.80, 0.88)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 3.80, 4.104)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='roaringBowstrings' text='Roaring bowstrings'/>\n        <FormSwitch name='ultBuff' text='Ult buff'/>\n        <FormSwitch name='initialSpeedBuff' text='Initial speed buff'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      roaringBowstringsActive: true,\n      ultBuff: true,\n      initialSpeedBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (r.roaringBowstrings) ? skillAtkBuffValue : 0\n      x[Stats.CR] += (r.ultBuff && r.roaringBowstrings) ? ultCrBuffValue : 0\n      x[Stats.CD] += (r.ultBuff && r.roaringBowstrings) ? ultCdBuffValue : 0\n      x[Stats.SPD_P] += (r.initialSpeedBuff) ? 0.10 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.BASIC_SCALING += talentAtkScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.ELEMENTAL_DMG += 0.12\n      x.ELEMENTAL_DMG += (e >= 4 && r.roaringBowstrings) ? 0.30 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction yanqing(e) {\n  let ultCdBuffValue = ult(e, 0.50, 0.54)\n  let talentCdBuffValue = ult(e, 0.30, 0.33)\n  let talentCrBuffValue = ult(e, 0.20, 0.21)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.20, 2.42)\n  let ultScaling = ult(e, 3.50, 3.78)\n  let fuaScaling = talent(e, 0.50, 0.55)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='ultBuffActive' text='Ult buff active'/>\n        <FormSwitch name='soulsteelBuffActive' text='Soulsteel buff active'/>\n        <FormSwitch name='critSpdBuff' text='Crit spd buff'/>\n        <FormSwitch name='e1TargetFrozen' text='E1 target frozen'/>\n        <FormSwitch name='e4CurrentHp80' text='E4 self HP >= 80%'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      ultBuffActive: true,\n      soulsteelBuffActive: true,\n      critSpdBuff: true,\n      e1TargetFrozen: true,\n      e4CurrentHp80: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CR] += (r.ultBuffActive) ? 0.60 : 0\n      x[Stats.CD] += (r.ultBuffActive && r.soulsteelBuffActive) ? ultCdBuffValue : 0\n      x[Stats.CR] += (r.soulsteelBuffActive) ? talentCrBuffValue : 0\n      x[Stats.CD] += (r.soulsteelBuffActive) ? talentCdBuffValue : 0\n      x[Stats.RES] += (r.soulsteelBuffActive) ? 0.20 : 0\n      x[Stats.SPD] += (r.critSpdBuff) ? 0.10 : 0\n      x[Stats.ERR] += (e >= 2 && r.soulsteelBuffActive) ? 0.10 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += fuaScaling\n\n      x.BASIC_SCALING += (request.enemyElementalWeak) ? 0.30 : 0\n      x.SKILL_SCALING += (request.enemyElementalWeak) ? 0.30 : 0\n      x.ULT_SCALING += (request.enemyElementalWeak) ? 0.30 : 0\n      x.FUA_SCALING += (request.enemyElementalWeak) ? 0.30 : 0\n\n      x.BASIC_SCALING += (e >= 1 && r.e1TargetFrozen) ? 0.60 : 0\n      x.SKILL_SCALING += (e >= 1 && r.e1TargetFrozen) ? 0.60 : 0\n      x.ULT_SCALING += (e >= 1 && r.e1TargetFrozen) ? 0.60 : 0\n      x.FUA_SCALING += (e >= 1 && r.e1TargetFrozen) ? 0.60 : 0\n\n      // Boost\n      x.RES_PEN += (e >= 4 && r.e4CurrentHp80) ? 0.12 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.FUA_DMG += x.FUA_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction welt(e) {\n  let skillExtraHitsMax = (e >= 6) ? 3 : 2\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 0.72, 0.792)\n  let ultScaling = ult(e, 1.50, 1.62)\n  let talentScaling = talent(e, 0.60, 0.66)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='enemyDmgTakenDebuff' text='Enemy dmg taken debuff'/>\n        <FormSwitch name='enemySlowed' text='Enemy slowed'/>\n        <FormSlider name='skillExtraHits' text='Skill extra hits' min={0} max={skillExtraHitsMax} />\n        <FormSwitch name='e1EnhancedState' text='E1 enhanced state'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      enemySlowed: true,\n      enemyDmgTakenDebuff: true,\n      skillExtraHits: skillExtraHitsMax,\n      e1EnhancedState: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      x.BASIC_SCALING += (r.enemySlowed) ? talentScaling : 0\n      x.SKILL_SCALING += (r.enemySlowed) ? talentScaling : 0\n      x.ULT_SCALING += (r.enemySlowed) ? talentScaling : 0\n\n      x.BASIC_SCALING += (e >= 1 && r.e1EnhancedState) ? 0.50 * basicScaling : 0\n      x.SKILL_SCALING += (e >= 1 && r.e1EnhancedState) ? 0.80 * skillScaling : 0\n\n      x.SKILL_SCALING += r.skillExtraHits * skillScaling\n\n      // Boost\n      x.ELEMENTAL_DMG += (request.enemyWeaknessBroken) ? 0.20 : 0\n      x.DMG_TAKEN_MULTI += (r.enemyDmgTakenDebuff) ? 0.12 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction firetrailblazer(e) {\n  let skillDamageReductionValue = skill(e, 0.50, 0.52)\n\n  let basicAtkScaling = basic(e, 1.00, 1.10)\n  let basicDefScaling = (e >= 1) ? 0.25 : 0\n  let basicEnhancedAtkScaling = basic(e, 1.35, 1.463)\n  let basicEnhancedDefScaling = (e >= 1) ? 0.50 : 0\n  let skillScaling = skill(e, 0, 0)\n  let ultAtkScaling = ult(e, 1.00, 1.10)\n  let ultDefScaling = ult(e, 1.50, 1.65)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='enhancedBasic' text='Enhanced basic'/>\n        <FormSwitch name='skillActive' text='Skill active'/>\n        <FormSwitch name='shieldActive' text='Shield active'/>\n        <FormSlider name='e6DefStacks' text='E6 def stacks' min={0} max={3}/>\n      </Flex>\n    ),\n    defaults: () => ({\n      enhancedBasic: true,\n      skillActive: true,\n      shieldActive: true,\n      e6DefStacks: 3,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.DEF_P] += (e >= 6) ? r.e6DefStacks * 0.10 : 0\n      x[Stats.ATK_P] += (r.shieldActive) ? 0.15 : 0\n\n      // Scaling\n      x.SKILL_SCALING += skillScaling\n\n      // Boost\n      x.DMG_RED_MULTI += (r.skillActive) ? skillDamageReductionValue : 0\n      x.DMG_RED_MULTI += (r.skillActive) ? 0.15 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      if (r.enhancedBasic) {\n        x.BASIC_DMG += basicEnhancedAtkScaling * x[Stats.ATK]\n        x.BASIC_DMG += basicEnhancedDefScaling * x[Stats.DEF]\n      } else {\n        x.BASIC_DMG += basicAtkScaling * x[Stats.ATK]\n        x.BASIC_DMG += basicDefScaling * x[Stats.DEF]\n      }\n\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += ultAtkScaling * x[Stats.ATK]\n      x.ULT_DMG += ultDefScaling * x[Stats.DEF]\n    }\n  }\n}\n\nfunction physicaltrailblazer(e) {\n  let talentAtkScalingValue = talent(e, 0.20, 0.22)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.25, 1.375)\n  let ultScaling = ult(e, 4.5, 4.80)\n  let ultEnhancedScaling = ult(e, 2.70, 2.88)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='enhancedUlt' text='Aoe ult'/>\n        <FormSlider name='talentStacks' text='Talent stacks' min={0} max={2} />\n      </Flex>\n    ),\n    defaults: () => ({\n      talentStacks: true,\n      switchEnabledName: true,\n      sliderName: 0,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += r.talentStacks * talentAtkScalingValue\n      x[Stats.DEF_P] += r.talentStacks * 0.10\n      x[Stats.CR] += (request.enemyWeaknessBroken) ? 0.25 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += (r.enhancedUlt) ? ultEnhancedScaling : ultScaling\n\n      // Boost\n      x.SKILL_BOOST += 0.25\n      x.ULT_BOOST += (r.enhancedUlt) ? 0.25 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction topaz(e) {\n  let value = (e >= 0) ? -1 : -1\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, -1, -1)\n  let ultScaling = ult(e, -1, -1)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='talentName' text='Text'/>\n        <FormSlider name='talentHpDrainAtkBuff' text='HP drain ATK buff' min={0} max={0} percent />\n      </Flex>\n    ),\n    defaults: () => ({\n      talentName: true,\n      switchEnabledName: true,\n      sliderName: 0,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction tingyun(e) {\n  let skillAtkBoostScaling = skill(e, 0.50, 0.55) + ((e >= 4) ? 0.20 : 0)\n  let skillAtkBoostMax = skill(e, 0.25, 0.27)\n  let ultDmgBoost = ult(e, 0.50, 0.56)\n  let talentScaling = talent(e, 0.60, 0.66) + ((e >= 4) ? 0.20 : 0)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 0, 0)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='benedictionBuff' text='Benediction buff'/>\n        <FormSwitch name='skillSpdBuff' text='Skill spd buff'/>\n        <FormSwitch name='ultSpdBuff' text='Ult spd buff'/>\n        <FormSwitch name='ultDmgBuff' text='Ult dmg buff'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      benedictionBuff: false,\n      skillSpdBuff: false,\n      ultSpdBuff: false,\n      ultDmgBuff: false,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.SPD] += (e >= 1 && r.ultSpdBuff) ? 0.20 : 0\n      x[Stats.ATK_P] += (r.benedictionBuff) ? skillAtkBoostMax : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.BASIC_BOOST += 0.40\n      x.ELEMENTAL_DMG += (r.ultDmgBuff) ? ultDmgBoost : 0\n\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction sushang(e) {\n  let talentSpdBuffValue = talent(e, 0.20, 0.21)\n  let ultBuffedAtk = ult(e, 0.30, 0.324)\n  let talentSpdBuffStacksMax = (e >= 6) ? 2 : 1\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.10, 2.31)\n  let skillExtraHitScaling = skill(e, 1.00, 1.10)\n  let ultScaling = ult(e, 3.20, 3.456)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='ultBuffedState' text='Ult buffed state'/>\n        <FormSwitch name='e2DmgReductionBuff' text='E2 dmg reduction'/>\n        <FormSlider name='skillExtraHits' text='Skill extra hits' min={0} max={3} />\n        <FormSlider name='skillTriggerStacks' text='Skill trigger stacks' min={0} max={10} />\n        <FormSlider name='talentSpdBuffStacks' text='Talent spd buff stacks' min={0} max={talentSpdBuffStacksMax} />\n      </Flex>\n    ),\n    defaults: () => ({\n      ultBuffedState: true,\n      e2DmgReductionBuff: true,\n      skillExtraHits: 3,\n      skillTriggerStacks: 10,\n      talentSpdBuffStacks: talentSpdBuffStacksMax,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.BE] += (e >= 4) ? 0.40 : 0\n      x[Stats.ATK_P] += (r.ultBuffedState) ? ultBuffedAtk : 0\n      x[Stats.SPD_P] += (r.talentSpdBuffStacks) * talentSpdBuffValue\n\n      // Scaling\n      // Trace only affects stance damage not skill damage - boost this based on proportion of stance : total skill dmg\n      let originalSkillScaling = skillScaling\n      let stanceSkillScaling = 0\n      stanceSkillScaling += (r.skillExtraHits >= 1) ? skillExtraHitScaling : 0\n      stanceSkillScaling += (r.ultBuffedState && r.skillExtraHits >= 2) ? skillExtraHitScaling * 0.5 : 0\n      stanceSkillScaling += (r.ultBuffedState && r.skillExtraHits >= 3) ? skillExtraHitScaling * 0.5 : 0\n      let stanceScalingProportion = stanceSkillScaling / (stanceSkillScaling + originalSkillScaling)\n\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += originalSkillScaling\n      x.SKILL_SCALING += stanceSkillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.SKILL_BOOST += r.skillTriggerStacks * 0.025 * stanceScalingProportion\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction silverwolf(e) {\n  let skillResShredValue = skill(e, 0.10, 0.105)\n  let skillDefShredBufValue = skill(e, 0.08, 0.088)\n  let ultDefShredValue = ult(e, 0.45, 0.468)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.96, 2.156)\n  let ultScaling = ult(e, 3.80, 4.104)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='skillResShredDebuff' text='Skill res shred'/>\n        <FormSwitch name='skillDefShredDebuff' text='Skill def shred'/>\n        <FormSwitch name='ultDefShredDebuff' text='Ult def shred'/>\n        <FormSlider name='targetDebuffs' text='Target debuffs' min={0} max={5} />\n      </Flex>\n    ),\n    defaults: () => ({\n      skillResShredDebuff: true,\n      skillDefShredDebuff: true,\n      ultDefShredDebuff: true,\n      targetDebuffs: 5,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.ULT_SCALING += (e >= 4) ? r.targetDebuffs * 0.20 : 0\n\n      // Boost\n      x.RES_PEN += (r.skillResShredDebuff) ? skillResShredValue : 0\n      x.RES_PEN += (r.skillResShredDebuff && r.targetDebuffs >= 3 ) ? 0.03 : 0\n      x.DEF_SHRED += (r.skillDefShredDebuff) ? skillDefShredBufValue : 0\n      x.DEF_SHRED += (r.ultDefShredDebuff) ? ultDefShredValue : 0\n      x.ELEMENTAL_DMG += (e >= 6) ? r.targetDebuffs * 0.20 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction serval(e) {\n  let talentExtraDmgScaling = talent(e, 0.72, 0.792)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.40, 1.54)\n  let ultScaling = ult(e, 1.80, 1.944)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='targetShocked' text='Target shocked'/>\n        <FormSwitch name='enemyDefeatedBuff' text='Enemy killed buff'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      targetShocked: true,\n      enemyDefeatedBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK] += (r.enemyDefeatedBuff) ? 0.20 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      x.BASIC_SCALING += (r.targetShocked) ? talentExtraDmgScaling : 0\n      x.SKILL_SCALING += (r.targetShocked) ? talentExtraDmgScaling : 0\n      x.ULT_SCALING += (r.targetShocked) ? talentExtraDmgScaling : 0\n\n      // Boost\n      x.ELEMENTAL_DMG += (e >= 6 && r.targetShocked) ? 0.30 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction seele(e) {\n  let buffedStateDmgBuff = talent(e, 0.80, 0.88)\n  let speedBoostStacksMax = (e >= 2 ? 2 : 1)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.20, 2.42)\n  let ultScaling = ult(e, 4.25, 4.59)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='buffedState' text='Buffed state'/>\n        <FormSlider name='speedBoostStacks' text='Speed boost stacks' min={0} max={speedBoostStacksMax} />\n        <FormSwitch name='e6UltTargetDebuff' text='E6 ult debuff'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      buffedState: true,\n      speedBoostStacks: speedBoostStacksMax,\n      e6UltTargetDebuff: true\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CR] += (e >= 1 && request.enemyHpPercent <= 0.80) ? 0.15 : 0\n      x[Stats.SPD_P] += 0.25 * r.speedBoostStacks\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.ELEMENTAL_DMG += (r.buffedState) ? buffedStateDmgBuff : 0\n      x.RES_PEN += (r.buffedState) ? 0.20 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n\n      x.BASIC_DMG += (e >= 6 && r.e6UltTargetDebuff) ? 0.15 * x.ULT_DMG : 0\n      x.SKILL_DMG += (e >= 6 && r.e6UltTargetDebuff) ? 0.15 * x.ULT_DMG : 0\n      x.ULT_DMG += (e >= 6 && r.e6UltTargetDebuff) ? 0.15 * x.ULT_DMG : 0\n    }\n  }\n}\n\nfunction sampo(e) {\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 0.56, 0.616)\n  let ultScaling = ult(e, 1.60, 1.728)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='targetDotTakenDebuff' text='Ult dot taken debuff'/>\n        <FormSlider name='skillExtraHits' text='Skill extra hits' min={0} max={4} />\n      </Flex>\n    ),\n    defaults: () => ({\n      targetDotTakenDebuff: true,\n      skillExtraHits: 4,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.SKILL_SCALING += (r.skillExtraHits) * skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction qingque(e) {\n  let skillStackDmg = skill(e, 0.38, 0.408)\n  let talentAtkBuff = talent(e, 0.72, 0.792)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let basicEnhancedScaling = basic(e, 2.40, 2.64)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 2.00, 2.16)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='basicEnhanced' text='Basic enhanced'/>\n        <FormSwitch name='basicEnhancedSpdBuff' text='Basic enhanced spd buff'/>\n        <FormSlider name='skillDmgIncreaseStacks' text='Skill dmg stacks' min={0} max={4} />\n      </Flex>\n    ),\n    defaults: () => ({\n      basicEnhanced: true,\n      basicEnhancedSpdBuff: true,\n      skillDmgIncreaseStacks: 4,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (r.basicEnhanced) ? talentAtkBuff : 0\n      x[Stats.SPD_P] += (r.basicEnhancedSpdBuff) ? 0.10 : 0\n\n      // Scaling\n      x.BASIC_SCALING += (r.basicEnhanced) ? basicEnhancedScaling : basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += (e >= 4) ? x.BASIC_SCALING : 0\n\n      // Boost\n      x.ELEMENTAL_DMG += r.skillDmgIncreaseStacks * skillStackDmg\n      x.ULT_BOOST += (e >= 1) ? 0.10 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.FUA_DMG += x.FUA_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction pela(e) {\n  let ultDefPenValue = ult(e, 0.40, 0.42)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.10, 2.31)\n  let ultScaling = ult(e, 1.00, 1.08)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='enemyDebuffed' text='Enemy debuffed'/>\n        <FormSwitch name='skillRemovedBuff' text='Skill removed buff'/>\n        <FormSwitch name='ultDefPenDebuff' text='Ult def pen debuff'/>\n        <FormSwitch name='e4SkillResShred' text='E4 skill res shred'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      enemyDebuffed: true,\n      skillRemovedBuff: true,\n      ultDefPenDebuff: true,\n      e4SkillResShred: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.EHR] += 0.10\n      x[Stats.SPD_P] += (e >= 2 && r.skillRemovedBuff) ? 0.10 : 0\n      x[Stats.SPD_P] += (e >= 2 && r.skillRemovedBuff) ? 0.10 : 0\n      x[Stats.SPD_P] += (e >= 2 && r.skillRemovedBuff) ? 0.10 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.BASIC_BOOST += (r.skillRemovedBuff) ? 0.20 : 0\n      x.SKILL_BOOST += (r.skillRemovedBuff) ? 0.20 : 0\n      x.ULT_BOOST += (r.skillRemovedBuff) ? 0.20 : 0\n\n      x.RES_PEN += (e >= 4 && r.e4SkillResShred) ? 0.12 : 0\n      x.DEF_SHRED += (r.ultDefPenDebuff) ? ultDefPenValue : 0\n\n      x.ELEMENTAL_DMG += (r.enemyDebuffed) ? 0.20 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n\n      x.BASIC_DMG += (e >= 6) ? 0.40 * x[Stats.ATK] : 0\n      x.SKILL_DMG += (e >= 6) ? 0.40 * x[Stats.ATK] : 0\n      x.ULT_DMG += (e >= 6) ? 0.40 * x[Stats.ATK] : 0\n    }\n  }\n}\n\nfunction natasha(e) {\n  let value = (e >= 0) ? -1 : -1\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, -1, -1)\n  let ultScaling = ult(e, -1, -1)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.BASIC_DMG += (e >= 6) ? 0.40 * x[Stats.HP] : 0\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction march7th(e) {\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 1.50, 1.62)\n  let fuaScaling = talent(e, 1.00, 1.10)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += fuaScaling\n\n      // Boost\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.FUA_DMG += x.FUA_SCALING * x[Stats.ATK]\n      x.FUA_DMG += (e >= 4) ? 0.30 * x[Stats.DEF] : 0\n    }\n  }\n}\n\nfunction lynx(e) {\n  let skillHpPercentBuff = skill(e, 0.075, 0.08)\n  let skillHpFlatBuff = skill(e, 200, 223)\n\n  let basicScaling = basic(e, 0.50, 0.55)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 0, 0)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='skillBuff' text='Skill buff'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      skillBuff: true,\n      e4TalentAtkBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.HP_P] += (r.skillBuff) ? skillHpPercentBuff : 0\n      x[Stats.HP] += (r.skillBuff) ? skillHpFlatBuff : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x[Stats.HP] += (e >= 6 && r.skillBuff) ? 0.06 * x[Stats.HP] : 0\n      x[Stats.ATK] += (e >= 4 && r.skillBuff) ? 0.03 * x[Stats.HP] : 0\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.HP]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction luocha(e) {\n  let value = (e >= 0) ? -1 : -1\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 2.00, 2.16)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='fieldActive' text='Field active'/>\n        <FormSwitch name='e6ResReduction' text='E6 res reduction'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      fieldActive: true,\n      e6ResReduction: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (r >= 1 && r.fieldActive) ? 0.20 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.RES_PEN += (e >= 6 && r.e6ResReduction) ? 0.20 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction luka(e) {\n  let basicEnhancedHitValue = basic(e, 0.20, 0.22)\n  let targetUltDebuffDmgTakenValue = ult(e, 0.20, 0.216)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let basicEnhancedScaling = basic(e, 0.20 * 3 + 0.80, 0.22 * 3 + 0.88)\n  let skillScaling = skill(e, 1.20, 1.32)\n  let ultScaling = ult(e, 3.30, 3.564)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='basicEnhanced' text='Basic enhanced'/>\n        <FormSwitch name='targetUltDebuffed' text='Target ult debuffed'/>\n        <FormSlider name='basicEnhancedExtraHits' text='Basic extra hits' min={0} max={3} />\n        <FormSwitch name='e1TargetBleeding' text='E1 target bleeding'/>\n        <FormSlider name='e4TalentStacks' text='E4 talent stacks' min={0} max={4} />\n      </Flex>\n    ),\n    defaults: () => ({\n      basicEnhanced: true,\n      targetUltDebuffed: true,\n      e1TargetBleeding: true,\n      basicEnhancedExtraHits: 3,\n      e4TalentStacks: 4,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (e >= 4) ? r.e4TalentStacks * 0.05 : 0\n\n      // Scaling\n      x.BASIC_SCALING += (r.basicEnhanced) ? basicEnhancedScaling : basicScaling\n      x.BASIC_SCALING += (r.basicEnhanced && r.basicEnhancedExtraHits) * basicEnhancedHitValue\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.DMG_TAKEN_MULTI += (r.targetUltDebuffed) ? targetUltDebuffDmgTakenValue : 0\n      x.ELEMENTAL_DMG += (e >= 1 && r.e1TargetBleeding) ? 0.15 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction kafka(e) {\n  let value = (e >= 0) ? -1 : -1\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, -1, -1)\n  let ultScaling = ult(e, -1, -1)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='talentName' text='Text'/>\n        <FormSlider name='talentHpDrainAtkBuff' text='HP drain ATK buff' min={0} max={0} percent />\n      </Flex>\n    ),\n    defaults: () => ({\n      talentName: true,\n      switchEnabledName: true,\n      sliderName: 0,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction jingyuan(e) {\n  let value = (e >= 0) ? -1 : -1\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.00, 1.10)\n  let ultScaling = ult(e, 2.00, 2.16)\n  let fuaScaling = talent(e, 0.66, 0.726)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='skillCritBuff' text='Skill cr buff'/>\n        <FormSlider name='talentHitsPerAction' text='Talent hits per action' min={3} max={10} />\n        <FormSlider name='talentAttacks' text='Talent attacks' min={0} max={10} />\n        <FormSwitch name='e2TalentBuff' text='E2 fua buff'/>\n        <FormSwitch name='e6TalentDebuff' text='E6 fua debuff'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      skillCritBuff: true,\n      talentHitsPerAction: 10,\n      talentAttacks: 10,\n      e2TalentBuff: true,\n      e6TalentDebuff: true\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CR] += (r.skillCritBuff) ? 0.10 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.FUA_SCALING += fuaScaling\n\n      // Boost\n      x.FUA_CD_BOOST += (r.talentHitsPerAction >= 6) ? 0.25 : 0\n      x.BASIC_BOOST += (e >= 2 && r.e2TalentBuff) ? 0.20 : 0\n      x.SKILL_BOOST += (e >= 2 && r.e2TalentBuff) ? 0.20 : 0\n      x.ULT_BOOST += (e >= 2 && r.e2TalentBuff) ? 0.20 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.FUA_DMG += x.FUA_SCALING * r.talentAttacks * x[Stats.ATK]\n    }\n  }\n}\n\nfunction imbibitorlunae(e) {\n  let value = (e >= 0) ? -1 : -1\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let basicEnhanced1Scaling = basic(e, 2.60, 2.86)\n  let basicEnhanced2Scaling = basic(e, 3.80, 4.18)\n  let basicEnhanced3Scaling = basic(e, 5.00, 5.50)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 3.00, 3.24)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='talentName' text='Text'/>\n        <FormSlider name='talentHpDrainAtkBuff' text='HP drain ATK buff' min={0} max={0} percent />\n      </Flex>\n    ),\n    defaults: () => ({\n      talentName: true,\n      switchEnabledName: true,\n      sliderName: 0,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction huohuo(e) {\n  let ultBuffValue = ult(e, 0.40, 0.432)\n\n  let basicScaling = basic(e, 0.50, 0.55)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 0, 0)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='ultBuff' text='Ult buff'/>\n        <FormSwitch name='skillBuff' text='Skill buff'/>\n        <FormSwitch name='e6DmgBuff' text='E6 dmg buff'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      ultBuff: true,\n      skillBuff: true,\n      e6DmgBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.SPD_P] += (e >= 1 && r.skillBuff) ? 0.12 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n\n      // Boost\n      x.ELEMENTAL_DMG += (e >= 6 && r.skillBuff) ? 0.50 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.HP]\n    }\n  }\n}\n\nfunction hook(e) {\n  let targetBurnedExtraScaling = talent(e, 1.00, 1.10)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.40, 2.64)\n  let skillEnhancedScaling = skill(e, 2.80, 3.08)\n  let ultScaling = ult(e, 4.00, 4.32)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='enhancedSkill' text='Enhanced skill'/>\n        <FormSwitch name='targetBurned' text='Target burned'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      enhancedSkill: true,\n      targetBurned: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += (r.enhancedSkill) ? skillEnhancedScaling : skillScaling\n      x.ULT_SCALING += ultScaling\n      x.BASIC_SCALING += (r.targetBurned) ? targetBurnedExtraScaling : 0\n      x.SKILL_SCALING += (r.targetBurned) ? targetBurnedExtraScaling : 0\n      x.ULT_SCALING += (r.targetBurned) ? targetBurnedExtraScaling : 0\n\n      // Boost\n      x.SKILL_BOOST += (e >= 1 && r.enhancedSkill) ? 0.20 : 0\n      x.ELEMENTAL_DMG += (e >= 6 && r.targetBurned) ? 0.20 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\nfunction himeko(e) {\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.00, 2.20)\n  let ultScaling = ult(e, 2.30, 2.484)\n  let fuaScaling = talent(e, 1.40, 1.54)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='targetBurned' text='Target burned'/>\n        <FormSwitch name='selfCurrentHp80Percent' text='Self HP >= 80%'/>\n        <FormSwitch name='e1TalentSpdBuff' text='E1 spd buff'/>\n        <FormSlider name='e6UltExtraHits' text='E6 ult extra hits' min={0} max={2} />\n      </Flex>\n    ),\n    defaults: () => ({\n      targetBurned: true,\n      selfCurrentHp80Percent: true,\n      e1TalentSpdBuff: true,\n      e6UltExtraHits: 2,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CR] += (r.selfCurrentHp80Percent) ? 0.15 : 0\n      x[Stats.SPD_P] += (e >= 1 && r.e1TalentSpdBuff) ? 0.20 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.ULT_SCALING += (e >= 6) ? r.e6UltExtraHits * ultScaling * 0.40 : 0\n      x.FUA_SCALING += fuaScaling\n\n      // Boost\n      x.SKILL_BOOST += (r.targetBurned) ? 0.20 : 0\n      x.ELEMENTAL_DMG += (e >= 2 && request.enemyHpPercent <= 0.50) ? 0.15 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.FUA_DMG += x.FUA_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction herta(e) {\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.00, 1.10)\n  let ultScaling = ult(e, 2.00, 2.16)\n  let fuaScaling = talent(e, 0.40, 0.43)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='techniqueBuff' text='Technique buff'/>\n        <FormSwitch name='targetFrozen' text='Target frozen'/>\n        <FormSlider name='e2TalentCritStacks' text='E2 talent crit stacks' min={0} max={5} />\n        <FormSwitch name='e6UltAtkBuff' text='E6 ult atk buff'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      techniqueBuff: true,\n      targetFrozen: true,\n      e2TalentCritStacks: 5,\n      e6UltAtkBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (r.techniqueBuff) ? 0.40 : 0\n      x[Stats.CR] += (e >= 2) ? r.e2TalentCritStacks * 0.03 : 0\n      x[Stats.ATK_P] += (e >= 6 && r.e6UltAtkBuff) ? 0.25 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.BASIC_SCALING += (e >= 1 && request.enemyHpPercent <= 0.50) ? 0.40 : 0\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      x.SKILL_BOOST += (request.enemyHpPercent >= 0.50) ? 0.20 : 0\n\n      // Boost\n      x.ULT_BOOST += (r.targetFrozen) ? 0.20 : 0\n      x.FUA_BOOST += (e >= 4) ? 0.10 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction hanya(e) {\n  let ultSpdBuffValue = ult(e, 0.20, 0.21)\n  let ultAtkBuffValue = ult(e, 0.60, 0.648)\n  let talentDmgBoostValue = talent(e, 0.30, 0.33)\n\n  talentDmgBoostValue += (e >= 6) ? 0.10 : 0\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.40, 2.64)\n  let ultScaling = ult(e, 0, 0)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='ultBuff' text='Ult buff active'/>\n        <FormSwitch name='targetBurdenActive' text='Target burden active'/>\n        <FormSwitch name='burdenAtkBuff' text='Burden atk buff'/>\n        <FormSwitch name='e2SkillSpdBuff' text='E2 skill spd buff'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      ultBuff: true,\n      targetBurdenActive: true,\n      burdenAtkBuff: true,\n      skillSpdBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      x[Stats.ATK_P] += (r.ultBuff) ? ultAtkBuffValue : 0\n      x[Stats.ATK_P] += (r.burdenAtkBuff) ? 0.10 : 0\n      x[Stats.SPD_P] += (e >= 2 && r.e2SkillSpdBuff) ? 0.20 : 0\n\n      // Boost\n      x.ALL_DMG_MULTI = (r.targetBurdenActive) ? talentDmgBoostValue : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x[Stats.SPD] += (r.ultBuff) ? ultSpdBuffValue * x[Stats.SPD] : 0\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction guinaifen(e) {\n  let talentDebuffDmgIncreaseValue = talent(e, 0.07, 0.076)\n  let talentDebuffMax = (e >= 6) ? 4 : 3\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.20, 1.32)\n  let ultScaling = ult(e, 1.20, 1.296)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSlider name='talentDebuffStacks' text='Talent debuff stacks' min={0} max={talentDebuffMax} />\n        <FormSwitch name='enemyBurned' text='Enemy burned'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      talentDebuffStacks: talentDebuffMax,\n      enemyBurned: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.ELEMENTAL_DMG += (r.enemyBurned) ? 0.20 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      // x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction gepard(e) {\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.00, 2.20)\n  let ultScaling = ult(e, 0, 0)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n      </Flex>\n    ),\n    defaults: () => ({\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.RES] += 0.20\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x[Stats.ATK] += 0.35 * x[Stats.DEF]\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction fuxuan(e) {\n  let skillCrBuffValue = skill(e, 0.12, 0.132)\n  let skillHpBuffValue = skill(e, 0.06, 0.066)\n  let talentDmgReductionValue = talent(e, 0.18, 0.196)\n\n  let basicScaling = basic(e, 0.50, 0.55)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 1.00, 1.08)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='skillActive' text='Skill active'/>\n        <FormSlider name='e6TeamHpLostPercent' text='E6 team hp lost' min={0} max={1.2} percent />\n      </Flex>\n    ),\n    defaults: () => ({\n      skillActive: true,\n      e6TeamHpLostPercent: 1.2,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CD] += (e >= 1) ? 0.30 : 0\n      x[Stats.CR] += (r.skillActive) ? skillCrBuffValue : 0\n      x[Stats.HP_P] += (r.skillActive) ? skillHpBuffValue : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.ULT_BOOST += (e >= 6) ? 2.00 * r.e6TeamHpLostPercent : 0\n      x.DMG_RED_MULTI += talentDmgReductionValue\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.HP]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.HP]\n    }\n  }\n}\nfunction danheng(e) {\n  let extraPenValue = talent(e, 0.36, 0.396)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.60, 2.86)\n  let ultScaling = ult(e, 4.00, 4.32)\n  let ultExtraScaling = ult(e, 1.20, 1.296)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='talentPenBuff' text='Talent pen buff'/>\n        <FormSwitch name='enemySlowed' text='Enemy slowed'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      talentPenBuff: true,\n      enemySlowed: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CR] += (e >= 1 && request.enemyHpPercent >= 0.50) ? 0.12 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n      x.ULT_SCALING += (r.enemySlowed) ? ultExtraScaling : 0\n\n      // Boost\n      x.BASIC_BOOST += (r.enemySlowed) ? 0.40 : 0\n      x.RES_PEN += (r.talentPenBuff) ? extraPenValue : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction clara(e) {\n  let ultDmgReductionValue = ult(e, 0.25, 0.27)\n  let ultFuaExtraScaling = ult(e, 1.60, 1.728)\n\n  let basicScaling = basic(e, 1.0, 1.1)\n  let skillScaling = skill(e, 1.20, 1.32)\n  let fuaScaling = talent(e, 1.60, 1.76)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='ultBuff' text='Ult buff'/>\n        <FormSwitch name='talentEnemyMarked' text='Enemy marked'/>\n        <FormSwitch name='e2UltAtkBuff' text='E2 ult ATK buff'/>\n        <FormSwitch name='e4DmgReductionBuff' text='E4 dmg reduction buff'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      ultBuff: true,\n      talentEnemyMarked: true,\n      e2UltAtkBuff: true,\n      e4DmgReductionBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (e >= 2 && r.e2UltAtkBuff) ? 0.30 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      // x.SKILL_SCALING += r.talentEnemyMarked ?\n      x.FUA_SCALING += fuaScaling\n      x.FUA_SCALING += r.ultBuff ? ultFuaExtraScaling : 0\n\n      // Boost\n      x.DMG_RED_MULTI += 0.10\n      x.DMG_RED_MULTI += r.ultBuff ? ultDmgReductionValue : 0\n      x.DMG_RED_MULTI += (e >= 4 && r.e4DmgReductionBuff) ? 0.30 : 0\n      x.FUA_BOOST += 0.30\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.FUA_DMG += x.FUA_SCALING * x[Stats.ATK]\n    }\n  }\n}\n\nfunction bronya(e) {\n  let skillDmgBoostValue = skill(e, 0.66, 0.726)\n  let ultAtkBoostValue = ult(e, 0.55, 0.594)\n  let ultCdBoostValue = ult(e, 0.16, 0.168)\n  let ultCdBoostBaseValue = ult(e, 0.20, 0.216)\n\n  let basicScaling = basic(e, 1.0, 1.1)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 0, 0)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='techniqueBuff' text='Technique buff'/>\n        <FormSwitch name='battleStartDefBuff' text='Battle start DEF buff'/>\n        <FormSwitch name='skillBuff' text='Skill buff'/>\n        <FormSwitch name='ultBuff' text='Ult buff'/>\n        <FormSwitch name='e2SkillSpdBuff' text='E2 skill SPD buff'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      techniqueBuff: true,\n      battleStartDefBuff: true,\n      skillBuff: true,\n      ultBuff: true,\n      e2SkillSpdBuff: false,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.DEF_P] += (r.battleStartDefBuff) ? 0.20 : 0\n      x[Stats.SPD_P] += (r.e2SkillSpdBuff) ? 0.30 : 0\n      x[Stats.ATK_P] += (r.techniqueBuff) ? 0.15 : 0\n      x[Stats.ATK_P] += (r.ultBuff) ? ultAtkBoostValue : 0\n      x.BASIC_CR_BOOST += 1.00\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n\n      // Boost\n      x.ELEMENTAL_DMG += 0.10\n      x.ELEMENTAL_DMG += (r.skillBuff) ? skillDmgBoostValue : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      // Order matters?\n      x[Stats.CD] += (r.ultBuff) ? ultCdBoostValue * x[Stats.CD] : 0\n      x[Stats.CD] += (r.ultBuff) ? ultCdBoostBaseValue : 0\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.FUA_DMG += (e >= 4) ? x.BASIC_SCALING * x[Stats.ATK] * 0.8 : 0\n    }\n  }\n}\n\nfunction blade(e) {\n  let enhancedStateDmgBoost = skill(e, 0.40, 0.456)\n  let hpPercentLostTotalMax = 0.90\n\n  let basicScaling = basic(e, 1.0, 1.1)\n  let basicEnhancedAtkScaling = skill(e, 0.40, 0.44)\n  let basicEnhancedHpScaling = skill(e, 1.00, 1.10)\n  let ultAtkScaling = ult(e, 0.40, 0.432)\n  let ultHpScaling = ult(e, 1.00, 1.08)\n  let ultLostHpScaling = ult(e, 1.00, 1.08)\n  let fuaAtkScaling = talent(e, 0.44, 0.484)\n  let fuaHpScaling = talent(e, 1.10, 1.21)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='enhancedStateActive' text='Enhanced state'/>\n        <FormSlider name='hpPercentLostTotal' text='HP% lost total' min={0} max={hpPercentLostTotalMax} percent />\n        <FormSlider name='e4MaxHpIncreaseStacks' text='E4 max HP stacks' min={0} max={2} />\n      </Flex>\n    ),\n    defaults: () => ({\n      enhancedStateActive: true,\n      hpPercentLostTotal: hpPercentLostTotalMax,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.CR] += (e >= 2 && r.enhancedStateActive) ? 0.15 : 0\n      x[Stats.HP_P] += (e >= 4) ? r.e4MaxHpIncreaseStacks * 0.20 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      // Rest of the scalings are calculated dynamically\n\n      // Boost\n      x.ELEMENTAL_DMG += r.enhancedStateActive ? enhancedStateDmgBoost : 0\n      x.FUA_BOOST += 0.20\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let r = request.characterConditionals\n      let x = c.x\n\n      if (r.enhancedStateActive) {\n        x.BASIC_DMG += basicEnhancedAtkScaling * x[Stats.ATK]\n        x.BASIC_DMG += basicEnhancedHpScaling * x[Stats.HP]\n      } else {\n        x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      }\n\n      x.SKILL_DMG += 0\n\n      x.ULT_DMG += ultAtkScaling * x[Stats.ATK]\n      x.ULT_DMG += ultHpScaling * x[Stats.HP]\n      x.ULT_DMG += ultLostHpScaling * r.hpPercentLostTotal * x[Stats.HP]\n      x.ULT_DMG += (e >= 1 && request.enemyCount == 1) ? 1.50 * r.hpPercentLostTotal * x[Stats.HP] : 0\n\n      x.FUA_DMG += fuaAtkScaling * x[Stats.ATK]\n      x.FUA_DMG += fuaHpScaling * x[Stats.HP]\n      x.FUA_DMG += (e >= 6) ? 0.50 * x[Stats.HP] : 0\n    }\n  }\n}\n\nfunction bailu(e) {\n  let value = (e >= 0) ? -1 : -1\n\n  let basicScaling = basic(e, 1.0, 1.1)\n  let skillScaling = skill(e, 0, 0)\n  let ultScaling = ult(e, 0, 0)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='healingMaxHpBuff' text='Healing max HP buff'/>\n        <FormSwitch name='talentDmgReductionBuff' text='Talent dmg reduced'/>\n        <FormSwitch name='e2UltHealingBuff' text='E2 ult heal buff'/>\n        <FormSlider name='e4SkillHealingDmgBuffStacks' text='E4 dmg buff stacks' min={0} max={3} />\n      </Flex>\n    ),\n    defaults: () => ({\n      healingMaxHpBuff: true,\n      talentDmgReductionBuff: true,\n      e2UltHealingBuff: true,\n      e4SkillHealingDmgBuffStacks: 0,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.HP_P] += (r.healingMaxHpBuff) ? 0.10 : 0\n      x[Stats.OHB] += (e >= 2 && r.e2UltHealingBuff) ? 0.15 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.DMG_RED_MULTI += (r.talentDmgReductionBuff) ? 0.10 : 0\n      x.ALL_DMG_MULTI += (e >= 4) ? r.e4SkillHealingDmgBuffStacks * 0.10 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += 0\n      x.ULT_DMG += 0\n      x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction asta(e) {\n  let ultSpdBuffValue = ult(e, 50, 52.8)\n  let talentStacksAtkBuff = talent(e, 0.14, 0.154)\n  let talentStacksDefBuff = 0.06\n  let skillExtraDmgHitsMax = (e >= 1) ? 5 : 4\n\n  let basicScaling = basic(e, 1.0, 1.1)\n  let skillScaling = skill(e, 0.50, 0.55)\n  let ultScaling = ult(e, 0, 0)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSlider name='skillExtraDmgHits' text='Skill extra hits' min={0} max={skillExtraDmgHitsMax} />\n        <FormSlider name='talentBuffStacks' text='Talent ATK buff stacks' min={0} max={5} />\n        <FormSwitch name='ultSpdBuff' text='Ult SPD buff active'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      talentBuffStacks: 5,\n      skillExtraDmgHits: skillExtraDmgHitsMax,\n      ultSpdBuff: true\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x[Stats.ATK_P] += (r.talentBuffStacks) * talentStacksAtkBuff\n      x[Stats.DEF_P] += (r.talentBuffStacks) * talentStacksDefBuff\n      x[Stats.ERR] += (r.talentBuffStacks >= 2) ? 0.15 : 0\n      x[Stats.SPD] += (r.ultSpdBuff) ? ultSpdBuffValue : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.ELEMENTAL_DMG += 0.18\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += 0\n      x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction arlan(e) {\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.40, 2.64)\n  let ultScaling = ult(e, 3.20, 3.456)\n\n  let talentMissingHpDmgBoostMax = talent(e, 0.72, 0.792)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSlider name='selfCurrentHpPercent' text='Self current HP%' min={0.01} max={1.0} percent />\n      </Flex>\n    ),\n    defaults: () => ({\n      selfCurrentHpPercent: 1.00,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Stats\n      x.ELEMENTAL_DMG += Math.min(talentMissingHpDmgBoostMax, 1 - r.selfCurrentHpPercent)\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += ultScaling\n\n      // Boost\n      x.SKILL_BOOST += (e >= 1 && r.selfCurrentHpPercent <= 0.50) ? 0.10 : 0\n      x.ULT_BOOST += (e >= 6 && r.selfCurrentHpPercent <= 0.50) ? 0.20 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction argenti(e) {\n  let talentMaxStacks = (e >= 4) ? 12 : 10\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 1.20, 1.32)\n  let ultScaling = ult(e, 1.60, 1.728)\n  let ultEnhancedScaling = ult(e, 2.80, 3.024)\n  let ultEnhancedExtraHitScaling = ult(e, 0.95, 1.026)\n  let talentCrStackValue = talent(e, 0.025, 0.028)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='ultEnhanced' text='Enhanced ult'/>\n        <FormSlider name='talentStacks' text='Talent stacks' min={0} max={talentMaxStacks} />\n        <FormSlider name='ultEnhancedExtraHits' text='Ult extra hits' min={0} max={6} />\n        <FormSwitch name='e2UltAtkBuff' text='E2 ult ATK buff'/>\n      </Flex>\n    ),\n    defaults: () => ({\n      ultEnhanced: true,\n      talentStacks: talentMaxStacks,\n      ultEnhancedExtraHits: 6,\n      e2UltAtkBuff: true\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Skills\n      x[Stats.CR] += (r.talentStacks) * talentCrStackValue\n\n      // Traces\n\n      // Eidolons\n      x[Stats.CD] += (e >= 1) ? (r.talentStacks) * 0.04 : 0\n      x[Stats.ATK_P] += (e >= 2 && r.e2UltAtkBuff) ? 0.40 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n      x.SKILL_SCALING += skillScaling\n      x.ULT_SCALING += (r.ultEnhanced) ? ultEnhancedScaling : ultScaling\n      x.ULT_SCALING += (r.ultEnhancedExtraHits) * ultEnhancedExtraHitScaling\n\n      // BOOST\n      x.ULT_BOOST += (request.enemyHpPercent <= 0.5) ? 0.15 : 0\n      x.ULT_DEF_PEN += (e >= 6) ? 0.30 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction jingliu(e) {\n  let talentCrBuff = talent(e, 0.50, 0.52)\n  let talentHpDrainAtkBuffMax = talent(e, 1.80, 1.98)\n\n  let basicScaling = basic(e, 1.00, 1.10)\n  let skillScaling = skill(e, 2.00, 2.20)\n  let skillEnhancedScaling = skill(e, 2.50, 2.75)\n  let ultScaling = ult(e, 3.00, 3.24)\n\n  return {\n    display: () => (\n      <Flex vertical gap={10} >\n        <FormSwitch name='talentEnhancedState' text='Enhanced state'/>\n        <FormSlider name='talentHpDrainAtkBuff' text='HP drain ATK buff' min={0} max={talentHpDrainAtkBuffMax} percent />\n        <FormSwitch name='e1CdBuff' text='E1 ult active' />\n        <FormSwitch name='e2SkillDmgBuff' text='E2 skill buff' />\n      </Flex>\n    ),\n    defaults: () => ({\n      talentEnhancedState: true,\n      talentHpDrainAtkBuff: talentHpDrainAtkBuffMax,\n      e1CdBuff: true,\n      e2SkillDmgBuff: true,\n    }),\n    precomputeEffects: (request) => {\n      let r = request.characterConditionals\n      let x = Object.assign({}, baseComputedStatsObject)\n\n      // Skills\n      x[Stats.CR]    += (r.talentEnhancedState) ? talentCrBuff : 0\n      x[Stats.ATK_P] += (r.talentEnhancedState) ? r.talentHpDrainAtkBuff : 0\n\n      // Traces\n      x[Stats.RES]   += (r.talentEnhancedState) ? 0.35 : 0\n      x.ULT_BOOST    += (r.talentEnhancedState) ? 0.20 : 0\n\n      // Eidolons\n      x[Stats.CD]    += (e >= 1 && r.e1CdBuff) ? 0.24 : 0\n\n      // Scaling\n      x.BASIC_SCALING += basicScaling\n\n      x.SKILL_SCALING += (r.talentEnhancedState) ? skillEnhancedScaling : skillScaling\n      x.SKILL_SCALING += (e >= 1 && r.talentEnhancedState && request.enemyCount == 1) ? 1 : 0\n\n      x.ULT_SCALING += ultScaling\n      x.ULT_SCALING += (e >= 1 && request.enemyCount == 1) ? 1 : 0\n\n      x.FUA_SCALING += 0\n\n      // BOOST\n      x.SKILL_BOOST += (e >= 2 && r.talentEnhancedState && r.e2SkillDmgBuff) ? 0.80 : 0\n\n      return x\n    },\n    calculatePassives: (c, request) => {\n\n    },\n    calculateBaseMultis: (c, request) => {\n      let x = c.x\n\n      x.BASIC_DMG += x.BASIC_SCALING * x[Stats.ATK]\n      x.SKILL_DMG += x.SKILL_SCALING * x[Stats.ATK]\n      x.ULT_DMG += x.ULT_SCALING * x[Stats.ATK]\n      x.FUA_DMG += 0\n    }\n  }\n}\n\nfunction skill(e, value1, value2) {\n  return e >= 3 ? value2 : value1\n}\n\nlet talent = skill\n\nfunction ult(e, value1, value2) {\n  return e >= 5 ? value2 : value1\n}\nlet basic = ult\n\nfunction p4(set) {\n  return set >> 2\n}\n\nfunction p2(set) {\n  return Math.min(1, set >> 1)\n}\n\nexport const CharacterConditionals = {\n  get: (request) => {\n    let characterFn = characterOptionMapping[request.characterId]\n    return characterFn(request.characterEidolon)\n  },\n  getDisplayForCharacter: (id, eidolon) => {\n    console.warn('getDisplayForCharacter', id)\n    if (!id) {\n      return (<div></div>)\n    }\n\n    let characterFn = characterOptionMapping[id]\n    let display = characterFn(eidolon).display()\n\n    return (\n      <Flex vertical gap={10}>\n        <HeaderText>Character passives</HeaderText>\n        {display}\n      </Flex>\n    )\n    // \tenhanced skill\n    // \tcrit rate%\n    // \tatk bonus\n    // \tutl dmg%\n    // \tcrit dmg%,\n    // \tadditional dmg vs 1\n    // \tenhanced skill\n    // \tdmg%\n    // \tatk bonus\n    // \tcrit dmg%\n\n    // toggle: Spectral Transmigration -> CR + 50% + 35% RES + Ult 20%\n    // number: hp drain: 180% atk\n    // toggle E1 -> 24% CD\n    // toggle E1 single target -> 100% ATK\n    // toggle E2 -> skill +80%\n    // toggle E6 -> 50% CD\n\n    // After using Ultimate, increases the DMG of the next Enhanced Skill by 80%.\n\n\n  },\n}","import {Constants, Stats} from '../constants.js'\nimport { BufferPacker } from '../bufferPacker.js'\nimport { CharacterConditionals } from \"../characterConditionals.js\";\n\nfunction sumRelicStats(headRelics, handsRelics, bodyRelics, feetRelics, planarSphereRelics, linkRopeRelics, h, g, b, f, p, l, statValues) {\n  let summedStats = {}\n  for (let stat of statValues) {\n    summedStats[stat] = headRelics[h].augmentedStats[stat] +\n      handsRelics[g].augmentedStats[stat] +\n      bodyRelics[b].augmentedStats[stat] +\n      feetRelics[f].augmentedStats[stat] +\n      planarSphereRelics[p].augmentedStats[stat] +\n      linkRopeRelics[l].augmentedStats[stat]\n  }\n  return summedStats\n}\n\nfunction calculateFlatStat(stat, statP, base, lc, trace, relicSum, setEffects) {\n  let result = (base[stat] + lc[stat]) * (1 + setEffects + relicSum[statP] + trace[statP] + lc[statP]) + relicSum[stat] + trace[stat]\n  return result\n}\n\nfunction calculateFlatStat2(stat, statP, baseValue, lc, trace, relicSum, setEffects) {\n  let result = (baseValue) * (1 + setEffects + relicSum[statP] + trace[statP] + lc[statP]) + relicSum[stat] + trace[stat]\n  return result\n}\n\nfunction calculateBaseStat(stat, base, lc) {\n  let result = (base[stat] + lc[stat])\n  return result\n}\n\nfunction calculatePercentStat(stat, base, lc, trace, relicSum, setEffects) {\n  return base[stat] + lc[stat] + relicSum[stat] + trace[stat] + setEffects\n}\n\nself.onmessage = function (e) {\n  console.warn(\"Message received from main script\", e.data);\n  console.warn(\"Request received from main script\", JSON.stringify(e.data.request.characterConditionals, null, 4));\n\n  let data = e.data;\n  let relics = data.relics;\n  let character = data.character;\n  let Stats = Constants.Stats;\n  let statValues = Object.values(Stats)\n  let arr = new Float32Array(data.buffer)\n\n  let headRelics = relics.Head;\n  let handsRelics = relics.Hands;\n  let bodyRelics = relics.Body;\n  let feetRelics = relics.Feet;\n  let planarSphereRelics = relics.PlanarSphere;\n  let linkRopeRelics = relics.LinkRope;\n\n  let rows = []\n  let lSize = data.consts.lSize\n  let pSize = data.consts.pSize\n  let fSize = data.consts.fSize\n  let bSize = data.consts.bSize\n  let gSize = data.consts.gSize\n  let hSize = data.consts.hSize\n\n  let relicSetSolutions = data.consts.relicSetSolutions\n  let ornamentSetSolutions = data.consts.ornamentSetSolutions\n\n  let relicSetToIndex = data.relicSetToIndex\n  let ornamentSetToIndex = data.ornamentSetToIndex\n\n  let elementalMultipliers = data.elementalMultipliers\n\n  let trace = character.traces\n  let lc = character.lightCone\n  let base = character.base\n\n  let request = data.request\n  let setConditionals = request.setConditionals\n  let characterConditionals = CharacterConditionals.get(request)\n  let precomputeEffects = characterConditionals.precomputeEffects\n  let calculatePassives = characterConditionals.calculatePassives\n  let calculateBaseMultis = characterConditionals.calculateBaseMultis\n\n  let enabledHunterOfGlacialForest          = setConditionals[Constants.Sets.HunterOfGlacialForest][1] == true ? 1 : 0\n  let enabledFiresmithOfLavaForging         = setConditionals[Constants.Sets.FiresmithOfLavaForging][1] == true ? 1 : 0\n  let enabledGeniusOfBrilliantStars         = setConditionals[Constants.Sets.GeniusOfBrilliantStars][1] == true ? 1 : 0\n  let enabledBandOfSizzlingThunder          = setConditionals[Constants.Sets.BandOfSizzlingThunder][1] == true ? 1 : 0\n  let enabledMessengerTraversingHackerspace = setConditionals[Constants.Sets.MessengerTraversingHackerspace][1] == true ? 1 : 0\n  let enabledPrisonerInDeepConfinement      = setConditionals[Constants.Sets.PrisonerInDeepConfinement][1] == true ? 1 : 0\n  let enabledCelestialDifferentiator        = setConditionals[Constants.Sets.CelestialDifferentiator][1] == true ? 1 : 0\n\n  let valueChampionOfStreetwiseBoxing  = setConditionals[Constants.Sets.ChampionOfStreetwiseBoxing][1]\n  let valueWastelanderOfBanditryDesert = setConditionals[Constants.Sets.WastelanderOfBanditryDesert][1]\n  let valueLongevousDisciple           = setConditionals[Constants.Sets.LongevousDisciple][1]\n  let valueTheAshblazingGrandDuke      = setConditionals[Constants.Sets.TheAshblazingGrandDuke][1]\n\n  // console.warn('!!!', request)\n  // console.warn('!!!', setConditionals)\n  // console.warn('!!!', enabledHunterOfGlacialForest)\n  // console.warn('!!!', valueChampionOfStreetwiseBoxing)\n\n  let brokenMultiplier = request.enemyWeaknessBroken ? 1 : 0.9\n  let resistance = request.enemyElementalWeak ? 0 : request.enemyResistance\n\n  let precomputedX = precomputeEffects(request)\n\n  for (let row = 0; row < data.HEIGHT; row++) {\n    for (let col = 0; col < data.WIDTH; col++) {\n      let index = data.skip + row * data.HEIGHT + col\n\n      if (index >= data.permutations) {\n        continue;\n      }\n\n      let l = (index % lSize);\n      let p = (((index - l) / lSize) % pSize);\n      let f = (((index - p * lSize - l) / (lSize * pSize)) % fSize);\n      let b = (((index - f * pSize * lSize - p * lSize - l) / (lSize * pSize * fSize)) % bSize);\n      let g = (((index - b * fSize * pSize * lSize - f * pSize * lSize - p * lSize - l) / (lSize * pSize * fSize * bSize)) % gSize);\n      let h = (((index - g * bSize * fSize * pSize * lSize - b * fSize * pSize * lSize - f * pSize * lSize - p * lSize - l) / (lSize * pSize * fSize * bSize * gSize)) % hSize);\n\n      let c = sumRelicStats(headRelics, handsRelics, bodyRelics, feetRelics, planarSphereRelics, linkRopeRelics, h, g, b, f, p, l, statValues)\n\n      let setH = relicSetToIndex[relics.Head[h].set]\n      let setG = relicSetToIndex[relics.Hands[g].set]\n      let setB = relicSetToIndex[relics.Body[b].set]\n      let setF = relicSetToIndex[relics.Feet[f].set]\n\n      let setP = ornamentSetToIndex[relics.PlanarSphere[p].set]\n      let setL = ornamentSetToIndex[relics.LinkRope[l].set]\n\n      let relicSetCount = data.consts.relicSetCount\n      let ornamentSetCount = data.consts.ornamentSetCount\n      let relicSetIndex = setH + setB * relicSetCount + setG * relicSetCount * relicSetCount + setF * relicSetCount * relicSetCount * relicSetCount\n      let ornamentSetIndex = setP + setL * ornamentSetCount;\n\n      c.sets = {}\n      let sets = c.sets\n      sets.PasserbyOfWanderingCloud       = (1 >> (setH ^ 0))  + (1 >> (setG ^ 0))  + (1 >> (setB ^ 0))  + (1 >> (setF ^ 0)) // * 4p -\n      sets.MusketeerOfWildWheat           = (1 >> (setH ^ 1))  + (1 >> (setG ^ 1))  + (1 >> (setB ^ 1))  + (1 >> (setF ^ 1)) // * 4p SPD 6% + basic 10%\n      sets.KnightOfPurityPalace           = (1 >> (setH ^ 2))  + (1 >> (setG ^ 2))  + (1 >> (setB ^ 2))  + (1 >> (setF ^ 2)) // * 4p SHIELD\n      sets.HunterOfGlacialForest          = (1 >> (setH ^ 3))  + (1 >> (setG ^ 3))  + (1 >> (setB ^ 3))  + (1 >> (setF ^ 3)) // * 4p (25% CD)\n      sets.ChampionOfStreetwiseBoxing     = (1 >> (setH ^ 4))  + (1 >> (setG ^ 4))  + (1 >> (setB ^ 4))  + (1 >> (setF ^ 4)) // * 4p (5x5% ATK)\n      sets.GuardOfWutheringSnow           = (1 >> (setH ^ 5))  + (1 >> (setG ^ 5))  + (1 >> (setB ^ 5))  + (1 >> (setF ^ 5)) // * 4p -\n      sets.FiresmithOfLavaForging         = (1 >> (setH ^ 6))  + (1 >> (setG ^ 6))  + (1 >> (setB ^ 6))  + (1 >> (setF ^ 6)) // * 4p 12% skill + (12% Fire)\n      sets.GeniusOfBrilliantStars         = (1 >> (setH ^ 7))  + (1 >> (setG ^ 7))  + (1 >> (setB ^ 7))  + (1 >> (setF ^ 7)) //   4p !!! todo\n      sets.BandOfSizzlingThunder          = (1 >> (setH ^ 8))  + (1 >> (setG ^ 8))  + (1 >> (setB ^ 8))  + (1 >> (setF ^ 8)) //   4p (20% ATK)\n      sets.EagleOfTwilightLine            = (1 >> (setH ^ 9))  + (1 >> (setG ^ 9))  + (1 >> (setB ^ 9))  + (1 >> (setF ^ 9)) //   4p -\n      sets.ThiefOfShootingMeteor          = (1 >> (setH ^ 10)) + (1 >> (setG ^ 10)) + (1 >> (setB ^ 10)) + (1 >> (setF ^ 10)) //  4p 16% BE\n      sets.WastelanderOfBanditryDesert    = (1 >> (setH ^ 11)) + (1 >> (setG ^ 11)) + (1 >> (setB ^ 11)) + (1 >> (setF ^ 11)) //  4p (10% CD) + (20% CR)\n      sets.LongevousDisciple              = (1 >> (setH ^ 12)) + (1 >> (setG ^ 12)) + (1 >> (setB ^ 12)) + (1 >> (setF ^ 12)) //  4p (2x8% CR)\n      sets.MessengerTraversingHackerspace = (1 >> (setH ^ 13)) + (1 >> (setG ^ 13)) + (1 >> (setB ^ 13)) + (1 >> (setF ^ 13)) //  4p (12% SPD)\n      sets.TheAshblazingGrandDuke         = (1 >> (setH ^ 14)) + (1 >> (setG ^ 14)) + (1 >> (setB ^ 14)) + (1 >> (setF ^ 14)) //  4p (8*6% ATK)\n      sets.PrisonerInDeepConfinement      = (1 >> (setH ^ 15)) + (1 >> (setG ^ 15)) + (1 >> (setB ^ 15)) + (1 >> (setF ^ 15)) //  4p !!! todo\n\n      sets.SpaceSealingStation           = (1 >> (setP ^ 0))  + (1 >> (setL ^ 0)) // (12% ATK)\n      sets.FleetOfTheAgeless             = (1 >> (setP ^ 1))  + (1 >> (setL ^ 1)) // (8% ATK)\n      sets.PanCosmicCommercialEnterprise = (1 >> (setP ^ 2))  + (1 >> (setL ^ 2)) // (25% ATK)\n      sets.BelobogOfTheArchitects        = (1 >> (setP ^ 3))  + (1 >> (setL ^ 3)) // (15% DEF)\n      sets.CelestialDifferentiator       = (1 >> (setP ^ 4))  + (1 >> (setL ^ 4)) // (60% CR)\n      sets.InertSalsotto                 = (1 >> (setP ^ 5))  + (1 >> (setL ^ 5)) // (15% ULT/FUA)\n      sets.TaliaKingdomOfBanditry        = (1 >> (setP ^ 6))  + (1 >> (setL ^ 6)) // (20% BE)\n      sets.SprightlyVonwacq              = (1 >> (setP ^ 7))  + (1 >> (setL ^ 7)) // -\n      sets.RutilantArena                 = (1 >> (setP ^ 8))  + (1 >> (setL ^ 8)) // (20% BASIC/SKILL)\n      sets.BrokenKeel                    = (1 >> (setP ^ 9))  + (1 >> (setL ^ 9)) // (10% CD)\n      sets.FirmamentFrontlineGlamoth     = (1 >> (setP ^ 10)) + (1 >> (setL ^ 10)) // (12%/18% DMG)\n      sets.PenaconyLandOfTheDreams       = (1 >> (setP ^ 11)) + (1 >> (setL ^ 11)) // -\n\n      // ************************************************************\n      // Old elemental dmg logic\n      // ************************************************************\n\n      c.ELEMENTAL_DMG = 0\n      if (elementalMultipliers[0]) c.ELEMENTAL_DMG = calculatePercentStat(Stats.Physical_DMG,  base, lc, trace, c, 0.10 * p2(sets.ChampionOfStreetwiseBoxing))\n      if (elementalMultipliers[1]) c.ELEMENTAL_DMG = calculatePercentStat(Stats.Fire_DMG,      base, lc, trace, c, 0.10 * p2(sets.FiresmithOfLavaForging) + 0.10*enabledFiresmithOfLavaForging*p4(sets.FiresmithOfLavaForging))\n      if (elementalMultipliers[2]) c.ELEMENTAL_DMG = calculatePercentStat(Stats.Ice_DMG,       base, lc, trace, c, 0.10 * p2(sets.HunterOfGlacialForest))\n      if (elementalMultipliers[3]) c.ELEMENTAL_DMG = calculatePercentStat(Stats.Lightning_DMG, base, lc, trace, c, 0.10 * p2(sets.BandOfSizzlingThunder))\n      if (elementalMultipliers[4]) c.ELEMENTAL_DMG = calculatePercentStat(Stats.Wind_DMG,      base, lc, trace, c, 0.10 * p2(sets.EagleOfTwilightLine))\n      if (elementalMultipliers[5]) c.ELEMENTAL_DMG = calculatePercentStat(Stats.Quantum_DMG,   base, lc, trace, c, 0.10 * p2(sets.GeniusOfBrilliantStars))\n      if (elementalMultipliers[6]) c.ELEMENTAL_DMG = calculatePercentStat(Stats.Imaginary_DMG, base, lc, trace, c, 0.10 * p2(sets.WastelanderOfBanditryDesert))\n\n      let crSum = c[Stats.CR]\n      let cdSum = c[Stats.CD]\n\n      // ************************************************************\n      // Calculate base stats\n      // ************************************************************\n\n      let baseHp  = calculateBaseStat(Stats.HP, base, lc)\n      let baseAtk = calculateBaseStat(Stats.ATK, base, lc)\n      let baseDef = calculateBaseStat(Stats.DEF, base, lc)\n      let baseSpd = calculateBaseStat(Stats.SPD, base, lc)\n\n      // ************************************************************\n      // Calculate display stats with unconditional sets\n      // ************************************************************\n\n      c[Stats.HP]  = calculateFlatStat2(Stats.HP,  Stats.HP_P,  baseHp,  lc, trace, c,\n        0.12*p2(sets.FleetOfTheAgeless) +\n        0.12*p2(sets.LongevousDisciple))\n\n      c[Stats.ATK] = calculateFlatStat2(Stats.ATK, Stats.ATK_P, baseAtk, lc, trace, c,\n        0.12*p2(sets.SpaceSealingStation) +\n        0.12*p2(sets.FirmamentFrontlineGlamoth) +\n        0.12*p2(sets.MusketeerOfWildWheat) +\n        0.12*p2(sets.PrisonerInDeepConfinement))\n\n      c[Stats.DEF] = calculateFlatStat2(Stats.DEF, Stats.DEF_P, baseDef, lc, trace, c,\n        0.15*p2(sets.BelobogOfTheArchitects) +\n        0.15*p2(sets.KnightOfPurityPalace))\n\n      c[Stats.SPD] = calculateFlatStat2(Stats.SPD, Stats.SPD_P, baseSpd, lc, trace, c,\n        0.06*p2(sets.MessengerTraversingHackerspace) +\n        0.06*p4(sets.MusketeerOfWildWheat))\n\n      c[Stats.CR]  = calculatePercentStat(Stats.CR,  base, lc, trace, c,\n        0.08*p2(sets.InertSalsotto) +\n        0.08*p2(sets.RutilantArena))\n\n      c[Stats.CD]  = calculatePercentStat(Stats.CD,  base, lc, trace, c,\n        0.16*p2(sets.CelestialDifferentiator))\n\n      c[Stats.EHR] = calculatePercentStat(Stats.EHR, base, lc, trace, c,\n        0.10*p2(sets.PanCosmicCommercialEnterprise))\n\n      c[Stats.RES] = calculatePercentStat(Stats.RES, base, lc, trace, c,\n        0.10*p2(sets.BrokenKeel))\n\n      c[Stats.BE]  = calculatePercentStat(Stats.BE,  base, lc, trace, c,\n        0.16*p2(sets.TaliaKingdomOfBanditry) +\n        0.16*p2(sets.ThiefOfShootingMeteor) +\n        0.16*p4(sets.ThiefOfShootingMeteor))\n\n      c[Stats.ERR] = calculatePercentStat(Stats.ERR, base, lc, trace, c,\n        0.05*p2(sets.SprightlyVonwacq) +\n        0.05*p2(sets.PenaconyLandOfTheDreams))\n\n      c[Stats.OHB] = calculatePercentStat(Stats.OHB, base, lc, trace, c,\n        0.10*p2(sets.PasserbyOfWanderingCloud))\n\n      c.id = index\n\n      // ************************************************************\n      // Set up calculated stats storage x\n      // ************************************************************\n\n      let x = Object.assign({}, precomputedX)\n      c.x = x\n\n      x[Stats.ATK] += c[Stats.ATK]\n      x[Stats.DEF] += c[Stats.DEF]\n      x[Stats.HP]  += c[Stats.HP]\n      x[Stats.SPD] += c[Stats.SPD]\n      x[Stats.CD] += c[Stats.CD]\n      x[Stats.CR] += c[Stats.CR]\n      x[Stats.EHR] += c[Stats.EHR]\n      x[Stats.RES] += c[Stats.RES]\n      x[Stats.BE] += c[Stats.BE]\n      x[Stats.ERR] += c[Stats.ERR]\n      x[Stats.OHB] += c[Stats.OHB]\n      x.ELEMENTAL_DMG += c.ELEMENTAL_DMG\n\n      // ************************************************************\n      // Calculate passive effects & buffs. x stores the internally calculated character stats\n      // ************************************************************\n\n      calculatePassives(c, request)\n\n      // ************************************************************\n      // Calculate conditional set effects\n      // ************************************************************\n\n      x[Stats.SPD_P] +=\n        0.12*enabledMessengerTraversingHackerspace*p4(sets.MessengerTraversingHackerspace)\n\n      x[Stats.ATK_P] +=\n        0.05*valueChampionOfStreetwiseBoxing*p4(sets.ChampionOfStreetwiseBoxing) +\n        0.20*enabledBandOfSizzlingThunder*p4(sets.BandOfSizzlingThunder) +\n        0.06*valueTheAshblazingGrandDuke*p4(sets.TheAshblazingGrandDuke) +\n        0.12*(x[Stats.SPD] >= 120 ? 1 : 0)*p2(sets.SpaceSealingStation) +\n        0.08*(x[Stats.SPD] >= 120 ? 1 : 0)*p2(sets.FleetOfTheAgeless) +\n        Math.min(0.25, 0.25*c[Stats.EHR])*p2(sets.PanCosmicCommercialEnterprise)\n\n      x[Stats.DEF_P] +=\n        0.15*(c[Stats.EHR] >= 0.50 ? 1 : 0)*p2(sets.BelobogOfTheArchitects)\n\n      x[Stats.CR] +=\n        0.10*(valueWastelanderOfBanditryDesert > 0 ? 1 : 0)*p4(sets.WastelanderOfBanditryDesert) +\n        0.08*valueLongevousDisciple*p4(sets.LongevousDisciple) +\n        0.60*enabledCelestialDifferentiator*(c[Stats.CD] >= 1.20 ? 1 : 0)*p2(sets.CelestialDifferentiator)\n\n      x[Stats.CD] +=\n        0.25*enabledHunterOfGlacialForest*p4(sets.HunterOfGlacialForest) +\n        0.10*(valueWastelanderOfBanditryDesert == 2 ? 1 : 0)*p4(sets.WastelanderOfBanditryDesert) +\n        0.10*(c[Stats.RES] >= 0.30 ? 1 : 0)*p2(sets.BrokenKeel)\n\n      x[Stats.BE] +=\n        0.20*(c[Stats.SPD] >= 145 ? 1 : 0)*p2(sets.TaliaKingdomOfBanditry)\n\n      x.BASIC_BOOST +=\n        0.10*p4(sets.MusketeerOfWildWheat) +\n        0.20*(x[Stats.CR] >= 0.70 ? 1 : 0)*p2(sets.RutilantArena)\n\n      x.SKILL_BOOST +=\n        0.12*p4(sets.FiresmithOfLavaForging) +\n        0.20*(x[Stats.CR] >= 0.70 ? 1 : 0)*p2(sets.RutilantArena)\n\n      x.ULT_BOOST +=\n        0.15*(x[Stats.CR] >= 0.50 ? 1 : 0)*p2(c.sets.InertSalsotto)\n\n      x.FUA_BOOST +=\n        0.15*(x[Stats.CR] >= 0.50 ? 1 : 0)*p2(c.sets.InertSalsotto)\n\n      // These stats have no conditional set effects yet\n      // x[Stats.HP_P] += 0\n      // x[Stats.EHR]  += 0\n      // x[Stats.RES]  += 0\n      // x[Stats.ERR]  += 0\n      // x[Stats.OHB]  += 0\n\n      // ************************************************************\n      // Calculate ratings\n      // ************************************************************\n\n      let damageBonus =\n        0.12*(x[Stats.SPD] >= 135 ? 1 : 0)*p2(sets.FirmamentFrontlineGlamoth) +\n        0.06*(x[Stats.SPD] >= 160 ? 1 : 0)*p2(sets.FirmamentFrontlineGlamoth)\n\n      let cappedCrit = Math.min(x[Stats.CR] + request.buffCr, 1)\n      let dmg = 0 // (x[Stats.ATK] + request.buffAtk + (request.buffAtkP * (base[Stats.ATK] + lc[Stats.ATK]))) * ((1 - cappedCrit) + (1 + x[Stats.CD] + request.buffCd) * cappedCrit) * (1 + x.ELEMENTAL_DMG + damageBonus)\n      let mcd = 0 // (x[Stats.ATK] + request.buffAtk + (request.buffAtkP * (base[Stats.ATK] + lc[Stats.ATK]))) * (1 + x[Stats.CD] + request.buffCd) * (1 + x.ELEMENTAL_DMG + damageBonus)\n      let ehp = 0 // x[Stats.HP] / (1 - x[Stats.DEF] / (x[Stats.DEF] + 200 + 10 * 80)) * (1 + 0.08*p2(sets.GuardOfWutheringSnow))\n      let cv = 100 * (crSum * 2 + cdSum)\n\n      c.CV = cv\n      c.DMG = dmg\n      c.MCD = mcd\n      c.EHP = ehp\n\n      // ************************************************************\n      // Add % sum back to the base\n      // ************************************************************\n\n      x[Stats.ATK] += x[Stats.ATK_P] * baseAtk\n      x[Stats.DEF] += x[Stats.DEF_P] * baseDef\n      x[Stats.HP]  += x[Stats.HP_P]  * baseHp\n      x[Stats.SPD] += x[Stats.SPD_P] * baseSpd\n\n      // ************************************************************\n      // Calculate skill base damage\n      // ************************************************************\n\n      calculateBaseMultis(c, request)\n\n      // ************************************************************\n      // Calculate overall multipliers\n      // ************************************************************\n\n      // let cLevel = 50\n      // let eLevel = 50\n      let cLevel = request.characterLevel\n      let eLevel = request.enemyLevel\n      let defReduction = x.DEF_SHRED\n      let defIgnore = 0\n\n      let dmgBoostMultiplier = 1 + x.ALL_DMG_MULTI + x.ELEMENTAL_DMG\n      let resMultiplier = 1 - (resistance - x.RES_PEN)\n      let dmgTakenMultiplier = 1 + x.DMG_TAKEN_MULTI\n      let dmgReductionMultiplier = 1\n\n      let universalMulti = resMultiplier * dmgTakenMultiplier * dmgReductionMultiplier * brokenMultiplier\n\n      x.BASIC_DMG *= universalMulti * (dmgBoostMultiplier + x.BASIC_BOOST) * calculateDefMultiplier(cLevel, eLevel, defReduction, defIgnore, x.BASIC_DEF_PEN) * (Math.min(1, x[Stats.CR] + x.BASIC_CR_BOOST) * (1 + x[Stats.CD] + x.BASIC_CD_BOOST) + (1 - Math.min(1, x[Stats.CR] + x.BASIC_CR_BOOST)))\n      x.SKILL_DMG *= universalMulti * (dmgBoostMultiplier + x.SKILL_BOOST) * calculateDefMultiplier(cLevel, eLevel, defReduction, defIgnore, x.SKILL_DEF_PEN) * (Math.min(1, x[Stats.CR] + x.SKILL_CR_BOOST) * (1 + x[Stats.CD] + x.SKILL_CD_BOOST) + (1 - Math.min(1, x[Stats.CR] + x.SKILL_CR_BOOST)))\n      x.ULT_DMG   *= universalMulti * (dmgBoostMultiplier + x.ULT_BOOST)   * calculateDefMultiplier(cLevel, eLevel, defReduction, defIgnore, x.ULT_DEF_PEN)   * (Math.min(1, x[Stats.CR] + x.ULT_CR_BOOST)   * (1 + x[Stats.CD] + x.ULT_CD_BOOST) + (1 - Math.min(1, x[Stats.CR] + x.ULT_CR_BOOST)))\n      x.FUA_DMG   *= universalMulti * (dmgBoostMultiplier + x.FUA_BOOST)   * calculateDefMultiplier(cLevel, eLevel, defReduction, defIgnore, x.FUA_DEF_PEN)   * (Math.min(1, x[Stats.CR] + x.FUA_CR_BOOST)   * (1 + x[Stats.CD] + x.FUA_CD_BOOST) + (1 - Math.min(1, x[Stats.CR] + x.FUA_CR_BOOST)))\n\n      // ************************************************************\n      // Filter results\n      // ************************************************************\n\n      let result =\n        c[Stats.HP]  >= request.minHp  && c[Stats.HP]  <= request.maxHp  &&\n        c[Stats.ATK] >= request.minAtk && c[Stats.ATK] <= request.maxAtk &&\n        c[Stats.DEF] >= request.minDef && c[Stats.DEF] <= request.maxDef &&\n        c[Stats.SPD] >= request.minSpd && c[Stats.SPD] <= request.maxSpd &&\n        c[Stats.CR]  >= request.minCr  && c[Stats.CR]  <= request.maxCr  &&\n        c[Stats.CD]  >= request.minCd  && c[Stats.CD]  <= request.maxCd  &&\n        c[Stats.EHR] >= request.minEhr && c[Stats.EHR] <= request.maxEhr &&\n        c[Stats.RES] >= request.minRes && c[Stats.RES] <= request.maxRes &&\n        c[Stats.BE]  >= request.minBe  && c[Stats.BE]  <= request.maxBe  &&\n        cv  >= request.minCv  && cv  <= request.maxCv  &&\n        dmg >= request.minDmg && dmg <= request.maxDmg &&\n        mcd >= request.minMcd && mcd <= request.maxMcd &&\n        ehp >= request.minEhp && ehp <= request.maxEhp\n\n      // ************************************************************\n      // Pack passing results into the ArrayBuffer to return\n      // ************************************************************\n\n      if (result && (relicSetSolutions[relicSetIndex] == 1) && (ornamentSetSolutions[ornamentSetIndex] == 1)) {\n        BufferPacker.packCharacter(arr, row * data.HEIGHT + col, c);\n      }\n    }\n  }\n\n  self.postMessage({\n    rows: [],\n    buffer: data.buffer\n  }, [data.buffer]);\n}\n\nfunction calculateDefMultiplier(cLevel, eLevel, defReduction, defIgnore, additionalPen) {\n  return (cLevel + 20) / ((eLevel + 20) * (1 - defReduction - defIgnore - additionalPen) + cLevel + 20)\n}\n\nfunction p4(set) {\n  return set >> 2\n}\n\nfunction p2(set) {\n  return Math.min(1, set >> 1)\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [677], () => (__webpack_require__(90691)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"3687a141\" + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/beta-hsr-optimizer/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t691: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkhsr_optimizer\"] = self[\"webpackChunkhsr_optimizer\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","__webpack_require__.nc = undefined;","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(677).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["Stats","HP_P","ATK_P","DEF_P","SPD_P","HP","ATK","DEF","SPD","CD","CR","EHR","RES","BE","ERR","OHB","Physical_DMG","Fire_DMG","Ice_DMG","Lightning_DMG","Wind_DMG","Quantum_DMG","Imaginary_DMG","StatsToIndex","i","Object","values","map","x","SetsRelics","SetsOrnaments","Sets","SetsRelicsNames","SetsOrnamentsNames","OrnamentSetToIndex","length","RelicSetToIndex","Constants","SIZE","BufferPacker","extractCharacter","arr","offset","id","ED","CV","DMG","MCD","EHP","BASIC","SKILL","ULT","FUA","xHP","xATK","xDEF","xSPD","xCR","xCD","xEHR","xRES","xBE","xERR","xOHB","xED","extractArrayToResults","results","push","packCharacter","character","ELEMENTAL_DMG","BASIC_DMG","SKILL_DMG","ULT_DMG","FUA_DMG","Text","Typography","styled","_templateObject","_taggedTemplateLiteral","InputNumber","_templateObject2","justify","align","inputWidth","numberWidth","sliderWidth","FormSwitch","props","_jsxs","Flex","children","_jsx","style","minWidth","display","Form","Item","name","valuePropName","Switch","checkedChildren","CheckOutlined","unCheckedChildren","CloseOutlined","text","FormSlider","inputValue","setInputValue","useState","onChange","newValue","multiplier","percent","step","symbol","vertical","gap","marginBottom","min","max","controls","size","width","parser","value","precisionRound","formatter","concat","addonAfter","Slider","marginTop","marginLeft","tooltip","textAlign","number","precision","arguments","undefined","factor","Math","pow","round","characterOptionMapping","e","talentCrBuff","talent","talentHpDrainAtkBuffMax","basicScaling","basic","skillScaling","skill","skillEnhancedScaling","ultScaling","ult","defaults","talentEnhancedState","talentHpDrainAtkBuff","e1CdBuff","e2SkillDmgBuff","precomputeEffects","request","r","characterConditionals","assign","baseComputedStatsObject","ULT_BOOST","BASIC_SCALING","SKILL_SCALING","enemyCount","ULT_SCALING","FUA_SCALING","SKILL_BOOST","calculatePassives","c","calculateBaseMultis","talentMaxStacks","ultEnhancedScaling","ultEnhancedExtraHitScaling","talentCrStackValue","ultEnhanced","talentStacks","ultEnhancedExtraHits","e2UltAtkBuff","enemyHpPercent","ULT_DEF_PEN","talentMissingHpDmgBoostMax","selfCurrentHpPercent","ultSpdBuffValue","talentStacksAtkBuff","skillExtraDmgHitsMax","talentBuffStacks","skillExtraDmgHits","ultSpdBuff","healingMaxHpBuff","talentDmgReductionBuff","e2UltHealingBuff","e4SkillHealingDmgBuffStacks","DMG_RED_MULTI","ALL_DMG_MULTI","enhancedStateDmgBoost","basicEnhancedAtkScaling","basicEnhancedHpScaling","ultAtkScaling","ultHpScaling","ultLostHpScaling","fuaAtkScaling","fuaHpScaling","enhancedStateActive","hpPercentLostTotal","e4MaxHpIncreaseStacks","FUA_BOOST","skillDmgBoostValue","ultAtkBoostValue","ultCdBoostValue","ultCdBoostBaseValue","techniqueBuff","battleStartDefBuff","skillBuff","ultBuff","e2SkillSpdBuff","BASIC_CR_BOOST","ultDmgReductionValue","ultFuaExtraScaling","fuaScaling","talentEnemyMarked","e4DmgReductionBuff","extraPenValue","ultExtraScaling","talentPenBuff","enemySlowed","BASIC_BOOST","RES_PEN","skillCrBuffValue","skillHpBuffValue","talentDmgReductionValue","skillActive","e6TeamHpLostPercent","talentDebuffMax","talentDebuffStacks","enemyBurned","ultAtkBuffValue","talentDmgBoostValue","targetBurdenActive","burdenAtkBuff","skillSpdBuff","targetFrozen","e2TalentCritStacks","e6UltAtkBuff","targetBurned","selfCurrentHp80Percent","e1TalentSpdBuff","e6UltExtraHits","targetBurnedExtraScaling","enhancedSkill","e6DmgBuff","talentName","switchEnabledName","sliderName","skillCritBuff","talentHitsPerAction","talentAttacks","e2TalentBuff","e6TalentDebuff","FUA_CD_BOOST","basicEnhancedHitValue","targetUltDebuffDmgTakenValue","basicEnhancedScaling","basicEnhanced","targetUltDebuffed","e1TargetBleeding","basicEnhancedExtraHits","e4TalentStacks","DMG_TAKEN_MULTI","fieldActive","e6ResReduction","skillHpPercentBuff","skillHpFlatBuff","e4TalentAtkBuff","ultDefPenValue","enemyDebuffed","skillRemovedBuff","ultDefPenDebuff","e4SkillResShred","DEF_SHRED","skillStackDmg","talentAtkBuff","basicEnhancedSpdBuff","skillDmgIncreaseStacks","targetDotTakenDebuff","skillExtraHits","buffedStateDmgBuff","speedBoostStacksMax","buffedState","speedBoostStacks","e6UltTargetDebuff","talentExtraDmgScaling","targetShocked","enemyDefeatedBuff","skillResShredValue","skillDefShredBufValue","ultDefShredValue","skillResShredDebuff","skillDefShredDebuff","ultDefShredDebuff","targetDebuffs","talentSpdBuffValue","ultBuffedAtk","talentSpdBuffStacksMax","skillExtraHitScaling","ultBuffedState","e2DmgReductionBuff","skillTriggerStacks","talentSpdBuffStacks","originalSkillScaling","stanceSkillScaling","stanceScalingProportion","skillAtkBoostMax","ultDmgBoost","benedictionBuff","ultDmgBuff","physicaltrailblazer","firetrailblazer","skillExtraHitsMax","talentScaling","enemyDmgTakenDebuff","e1EnhancedState","enemyWeaknessBroken","ultCdBuffValue","talentCdBuffValue","talentCrBuffValue","ultBuffActive","soulsteelBuffActive","critSpdBuff","e1TargetFrozen","e4CurrentHp80","enemyElementalWeak","skillAtkBuffValue","ultCrBuffValue","talentAtkScaling","roaringBowstringsActive","initialSpeedBuff","roaringBowstrings","SKILL_CR_BOOST","ULT_CR_BOOST","FUA_CR_BOOST","BASIC_CD_BOOST","SKILL_CD_BOOST","ULT_CD_BOOST","BASIC_DEF_PEN","SKILL_DEF_PEN","FUA_DEF_PEN","skillDamageReductionValue","basicAtkScaling","basicDefScaling","basicEnhancedDefScaling","ultDefScaling","enhancedBasic","shieldActive","e6DefStacks","talentAtkScalingValue","enhancedUlt","value1","value2","CharacterConditionals","characterFn","characterId","characterEidolon","sumRelicStats","headRelics","handsRelics","bodyRelics","feetRelics","planarSphereRelics","linkRopeRelics","h","g","b","f","p","l","statValues","summedStats","stat","augmentedStats","calculateFlatStat2","statP","baseValue","lc","trace","relicSum","setEffects","calculateBaseStat","base","calculatePercentStat","calculateDefMultiplier","cLevel","eLevel","defReduction","defIgnore","additionalPen","p4","set","p2","self","onmessage","console","warn","data","JSON","stringify","relics","Float32Array","buffer","Head","Hands","Body","Feet","PlanarSphere","LinkRope","lSize","consts","pSize","fSize","bSize","gSize","hSize","relicSetSolutions","ornamentSetSolutions","relicSetToIndex","ornamentSetToIndex","elementalMultipliers","traces","lightCone","setConditionals","enabledHunterOfGlacialForest","HunterOfGlacialForest","enabledFiresmithOfLavaForging","FiresmithOfLavaForging","enabledBandOfSizzlingThunder","GeniusOfBrilliantStars","BandOfSizzlingThunder","enabledMessengerTraversingHackerspace","MessengerTraversingHackerspace","enabledCelestialDifferentiator","PrisonerInDeepConfinement","CelestialDifferentiator","valueChampionOfStreetwiseBoxing","ChampionOfStreetwiseBoxing","valueWastelanderOfBanditryDesert","WastelanderOfBanditryDesert","valueLongevousDisciple","LongevousDisciple","valueTheAshblazingGrandDuke","TheAshblazingGrandDuke","brokenMultiplier","resistance","enemyResistance","precomputedX","row","HEIGHT","col","WIDTH","index","skip","permutations","setH","setG","setB","setF","setP","setL","relicSetCount","relicSetIndex","ornamentSetIndex","ornamentSetCount","sets","PasserbyOfWanderingCloud","MusketeerOfWildWheat","KnightOfPurityPalace","GuardOfWutheringSnow","EagleOfTwilightLine","ThiefOfShootingMeteor","SpaceSealingStation","FleetOfTheAgeless","PanCosmicCommercialEnterprise","BelobogOfTheArchitects","InertSalsotto","TaliaKingdomOfBanditry","SprightlyVonwacq","RutilantArena","BrokenKeel","FirmamentFrontlineGlamoth","PenaconyLandOfTheDreams","crSum","cdSum","baseHp","baseAtk","baseDef","baseSpd","buffCr","dmg","mcd","ehp","cv","characterLevel","enemyLevel","dmgBoostMultiplier","universalMulti","minHp","maxHp","minAtk","maxAtk","minDef","maxDef","minSpd","maxSpd","minCr","maxCr","minCd","maxCd","minEhr","maxEhr","minRes","maxRes","minBe","maxBe","minCv","maxCv","minDmg","maxDmg","minMcd","maxMcd","minEhp","maxEhp","postMessage","rows","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","__webpack_exports__","O","deferred","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","key","splice","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","then","ns","create","def","current","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","get","chunkId","Promise","all","reduce","promises","u","miniCssF","globalThis","Function","window","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime","pop","nc","next"],"sourceRoot":""}